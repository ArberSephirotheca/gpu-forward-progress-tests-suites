#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED((959.986 * 111.971))), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.0), mix(float(_GLF_FUZZED(5.0)), float(_GLF_IDENTITY(_GLF_FUZZED(6.0), min(_GLF_IDENTITY(_GLF_FUZZED(6.0), clamp(_GLF_FUZZED(6.0), _GLF_FUZZED(6.0), _GLF_FUZZED(6.0))), _GLF_FUZZED(6.0)))), bool(true)))), vec2(_GLF_FUZZED(vec4(-5348.3419, 3.1, 14.50, 7.4).t), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))) * mat2(1.0)), (injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))) * mat2(1.0)), (injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))) * mat2(1.0)), (injectionSwitch))), (_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) + vec2(0.0, 0.0), clamp(((injectionSwitch)) + vec2(0.0, 0.0), ((injectionSwitch)) + vec2(0.0, 0.0), ((injectionSwitch)) + vec2(0.0, 0.0)))), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))) * mat2(1.0)), (injectionSwitch)))) * exp(vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))) * mat2(1.0), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))) * mat2(1.0), abs(1.0), 1.0), (vec4(_GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))) * mat2(1.0), abs(1.0), 1.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), (injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : _GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) - sin(vec2(0.0, 0.0))))))) * mat2(1.0)), (injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))) * mat2(1.0)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))) * mat2(1.0)))[0], ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))) * mat2(1.0)))[0]) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))) * mat2(1.0)))[1]), vec2(_GLF_FUZZED(-41.07), _GLF_FUZZED((- 5.9))), bvec2(false, false))), (injectionSwitch))), (_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) + vec2(0.0, 0.0), clamp(((injectionSwitch)) + vec2(0.0, 0.0), ((injectionSwitch)) + _GLF_IDENTITY(vec2(0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(0.0, 0.0))), ((injectionSwitch)) + vec2(0.0, 0.0)))), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(36790u)) : _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))), mix(vec2((_GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))[0], (_GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-3.4, 41.70)) : ((injectionSwitch)))))[1]), vec2(_GLF_FUZZED(13.96), _GLF_FUZZED(79.85)), bvec2(false, false))))) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-60.51)), vec2(_GLF_FUZZED(-312.110), (injectionSwitch)[1]), bvec2(false, true))))))) * exp(vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(false)))), ! (! (! (bool(bool(_GLF_DEAD(false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.8), _GLF_FUZZED(6.3)), bvec2(false, false))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(5.6)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[0], (injectionSwitch)[0])), max(_GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))[0], (injectionSwitch)[0])), _GLF_FUZZED(734.942)), vec2(_GLF_FUZZED(6.7), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bool((! (false))))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-7944.6335, 76.12, -2306.6605).g), _GLF_FUZZED(143.011)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-7944.6335, 76.12, -2306.6605).g), _GLF_FUZZED(143.011)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-6.4)), vec2(_GLF_FUZZED(1360.0109), _GLF_IDENTITY(((injectionSwitch))[1], (false ? _GLF_FUZZED(-5502.7169) : ((injectionSwitch))[1]))), bvec2(false, true)))[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-7944.6335, 76.12, -2306.6605).g, (true ? vec3(-7944.6335, 76.12, -2306.6605).g : _GLF_FUZZED(-7.2)))), _GLF_FUZZED(143.011)), vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(7.1), _GLF_IDENTITY(((injectionSwitch))[1], min(((injectionSwitch))[1], ((injectionSwitch))[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(-7944.6335, 76.12, -2306.6605).g), max(_GLF_FUZZED(vec3(-7944.6335, 76.12, -2306.6605).g), _GLF_FUZZED(vec3(-7944.6335, 76.12, -2306.6605).g))), _GLF_FUZZED(143.011)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(8712.9409)))))) * vec2(1.0, 1.0)).y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))), ((! (_GLF_IDENTITY(false, false || (false))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (_GLF_IDENTITY(false, (false) && true))), true && (false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true, false, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(189762u, 56504u, 192041u)) : gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | (gl_WorkGroupSize[0])), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | (gl_WorkGroupSize[0])))), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true)))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))), false, true, true)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-26.41) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-26.41) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(847.770, 32.28)) : injectionSwitch)).y, 0.0 + (injectionSwitch.y)))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-26.41) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), 1.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0), (true ? mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-26.41) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), 1.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0) : _GLF_FUZZED(mat2x4(-7.8, 393.209, 5.2, -692.094, 3.8, -6.4, 6.7, -59.28)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-26.41) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) ? _GLF_FUZZED(-26.41) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) - 0.0))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-26.41) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-26.41), mix(float(_GLF_FUZZED(0.2)), float(_GLF_FUZZED(-26.41)), bool(true))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(847.770, 32.28)) : injectionSwitch)).y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(_GLF_IDENTITY(mat3x4(0.0 + (injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), mat3x4(_GLF_IDENTITY(mat3x4(mat3x4(0.0 + (injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0))), (mat3x4(mat3x4(0.0 + (injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-26.41) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), 1.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) ? mat2x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-26.41) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), 1.0 * ((false ? _GLF_FUZZED(-26.41) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), 1.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0) : _GLF_FUZZED(mat2x4(-7.8, _GLF_IDENTITY(393.209, (393.209) - 0.0), 5.2, -692.094, 3.8, -6.4, 6.7, -59.28)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-26.41, clamp(-26.41, _GLF_IDENTITY(-26.41, 0.0 + (-26.41)), -26.41))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) ? _GLF_FUZZED(-26.41) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) - 0.0))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), true, false)), true))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (_GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false))), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true)))))))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))))))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, tan(0.0), 1.0, 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, tan(0.0), 1.0, 1.0, 0.0))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, tan(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), transpose(transpose(mat3x2(injectionSwitch, tan(0.0), 1.0, 1.0, 0.0)))))) - vec2(0.0, 0.0))).x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asinh(injectionSwitch)))))).x, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) : _GLF_FUZZED(-788.353)))), float(vec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asinh(injectionSwitch)))))).x, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) : _GLF_FUZZED(-788.353)))), 1.0, 1.0, 1.0))), cos(0.0) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-25.42), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(asinh(injectionSwitch))), vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(asinh(injectionSwitch))), mat2(1.0) * ((true ? injectionSwitch : _GLF_FUZZED(asinh(injectionSwitch))))), vec2(mat3x2((true ? injectionSwitch : _GLF_FUZZED(asinh(injectionSwitch))), 1.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) : _GLF_FUZZED(-788.353)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(asinh(injectionSwitch)))))).x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(6.2)), bool(false))), sqrt(1.0), sqrt(1.0))))) * (injectionSwitch.x), (true ? _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(6.2)), bool(false))), sqrt(1.0), sqrt(1.0))))) * (injectionSwitch.x) : _GLF_FUZZED(1280.9122)))) : _GLF_FUZZED(-788.353), mix(float(true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(6.2)), bool(false))), sqrt(1.0), sqrt(1.0))))) * (injectionSwitch.x), (true ? _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(6.2)), bool(false))), sqrt(1.0), sqrt(1.0))))) * (injectionSwitch.x) : _GLF_FUZZED(1280.9122)))) : _GLF_FUZZED(-788.353)), float(_GLF_FUZZED(-3.9)), bool(false))))))), max(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asinh(injectionSwitch)))))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(6.2)), bool(false))), sqrt(1.0), sqrt(1.0))))) * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(6.2)), bool(false))), sqrt(1.0), sqrt(1.0))))) * (injectionSwitch.x))) + 0.0) : _GLF_FUZZED(-788.353))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asinh(injectionSwitch)))))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(mix(float(sqrt(1.0)), float(_GLF_FUZZED(6.2)), bool(false)), (false ? _GLF_FUZZED(max(4.0, -4.2)) : _GLF_IDENTITY(mix(float(sqrt(1.0)), float(_GLF_FUZZED(6.2)), bool(false)), float(_GLF_IDENTITY(mat3(mix(float(sqrt(1.0)), float(_GLF_FUZZED(6.2)), bool(false)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat3(mix(float(sqrt(1.0)), float(_GLF_FUZZED(6.2)), bool(false)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), sqrt(1.0), sqrt(1.0))))) * (injectionSwitch.x)) : _GLF_FUZZED(-788.353))))))) / 1.0))) + 0.0), 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9697.6845) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.9)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((false), false, true)), bool(bvec2(bool(bvec3((false), false, true)), false))), (_GLF_IDENTITY(bool(bvec3((false), false, true)), bool(bvec2(bool(bvec3((false), false, true)), false)))) && true)))), false, true, true)))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), min(float(mat4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false, true && ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false)))))), true, _GLF_IDENTITY(true, ! (! (true)))))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false)), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false, false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(false, true, false, false)))), bool(bvec3(bool(bool(bool(bvec4(false, true, false, false)))), true, false))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) || false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0))) > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0))))) && true)) || false))), true, false, false)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), subgroup_local_id, subgroup_local_id)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))) >> 0u)) * 1u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id))) | 0u)))), subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)))), subgroup_local_id, subgroup_local_id)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), injectionSwitch.x)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.8))), 0.0)))), float(mat4x3(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0), (true ? mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(mat2x4(vec4(0.0, 1.0, 0.0, 0.0), 0.0, 1.0, 1.0, 0.0)), (vec4(mat2x4(vec4(0.0, 1.0, 0.0, 0.0), 0.0, 1.0, 1.0, 0.0))) * vec4(1.0, 1.0, 1.0, 1.0)))), float(mat4x3(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0) : _GLF_FUZZED(mat4x2(9.5, 6341.1285, 56.44, -290.817, -919.419, 243.202, -4.9, -59.95))))), (float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(-81.81)), bool(false))), dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), float(mat4x3(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0), (true ? mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sqrt(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), float(mat4x3(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x2(9.5, 6341.1285, 56.44, -290.817, -919.419, 243.202, -4.9, -59.95)))))) - 0.0)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(float(injectionSwitch.x))), injectionSwitch.x), clamp(max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))))), injectionSwitch.x), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x), clamp(max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x))), max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)))) > injectionSwitch.y))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.3)), bool(false))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size))), _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 1u, 0u)), clamp(uint(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 1u, 0u)), uint(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | (subgroup_size), _GLF_IDENTITY(0u, min(0u, 0u)) + (_GLF_IDENTITY((subgroup_size) | (subgroup_size), max((subgroup_size) | (subgroup_size), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (subgroup_size)))))) + ((subgroup_local_id + 1) % subgroup_size), 1u, 0u)), uint(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 1u, 0u))))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size))), _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 1u, 0u)), clamp(uint(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 1u, 0u)), uint(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | (subgroup_size), _GLF_IDENTITY(0u, min(0u, 0u)) + (_GLF_IDENTITY((subgroup_size) | (subgroup_size), max((subgroup_size) | (subgroup_size), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (subgroup_size)))))) + ((subgroup_local_id + 1) % subgroup_size), 1u, 0u)), uint(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), 1u, 0u)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) << 0u)], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), false))))))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), false)))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) || false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) - 0), 2))), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, (0 >> _GLF_IDENTITY(int(1), int(1)))), ivec2(ivec4(ivec2(2, (0 >> _GLF_IDENTITY(int(1), int(1)))), 0, 0)))))))))), max(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(_GLF_IDENTITY(2, (2) | (2))), uint(2), uint(2))))), _GLF_IDENTITY(uint(2), _GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), min((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4458.9570) : 0.0)))), injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))))), min(_GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), min((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4458.9570) : 0.0)))), injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))))), clamp(0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), min((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4458.9570) : 0.0)))), injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), min((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4458.9570) : 0.0)))), injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), min((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4458.9570) : 0.0)))), injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))))))), _GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), min((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4458.9570) : 0.0)))), injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))))), (0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), min((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4458.9570) : 0.0)))), injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2))), clamp(uint(2), uint(2), uint(2))))))) / 1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(_GLF_IDENTITY(uint(2), min(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), uint(2))), _GLF_IDENTITY(uint(2), (uint(2)) ^ 0u), uint(2))), (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) ^ 0))) ^ 0u), uint(2)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, ~ (~ (2)))), clamp(uint(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(8009))), 2))), _GLF_IDENTITY(uint(2), (uint(2)) ^ 0u), uint(2))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 0u)) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))))))))))) << 0u), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 0u)) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))))))))))) << 0u))), max(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 0u)) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (1u & 1u) * (uint(2))), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u))) | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))) << 0u))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))) | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), 0u | (_GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(ivec3(2, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (_GLF_IDENTITY(0u | 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, uint(uvec4(0u | 0u, 1u, 1u, 1u)))) | (0u | 0u)) : _GLF_FUZZED(num_workgroup)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), ~ (~ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), _GLF_IDENTITY(0u, (0u) | (0u)) | (_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), (true ? 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))) : _GLF_FUZZED(subgroup_local_id)))))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(_GLF_IDENTITY(2, (2) << 0)))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))), _GLF_IDENTITY(uint(uvec2(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))), 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec2(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))), 1u)))))) + 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), uint(uint(clamp(uint(2), uint(2), uint(2)))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u ^ (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))), 0u | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u ^ (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))))) | (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))))))))))) << 0u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))))))))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(_GLF_IDENTITY(2, (2) + 0)))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), clamp(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), clamp(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (true ? _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))) : _GLF_FUZZED(workgroup_base)))) ^ 0u), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), (clamp(uint(2), uint(2), uint(2))) << 0u)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), _GLF_IDENTITY(uint(2), (uint(2)) << 0u)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), uint(2))), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-5041))))))))), 0u | (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u), (true ? _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))), (0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))) ^ 0u)) / 1u))))) | (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (uint(2)) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (uint(2))))))))))) << 0u)) + 0u)))))), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (true)))), (bool(bool(_GLF_IDENTITY(true, false || (true))))) && true)), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
