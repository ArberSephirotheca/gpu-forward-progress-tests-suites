#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 vec4 _f0;
 mat4x2 _f1;
 mat3 _f2;
 uint next_virtual_gid;
 ivec2 _f3;
} ;

struct _GLF_struct_13 {
 uint workgroup_id;
 float _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_14 {
 uint _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_15 {
 uvec2 _f0;
 vec2 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 uint _f1;
 bvec2 _f2;
 mat4x3 _f3;
 bvec3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 uint _f1;
 _GLF_struct_10 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 bvec3 _f1;
 int _f2;
 uvec3 _f3;
 uint _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 bool _f1;
 mat3 _f2;
 bvec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 float _f1;
 mat4x3 _f2;
 ivec4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 uvec4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 bvec2 _f4;
 ivec3 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_3 {
 int _f0;
 mat2x3 _f1;
 vec3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 bvec4 _f1;
 uvec3 _f2;
 float _f3;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 uint _f1;
 mat4x2 _f2;
 uvec3 _f3;
 mat4x3 _f4;
 mat2x4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 bvec4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_4 _f0;
 _GLF_struct_8 _f1;
 mat2 _f2;
 uint _f3;
 mat2 _f4;
 uint subgroup_id;
 bvec2 _f5;
 _GLF_struct_11 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * 1.0), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))) || _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false)))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))), ! (_GLF_IDENTITY(! (! (false || (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false)))))))), bool(bvec3(! (! (false || (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false)))))))), true, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, false, false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, false, false)))), true && (bool(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, false, false))))))), (false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, false, false)))), true && (bool(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, false, false)))))))) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), (bool(bvec4(_GLF_DEAD(false), true, false, true))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_4(_GLF_struct_0(mat4x2(1.0), 1u, mat4x2(1.0), uvec3(1u), mat4x3(1.0), mat2x4(1.0), ivec3(1)), bvec4(true), _GLF_struct_1(mat4(1.0), bvec4(_GLF_IDENTITY(true, (true) && true)), uvec3(1u), 1.0), _GLF_struct_2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), float(mat2x3(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))), (1.0) / 1.0)), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), max(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0)))), vec2(vec3(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-9106.6297) : _GLF_IDENTITY((1.0), float(mat4x2((1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(float(vec2((false ? _GLF_FUZZED(-9106.6297) : _GLF_IDENTITY((1.0), float(mat4x2((1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2((false ? _GLF_FUZZED(-9106.6297) : _GLF_IDENTITY((1.0), float(mat4x2((1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y))))))) / 1.0)), 1.0))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(2366.1954)), bool(false))))), (1.0))) / 1.0)), vec2(vec3(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0))), max(vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5057.0952)), bool(false)))), float(_GLF_FUZZED((-2.4 - 2.3))), bool(false))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1523.0489)), bool(false))))))), vec2(vec3(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(vec3(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0))))))))), bvec4(true)), _GLF_struct_3(1, mat2x3(1.0), vec3(1.0), mat2x3(1.0))), _GLF_struct_8(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) >> 0))))))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))))), 1), (ivec2((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0)))), 1)) | (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)))), min(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), ~ _GLF_IDENTITY((~ ((1))), ((~ ((1)))) >> 0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), ~ _GLF_IDENTITY((~ ((1))), ((~ ((1)))) >> 0))), (~ (~ _GLF_IDENTITY((1), ~ _GLF_IDENTITY((~ ((1))), ((~ ((1)))) >> 0)))) | 0) : _GLF_FUZZED(-5386))))), 1), (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)) | (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) << 0))), (false ? _GLF_FUZZED(sign(67183)) : _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) << 0))), clamp(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) << 0))))))))))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (_GLF_IDENTITY(min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), _GLF_IDENTITY((true ? min(1, 1) : _GLF_FUZZED(-47280)), (_GLF_IDENTITY((true ? min(1, 1) : _GLF_FUZZED(-47280)), (true ? _GLF_IDENTITY((true ? min(1, 1) : _GLF_FUZZED(-47280)), (false ? _GLF_FUZZED(-69524) : (true ? min(1, 1) : _GLF_FUZZED(-47280)))) : _GLF_FUZZED(-16467)))) | ((true ? min(1, 1) : _GLF_FUZZED(-47280)))))) * 1)))))))), 1), _GLF_IDENTITY((ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)) | (ivec2((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1))))))))), 1)), ((ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)) | (ivec2((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1))))))))), 1))) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)))), _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), clamp((1), (1), (1)))), clamp(~ (~ _GLF_IDENTITY((1), clamp((1), (1), (1)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), clamp((1), (1), (1)))), (~ (~ _GLF_IDENTITY((1), clamp((1), (1), (1))))) - 0), ~ (~ _GLF_IDENTITY((1), clamp((1), (1), (1)))))))), (_GLF_IDENTITY(1, ~ (~ (1)))))), 1), (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)) | (ivec2((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1)), ~ (~ (1)))), 1)))), min(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (~ ((1))))))), 1), (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)) | (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (0 | 0)), ~ (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))))))), ((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))))))) * (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((_GLF_IDENTITY(1, (1) + 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) | ((_GLF_IDENTITY(1, (1) + 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (_GLF_IDENTITY(1, (1) + 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))))))), (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, min(1, 1))), (true ? max(1, _GLF_IDENTITY(1, min(1, 1))) : _GLF_FUZZED(11792)))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))))) | 0))) | ((~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))))))))))), 1), (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)) | (ivec2((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1))))))))), 1))))))))), ~ (~ (_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), ((~ (1))) | 0)) ^ 0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), max((_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(1, ~ (~ (1))))) | ((_GLF_IDENTITY(1, ~ (~ (1)))))))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ((1)) << 0), (1), (1)))))))), 1), (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)) | (ivec2((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))) / 1))), 1)))), min(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (~ ((1))))))), 1), (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)) | (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))))))), 1), (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)) | _GLF_IDENTITY((ivec2((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, max(1, 1)))), max(~ (~ (_GLF_IDENTITY(1, max(1, 1)))), ~ (~ (_GLF_IDENTITY(1, max(1, 1))))))))))), 1)), _GLF_IDENTITY(ivec2(ivec3((ivec2((_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, max(1, 1)))), max(~ (~ (_GLF_IDENTITY(1, max(1, 1)))), ~ (~ (_GLF_IDENTITY(1, max(1, 1)))))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, max(1, 1)))), max(~ (~ (_GLF_IDENTITY(1, max(1, 1)))), ~ (~ (_GLF_IDENTITY(1, max(1, 1))))))))) / (1 ^ 0))))), 1)), 0)), (ivec2(ivec3((ivec2((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, max(1, 1)))), max(~ (~ (_GLF_IDENTITY(1, max(1, 1)))), ~ (~ (_GLF_IDENTITY(1, max(1, 1))))))))))), 1)), 0))) | (ivec2(ivec3((ivec2((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, max(1, 1)))), max(~ (~ (_GLF_IDENTITY(1, max(1, 1)))), ~ (~ (_GLF_IDENTITY(1, max(1, 1))))))))))), 1)), 0)))))))))))), (min(1, _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) << 0)) << 0)) << 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))))), 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-28221) : 1)), ~ (~ (1)))), min((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-28221) : 1)), ~ (~ (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-28221) : 1)), ~ (~ (1)))))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(90757) : ~ (1))), _GLF_IDENTITY(~ (1), ~ (~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))), _GLF_IDENTITY(~ (1), (~ (1)) * 1)))))), (_GLF_IDENTITY(1, ~ (~ (1)))))), 1)) | _GLF_IDENTITY((ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED(96928) : (~ (1))))) - 0)) << 0))), (_GLF_IDENTITY(1, ~ (~ (1)))))), 1)), ((ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED(96928) : (~ (1))))) - 0)) << 0))), (_GLF_IDENTITY(1, ~ (~ (1)))))), 1))) | ((ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED(96928) : (~ (1))))) - 0)) << 0))), (_GLF_IDENTITY(1, ~ (~ (1)))))), 1))))), (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)) | (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)))), min(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))), ~ (_GLF_IDENTITY(~ ((1)), (~ ((1))) >> (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))))))))), ((_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), (~ ((1))) >> (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))))))))))) | ((_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), (~ ((1))) >> (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))))))))))), 1), (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)) | (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) < injectionSwitch.y))) && true) ? 1 : _GLF_FUZZED(-53570))), max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), int(_GLF_IDENTITY(ivec4(min(1, 1), 1, 1, 1), ivec4(0, 0, 0, 0) ^ (ivec4(min(1, 1), 1, 1, 1)))))), (_GLF_IDENTITY(1, min(1, 1))) << 0))))))))), ((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-53570))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-53570))), clamp(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-53570))), _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) && true))) ? 1 : _GLF_FUZZED(-53570))), _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-53570))))), _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-53570))))), max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) << 0)))))))))) - (0 & -86933)), 1), (ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 1)) | (ivec2((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(1, 1)))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(1, 1)))), ~ (~ ((~ (_GLF_IDENTITY(1, max(1, 1))))))))))))))), 1)))))))))) - 0)))) : _GLF_FUZZED(min(34645, -103)))))), uvec4(1u), _GLF_struct_5(mat2(1.0), 1.0, mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) / ivec4(1, 1, 1, 1))) - ivec4(0, 0, 0, 0)), min(ivec4(1), ivec4(1))), bvec4(true)), _GLF_struct_6(uvec2(1u), true, mat3(1.0), bvec3(true), true), bvec2(true), ivec3(1), _GLF_struct_7(vec3(1.0), bvec3(true), 1, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), max(uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u))), uvec3(1u)))) | (uvec3(1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) << 0u), 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec3(0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), uvec3(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) ^ (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(max(uvec3(1u), uvec3(1u)), (max(uvec3(1u), uvec3(1u))) * uvec3(1u, 1u, 1u)))) | (uvec3(1u))))), 1u, uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) - 0u), 0u | (1u))))), mat2(1.0), 1u, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))), mat2(1.0) * (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))), (false ? _GLF_FUZZED(mat2(63.13, 1.2, 501.682, 8.5)) : mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))))))), gl_SubgroupID, bvec2(true), _GLF_struct_11(_GLF_struct_9(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), 1u, bvec2(true), mat4x3(1.0), bvec3(true), mat4x2(1.0)), 1u, _GLF_struct_10(bvec2(true), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), bvec3(true)));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true)), true, false), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true)), true, false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, sqrt(1.0), 0.0, determinant(mat2(1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? -31.94 : -3.3))), bool(false))), (1.0) - 0.0) : _GLF_FUZZED(610.655))))), 0.0, 1.0, 0.0, 1.0))), mix(vec2(_GLF_FUZZED(127.787), _GLF_FUZZED(-4559.7399)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, sqrt(1.0), 0.0, determinant(mat2(1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(610.655))))), 0.0, 1.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, sqrt(1.0), 0.0, determinant(mat2(1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(610.655))))), 0.0, 1.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, sqrt(1.0), 0.0, determinant(mat2(1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(610.655))))), 0.0, 1.0, 0.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, sqrt(1.0), 0.0, determinant(mat2(1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(610.655))))), 0.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, sqrt(1.0), 0.0, determinant(mat2(1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(610.655))))), 0.0, 1.0, 0.0, 1.0))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, sqrt(1.0), 0.0, determinant(mat2(1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(610.655))))), 0.0, 1.0, 0.0, 1.0))))[1]), bvec2(true, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-5.3))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-5.3))) > injectionSwitch.y) || false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0))).y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 1.0, sqrt(0.0), 0.0)), (float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), 0.0, 1.0, sqrt(0.0), 0.0))) / 1.0))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(ceil(vec2(7.8, -67.28))) : injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(ceil(vec2(7.8, -67.28))) : injectionSwitch, (false ? _GLF_FUZZED(ceil(vec2(7.8, -67.28))) : injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)).y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-640.582) : determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && true))), true)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, (125025u & 0u))))) << 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(uvec2(1u), vec2(1.0), _GLF_struct_14(1u, _GLF_struct_13(gl_WorkGroupID.x, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 1.0)), dot(vec2(0.0, length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 1.0))), determinant(mat3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0))), 1.0))), ivec2(1))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.5, 41.20)) : injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y))))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))), true, true)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_15._f2._f1.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) - log(vec2(1.0, 1.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))))))), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(32.34, -80.25)) : injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(float(num_workgroup)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), max((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(float(num_workgroup)), (_GLF_FUZZED(float(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, _GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u)))))) / round(length(normalize(vec2(1.0, 1.0))))) : injectionSwitch.x, min(_GLF_IDENTITY(false ? _GLF_FUZZED(float(num_workgroup)) : injectionSwitch.x, _GLF_IDENTITY(float(vec3(false ? _GLF_FUZZED(float(num_workgroup)) : injectionSwitch.x, 0.0, 1.0)), min(float(vec3(false ? _GLF_FUZZED(float(num_workgroup)) : injectionSwitch.x, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(float(num_workgroup)) : injectionSwitch.x, 0.0, 1.0))))), false ? _GLF_FUZZED(float(num_workgroup)) : injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(float(num_workgroup)) : injectionSwitch.x), min((false ? _GLF_FUZZED(float(num_workgroup)) : injectionSwitch.x), (false ? _GLF_FUZZED(float(num_workgroup)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))), false || (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-539.323)), float(1.0), bool(true))), 1.0))))), (true ? _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) + vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(clamp(vec4(-9167.7956, -796.282, -11.13, 9.5), -9111.5314, 8.3)))), mat4x2(1.0), mat3(1.0), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << 0u) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size), 0u ^ (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), (_GLF_IDENTITY(~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size), 0u ^ (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)))) : _GLF_FUZZED(subgroup_size))), clamp(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)))) : _GLF_FUZZED(subgroup_size))), ~ (~ (0u ^ _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)))) : _GLF_FUZZED(subgroup_size)))))), 0u ^ _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)))) : _GLF_FUZZED(subgroup_size))), 0u ^ _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), _GLF_IDENTITY(min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), clamp(min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), _GLF_IDENTITY(min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_12.subgroup_id), 0u ^ (~ (_GLF_struct_replacement_12.subgroup_id))))) * subgroup_size))), (_GLF_IDENTITY(min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), clamp(min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), _GLF_IDENTITY(min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))))), min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)))))) / 1u)))) : _GLF_FUZZED(subgroup_size)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size), 0u ^ (~ _GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_id * subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_id * subgroup_size), uint(uvec4((_GLF_struct_replacement_12.subgroup_id * subgroup_size), 0u, 1u, 1u)))) | ((_GLF_struct_replacement_12.subgroup_id * subgroup_size))))))), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size), 0u ^ (~ (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, (_GLF_struct_replacement_12.subgroup_id) / 1u)))) * subgroup_size))))))) : _GLF_FUZZED(98224u)))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)))) : _GLF_FUZZED(subgroup_size))), clamp(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)))) : _GLF_FUZZED(subgroup_size))), ~ (~ (0u ^ _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)))) : _GLF_FUZZED(subgroup_size)))))), 0u ^ _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)))) : _GLF_FUZZED(subgroup_size))), 0u ^ _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), _GLF_IDENTITY(min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), clamp(min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), _GLF_IDENTITY(min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_12.subgroup_id), 0u ^ (~ (_GLF_struct_replacement_12.subgroup_id))))) * subgroup_size))), (_GLF_IDENTITY(min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), clamp(min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), _GLF_IDENTITY(min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size))))), min((~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)), (~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size)))))) / 1u)))) : _GLF_FUZZED(subgroup_size)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size), 0u ^ (~ _GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_id * subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_id * subgroup_size), uint(uvec4((_GLF_struct_replacement_12.subgroup_id * subgroup_size), 0u, 1u, 1u)))) | ((_GLF_struct_replacement_12.subgroup_id * subgroup_size))))))), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_12.subgroup_id * subgroup_size), 0u ^ (~ (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, (_GLF_struct_replacement_12.subgroup_id) / 1u)))) * subgroup_size))))))) : _GLF_FUZZED(98224u))))))) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1) % subgroup_size), ivec2(1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(51.77), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-92.77)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), mix(vec2(_GLF_FUZZED((80.88 / (5.4))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(51.77), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-92.77)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(51.77), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-92.77)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))[0], _GLF_FUZZED(-677.834)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(! (! (_GLF_DEAD(false))), true), true, false)))))), ((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(! (! (_GLF_DEAD(false))), true), true, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))) || _GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, log(1.0), 0.0, 1.0, sqrt(1.0), 1.0, abs(1.0), abs(1.0), 0.0, 1.0, 1.0, 0.0)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, log(1.0), 0.0, 1.0, sqrt(1.0), 1.0, abs(1.0), abs(1.0), 0.0, 1.0, 1.0, 0.0)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 atomicStore(buf[_GLF_struct_replacement_16.next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))) || false), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
