#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2.6)), vec2(_GLF_FUZZED(-8.7), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9729.7652))), injectionSwitch.y)))))), mix(vec2(_GLF_FUZZED(-8.0), _GLF_IDENTITY((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2.6)), vec2(_GLF_FUZZED(-8.7), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9729.7652))), injectionSwitch.y)))))))[1], float(mat4x3((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2.6)), vec2(_GLF_FUZZED(-8.7), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9729.7652))), injectionSwitch.y)))))))[1], 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), vec2((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2.6)), vec2(_GLF_FUZZED(-8.7), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9729.7652))), injectionSwitch.y)))))))[0], _GLF_FUZZED(66.74)), bvec2(true, false)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) + abs(0.0)) : _GLF_IDENTITY(_GLF_FUZZED(-2317.7380), mix(float(_GLF_FUZZED((881.169 * 4835.7567))), float(_GLF_IDENTITY(_GLF_FUZZED(-2317.7380), mix(float(_GLF_FUZZED(-2317.7380)), float(_GLF_FUZZED(-6257.9896)), bool(false)))), bool(true))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), (uvec3(163338u, 169858u, 156302u) & uvec3(0u, 0u, 0u)) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))))).x) << 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) << 0u, (false ? _GLF_FUZZED(uaddCarry(uvec4(88805u, 159754u, 69799u, 41522u).y, write_val, write_val)) : (gl_NumWorkGroups.x) << 0u)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x) << 0u)), max((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u))))), (0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3((gl_NumWorkGroups))), ~ (~ (uvec3(uvec3((gl_NumWorkGroups))))))))))).x, (gl_NumWorkGroups.x) << 0u)), max((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) << 0u, clamp(_GLF_IDENTITY((gl_NumWorkGroups.x) << 0u, 0u | ((gl_NumWorkGroups.x) << 0u)), (gl_NumWorkGroups.x) << 0u, (gl_NumWorkGroups.x) << 0u)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))) >> 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), (uvec3(163338u, 169858u, 156302u) & uvec3(0u, 0u, 0u)) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)))))).x) << 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) << 0u, (false ? _GLF_FUZZED(uaddCarry(uvec4(88805u, 159754u, 69799u, 41522u).y, write_val, write_val)) : (gl_NumWorkGroups.x) << 0u)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x) << 0u)), max((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u))))), (0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3((gl_NumWorkGroups))), ~ (~ (uvec3(uvec3((gl_NumWorkGroups))))))))))).x, (gl_NumWorkGroups.x) << 0u)), max((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) << 0u, clamp(_GLF_IDENTITY((gl_NumWorkGroups.x) << 0u, 0u | ((gl_NumWorkGroups.x) << 0u)), (gl_NumWorkGroups.x) << 0u, (gl_NumWorkGroups.x) << 0u)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))) >> 0u))))) >> 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x))) << 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(281.963, (281.963) / 1.0)) : injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) || (false)), ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && ((false))))))))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false)))))))), false || ((! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))))))))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))) || (false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), false, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))).y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(759.510))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(44.41)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6609.8049))), true, true, false))), false, true, false)))))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.5), _GLF_FUZZED(-9407.9996)), bvec2(false, false))), 0.0, 1.0, 1.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.9) : 0.0)), 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0)), min(float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0)), float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))).y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), true))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(14.49)))), float(_GLF_FUZZED(-2.0)), bool(false)))) - 0.0) > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) || false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), true)))))))))) && (false)), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) && (false))) || false))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (injectionSwitch.x < injectionSwitch.y)) && (false)))), false, false, true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))), true, false, false))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sqrt(-2.3)))) < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-5.8))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0))), mix(vec2(_GLF_FUZZED((+ -4916.0701)), _GLF_FUZZED(3.8)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y, true)))))))), false, true, false)))))))) && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && (false)))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true))))), (! (_GLF_IDENTITY(! (true), (! (true)) && true))) || false)), (injectionSwitch.x < injectionSwitch.y)) && (false)))), false, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), false, false)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), false, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) && true))))))))))) || false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bvec3(((false)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(((false)), true, false)), bvec3(bvec3(bvec3(bvec3(((false)), true, false))))))))) && true) && true)) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(17.09)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(43.57)), bool(false))))), 0.0, exp(0.0), 0.0, 1.0, 0.0))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))))).x)), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))))).x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0), (mat3(injectionSwitch.x, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) < injectionSwitch.y)), true)), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bvec4(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true)), bool(bool(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true))))))), true)), false, false)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false)))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true)) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(_GLF_IDENTITY(173682u, 0u ^ (173682u)), 129031u, 49232u)))), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))), _GLF_IDENTITY(! (! (bool(bvec3(false, true, false)))), (_GLF_IDENTITY(! (! (bool(bvec3(false, true, false)))), false || (! (! (bool(bvec3(false, true, false))))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.0)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || ((! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.5)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), false), bvec2(bvec2(bvec2(false, false))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))), bool(bool((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true, ! (! (_GLF_IDENTITY((false), bool(bvec3((false), true, true))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4920.9572)), bool(false)))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(1.2 + -6.4, mix(float(_GLF_IDENTITY(1.2 + -6.4, max(1.2 + -6.4, 1.2 + -6.4))), float(_GLF_FUZZED(-91.70)), bool(_GLF_IDENTITY(false, false || (false))))))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((1.2 + -6.4)), float(mat3x4(_GLF_FUZZED((1.2 + -6.4)), 0.0, 0.0, abs(1.0), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), sin(0.0), 0.0, 1.0, 1.0))))), max(_GLF_IDENTITY(_GLF_FUZZED((1.2 + -6.4)), (_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(1.2, mix(float(_GLF_FUZZED((-3.0 * -927.996))), float(_GLF_IDENTITY(1.2, (1.2) - 0.0)), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.2, mix(float(_GLF_FUZZED((-3.0 * -927.996))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.2, (1.2) - 0.0), min(_GLF_IDENTITY(1.2, (1.2) - 0.0), _GLF_IDENTITY(1.2, (1.2) - 0.0)))), bool(true))), min(_GLF_IDENTITY(1.2, mix(float(_GLF_FUZZED((-3.0 * -927.996))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.2, (1.2) - 0.0), min(_GLF_IDENTITY(1.2, (1.2) - 0.0), _GLF_IDENTITY(1.2, (1.2) - 0.0)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.2, mix(float(_GLF_FUZZED((-3.0 * -927.996))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.2, (1.2) - 0.0), min(_GLF_IDENTITY(1.2, (1.2) - 0.0), _GLF_IDENTITY(1.2, (1.2) - 0.0)))), bool(true))), (_GLF_IDENTITY(1.2, mix(float(_GLF_FUZZED((-3.0 * -927.996))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.2, (1.2) - 0.0), min(_GLF_IDENTITY(1.2, (1.2) - 0.0), _GLF_IDENTITY(1.2, (1.2) - 0.0)))), bool(true)))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.2, mix(float(_GLF_FUZZED((-3.0 * -927.996))), float(_GLF_IDENTITY(1.2, (1.2) - 0.0)), bool(true))), (_GLF_IDENTITY(1.2, mix(float(_GLF_FUZZED((-3.0 * -927.996))), float(_GLF_IDENTITY(1.2, (1.2) - 0.0)), bool(true)))) - tan(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.2, mix(float(_GLF_FUZZED((-3.0 * -927.996))), float(_GLF_IDENTITY(1.2, _GLF_IDENTITY((1.2) - 0.0, mix(float(_GLF_IDENTITY((1.2) - 0.0, ((1.2) - 0.0) - 0.0)), float(_GLF_FUZZED(-6.2)), bool(false))))), bool(true))), (_GLF_IDENTITY(1.2, mix(float(_GLF_FUZZED((-3.0 * -927.996))), float(_GLF_IDENTITY(1.2, (1.2) - 0.0)), bool(true)))) - tan(0.0))), float(_GLF_FUZZED(910.178)), bool(false))))) + -6.4))) * 1.0), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(1.2, _GLF_IDENTITY((_GLF_IDENTITY(1.2, _GLF_IDENTITY((1.2) * 1.0, 0.0 + (_GLF_IDENTITY((1.2) * 1.0, _GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-5.2))), 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(6689.1723)), float(_GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), bool(true)))))))), min((_GLF_IDENTITY(1.2, _GLF_IDENTITY((1.2) * _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0 + (_GLF_IDENTITY((1.2) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(6689.1723)), float(_GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), false)), (bool(bvec2(bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), false))) && true))))), mix(float(_GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(6689.1723)), float(_GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), false)), (bool(bvec2(bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), false))) && true)))))), float(_GLF_FUZZED(vec4(-47.29, -38.20, -594.454, 6.3).w)), bool(false)))))))), (_GLF_IDENTITY(1.2, _GLF_IDENTITY((1.2) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6221.1544)), float(1.0), bool(true))), 0.0 + (_GLF_IDENTITY((1.2) * 1.0, _GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(false))), 1.0)), 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(6689.1723)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0))))), (float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), bool(true)))))))))) / 1.0) + -6.4), mix(float(_GLF_FUZZED(-16.43)), float((_GLF_IDENTITY(1.2, _GLF_IDENTITY((_GLF_IDENTITY(1.2, _GLF_IDENTITY((1.2) * 1.0, 0.0 + (_GLF_IDENTITY((1.2) * 1.0, _GLF_IDENTITY(float(mat4((1.2) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-5.2))), 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(6689.1723)), float(_GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), bool(true)))))))), min((_GLF_IDENTITY(1.2, _GLF_IDENTITY((1.2) * 1.0, 0.0 + (_GLF_IDENTITY((1.2) * 1.0, _GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(6689.1723)), float(_GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), clamp(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec2(bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), false))) && true)))))))))), (_GLF_IDENTITY(1.2, _GLF_IDENTITY(_GLF_IDENTITY((1.2) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6221.1544)), float(1.0), bool(true))), 0.0 + (_GLF_IDENTITY((1.2) * 1.0, _GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(false))), 1.0)), 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(6689.1723)), float(_GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), bool(true)))))), (true ? _GLF_IDENTITY((1.2) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6221.1544)), float(1.0), bool(true))), 0.0 + (_GLF_IDENTITY((1.2) * 1.0, _GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(false))), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(6689.1723)), float(_GLF_IDENTITY(float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat4((1.2) * 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), bool(true)))))) : _GLF_FUZZED(12.24))))))) / 1.0) + -6.4)), bool(true)))), max(_GLF_FUZZED((1.2 + -6.4)), _GLF_FUZZED((1.2 + -6.4))))))), float(0.0), bool(true))), injectionSwitch.x)) + (subgroup_id)) * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((1.2 + -6.4))), float(0.0), bool(true))), float(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((1.2 + -6.4))), float(0.0), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), injectionSwitch.x)) + (subgroup_id)) * subgroup_size + subgroup_local_id) | (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(1.2 + -6.4, float(_GLF_IDENTITY(mat4x2(1.2 + -6.4, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (true ? mat4x2(1.2 + -6.4, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0) : _GLF_FUZZED(mat4x2(-25.91, -6.4, 896.983, -5600.5881, -6.9, 4.4, 7427.0839, 1399.8483))))))), max((1.2 + -6.4), (1.2 + -6.4))))), float(0.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))), true && (bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), ! (! (bool(bvec2(true, true))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0), (mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true))))) || (false))))))), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))))))))), injectionSwitch.x)) + (subgroup_id)) * subgroup_size + subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(96604u) : workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), ~ (~ (subgroup_id * subgroup_size))) + subgroup_local_id), max((_GLF_IDENTITY(false ? _GLF_FUZZED(96604u) : workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) + subgroup_local_id, max(_GLF_IDENTITY(false ? _GLF_FUZZED(96604u) : workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), uint(uvec4(false ? _GLF_FUZZED(96604u) : workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) + subgroup_local_id, 0u, 0u, 0u))), _GLF_IDENTITY(false ? _GLF_FUZZED(96604u) : workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size))) + subgroup_local_id, (false ? _GLF_FUZZED(96604u) : workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), 1u * ((~ (subgroup_id * subgroup_size))))) + subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(96604u) : workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) + subgroup_local_id), uint(uint((false ? _GLF_FUZZED(_GLF_IDENTITY(96604u, (96604u) | (96604u))) : workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u))))) ^ 0u)))))) : _GLF_FUZZED(num_workgroup))) * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))) + subgroup_local_id)))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(96604u) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ((false ? _GLF_FUZZED(96604u) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << 0u)) * 1u));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, _GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) + 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(virtual_gid), 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), 0u ^ (max(virtual_gid, virtual_gid))))) | (virtual_gid)), (virtual_gid) * 1u)), 1u))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) | (virtual_gid)), (virtual_gid) * 1u)), 1u))))), 0u ^ ((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) | (virtual_gid)), (virtual_gid) * 1u)), 1u))))))))), min((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), (uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * _GLF_IDENTITY(1u, 1u * (1u)))), 1u))))))) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(virtual_gid), 1u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), min((uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u) : _GLF_FUZZED(workgroup_base)))), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)))), 1u))))), (uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))))) / 1u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(virtual_gid), 1u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), min((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u)))), ~ (~ (uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u)))))))))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(virtual_gid), 1u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? uvec2(uint(virtual_gid), 1u) : _GLF_FUZZED(uvec2(177284u, 146309u)), max(_GLF_IDENTITY(true, ! (! (true))) ? uvec2(uint(virtual_gid), 1u) : _GLF_FUZZED(uvec2(177284u, 146309u)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? uvec2(uint(virtual_gid), 1u) : _GLF_FUZZED(uvec2(177284u, 146309u)), (true ? _GLF_IDENTITY(true, ! (! (true))) ? uvec2(uint(virtual_gid), 1u) : _GLF_FUZZED(uvec2(177284u, 146309u)) : _GLF_FUZZED(uvec2(92412u, 161510u)))))))), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), min((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) * 1u, _GLF_IDENTITY(uint(uint((virtual_gid) * 1u)), clamp(uint(uint((virtual_gid) * 1u)), uint(uint((virtual_gid) * 1u)), uint(uint((virtual_gid) * 1u))))))), 1u))))), (uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))), (uint(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))) / 1u))), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(virtual_gid), 1u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), min((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(uvec2(19984u, 117977u).x)))), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), (uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(_GLF_IDENTITY(uint(virtual_gid), ~ (~ (uint(virtual_gid)))), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), _GLF_IDENTITY(1u, (0u | 0u) + (1u))))))))) / 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(virtual_gid), 1u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (clamp(1u, 1u, 1u)))))) : _GLF_FUZZED(workgroup_base))))), 1u))))), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)))), virtual_gid))), (uint(virtual_gid)) | (uint(virtual_gid))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)))), virtual_gid))), (uint(virtual_gid)) | (uint(virtual_gid))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)))), virtual_gid))), (uint(virtual_gid)) | (uint(virtual_gid)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)))), virtual_gid))), (uint(virtual_gid)) | (uint(virtual_gid))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)))), virtual_gid))), (uint(virtual_gid)) | (uint(virtual_gid))))), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)))), virtual_gid))), (uint(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_base))))) | (uint(virtual_gid))), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)))), virtual_gid))), (uint(virtual_gid)) | (uint(virtual_gid))), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), ((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)))), virtual_gid))), (uint(virtual_gid)) | (uint(virtual_gid))), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u)))))) ^ 0u)) + 0u), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)))), virtual_gid), (clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)))), virtual_gid)) >> 0u))), _GLF_IDENTITY((uint(virtual_gid)), (_GLF_IDENTITY((uint(virtual_gid)), min(_GLF_IDENTITY((uint(virtual_gid)), ((uint(virtual_gid))) / 1u), _GLF_IDENTITY((uint(virtual_gid)), clamp((uint(virtual_gid)), (uint(virtual_gid)), (uint(virtual_gid))))))) ^ (1u ^ 1u)) | (uint(virtual_gid))), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))))), (uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u))), (virtual_gid) * 1u)), 1u), clamp(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u))), (virtual_gid) * 1u)), 1u), uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u))), (virtual_gid) * 1u)), 1u), uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u))), (virtual_gid) * 1u)), 1u))))))))) / 1u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), _GLF_IDENTITY(1u, max(1u, 1u))), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(virtual_gid), 1u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), min((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), (uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), (false ? _GLF_FUZZED(packHalf2x16(vec2(-4016.6178, 1.1))) : _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), (uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u))) ^ 0u))), 1u))))))) / 1u), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), max(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), _GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), (uvec2(uint(virtual_gid), 1u)) >> uvec2(0u, 0u)))), clamp(uvec2(uvec2(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), (uvec2(uint(virtual_gid), 1u)) >> uvec2(0u, 0u)))), uvec2(uvec2(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), (uvec2(uint(virtual_gid), 1u)) >> uvec2(0u, 0u)))), uvec2(uvec2(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), (uvec2(uint(virtual_gid), 1u)) >> uvec2(0u, 0u))))))), uvec2(uint(virtual_gid), 1u))), uvec2(uint(virtual_gid), 1u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), _GLF_IDENTITY(min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u)), (_GLF_IDENTITY(min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u)), (min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))) ^ uvec2(0u, 0u))) << uvec2(0u, 0u))))), min((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), (uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))))) / 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), _GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), (uvec2(uint(virtual_gid), 1u)) | (uvec2(uint(virtual_gid), 1u)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(virtual_gid), _GLF_IDENTITY(1u, max(1u, 1u))), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))), min(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))), _GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))))), min((uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))), (uint(_GLF_IDENTITY(uvec2(uint(virtual_gid), 1u), min(uvec2(uint(virtual_gid), 1u), uvec2(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)), 1u))))))) / 1u)))), 4, 64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(30795, clamp(30795, 30795, _GLF_IDENTITY(30795, (30795) ^ (0 | 0))))) : 0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(93.30, -0.6)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(smoothstep(-960.232, 0.3, injectionSwitch)) : (false ? _GLF_FUZZED(vec2(93.30, -0.6)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(93.30, -0.6)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(smoothstep(-960.232, 0.3, injectionSwitch)) : (false ? _GLF_FUZZED(vec2(93.30, -0.6)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(93.30, -0.6)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(smoothstep(-960.232, 0.3, injectionSwitch)) : (false ? _GLF_FUZZED(vec2(93.30, -0.6)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)), transpose(transpose(mat4x3(injectionSwitch, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0))))))), 0.0, 1.0, 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)), transpose(transpose(mat4x3(injectionSwitch, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), abs(1.0))))))), 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, cos(0.0), 1.0))), 1.0, 0.0))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))), min(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2((normalize(vec2(1.0, 1.0)))[0], (normalize(vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED(-5297.5060), _GLF_IDENTITY(_GLF_FUZZED(float(5937)), mix(float(_GLF_FUZZED(2186.1105)), float(_GLF_FUZZED(float(5937))), bool(true)))), bvec2(false, false))), normalize(vec2(1.0, 1.0)))))), tan(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)), transpose(transpose(mat4x3(injectionSwitch, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(2.6)), float(tan(0.0)), bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0))))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-78.68)), bool(false)))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0))), float(_GLF_FUZZED(-468.455)), bool(false))))))), false, true)), true && (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)), transpose(transpose(mat4x3(injectionSwitch, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 1.0, 0.0, abs(1.0)))))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) / 1.0)), transpose(transpose(mat4x3(injectionSwitch, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 1.0, 0.0, abs(1.0))))))) * vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(453.203)), float(1.0), bool(true))), 1.0))), 0.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y))), false, true))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), false, false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.1) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))) || false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(92.68)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-4620.9054)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-251.809))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0)) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0), 0.0 + (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0), (clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-645.471) : 0.0)), 0.0)) / 1.0))), clamp(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, abs(0.0), abs(0.0), 1.0, sqrt(0.0), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), (false ? _GLF_FUZZED(-1.9) : float(mat3(0.0, abs(0.0), abs(0.0), 1.0, sqrt(0.0), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))))))) + sin(0.0)))), 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, log(1.0)))).x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), 0.0 + (_GLF_IDENTITY((false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ((false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) - 0.0)))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), 0.0 + (_GLF_IDENTITY((false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec2(-3906.7542, 3.9)) : _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0))))).y, injectionSwitch.y)), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(-66.89)), float((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(true))))), ((false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) - 0.0)))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sign(vec2(239.795, -2.6))) : injectionSwitch)).y, (false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(write_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
