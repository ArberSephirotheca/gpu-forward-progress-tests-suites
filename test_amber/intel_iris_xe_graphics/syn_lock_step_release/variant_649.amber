#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, 1.0, sin(0.0))), dot(vec4(sin(0.0), 0.0, 1.0, 0.0), vec4(sin(0.0), 0.0, 1.0, sin(0.0)))), 1.0, 0.0, 0.0, 1.0))), injectionSwitch)).y)))), ((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch), mix(vec2((clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(2233.1293)), vec2(_GLF_FUZZED(1522.8227), _GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))[1], (true ? (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))[1] : _GLF_FUZZED(9707.8172)))), bvec2(false, true)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch), mix(vec2((clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(2233.1293)), vec2(_GLF_FUZZED(1522.8227), _GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))[1], (true ? (clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))[1] : _GLF_FUZZED(9707.8172)))), bvec2(false, true)))).y))))))) && true))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, false, true)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, false, true)))), false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (! (! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (! (! (false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY(_GLF_FUZZED(5.5), 0.0 + (_GLF_FUZZED(5.5)))), vec2(_GLF_FUZZED(vec3(-43.14, -7864.3794, 7.0).p), (vec2(0.0, 0.0))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(ceil(injectionSwitch)))).y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec3(false || (false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0))) + vec2(0.0, 0.0))), sqrt(1.0), 1.0, 1.0, 1.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0))) + vec2(0.0, 0.0))), sqrt(1.0), 1.0, 1.0, 1.0)) * mat2(1.0)))).y)))))))) && true)))))))))))), ! (! (! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(bvec3(false || (_GLF_IDENTITY(false, true && (false))), true, true)))))))))))))), false || (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, true)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, true)))))), true && (! (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, true))))))))) || false)))))))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (true) || false), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(mix(9.8, -7.0, true)) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(-8280.9997)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), max(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(-8280.9997)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch, injectionSwitch)) + abs(abs(vec2(0.0, 0.0))))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * (uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u) | uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u)))))).x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / cos(0.0)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(inversesqrt(1.8)) : 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7925.2700)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.4))), _GLF_IDENTITY(1.0, (1.0) + 0.0)))), bool(true))), 1.0), vec3(0.0, 0.0, 0.0))), 0.0 + (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7925.2700)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.4))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, abs(0.0), 0.0, 0.0)))))), bool(true))), 1.0), vec3(0.0, 0.0, 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7925.2700)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.4))), _GLF_IDENTITY(1.0, (1.0) + 0.0)))), bool(true))), 1.0), vec3(0.0, 0.0, 0.0))), 0.0 + (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7925.2700)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.4))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, abs(0.0), 0.0, 0.0)))))), bool(true))), 1.0), vec3(0.0, 0.0, 0.0))))) : _GLF_FUZZED(268.378))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6197.9961)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0)))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(6.6))) - 0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-231.752)), float(1.0), bool(true))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, sin(0.0))))))))), clamp(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, determinant(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0), (mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-16.90)), bool(false)))))), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sin(0.0)), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0))))))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2251.5074)), bool(false))), 1.0, 0.0, 1.0), max(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2251.5074)), bool(false))), 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2251.5074)), bool(false))), 1.0, 0.0, 1.0))))), 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))) - 0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(vec3(0.3, 61.53, -336.907).x))), float(mat4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, sqrt(0.0), tan(0.0), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, exp(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)), 0.0))), 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, sin(0.0))))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)))), dot(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-34.98)), bool(false))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, sin(0.0))))))))), min(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(atan(93.38)) : 0.0)), 0.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0))))), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(-8971.7358), (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(-853.140)), vec3((vec3(1.0, 1.0, 1.0))[0], _GLF_FUZZED(-3.6), (vec3(1.0, 1.0, 1.0))[2]), bvec3(true, false, true))), vec3(1.0, 1.0, 1.0))), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-843.468)), float(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(mat2(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), vec3(0.0, 0.0, 0.0)))), bool(true))), 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-843.468)), float(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], _GLF_FUZZED(-3875.4591), (vec3(1.0, 1.0, 1.0))[2]), vec3(_GLF_FUZZED(7.8), (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(9.1)), bvec3(false, true, false))), vec3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), bool(true))), 0.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-624.009) : _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-511.269) : 0.0)))))), 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0))))))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, length(0.0)))), 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-309.524) : 1.0)), 1.0))) + 0.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(determinant(mat2(3156.4784, -0.9, -2773.2961, -982.168))) : 1.0)), 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(mat2x4(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 1.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, sqrt(0.0))))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0), (true ? vec4(0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(vec4(-4.6, -80.67, -6.3, 601.703))))), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)))))))))))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (vec4(injectionSwitch, 0.0, 1.0)) * vec4(1.0, 1.0, 1.0, 1.0)))), injectionSwitch)).x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((2429.8884 * 8.8)))))), true)), bool(bvec4(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)), true && (false))))))), false, true)))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(73.34), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-90.94)), bvec2(true, false))), injectionSwitch)).y))))) || false))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), true))))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) >> 0u)), _GLF_IDENTITY(~ (~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) >> 0u)))), min(~ (~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) >> 0u)))), ~ (~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) >> 0u)))))))) + 1) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) >> 0u)), ~ (~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) >> 0u)))))) + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) >> 0u)), ~ _GLF_IDENTITY((~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u))))), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u)))))) - 0u) >> 0u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u))))), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u)))))) - 0u) >> 0u)))), (_GLF_IDENTITY((~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u))))), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u)))))) - 0u) >> 0u)))), ((~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u))))), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u)))))) - 0u) >> 0u))))) | ((~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u))))), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u)))))) - 0u) >> 0u))))))) << 0u), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY((~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u))))), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u)))))) - 0u) >> 0u)))), (_GLF_IDENTITY((~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u))))), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u)))))) - 0u) >> 0u)))), ((~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u))))), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u)))))) - 0u) >> 0u))))) | ((~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u))))), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-67.42)), bvec2(true, false))).x)) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) + 0u)))))) - 0u) >> 0u))))))) << 0u), 0u, 0u))))))) + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), false, true, true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((20.58 / float(false))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), max(_GLF_IDENTITY(_GLF_FUZZED(-22.19), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-22.19), (true ? _GLF_FUZZED(-22.19) : _GLF_FUZZED(3.3))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), min(_GLF_IDENTITY(_GLF_FUZZED(-22.19), round(length(normalize(1.0))) * (_GLF_FUZZED(-22.19))), _GLF_FUZZED(_GLF_IDENTITY(-22.19, mix(float(-22.19), float(_GLF_FUZZED(float(-20674))), bool(false))))))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((20.58 / float(false))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), max(_GLF_IDENTITY(_GLF_FUZZED(-22.19), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-22.19), (true ? _GLF_FUZZED(-22.19) : _GLF_FUZZED(3.3))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), min(_GLF_FUZZED(-22.19), _GLF_FUZZED(-22.19)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))) || false)), true))).x > injectionSwitch.y), true, false, false)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((20.58 / float(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.19), max(_GLF_IDENTITY(_GLF_FUZZED(-22.19), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-22.19), (true ? _GLF_FUZZED(-22.19) : _GLF_FUZZED(3.3))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), min(_GLF_FUZZED(-22.19), _GLF_FUZZED(-22.19))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-22.19), max(_GLF_IDENTITY(_GLF_FUZZED(-22.19), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-22.19), (true ? _GLF_FUZZED(-22.19) : _GLF_FUZZED(3.3))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), min(_GLF_FUZZED(-22.19), _GLF_FUZZED(-22.19))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.19), max(_GLF_IDENTITY(_GLF_FUZZED(-22.19), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-22.19), (true ? _GLF_FUZZED(-22.19) : _GLF_FUZZED(3.3))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), min(_GLF_FUZZED(-22.19), _GLF_FUZZED(-22.19))))), max(_GLF_IDENTITY(_GLF_FUZZED(-22.19), max(_GLF_IDENTITY(_GLF_FUZZED(-22.19), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-22.19), (true ? _GLF_FUZZED(-22.19) : _GLF_FUZZED(3.3))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), min(_GLF_FUZZED(-22.19), _GLF_FUZZED(-22.19))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), max(_GLF_IDENTITY(_GLF_FUZZED(-22.19), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-22.19), (true ? _GLF_FUZZED(-22.19) : _GLF_FUZZED(3.3))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), min(_GLF_FUZZED(-22.19), _GLF_FUZZED(-22.19))))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), max(_GLF_IDENTITY(_GLF_FUZZED(-22.19), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-22.19), (true ? _GLF_FUZZED(-22.19) : _GLF_FUZZED(3.3))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), min(_GLF_FUZZED(-22.19), _GLF_FUZZED(-22.19)))))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y), true, false, false)), false, true))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((20.58 / float(false))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), max(_GLF_IDENTITY(_GLF_FUZZED(-22.19), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-22.19), (true ? _GLF_FUZZED(-22.19) : _GLF_FUZZED(3.3))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), min(_GLF_FUZZED(-22.19), _GLF_FUZZED(-22.19)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true))))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((20.58 / float(false))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), max(_GLF_IDENTITY(_GLF_FUZZED(-22.19), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-22.19), (true ? _GLF_FUZZED(-22.19) : _GLF_FUZZED(3.3))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), min(_GLF_FUZZED(-22.19), _GLF_FUZZED(-22.19)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y), true, false, false)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((20.58 / float(false))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), max(_GLF_IDENTITY(_GLF_FUZZED(-22.19), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-22.19), (true ? _GLF_FUZZED(-22.19) : _GLF_FUZZED(3.3))))), _GLF_IDENTITY(_GLF_FUZZED(-22.19), min(_GLF_FUZZED(-22.19), _GLF_FUZZED(-22.19)))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y), true, false, false)), false, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5613.0738)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0))).y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, bool(bool(true))), false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))))) / 1.0, mix(float(_GLF_FUZZED((- 0.0))), float((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / sqrt(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), min(float((injectionSwitch)[0]), float((injectionSwitch)[0]))), float(_GLF_FUZZED(493.582)), bool(false))), _GLF_FUZZED(-7765.9383)), bvec2(true, false))).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_FUZZED(-5613.0738)) * 1.0))), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_FUZZED(-5613.0738)) * 1.0))), 1.0, 1.0, 1.0)), (float(vec4(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_FUZZED(-5613.0738)) * 1.0))), 1.0, 1.0, 1.0))) - 0.0), float(vec4(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_FUZZED(-5613.0738)) * 1.0))), 1.0, 1.0, 1.0)), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_FUZZED(-5613.0738)) * 1.0))), max(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), clamp(_GLF_FUZZED(-5613.0738), _GLF_FUZZED(-5613.0738), _GLF_IDENTITY(_GLF_FUZZED(-5613.0738), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), min(_GLF_FUZZED(-5613.0738), _GLF_FUZZED(-5613.0738)))), float(_GLF_FUZZED(-2947.9756)), bool(false)))))) * 1.0)), min((_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), clamp(_GLF_FUZZED(-5613.0738), _GLF_FUZZED(_GLF_IDENTITY(-5613.0738, (-5613.0738) + 0.0)), _GLF_IDENTITY(_GLF_FUZZED(-5613.0738), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), min(_GLF_FUZZED(-5613.0738), _GLF_FUZZED(-5613.0738)))), float(_GLF_FUZZED(-2947.9756)), bool(false)))))) * 1.0)), (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), clamp(_GLF_FUZZED(-5613.0738), _GLF_FUZZED(-5613.0738), _GLF_IDENTITY(_GLF_FUZZED(-5613.0738), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), min(_GLF_FUZZED(-5613.0738), _GLF_FUZZED(-5613.0738)))), float(_GLF_FUZZED(-2947.9756)), bool(false)))))) * 1.0))))), _GLF_IDENTITY(_GLF_FUZZED(-5613.0738), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_FUZZED(-5613.0738)) * 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_FUZZED(-5613.0738)) * 1.0))), max(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), clamp(_GLF_FUZZED(-5613.0738), _GLF_FUZZED(-5613.0738), _GLF_IDENTITY(_GLF_FUZZED(-5613.0738), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), min(_GLF_FUZZED(-5613.0738), _GLF_FUZZED(-5613.0738)))), float(_GLF_FUZZED(-2947.9756)), bool(false)))))) * 1.0)), min((_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), clamp(_GLF_FUZZED(-5613.0738), _GLF_FUZZED(_GLF_IDENTITY(-5613.0738, (-5613.0738) + 0.0)), _GLF_IDENTITY(_GLF_FUZZED(-5613.0738), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), min(_GLF_FUZZED(-5613.0738), _GLF_FUZZED(-5613.0738)))), float(_GLF_FUZZED(-2947.9756)), bool(false)))))) * 1.0)), (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), clamp(_GLF_FUZZED(-5613.0738), _GLF_FUZZED(-5613.0738), _GLF_IDENTITY(_GLF_FUZZED(-5613.0738), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), min(_GLF_FUZZED(-5613.0738), _GLF_FUZZED(-5613.0738)))), float(_GLF_FUZZED(-2947.9756)), bool(false)))))) * 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_FUZZED(-5613.0738)) * 1.0))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-5613.0738), (_GLF_FUZZED(-5613.0738)) * 1.0)))))))) + _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 1.0, 1.0)))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).y)))))) / 1.0), bool(_GLF_IDENTITY(true, (true) || false))))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5613.0738)), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))) / 1.0, mix(float(_GLF_FUZZED((- 0.0))), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-7765.9383)), bvec2(true, false))).y, mix(float(_GLF_FUZZED(-5613.0738)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))) / 1.0), bool(_GLF_IDENTITY(true, (true) || false)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5613.0738)), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))) / 1.0, mix(float(_GLF_FUZZED((- 0.0))), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-7765.9383)), bvec2(true, false))).y, mix(float(_GLF_FUZZED(-5613.0738)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))) / 1.0), bool(_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5613.0738)), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))) / 1.0, mix(float(_GLF_FUZZED((- 0.0))), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-7765.9383)), bvec2(true, false))).y, mix(float(_GLF_FUZZED(-5613.0738)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))) / 1.0), bool(_GLF_IDENTITY(true, (true) || false)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5613.0738)), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))) / 1.0, mix(float(_GLF_FUZZED((- 0.0))), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-7765.9383)), bvec2(true, false))).y, mix(float(_GLF_FUZZED(-5613.0738)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))) / 1.0), bool(_GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5613.0738)), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))) / 1.0, mix(float(_GLF_FUZZED((- 0.0))), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-7765.9383)), bvec2(true, false))).y, mix(float(_GLF_FUZZED(-5613.0738)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))) / 1.0), bool(_GLF_IDENTITY(true, (true) || false))))) - 0.0)), float(_GLF_FUZZED((-7.0 * -7.2))), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5613.0738)), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))) / 1.0, mix(float(_GLF_FUZZED((- 0.0))), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-7765.9383)), bvec2(true, false))).y, mix(float(_GLF_FUZZED(-5613.0738)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))) / 1.0), bool(_GLF_IDENTITY(true, (true) || false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5613.0738)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), ! _GLF_IDENTITY((! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY((! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), bool(bool((! (bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false), bvec2(bvec2(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) / vec2(1.0, 1.0)).y))), false)))))))))))))))) && true))))) / 1.0, mix(float(_GLF_FUZZED((- 0.0))), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-7765.9383)), bvec2(true, false))).y, mix(float(_GLF_FUZZED(-5613.0738)), _GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(971.413))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) < injectionSwitch.y))), false, false, false)))))) / 1.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(true, (true) || false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) - 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), cos(0.0))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0)), min(float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0)))))) + 0.0), 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), sqrt(1.0), abs(1.0), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, bool(bvec3((injectionSwitch.x > injectionSwitch.y) && true, false, true)))))))))) && true)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, false, false)))) || false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)) * (injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)) * (injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))) && true) || false)), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0)), 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) * (injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, (true) && true), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(795.274))), 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))) < injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), float(mat3x2(float(vec2(injectionSwitch.y, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))) && true))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
