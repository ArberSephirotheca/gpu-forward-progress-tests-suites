#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_20 {
 ivec4 _f0;
} ;

struct _GLF_struct_19 {
 vec2 _f0;
 vec2 _f1;
 bool _f2;
 vec2 _f3;
 mat4 _f4;
 int _f5;
} ;

struct _GLF_struct_18 {
 bvec4 _f0;
} ;

struct _GLF_struct_21 {
 bvec3 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 mat2x3 _f3;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_16 {
 uint _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_15 {
 int _f0;
} ;

struct _GLF_struct_17 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
} ;

struct _GLF_struct_13 {
 uvec3 _f0;
 vec3 _f1;
 uvec4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_14 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_21 _f2;
 mat4x3 _f3;
 uint virtual_gid;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 ivec4 _f1;
 mat3 _f2;
 bvec3 _f3;
 ivec2 _f4;
 mat4x3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 mat2x3 _f1;
 ivec4 _f2;
 _GLF_struct_9 _f3;
 bvec4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 mat2x4 _f1;
 uvec3 _f2;
 mat2x4 _f3;
 vec4 _f4;
 uvec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 vec4 _f1;
 uint _f2;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 uvec4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 vec4 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 mat2x3 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_0 {
 bool _f0;
 uint _f1;
 uvec3 _f2;
 bool _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 vec3 _f1;
 uint _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_1 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_10 _f3;
 uvec3 _f4;
 mat4x3 _f5;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_1(_GLF_struct_0(true, 1u, uvec3(1u), true, mat4x2(1.0)), vec3(1.0), 1u), _GLF_struct_7(uvec2(1u), _GLF_struct_2(uvec4(1u), vec4(1.0), vec3(1.0)), _GLF_struct_3(mat2(1.0)), _GLF_struct_4(ivec3(1), uvec4(1u), bvec3(true)), _GLF_struct_5(bvec3(true), vec4(1.0), 1u), mat2x3(1.0), _GLF_struct_6(mat2x3(1.0), mat2x4(1.0), uvec3(1u), mat2x4(1.0), vec4(1.0), uvec3(1u), ivec2(1))), _GLF_struct_8(bvec2(true), vec2(1.0)), _GLF_struct_10(bvec4(true), mat2x3(1.0), ivec4(1), _GLF_struct_9(vec4(1.0), ivec4(1), mat3(1.0), bvec3(true), ivec2(1), mat4x3(1.0), mat2x3(1.0)), bvec4(true), uvec2(1u)), uvec3(1u), mat4x3(1.0), gl_WorkGroupSize.x);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_11.workgroup_size * workgroup_id;
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_14(_GLF_struct_12(vec3(1.0)), _GLF_struct_13(uvec3(1u), vec3(1.0), uvec4(1u), vec4(1.0))), _GLF_struct_17(_GLF_struct_15(1), _GLF_struct_16(1u, bvec4(true))), _GLF_struct_21(bvec3(true), _GLF_struct_18(bvec4(true)), _GLF_struct_19(vec2(1.0), vec2(1.0), true, vec2(1.0), mat4(1.0), 1), mat2x3(1.0), _GLF_struct_20(ivec4(1))), mat4x3(1.0), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id);
 atomicStore(write_val, uint(_GLF_struct_replacement_22.virtual_gid), 4, 64, 0);
 buf[_GLF_struct_replacement_22.virtual_gid] = uint(subgroupAllEqual(write_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
