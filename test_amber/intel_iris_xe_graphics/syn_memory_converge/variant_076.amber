#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(vec2(-81.92, -0.2)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y : _GLF_FUZZED(3948.4031)))), float(_GLF_FUZZED(679.302)), bool(false))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(vec2(-81.92, -0.2)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y : _GLF_FUZZED(3948.4031)))), float(_GLF_FUZZED(679.302)), bool(false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))).y), _GLF_IDENTITY(true, ! (! (true))), false, false))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x = subgroup_id;
 uint subgroup_size = 16;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))), ~ (~ (_GLF_IDENTITY((~ (1)), ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, _GLF_IDENTITY((7), min(_GLF_IDENTITY((7), ((7)) * 1), _GLF_IDENTITY((7), int(ivec4((7), 1, 0, 1))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (_GLF_IDENTITY(1, (1) + 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))) >> (18421 & 0))) | (~ (1)))), min((~ (1)), (~ (1))))) * _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) * 1)))))) | (_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))))), max((~ (1)), (~ (_GLF_IDENTITY(1, (1) ^ 0)))))))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), _GLF_IDENTITY(clamp(1, 1, 1), 1 * (_GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) ^ 0)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(19781) : _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) | ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), int(ivec2(~ (1), 1)))) | (~ (1)))))), max((~ (1)), (~ (_GLF_IDENTITY(1, 0 ^ (1))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), int(ivec2(~ (1), 1)))) | (~ (1)))))), max((~ (1)), (~ (_GLF_IDENTITY(1, 0 ^ (1))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))) + (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1))))))) << 0), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(max(-11376, -29002)) : int(7))))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))))), max(_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))) | ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))) | ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))) | ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))) | ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))))) << 0)))), (true ? ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))), int(int(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))))), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) << 0)))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (_GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(~ (1), ~ (~ (~ (1)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))) | ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(1), (int(1)) / 1)))), (int(_GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(1), (int(1)) / 1))))) / 1)), 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), _GLF_IDENTITY(max((~ (1)), (~ (1))), 0 | (max((~ (1)), (~ (1))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))))) : _GLF_FUZZED(-77131))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))) | ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))) | ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))) | ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))))))), min(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), clamp(int(int(_GLF_IDENTITY(1, max(1, 1)))), int(int(_GLF_IDENTITY(1, max(1, 1)))), int(int(_GLF_IDENTITY(1, max(1, 1))))))) << 0)), clamp(1, 1, 1)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), 0 ^ ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max(_GLF_IDENTITY((~ (1)), clamp((~ (1)), _GLF_IDENTITY((~ (1)), int(int((~ (1))))), _GLF_IDENTITY((~ (1)), max(_GLF_IDENTITY((~ (1)), ((~ (1))) << 0), (~ (1)))))), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))) | 0)))))))), _GLF_IDENTITY(((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(1))), 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))), (((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(1))), 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))))) | (((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(1))), 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))))) | ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), 0 | (int(ivec2(1, 1))))))), _GLF_IDENTITY((~ (1)), clamp(_GLF_IDENTITY((~ (1)), 0 + ((~ (1)))), (~ (1)), (~ (1)))))), max((~ (1)), _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(83706, (83706) << 0)) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), clamp(int(int(_GLF_IDENTITY(1, max(1, 1)))), int(int(_GLF_IDENTITY(1, max(1, 1)))), int(int(_GLF_IDENTITY(1, max(1, 1))))))) << 0)), clamp(1, 1, 1)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), 0 ^ ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max(_GLF_IDENTITY((~ (1)), clamp((~ (1)), _GLF_IDENTITY((~ (1)), int(int((~ (1))))), _GLF_IDENTITY((~ (1)), max(_GLF_IDENTITY((~ (1)), ((~ (1))) << 0), (~ (1)))))), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))) | 0)))))))), _GLF_IDENTITY(((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(1))), 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))), (((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(1))), 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))))) | (((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(1))), 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))))) | ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), 0 | (int(ivec2(1, 1))))))), _GLF_IDENTITY((~ (1)), clamp(_GLF_IDENTITY((~ (1)), 0 + ((~ (1)))), (~ (1)), (~ (1)))))), max((~ (1)), _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(83706, (83706) << 0)) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))))))) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 ^ (7))), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (1), 0 + (~ (1)))), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), int(ivec2((1 << _GLF_IDENTITY(int(7), int(7))), int(_GLF_ONE(1.0, injectionSwitch.y))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec2((1), 1)))) | ((1)))), (~ (1)))), max((~ (1)), (~ (1)))))), clamp((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec2((1), 1)))) | ((1)))), (~ (1)))), max((~ (1)), (~ (1)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec2((1), 1)))) | ((1)))), (~ (1)))), max((~ (1)), (~ (1)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec2((1), 1)))) | ((1)))), (~ (1)))), max((~ (1)), (~ (1)))))))))))) | ((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(7, 0 | (7)), 7, _GLF_IDENTITY(7, min(7, 7))))), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))) >> 0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min(_GLF_IDENTITY((~ (1)), 0 | ((~ (1)))), (~ (1)))), max((~ (1)), (~ (1)))))))))))), 0 | (~ (~ _GLF_IDENTITY((_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(8460) : clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (1)), 1)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max(_GLF_IDENTITY((~ (1)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(1218) : _GLF_IDENTITY((~ (1)), clamp((~ (1)), _GLF_IDENTITY((~ (1)), max((~ (1)), (~ (1)))), (~ (1)))))), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0), min(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0), min(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)))))), clamp(1, 1, 1)))) - 0)) / 1)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (~ (1)), int(int(~ (~ (1)))))))), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), min((~ (1)), (~ (1)))), max((~ (1)), (~ (1)))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-63058))), 1)), (int(ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-63058))), 1))) + 0)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-63058))), 1)), (int(ivec2(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-63058))), 1))) + 0)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), max(1, 1)))), (int(int(_GLF_IDENTITY(1, max(1, 1))))) << 0)), clamp(1, 1, 1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))), (~ (1)))), max((~ (1)), (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83706) : (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), min((~ (_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), (~ (1)))), max((~ (1)), (~ (1)))))))))))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > injectionSwitch.y)), true && (! (bool(injectionSwitch.x > injectionSwitch.y))))))))), true, true)))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bool(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec3(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true, true))))))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))))))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) << 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true)))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0)))), int(1))))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), int(int(int(_GLF_IDENTITY(1, max(1, 1)))))))))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 1.0, 0.0, 0.0, 1.0, 1.0)))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.x = num_workgroup, (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.x = num_workgroup) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.w = workgroup_size;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(((+ subgroup_size) - write_val)) : gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.x), bool(true))), 0.0), (true ? vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.x), bool(true))), 0.0) : _GLF_FUZZED(vec2(90.24, -3997.7678))))), (true ? float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.x), bool(true))), 0.0), (true ? vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.x), bool(true))), 0.0) : _GLF_FUZZED(vec2(90.24, -3997.7678))))) : _GLF_FUZZED(-5.7)))) < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3689.7798), _GLF_FUZZED(-3655.7672)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), ! (! (! (_GLF_IDENTITY((false), ((false)) && true)))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (! (((false))))) && true)), ! (! (! (_GLF_IDENTITY((false), ((false)) && true))))))) || false)))))))
      barrier();
     barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED((-3724 << -68088)) : int(0)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.z = _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_id, 0u, 0u, 1u)), (uint(uvec4(workgroup_id, 0u, 0u, 1u))) | 0u));
 uint workgroup_base = GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.w * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, (_GLF_IDENTITY(true ? GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id : _GLF_FUZZED((GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id)), (true ? GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id : _GLF_FUZZED((GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id))) | (true ? GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id : _GLF_FUZZED((GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id)))))).z;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.z = workgroup_base;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.z + GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x * GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.y = virtual_gid;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 atomicStore(write_val, uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.y, (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.y) - 0u)), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY((vec2(1.0, 1.0)) - log(vec2(1.0, 1.0)), max((vec2(1.0, 1.0)) - log(vec2(1.0, 1.0)), _GLF_IDENTITY((vec2(1.0, 1.0)) - log(vec2(1.0, 1.0)), clamp((vec2(1.0, 1.0)) - log(vec2(1.0, 1.0)), (vec2(1.0, 1.0)) - log(vec2(1.0, 1.0)), (vec2(1.0, 1.0)) - log(vec2(1.0, 1.0)))))))))[1])).x > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-2235.9803)), float(injectionSwitch[0]), bool(true))), min(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0))[0])), injectionSwitch[1])).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0))[0])), injectionSwitch[1])).x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))) || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0])), injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY((((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y, true, false)))) || false)))), ! (_GLF_IDENTITY(! ((((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y, true, false)))) || false))))), (! ((((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y, true, false)))) || false)))))) || false))) && true))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(injectionSwitch)) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0))[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) + abs(vec2(0.0, 0.0))).y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0))[0])), injectionSwitch[1])).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0))[0])), injectionSwitch[1])).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0))[0])), injectionSwitch[1])).x > injectionSwitch.y))))), (bool(! (! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0))[0])), injectionSwitch[1])).x > injectionSwitch.y)))))) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))) && true), false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))) && true))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, true))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0)))), clamp((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0)))), (1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0)))), (1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec4(_injected_loop_counter != 0, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), false)))); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)) : _GLF_FUZZED(uintBitsToFloat(workgroup_base))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, true)))) || false, true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true)), false, false, false)), (bool(bvec4(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true)), false, false, false))) || false))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true)), false, false, false)), (bool(bvec4(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true)), false, false, false))) || false))))))))))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   buf[GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14num_workgroupvirtual_gidworkgroup_baseworkgroup_size.y] = uint(subgroupAllEqual(write_val));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(30.34)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
