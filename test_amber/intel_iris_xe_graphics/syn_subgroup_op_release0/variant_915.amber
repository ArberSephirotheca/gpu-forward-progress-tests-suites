#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false)))))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (true ? injectionSwitch.x : _GLF_FUZZED(-83.61))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))), 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u))), ~ (~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u))))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) >> 0u) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))))))), (min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) >> 0u) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))))))))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) >> 0u) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))))))), 0u | (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) >> 0u) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))))))), (false ? _GLF_FUZZED(subgroup_local_id) : min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) >> 0u) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))))))))))))))), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY((gl_NumWorkGroups.x), max((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))), false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) * uvec3(1u, 1u, 1u), ((gl_WorkGroupSize) * uvec3(1u, 1u, 1u)) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((gl_WorkGroupSize) * uvec3(1u, 1u, 1u), ((gl_WorkGroupSize) * uvec3(1u, 1u, 1u)) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true)))), bool(bvec2((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true)))), true))))) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))), false)))))), bool(bvec2(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-21.08) : injectionSwitch.x)) > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))), false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))) && true)) || false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))))).x) ^ 0u) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))))))).x) | _GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ _GLF_IDENTITY(((gl_WorkGroupID.x)), 0u | (((gl_WorkGroupID.x)))))), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | (_GLF_IDENTITY((gl_WorkGroupID.x), 0u | ((_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))))))))), min((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x) | (gl_WorkGroupID.x), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x) | (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x), 0u ^ (min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), gl_WorkGroupID.x))))), _GLF_IDENTITY(_GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x) | (gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), max(true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID))), min(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID))), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID))), uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID))), uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID)))))) / uvec3(1u, 1u, 1u)))))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), _GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), ~ (~ (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)))))) / uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), ~ (~ (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168605u, 138397u, 193601u)) : gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)))))) / uvec3(1u, 1u, 1u)) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))))).x) | (gl_WorkGroupID.x)), min(max((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x) | (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), max(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)))).x) | (gl_WorkGroupID.x)), max((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x) | (gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID))))) << uvec3(0u, 0u, 0u))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), max(_GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), _GLF_FUZZED(uvec3(78458u, 74369u, 11396u))))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), max(_GLF_FUZZED(_GLF_IDENTITY(uvec3(78458u, 74369u, 11396u), uvec3(0u, 0u, 0u) ^ (uvec3(78458u, 74369u, 11396u)))), _GLF_FUZZED(uvec3(78458u, _GLF_IDENTITY(74369u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (74369u)), 11396u))))), min((true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), max(_GLF_FUZZED(uvec3(_GLF_IDENTITY(78458u, 1u * (78458u)), 74369u, 11396u)), _GLF_FUZZED(uvec3(78458u, 74369u, 11396u))))), (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), max(_GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), _GLF_FUZZED(uvec3(78458u, 74369u, 11396u))))))), (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), max(_GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)))))))).x) | (gl_WorkGroupID.x)))), (_GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) * (gl_WorkGroupID))) * uvec3(1u, 1u, 1u)), uvec3(uvec3(gl_WorkGroupID))).x) | (gl_WorkGroupID.x), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)))).x) | (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), 0u)), (uvec3(uvec4(_GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), 0u))) - uvec3(0u, 0u, 0u))))).x) | (gl_WorkGroupID.x)), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))))), (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)))).x) | (gl_WorkGroupID.x))) ^ (0u ^ 0u))))), min(max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), uvec3(uvec4(uvec3(uvec4(gl_WorkGroupID, 0u)), 1u)))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(53862u, 140252u, 159455u)))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(53862u, 140252u, 159455u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(53862u, 140252u, 159455u)))), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(53862u, 140252u, 159455u)))), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(53862u, 140252u, 159455u)))), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(53862u, 140252u, 159455u)))))), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(53862u, 140252u, 159455u)))))))).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)))).x) | (gl_WorkGroupID.x)), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(114247u, 191271u, 14969u)) : gl_WorkGroupID)), uvec3(uvec3(gl_WorkGroupID))).x), 0u, 0u))) | (gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)))).x) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) >> _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u), (uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u), (false ? _GLF_FUZZED(uvec2(27245u, 158240u)) : uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED((subgroup_id | num_workgroup)) : uint(0u))))))))))))))))) | (_GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x) | (gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(78458u, 74369u, 11396u)), uvec3(0u, 0u, 0u) + (_GLF_FUZZED(uvec3(_GLF_IDENTITY(78458u, min(78458u, 78458u)), 74369u, 11396u)))))).x) | (gl_WorkGroupID.x)), min(max((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), max(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (uvec3(uvec3(gl_WorkGroupID)))), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (uvec3(uvec3(gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u))))).x) | (gl_WorkGroupID.x), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), max(uvec3(uvec3(gl_WorkGroupID)), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(gl_WorkGroupID), ~ (~ (uvec3(gl_WorkGroupID))))))))))), uvec3(uvec4(uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), max(uvec3(uvec3(gl_WorkGroupID)), uvec3(uvec3(gl_WorkGroupID)))))), 1u))))), (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_FUZZED(uvec3(78458u, 74369u, 11396u)))).x), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), uvec3(uvec3(gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))), uvec3(1u, 1u, 1u) * ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))))), uvec3(uvec3(gl_WorkGroupID))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), uvec3(uvec3(uvec3(uvec3(gl_WorkGroupID)))))) >> uvec3(0u, 0u, 0u)))) + uvec3(0u, 0u, 0u)))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(78458u, min(78458u, _GLF_IDENTITY(78458u, (78458u) >> 0u))), 74369u, 11396u)))).x)) ^ (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) | (gl_WorkGroupID.x)), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), uvec3(uvec3(gl_WorkGroupID))).x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(78458u, _GLF_IDENTITY(74369u, (74369u) ^ 0u), 11396u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(89560u, (_GLF_IDENTITY(89560u, uint(uvec3(89560u, 1u, 0u)))) / 1u), 28300u, 80399u)) : uvec3(78458u, 74369u, 11396u)))))).x) | (gl_WorkGroupID.x))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), ~ (~ (uint(workgroup_size)))))) * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u))), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size : _GLF_FUZZED(180327u))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, _GLF_IDENTITY(-73952, (-73952) >> 0), -20577)), min(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), (true ? _GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)) : _GLF_FUZZED(uint(false))))) << 0u), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), 0u | (_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577))))) | 0u))) : _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), max(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, _GLF_IDENTITY(-73952, _GLF_IDENTITY((_GLF_IDENTITY(-73952, ~ (~ (-73952)))) >> 0, ~ (_GLF_IDENTITY(~ ((-73952) >> 0), clamp(~ ((-73952) >> 0), ~ ((-73952) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(~ ((-73952) >> 0), int(_GLF_IDENTITY(ivec4(~ ((-73952) >> 0), 0, 0, 0), clamp(ivec4(~ ((-73952) >> 0), 0, 0, 0), ivec4(~ ((-73952) >> 0), 0, 0, 0), _GLF_IDENTITY(ivec4(~ ((-73952) >> 0), 0, 0, 0), (ivec4(~ ((-73952) >> 0), 0, 0, 0)) | ivec4(0, 0, 0, 0)))))), (_GLF_IDENTITY(~ ((-73952) >> 0), int(ivec4(~ _GLF_IDENTITY(((-73952) >> 0), 0 ^ (((-73952) >> 0))), 0, 0, 0)))) >> 0)))))), -20577)), min(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), 0u | (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), (_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577))) | 0u))), clamp(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, _GLF_IDENTITY(-20577, (-20577) ^ 0))), _GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))), -73952, -20577)))))) / 1u)))) << 0u), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), (_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577))) | 0u)) | 0u))) : _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size)), 0u ^ (min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size)))))), subgroup_id * subgroup_size))), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, _GLF_IDENTITY(-73952, (-73952) >> 0), -20577)), min(_GLF_FUZZED(bitfieldExtract(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(-73952, ~ (~ (-73952))), (-73952) >> 0), -20577)), _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, _GLF_IDENTITY(-73952, (-73952) >> 0), -20577)), ~ (~ (_GLF_FUZZED(bitfieldExtract(workgroup_base, _GLF_IDENTITY(-73952, _GLF_IDENTITY((-73952), clamp((-73952), _GLF_IDENTITY((-73952), min((-73952), (-73952))), (-73952))) >> 0), -20577))))))), min(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), _GLF_IDENTITY((_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577))) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(61428u) : 0u)), (_GLF_IDENTITY((_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577))), ((_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)))) + 0u) << 0u) / 1u)), (_GLF_FUZZED(bitfieldExtract(workgroup_base, _GLF_IDENTITY(-73952, ~ (~ (-73952))), -20577))) | 0u))) : _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size)))) << 0u), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, _GLF_IDENTITY(-73952, _GLF_IDENTITY((-73952), 0 + ((-73952))) >> 0), -20577)), min(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), (_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, _GLF_IDENTITY(-20577, (false ? _GLF_FUZZED(-95188) : -20577))))) << 0u), (_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577))) | 0u))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, _GLF_IDENTITY(-73952, _GLF_IDENTITY((-73952), 0 + ((-73952))) >> 0), -20577)), min(_GLF_FUZZED(bitfieldExtract(workgroup_base, _GLF_IDENTITY(-73952, 1 * (_GLF_IDENTITY(-73952, (-73952) ^ 0))), -20577)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), (_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, _GLF_IDENTITY(-20577, (false ? _GLF_FUZZED(-95188) : -20577))))) << 0u), (_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577))) | 0u))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(virtual_gid) : (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, _GLF_IDENTITY(-73952, _GLF_IDENTITY((-73952), 0 + ((-73952))) >> 0), -20577)), min(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577)), (_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, _GLF_IDENTITY(-20577, (false ? _GLF_FUZZED(-95188) : -20577))))) << 0u), (_GLF_FUZZED(bitfieldExtract(workgroup_base, -73952, -20577))) | 0u))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) / 1u), subgroup_id * subgroup_size)))))) - 0u)))) + ((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(194050u, (194050u) | (_GLF_IDENTITY(194050u, 0u ^ (194050u)))) >> subgroup_id), clamp(_GLF_IDENTITY((194050u >> subgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY((194050u >> subgroup_id), min((194050u >> subgroup_id), (194050u >> subgroup_id))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(194050u >> subgroup_id, (_GLF_IDENTITY(194050u >> subgroup_id, ~ (~ (_GLF_IDENTITY(194050u >> subgroup_id, ~ (~ (194050u >> subgroup_id))))))) + (0u | 0u))), min((194050u >> subgroup_id), _GLF_IDENTITY((194050u >> subgroup_id), 0u | ((194050u >> subgroup_id))))))))) | ((194050u >> subgroup_id))), (194050u >> subgroup_id), (194050u >> subgroup_id)))) : (subgroup_local_id + 1))) % subgroup_size), (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(8u, _GLF_IDENTITY(min(8u, 8u), _GLF_IDENTITY(0u, max(0u, 0u)) ^ (min(8u, 8u))))), min(~ (_GLF_IDENTITY(8u, min(8u, _GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(subgroup_local_id)))))), ~ (_GLF_IDENTITY(8u, min(8u, 8u)))))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(58446u))) + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size)))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY((uint(5u)) ^ 0u, ((uint(5u)) ^ 0u) >> 0u)))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size), max(max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), ~ (~ (0u ^ (subgroup_size))))), subgroup_size), (true ? max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size) : _GLF_FUZZED(virtual_gid))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true)))))) ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(49484u, uint(uint(49484u))), uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u)))) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(max(false ? _GLF_FUZZED(_GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), false ? _GLF_FUZZED(_GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u)))) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))), (max(false ? _GLF_FUZZED(_GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u)))) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u))), clamp(_GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u))), _GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u))), _GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u)))))) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)))) | (max(false ? _GLF_FUZZED(_GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u)))) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), false ? _GLF_FUZZED(_GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u)))) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u)))) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), max(false ? _GLF_FUZZED(_GLF_IDENTITY(49484u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u)), max(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u))) >> 0u), uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u)))))) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), false ? _GLF_FUZZED(_GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u)))) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)))), _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), 1u, 1u, 1u)))) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), max(false ? _GLF_FUZZED(_GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u)))) | (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u)))) | (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u)))) | (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u)))) | (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u)))) | (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))))), 0u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u)))) | (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))))))), 1u, 1u, _GLF_IDENTITY(1u, (0u | 0u) ^ (1u)))))) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), subgroup_size)), false ? _GLF_FUZZED(_GLF_IDENTITY(49484u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u))), (_GLF_IDENTITY(49484u, uint(uvec4(49484u, 1u, 0u, 1u)))) >> 0u), 1u, 1u, 1u)))) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size), (max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)) / 1u))))))))) : _GLF_FUZZED(atomicAnd(workgroup_id, workgroup_base)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), (false ? _GLF_FUZZED(49484u) : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))))) : _GLF_FUZZED(atomicAnd(workgroup_id, workgroup_base))) | 0u)))) | 0u)) + ((subgroup_local_id + 1) % subgroup_size)) / 1u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4((! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), false)), true && (bool(bvec4((! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), false))))))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) / 1u), (buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), ((_GLF_IDENTITY(1, (1) >> 0))) >> 0) / 1, (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)) / 1, min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), ((_GLF_IDENTITY(1, (1) >> 0))) >> 0) / 1, 0 | ((_GLF_IDENTITY(1, (1) >> 0)) / 1)), (_GLF_IDENTITY(1, (1) >> 0)) / 1))) | 0)), _GLF_IDENTITY(max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / 1)), int(ivec4(max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / 1)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))) >> 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) < _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(false, bool(bvec2(false, true))), true, false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2), 0u | (uint(2)))), clamp(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) / 1)), 0u | (uint(2)))), ~ (_GLF_IDENTITY(uint(2), 0u | (uint(2)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, 0 ^ (2))), _GLF_IDENTITY(0u | (uint(2)), min(0u | (uint(2)), 0u | (uint(2)))))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (2), ~ (~ (0 ^ _GLF_IDENTITY((2), (_GLF_IDENTITY((2), ((2)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)))))), 0u | (uint(_GLF_IDENTITY(2, (2) << 0)))))) << 0u)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2), 0u | (uint(2)))), clamp(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) / 1)), 0u | (uint(2)))), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (false ? _GLF_FUZZED(-43838) : 2))), 0u | (uint(2)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), 0 ^ (2))), 0u | (uint(2)))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, 0 ^ (2))), 0u | (uint(_GLF_IDENTITY(2, (2) << 0)))))) << 0u))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true)), true && (! (true)))))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y)) ? _GLF_FUZZED(-9917.9719) : injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) || false)))), bool(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false)))))), false))))), ! (! ((! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! _GLF_IDENTITY((! ((! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) || false)))))))), ! (! ((! ((! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), bool(bvec4(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! ((! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(true, true && (true))))))), false, false, true))))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false)))))), false))))), ! (! ((! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! _GLF_IDENTITY((! ((! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) || false)))))))), ! (! ((! ((! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), bool(bvec4(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! ((! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(true, true && (true))))))), false, false, true))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false)))))), false))))), ! (! ((! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! _GLF_IDENTITY((! ((! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) || false)))))))), ! (! ((! ((! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), bool(bvec4(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! ((! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(true, true && (true))))))), false, false, true))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false || ((_GLF_IDENTITY(true, bool(bvec2(true, false)))))), false))))), ! (! ((! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! _GLF_IDENTITY((! ((! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(((_GLF_IDENTITY(true, bool(bvec2(true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) || false)))))))), ! (! ((! ((! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(bvec2(true, false)))), ((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), bool(bvec4(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! ((! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(true, true && (true))))))), false, false, true))))))) || false)) && true)) && true), false, true))))), _GLF_IDENTITY(false, ! (! (false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-195.148))), injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(-3.4)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + length(0.0)), max(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + length(0.0)), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + length(0.0))))), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(-3.4)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + length(0.0))), bvec2(true, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(-3.4)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + length(0.0))), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(-3.4)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + length(0.0))), bvec2(true, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(-3.4)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + length(0.0))), bvec2(true, true))))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0), (mat4x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), sin(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - length(vec2(0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(7.7), min(_GLF_FUZZED(7.7), _GLF_FUZZED(7.7)))))), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(22.71, 583.840)), (_GLF_FUZZED(vec2(22.71, 583.840))) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-8.9)), bool(false))))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-5.3, -877.398)))) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))) : _GLF_FUZZED(vec2(-4774.5043, 47.78)))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), min(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(22.71, 583.840)), (_GLF_FUZZED(vec2(22.71, 583.840))) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-8.9)), bool(false))))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-5.3, -877.398)))) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))) : _GLF_FUZZED(vec2(-4774.5043, 47.78)))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(22.71, 583.840)), (_GLF_FUZZED(vec2(22.71, 583.840))) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-8.9)), bool(false))))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-5.3, -877.398)))) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))) : _GLF_FUZZED(vec2(-4774.5043, 47.78)))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(22.71, 583.840)), (_GLF_FUZZED(vec2(22.71, 583.840))) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-8.9)), bool(false))))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-5.3, -877.398)))) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))) : _GLF_FUZZED(vec2(-4774.5043, 47.78)))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), min(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(22.71, 583.840)), (_GLF_FUZZED(vec2(22.71, 583.840))) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-8.9)), bool(false))))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-5.3, -877.398)))) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))) : _GLF_FUZZED(vec2(-4774.5043, 47.78)))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(22.71, 583.840)), (_GLF_FUZZED(vec2(22.71, 583.840))) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-8.9)), bool(false))))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-5.3, -877.398)))) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))) : _GLF_FUZZED(vec2(-4774.5043, 47.78)))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))))).x > injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), abs(vec2(0.0, 0.0)) + (injectionSwitch)).x : _GLF_FUZZED(-0.2))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y) && true)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true)) && true), false), true))))), true)))) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(true, true)))), true)))), true && (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(true, true)))), true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + abs(0.0)), true), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + abs(0.0)), true)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))))))))))), false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))), bool(bool(_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(-3.4)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + length(0.0))), bvec2(true, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(-3.4)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0)), max(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0)), (vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0))) + vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0)), (vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0))) + vec3(0.0, 0.0, 0.0))))), clamp(float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0)), max(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0)), (vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0))) + vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0)), (vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0))) + vec3(0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0)), max(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0)), (vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0))) + vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0)), (vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0))) + vec3(0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0)), max(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0)), (vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0))) + vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0)), (vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (ivec4(0, 1, 0, 1)) / ivec4(1, 1, 1, 1))))], 0.0, sqrt(1.0))) + vec3(0.0, 0.0, 0.0)))))))), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + length(0.0))), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(-3.4)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + length(0.0))), bvec2(true, true))))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY((max(injectionSwitch.y, injectionSwitch.y)), min((max(injectionSwitch.y, injectionSwitch.y)), (max(injectionSwitch.y, injectionSwitch.y)))) - length(vec2(0.0, 0.0))) : _GLF_FUZZED(7.7)))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(22.71, 583.840), vec2(1.0, 1.0) * (vec2(22.71, 583.840)))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-8.9)), bool(false))))), (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), max(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(-7672.2749)), vec2((_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))[0], (_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))[1]), bvec2(true, true)))))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), vec2(mat4x2(vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0)))), abs(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)) * mat2(1.0))))) / 1.0), 0.0)) + (injectionSwitch)).x : _GLF_FUZZED(-0.2))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, (false ? _GLF_FUZZED(distance(vec3(1.2, 9620.2171, -8951.6990), vec3(-2.8, 0.5, 2352.6388))) : (injectionSwitch.y) + 0.0))), (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (injectionSwitch.x > injectionSwitch.y) && true)), true, false, true))) && true), false), true))))), true)))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(true, true)))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), clamp(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))))).x > injectionSwitch.y, true), true))))))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
