#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (74767 & 0)); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec4(141.468, 931.732, 84.61, 4.3).rr) : injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(964.460, 5.5)))).y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0))), true && (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), float(mat2(float(vec2(injectionSwitch.y, 0.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), bool(bvec2(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), true && (bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), true))))) ? _GLF_FUZZED(vec4(3.7, -8.7, -6762.6433, 31.12)[2]) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), bool(bvec2(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), true && (bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), true))))) ? _GLF_FUZZED(vec4(3.7, -8.7, -6762.6433, 31.12)[2]) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), bool(bvec2(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), true && (bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), true))))) ? _GLF_FUZZED(vec4(3.7, -8.7, -6762.6433, 31.12)[2]) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), bool(bvec2(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), true && (bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), true))))) ? _GLF_FUZZED(vec4(3.7, -8.7, -6762.6433, 31.12)[2]) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), bool(bvec2(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), true && (bool(bool(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), true))))) ? _GLF_FUZZED(vec4(3.7, -8.7, -6762.6433, 31.12)[2]) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(3.7, -8.7, -6762.6433, 31.12)[2]) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(3.7, -8.7, -6762.6433, 31.12)[2]), (true ? _GLF_FUZZED(vec4(_GLF_IDENTITY(3.7, mix(float(3.7), float(_GLF_FUZZED(9.4)), bool(false))), -8.7, -6762.6433, 31.12)[2]) : _GLF_FUZZED(2634.3734))) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(false ? _GLF_FUZZED(vec4(3.7, -8.7, -6762.6433, 31.12)[2]) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), clamp(false ? _GLF_FUZZED(vec4(3.7, -8.7, -6762.6433, 31.12)[2]) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false ? _GLF_FUZZED(vec4(3.7, -8.7, -6762.6433, 31.12)[2]) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false ? _GLF_FUZZED(vec4(3.7, -8.7, -6762.6433, 31.12)[2]) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(3.7, -8.7, -6762.6433, 31.12)[2]) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(3.7, -8.7, _GLF_IDENTITY(-6762.6433, (false ? _GLF_FUZZED(sign(-2.2)) : -6762.6433)), 31.12)[2]) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), log(1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, abs(1.0)), max(_GLF_IDENTITY(vec2(0.0, abs(1.0)), (true ? vec2(0.0, abs(1.0)) : _GLF_FUZZED(vec2(1.9, 9.6)))), _GLF_IDENTITY(vec2(0.0, abs(1.0)), (true ? vec2(0.0, abs(1.0)) : _GLF_FUZZED(vec2(311.235, 568.012)))))), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(sqrt(vec2(1.0, 1.0))))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec4(3.7, -8.7, -6762.6433, 31.12)[2], (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))) ? _GLF_IDENTITY(vec4(3.7, -8.7, -6762.6433, 31.12)[2], 1.0 * (vec4(3.7, -8.7, -6762.6433, 31.12)[2])) : _GLF_FUZZED(84.35)))), min(_GLF_FUZZED(_GLF_IDENTITY(vec4(3.7, -8.7, -6762.6433, 31.12)[2], (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))) ? _GLF_IDENTITY(vec4(3.7, -8.7, -6762.6433, 31.12)[2], 1.0 * (vec4(3.7, -8.7, -6762.6433, 31.12)[2])) : _GLF_FUZZED(84.35)))), _GLF_FUZZED(_GLF_IDENTITY(vec4(3.7, -8.7, -6762.6433, 31.12)[2], (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))) ? _GLF_IDENTITY(vec4(3.7, -8.7, -6762.6433, 31.12)[2], 1.0 * (vec4(3.7, -8.7, -6762.6433, 31.12)[2])) : _GLF_FUZZED(84.35)))))) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) + 0.0))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sqrt(0.0), 0.0, 1.0)), 0.0, 0.0, cos(0.0), 1.0, 1.0, abs(1.0), 1.0))), 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)))) - 0.0)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)), _GLF_IDENTITY(float(mat4(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, length(0.0), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, length(0.0), 1.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(mix(-772.807, -961.388, 29.35)) : float(mat4(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, length(0.0), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, length(0.0), 1.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0))))))) - 0.0)), (true ? (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(_GLF_IDENTITY(1.0, 0.0 + (1.0))))), 0.0, 0.0)))) - 0.0)) : _GLF_FUZZED(349.831))), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat4(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(uint(-9.4))), _GLF_FUZZED(8.7)), bvec2(false, false))).x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)))) - 0.0)), (true ? (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)))) - 0.0)) : _GLF_FUZZED(349.831))), 1.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(float(float(0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)))) - 0.0)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)))) - 0.0)), (true ? (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)))) - 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (dot(vec2(1.0, 1.0), vec2(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) + 0.0)) + ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))) - 0.0)))) : _GLF_FUZZED(349.831))), 1.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat4(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(7.6) : length(normalize(1.0))))), 0.0, 0.0)))) - 0.0)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)))) - 0.0)) : _GLF_FUZZED(349.831))), 1.0, 0.0, 1.0, 0.0, 1.0)))))))), (true ? float(float(0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)))) - 0.0)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)))) - 0.0)), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))))).x, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(683.005)), bool(false)))) * 1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)))) - 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(349.831, (true ? _GLF_IDENTITY(349.831, float(_GLF_IDENTITY(mat3x4(349.831, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0), mat3x4(mat3x4(mat3x4(349.831, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(0.0)))), float(vec2(true ? (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))))).x, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(683.005)), bool(false)))) * 1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)))) - 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(349.831, (true ? _GLF_IDENTITY(349.831, float(_GLF_IDENTITY(mat3x4(349.831, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0), mat3x4(mat3x4(mat3x4(349.831, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(0.0)))), 1.0))))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(intBitsToFloat(_injected_loop_counter)))), 0.0, 1.0), mat2x3(mat4(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))) - 0.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))) - 0.0)), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))) - 0.0)), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))) - 0.0))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))) - 0.0)))), 0.0, 1.0, 1.0, 1.0, log(1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tanh(-965.055)) : float(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))) - 0.0)), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))) - 0.0)), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))) - 0.0))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))) - 0.0)))), 0.0, 1.0, 1.0, 1.0, log(1.0)))))), (true ? (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), 0.0, 0.0)))) - 0.0)) : _GLF_FUZZED(349.831))), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-946.865)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0)), 1.0, 0.0, 1.0)))))))) : _GLF_FUZZED(-783.030))))) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), mix(float(1.0 * (injectionSwitch.y)), float(_GLF_FUZZED(421.094)), bool(false)))))) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))), true), false))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))], mix(float(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))], (true ? injectionSwitch[_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, 0))), int(int((_GLF_IDENTITY(0, max(0, 0))))))))] : _GLF_FUZZED(226.401)))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, 4.0).x, 0.0 + (vec2(0.5, 4.0).x)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch[1])).x > injectionSwitch.y), true), false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), false)))))))) || false), true))))))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ 0), max(_GLF_IDENTITY((1 ^ 0), int(ivec2(_GLF_IDENTITY((1 ^ 0), ~ (~ ((1 ^ 0)))), 1))), (1 ^ 0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) || false), false, true, true))); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) + 0))), int(1)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))))) != (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) + 0))), int(1)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(1, 0)), 0 | (_GLF_IDENTITY(int(ivec2(1, 0)), int(ivec4(int(ivec2(1, 0)), 1, (1 ^ 0), 1))))), _GLF_IDENTITY(_GLF_IDENTITY((int(ivec2(1, 0))) + 0, 0 ^ ((int(ivec2(1, 0))) + 0)), (_GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? 1 : _GLF_FUZZED(_injected_loop_counter))), 0))), min((int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? 1 : _GLF_FUZZED(_injected_loop_counter))), 0))), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? 1 : _GLF_FUZZED(_injected_loop_counter))), 0))), ((int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? 1 : _GLF_FUZZED(_injected_loop_counter))), 0)))) | ((int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? 1 : _GLF_FUZZED(_injected_loop_counter))), 0))))))) + 0) | ((int(ivec2(1, 0))) + 0))))), int(1))))))) || false); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
    {
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), (0 >> _GLF_IDENTITY(int(0), int(0))) - 0))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(6), int(6))) & 11295); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false), ! (! (! (false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, false))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-8.0), (_GLF_FUZZED(-8.0)) + 0.0)))))), _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.0))))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.0))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), min((1 << _GLF_IDENTITY(int(1), int(1))), (1 << _GLF_IDENTITY(int(1), int(1)))))) | ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, int(ivec2(1, 0)))), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(atomicCompSwap(subgroup_local_id, bitfieldInsert(subgroup_local_id, 111342u, 98888, 28756), 130555u)) : gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), (workgroup_size) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)))) * 1u) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.9)), _GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), injectionSwitch.y))))); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))))))), uint(uint(workgroup_base))), workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u))), uint(2u))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(uint(uint(workgroup_base)), ~ (~ (uint(uint(workgroup_base)))))), workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) ^ 0u))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))) * 1u), _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))))))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : ~ (subgroup_size)))), clamp((~ (subgroup_size)), (~ (subgroup_size)), (~ (subgroup_size)))))))))) : _GLF_FUZZED(workgroup_base)))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), 0u ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(141301u) : subgroup_size)))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))))) | (_GLF_IDENTITY((~ (subgroup_size)), clamp((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), (~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (~ (subgroup_size)))))))))) : _GLF_FUZZED(workgroup_base))))) >> 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), subgroup_local_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), subgroup_local_id)))))) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), (false ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), max((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size)))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))) : _GLF_FUZZED(subgroup_local_id)))), ((_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(virtual_gid))))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), 0u | (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) : _GLF_FUZZED(workgroup_base), max(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), max((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size)))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))) : _GLF_FUZZED(subgroup_local_id)))), ((_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(virtual_gid))))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), 0u | (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) : _GLF_FUZZED(workgroup_base), ~ (~ (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), max((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size)))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))) : _GLF_FUZZED(subgroup_local_id)))), ((_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(virtual_gid))))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), 0u | (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), max((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size)))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))) : _GLF_FUZZED(subgroup_local_id)))), ((_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(virtual_gid))))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), 0u | (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) : _GLF_FUZZED(workgroup_base)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), max((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size)))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))) : _GLF_FUZZED(subgroup_local_id)))), ((_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(virtual_gid))))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), 0u | (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) : _GLF_FUZZED(workgroup_base), max(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), max((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size)))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))) : _GLF_FUZZED(subgroup_local_id)))), ((_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(virtual_gid))))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), 0u | (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) : _GLF_FUZZED(workgroup_base), ~ (~ (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), max((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size)))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))) : _GLF_FUZZED(subgroup_local_id)))), ((_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(virtual_gid))))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), 0u | (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), max((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size)))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))) : _GLF_FUZZED(subgroup_local_id)))), ((_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(virtual_gid))))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), 0u | (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) : _GLF_FUZZED(workgroup_base)))) : _GLF_FUZZED(workgroup_id)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), true, false)))) ? _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u)))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u)))) + uvec4(0u, 0u, 0u, 0u)))))), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_size)))))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)) | (~ (subgroup_size)))), ~ (~ (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) + 0u)), (0u & 156190u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) + 0u))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), 0u | (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), _GLF_IDENTITY((max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u | ((max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))) : _GLF_FUZZED(workgroup_base)))), max((_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), true, false)))) ? _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u)))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u)))) + uvec4(0u, 0u, 0u, 0u)))))), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_size)))))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)) | (~ (subgroup_size)))), ~ (~ (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) + 0u)), (0u & 156190u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) + 0u))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), 0u | (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), _GLF_IDENTITY((max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u | ((max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), true, false)))) ? _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u)))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u)))) + uvec4(0u, 0u, 0u, 0u)))))), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_size)))))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)) | (~ (subgroup_size)))), ~ (~ (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) + 0u)), (0u & 156190u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) + 0u))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), 0u | (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), _GLF_IDENTITY((max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u | ((max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))) : _GLF_FUZZED(workgroup_base)))))), min(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (0u & 53615u) ^ (~ (subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), true, false))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), true, true), bvec3(bvec3(bvec3(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), true, true)))))), true, false)))) || false)) ? _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), max(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u))))), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_size)))))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (0u & 156190u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) + 0u))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), 0u | (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), max(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u))))), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_size)))))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (0u & 156190u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) + 0u))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), 0u | (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), max(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), (uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u)))))), max((_GLF_IDENTITY(~ (subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(133343u) : ~ (subgroup_size)))), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : (~ (subgroup_size)))))))))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)))))), (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u))))))) * 1u), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (0u & 156190u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))) + 0u))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), 0u | (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (subgroup_size)))), (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) + 0u) : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), true, false)))) ? _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((_GLF_IDENTITY(~ (subgroup_size), (0u | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ (~ (subgroup_size)))))), 0u, 1u, 0u), max(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u))))), max((~ (subgroup_size)), _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_size))) - 0u))))))))), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), ~ (~ (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (0u & 156190u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u | (max(subgroup_size, subgroup_size))))) + 0u))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), 0u | (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))) : _GLF_FUZZED(workgroup_base)))), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), true, false)))) ? _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), max(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u))))), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_size))))))))), (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), max(uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u), uvec4(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), 0u, 1u, 0u))))), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_size)))))))))) >> 0u)), min(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ (subgroup_size)), _GLF_IDENTITY(((~ (subgroup_size))), (false ? _GLF_FUZZED(subgroup_size) : ((~ (subgroup_size))))) + 0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (0u & 156190u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) + 0u))), _GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), (false ? _GLF_FUZZED(134976u) : (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))) : _GLF_FUZZED(workgroup_base))))))))))) + ((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), uint(uvec2(subgroup_local_id, 0u))), subgroup_local_id)) + 1) % subgroup_size)));
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))) || false)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, true))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, 1.0, 1.0))) < injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4491.4832))) < injectionSwitch.y)))))))))))))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)), (false ? _GLF_FUZZED(-6478.5466) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)))) < injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y))))))), bool(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y))))))), false, true)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y))))), false || (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(1.6, 954.496)) : injectionSwitch)).y))) || false))))))))))))), true, true, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y))))), false || (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))).x, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y))) || false))))))))))), true, true, false))) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(5.1) : injectionSwitch.x), clamp((false ? _GLF_FUZZED(5.1) : injectionSwitch.x), (false ? _GLF_FUZZED(5.1) : injectionSwitch.x), (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)))) < injectionSwitch.y)))), bool(bvec2((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(5.1) : injectionSwitch.x), clamp((false ? _GLF_FUZZED(5.1) : injectionSwitch.x), (false ? _GLF_FUZZED(5.1) : injectionSwitch.x), (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)))) < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y))))))), false || ((! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.1) : injectionSwitch.x)) < injectionSwitch.y))))))))))), true, true, false))))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       buf[virtual_gid] = _GLF_IDENTITY(1, min(1, 1));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7342.4624)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-861.566))))) > injectionSwitch.y))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
        return;
      }
     return;
    }
  }
 else
  {
  }
 do
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, int(ivec3(4, 1, 0))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    break;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-345.686)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-345.686)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-345.686)), bool(false))), mix(float(_GLF_FUZZED(310.703)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-345.686)), bool(false)))), bool(true))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-345.686)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 0.0))))))))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false))), true, true)))))) || false))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), bool(bvec4(bool(bool((! (false)))), false, false, true)))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = ((0 & 69435) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))); _injected_loop_counter ++)
                  {
                   return;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                continue;
               for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 do
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
