#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (false)) || (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, ! (! (false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)) || (false))), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)) || (false))))))), bool(bvec3(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)) || (false))), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)) || (false))))))), false, false)))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(136770u, 1u * (136770u)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5466.8145)), bvec2(true, false))).x > injectionSwitch.y)))) || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))))), bool(bool(bool(! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-3074.0464, -7617.5554, 19.97, 1.4)) : vec4(injectionSwitch, 0.0, 1.0))))).y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), abs(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), abs(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).y)))), false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))), false)))) && true), bool(bvec4(! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))) && true)), bool(bool(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))) && true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), (! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false)), (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))) && true)), bool(bool(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))) && true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), (! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false)), (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false)))))) && true), true, true, true))))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))));
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(6), int(6)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(23385) : _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(96719) : _injected_loop_counter --)))))
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.9) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(7.9), (_GLF_IDENTITY(_GLF_FUZZED(7.9), max(_GLF_FUZZED(7.9), _GLF_FUZZED(7.9)))) - 0.0) : injectionSwitch.x)) > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))).y), true && ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(_GLF_IDENTITY(0.0, float(mat2(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0))))))) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5340.1912), _GLF_FUZZED(-940.376)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5340.1912), _GLF_FUZZED(-940.376)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, ! (! (false)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, ! (! (false)))))), true), true))))))), vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5340.1912), _GLF_FUZZED(-940.376)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(-26.47, -5.5, -577.388, -24.50, 8923.8129, 686.296, -3925.9107, 731.968)[2]) : injectionSwitch)))[0], float(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(-26.47, -5.5, -577.388, -24.50, 8923.8129, 686.296, -3925.9107, 731.968)[2]) : injectionSwitch)))[0], 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0)), (mat3x4((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(-26.47, -5.5, -577.388, -24.50, 8923.8129, 686.296, -3925.9107, 731.968)[2]) : injectionSwitch)))[0], 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))))), vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5340.1912), _GLF_FUZZED(-940.376)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(-26.47, -5.5, -577.388, -24.50, 8923.8129, 686.296, -3925.9107, 731.968)[2]) : injectionSwitch)))[0], float(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(-26.47, -5.5, -577.388, -24.50, 8923.8129, 686.296, -3925.9107, 731.968)[2]) : injectionSwitch)))[0], 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0)), (mat3x4((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(-26.47, -5.5, -577.388, -24.50, 8923.8129, 686.296, -3925.9107, 731.968)[2]) : injectionSwitch)))[0], 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))))), vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) : _GLF_FUZZED(vec2(-3.0, -9531.5065)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5340.1912), _GLF_FUZZED(-940.376)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) || false)))))), vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))))))).y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), false || (true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0))))))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), false || _GLF_IDENTITY((true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-114.794, 6.5)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0))))))), _GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), bool(bvec4((true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-114.794, 6.5)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0))))))), _GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), true, false, true)))))))))), (! (_GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true && _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1506.2323) : injectionSwitch.x)) > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && _GLF_IDENTITY((! (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((! (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((! (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3((! (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((! (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))))))))), true && (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) && true)))))))), bool(_GLF_IDENTITY(bvec3(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), bvec3(bvec4(bvec3(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, (true) || false), true), true))))))))))))) || false))))))) || false))
    {
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (false ? _GLF_FUZZED(float(false)) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_FUZZED(-55999), (_GLF_IDENTITY(_GLF_FUZZED(-55999), int(ivec2(_GLF_FUZZED(-55999), 0)))) << 0) : int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), clamp((1 << _GLF_IDENTITY(int(2), int(2))), (1 << _GLF_IDENTITY(int(2), int(2))), (1 << _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) ^ 0)))), ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) ^ 0))))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) ^ 0)))), clamp((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) ^ 0)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) ^ 0)))), int(ivec4((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) ^ 0)))), 1, 0, 1))), (1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) ^ 0)))))))) >> _GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 0, (true ? 0 ^ 0 : _GLF_FUZZED(54318))), (0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0))))))) ^ 0)) | (0 ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (true ? _GLF_IDENTITY(0.0, (0.0) * 1.0) : _GLF_FUZZED(-0.6))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0)) : _GLF_FUZZED(mod(283.345, -5.4)))), 1.0, log(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), mix(float(float(vec3(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-4.2)), bool(false)))))), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.7) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((2.8))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))), 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2824.7123))), 0.0, 1.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), 1.0, 0.0, 1.0, 1.0)))), min(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((2.8))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))), 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2824.7123))), 0.0, 1.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), 1.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((2.8))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))), 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2824.7123))), 0.0, 1.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), 1.0, 0.0, 1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0)), clamp(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((3552.7681 - 41.49))), bool(false))), 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) * abs(1.0)), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(1.0 * (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0)), (float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0))) / 1.0)), 1.0, 1.0))), min(_GLF_IDENTITY(1.0 * (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0)), (float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0))) / 1.0)), 1.0, 1.0))), mix(float(_GLF_IDENTITY(1.0 * (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0)), (float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0))) / 1.0)), 1.0, 1.0))), (1.0 * (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0)), (float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0))) / 1.0)), 1.0, 1.0)))) / 1.0)), float(_GLF_FUZZED(-4.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0 * (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0)), (float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0))) / 1.0)), 1.0, 1.0)))))), float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))), 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0 * (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), float(mat3x2(log(1.0), 1.0, 0.0, 1.0, 0.0, sin(0.0)))), 1.0, 0.0, 1.0, 1.0)))), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))), ! (! ((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0), (true ? mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED((mat3(6.2, -80.81, 2.0, 6.6, -588.079, 250.872, -2.0, 3.6, 8003.6176) - mat3(4.1, -2.5, 8.7, 828.942, -3232.7220, -2.8, -7618.2782, -1.2, 96.61)))))), clamp(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0)), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2x3(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0), transpose(transpose(mat2x3(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0)))))))), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0 * (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), float(mat3x2(log(1.0), 1.0, 0.0, 1.0, 0.0, sin(0.0)))), 1.0, 0.0, 1.0, 1.0)))), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))), ! (! ((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0), (true ? mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED((mat3(6.2, -80.81, 2.0, 6.6, -588.079, 250.872, -2.0, 3.6, 8003.6176) - mat3(4.1, -2.5, 8.7, 828.942, -3232.7220, -2.8, -7618.2782, -1.2, 96.61)))))), clamp(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0)), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2x3(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0), transpose(transpose(mat2x3(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0)))))))), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))))))) && true), bool(bvec3(! ((_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0 * (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), float(mat3x2(log(1.0), 1.0, 0.0, 1.0, 0.0, sin(0.0)))), 1.0, 0.0, 1.0, 1.0)))), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))), ! (! ((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0), (true ? mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED((mat3(6.2, -80.81, 2.0, 6.6, -588.079, 250.872, -2.0, 3.6, 8003.6176) - mat3(4.1, -2.5, 8.7, 828.942, -3232.7220, -2.8, -7618.2782, -1.2, 96.61)))))), clamp(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0)), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2x3(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0), transpose(transpose(mat2x3(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0)))))))), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))))))) && true), true, true)))))) || false)))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), clamp(min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), (min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)) / 1.0)))) : _GLF_FUZZED(mod(283.345, -5.4)))), 1.0, log(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(966.745, -77.95, 648.160, -173.806, 6.7, -5.7, -7.0, 7.9, -5.6)) : mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), clamp(min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), (min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)) / 1.0)))) : _GLF_FUZZED(mod(283.345, -5.4)))), 1.0, log(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), 1.0, 0.0, 1.0, 1.0)))), float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))))), 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))).y)))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.7) : injectionSwitch.x)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((2.8))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))), 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), 1.0)))), clamp(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2824.7123))), 0.0, 1.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), 1.0, 0.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), float(float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), 0.0, 1.0, 1.0)), clamp(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((3552.7681 - 41.49))), bool(false))), 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), float(mat3x4(log(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), max(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), float(mat3x4(log(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), float(mat3x4(log(1.0), 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0 * (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0)), (float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0))) / 1.0)), 1.0, 1.0)))), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))), (_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (_GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * 1.0)) + tan(0.0))), 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0 * (float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), float(mat3x2(log(1.0), 1.0, 0.0, 1.0, 0.0, sin(0.0)))), 1.0, 0.0, 1.0, 1.0)))), float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))), ! (! ((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0), (true ? mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED((mat3(6.2, -80.81, 2.0, 6.6, -588.079, 250.872, -2.0, 3.6, 8003.6176) - mat3(4.1, -2.5, 8.7, 828.942, -3232.7220, -2.8, -7618.2782, -1.2, 96.61)))))), clamp(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3234.9989))))), 1.0)), 1.0))) - 0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0))), 0.0, 1.0), _GLF_IDENTITY(vec4(mat3(vec4(1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0))), 0.0, 1.0), sqrt(1.0), tan(0.0), 1.0, 1.0, 1.0)), (vec4(mat3(vec4(1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0))), 0.0, 1.0), sqrt(1.0), tan(0.0), 1.0, 1.0, 1.0))) * mat4(1.0))))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, determinant(mat2(0.0, 1.0, length(0.0), 0.0)), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2x3(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0), transpose(transpose(mat2x3(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0)))))))), float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))))))) && true) || false))))))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(_GLF_IDENTITY(2, ~ (~ (2)))))), int(2))), (_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (2) | (2)), 2))), clamp(int(2), int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))), int(2)))) - ((0 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(8), int(8))))) << 0), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(42549) : 1)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-57.46)), float(injectionSwitch[1]), bool(true))))).x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, false)), true, false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, false)), true, _GLF_IDENTITY(false, ! (! (false)))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, false)), true, false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, false)), true, _GLF_IDENTITY(false, ! (! (false)))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, false)), true, false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, false, false)), true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bool(! ((false)))), (bool(bool(! ((false))))) && true))))))))))))) && true))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1)) << 0), ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++) / 1, 1 * ((_injected_loop_counter ++) / 1)))) << 0)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (true)), (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (true)), (injectionSwitch.x < injectionSwitch.y))))))
      {
       barrier();
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ (0 << _GLF_IDENTITY(int(5), int(5)))) > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y), false, true, false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))), true, false))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true, true)))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x, max(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   do
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
   for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, true, false, false)))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec2(64224, -81580).t) : _GLF_IDENTITY(0, max(0, 0)))) ^ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_injected_loop_counter ++))) >> 0))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)));
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY((int(1)), max((int(1)), (int(1))))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-37668))))) << _GLF_IDENTITY(int(5), int(5))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY((int(1)), max((int(1)), (int(1))))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-37668))))) << _GLF_IDENTITY(int(5), int(5))), ((((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY((_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), 0 ^ (int(1))), int(1)))), max((int(1)), (int(1))))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-37668))))) << _GLF_IDENTITY(int(5), int(5)))) + 0) : _GLF_FUZZED(_injected_loop_counter))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, false))))))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), max(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)))), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, exp(0.0)), (mat4(injectionSwitch, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), max(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)))), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, exp(0.0))) * mat4(1.0)), (mat4(injectionSwitch, sqrt(1.0), 1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (length(vec4(0.0, 0.0, 0.0, 0.0))) + 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), float(mat4x3(tan(0.0), 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))) - vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec3(0.0, 1.0, 0.0))), 0.0))), tan(0.0))), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))), 0.0))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-6314.2911))), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) * determinant(mat2(1.0, 0.0, 0.0, 1.0)))), bool(true))), 0.0, length(vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, exp(0.0))) * mat4(1.0)))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) / 1.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, exp(0.0)), (_GLF_IDENTITY(mat4(injectionSwitch, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, tan(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(-3677.1127) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9692.0954)), float(1.0), bool(true))), float(mat3(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, exp(0.0)), (_GLF_IDENTITY(mat4(injectionSwitch, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, tan(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9692.0954), min(_GLF_IDENTITY(_GLF_FUZZED(-9692.0954), (_GLF_FUZZED(-9692.0954)) / round(length(normalize(1.0)))), _GLF_FUZZED(-9692.0954)))), float(1.0), bool(true))), float(mat3(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(vec4(-3.8, -6.2, 2067.1429, -1.0)).y)), float(0.0), bool(_GLF_IDENTITY(true, (true) && true)))), min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (mat4(injectionSwitch, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(454.198)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.9)), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), tan(0.0) + _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (false ? _GLF_FUZZED(-3.5) : _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0 + ((_GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat2x3(float(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 1.0, cos(0.0), 0.0)))), 1.0), vec2(tan(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-9692.0954)), (float(_GLF_FUZZED(-9692.0954))) - 0.0), float(1.0), bool(true))), float(mat3(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) + log(1.0)))), 0.0, exp(0.0))) - mat4(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3706.5962) : 0.0)) : _GLF_FUZZED(-6.5)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) * mat4(1.0)))).y : _GLF_FUZZED(-7.9)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_base)))), uint(_GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (false ? _GLF_FUZZED(uvec4(162177u, 40913u, 34282u, 171347u).a) : (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) ^ 0u) | (0u))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (true ? (~ (_GLF_IDENTITY(0u, 0u | (0u)))) : _GLF_FUZZED(num_workgroup))))), 0u ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (true ? (~ (_GLF_IDENTITY(0u, 0u | (0u)))) : _GLF_FUZZED(num_workgroup))))))) * 1u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (false ? _GLF_FUZZED(uvec4(162177u, 40913u, 34282u, 171347u).a) : (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) ^ 0u) | (0u))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (true ? (~ (_GLF_IDENTITY(0u, 0u | (0u)))) : _GLF_FUZZED(num_workgroup))))), 0u ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (true ? (~ (_GLF_IDENTITY(0u, 0u | (0u)))) : _GLF_FUZZED(num_workgroup))))))) * 1u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (false ? _GLF_FUZZED(uvec4(162177u, 40913u, 34282u, 171347u).a) : (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) ^ 0u) | (0u))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (true ? (~ (_GLF_IDENTITY(0u, 0u | (0u)))) : _GLF_FUZZED(num_workgroup))))), 0u ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (true ? (~ (_GLF_IDENTITY(0u, 0u | (0u)))) : _GLF_FUZZED(num_workgroup))))))) * 1u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (false ? _GLF_FUZZED(uvec4(162177u, 40913u, 34282u, 171347u).a) : (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) ^ 0u) | (0u))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (true ? (~ (_GLF_IDENTITY(0u, 0u | (0u)))) : _GLF_FUZZED(num_workgroup))))), 0u ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (true ? (~ (_GLF_IDENTITY(0u, 0u | (0u)))) : _GLF_FUZZED(num_workgroup))))))) * 1u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (false ? _GLF_FUZZED(uvec4(162177u, 40913u, 34282u, 171347u).a) : (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) ^ 0u) | (0u))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (true ? (~ (_GLF_IDENTITY(0u, 0u | (0u)))) : _GLF_FUZZED(num_workgroup))))), 0u ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, 0u | (0u)))), (true ? (~ (_GLF_IDENTITY(0u, 0u | (0u)))) : _GLF_FUZZED(num_workgroup))))))) * 1u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), 0u, 0u)))))))) + 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size, (187973u & 0u) ^ (workgroup_base + subgroup_id * subgroup_size)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size, (187973u & 0u) ^ (workgroup_base + subgroup_id * subgroup_size)))))) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))))))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch)))).y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) * (1 | 1))) % subgroup_size, clamp((subgroup_local_id + _GLF_IDENTITY(1, (1) * (1 | 1))) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) * (1 | 1))) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) * (1 | 1))) % subgroup_size)), _GLF_IDENTITY(0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)))), 0u ^ (0u | (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), subgroup_size)), ~ (~ ((subgroup_local_id + 1) % subgroup_size))))))), max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (~ ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))))));
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))) && true)), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.8), _GLF_FUZZED(-4216.6214)), bvec2(false, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))) || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-60396, -48661))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0, ~ (~ ((int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0)))), _GLF_IDENTITY(! (! (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(bool(bvec4(! (! (_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), true, false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(! (! (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), true, false, true)), (bool(bvec4(! (! (_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0))), true, false, true))) || false), false)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(true && (false)), true && (bool(true && (false))))))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false, bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))))) && true)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)), true, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)), true, false)))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u), clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)))], _GLF_IDENTITY(uint(2), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ (uint(2))), 4, 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), 1.0, 1.0), mat3x2(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.0)), float(0.0), bool(true))), 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.6, -524.640)) : injectionSwitch)).y), 1.0, 1.0))))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8518.6416) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))) || false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), true && ((false)))))) || false) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
