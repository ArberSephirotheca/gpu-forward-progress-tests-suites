#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), 0 | (int(2)))))))))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(19.80), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(_GLF_FUZZED(-2.4), 0.0 + (_GLF_FUZZED(-2.4)))), bvec2(true, _GLF_IDENTITY(false, true && (false))))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.3), (_GLF_FUZZED(-5.3)) * 1.0), _GLF_FUZZED(-91.89)), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], (false ? _GLF_FUZZED(-170.684) : ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0))[1]))), bvec2(true, true)))).y))))
            return;
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.0))) > injectionSwitch.y, false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, abs(1.0)))))))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.9)), bool(false)))))); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true, false)))) || false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), bool(bvec3(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)))))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), true, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-694.991)), float(injectionSwitch.y), bool(true)))))));
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 ^ 0) ^ 0)); _injected_loop_counter --)
              {
               return;
              }
            }
           else
            {
            }
          }
         return;
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), max(int(8), int(8)))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), min(int(0), int(0))), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(! (! (_GLF_WRAPPED_IF_FALSE(false))), false, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(! (! (_GLF_WRAPPED_IF_FALSE(false))), false, true, false))), true), false, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(! (! (_GLF_WRAPPED_IF_FALSE(false))), false, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(! (! (_GLF_WRAPPED_IF_FALSE(false))), false, true, false))), true), false, false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(! (! (_GLF_WRAPPED_IF_FALSE(false))), false, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(! (! (_GLF_WRAPPED_IF_FALSE(false))), false, true, false))), true), false, false)))), true, false, true)))) || false))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-684.295) : injectionSwitch.x)) < injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false, false, true))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-542.750)), _GLF_FUZZED(799.157)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), true, false)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y)))), true, false))))) || false)))))
                  continue;
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))) || false), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))) || false)))))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ (1 ^ 0))); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), bvec2(true, false))))).x > injectionSwitch.y))))
                            return;
                          }
                        }
                      }
                     else
                      {
                      }
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         return;
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         break;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9150.5309), _GLF_FUZZED(-5.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
                    }
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false)))))))) || false))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false)))))))) || false))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false)))))))) || false))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false)))) && true))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - (1 ^ 1)), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter)) != _GLF_IDENTITY((0 | 0), (false ? _GLF_FUZZED(-13878) : (0 | 0)))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        return;
                       return;
                      }
                    }
                  }
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), true, true)))))))), true && (bool(_GLF_IDENTITY(bvec3(! (false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), true, true)))))))))))))))))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-28.72) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
  }
 uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))), true, true, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), bool(bool(false)))))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY((1 & 1), 0 | ((1 & 1))) & 1) ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        continue;
      }
    }
  }
 else
  {
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 97650u) | (_GLF_FUZZED(subgroup_local_id)))) | (_GLF_FUZZED(subgroup_local_id)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 97650u) | (_GLF_FUZZED(subgroup_local_id)))) | (_GLF_FUZZED(subgroup_local_id))), (~ ((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 97650u) | (_GLF_FUZZED(subgroup_local_id)))) | (_GLF_FUZZED(subgroup_local_id)))) << 0u)))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id)))) | 0u), (subgroup_local_id))) / 1u), ~ (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))) + 1) % subgroup_size) : _GLF_FUZZED(subgroup_local_id)))));
 buf[virtual_gid] = 1;
 do
  {
   if(_GLF_DEAD(false))
    continue;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))))), min(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u))))), ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u)))))) | 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(num_workgroup)))))), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : ~ _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 0u | (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(workgroup_size)))))), ((next_virtual_gid)) >> 0u))), ~ (next_virtual_gid), ~ (next_virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), (true ? _GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))) : _GLF_FUZZED(subgroup_id))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((next_virtual_gid), (true ? _GLF_IDENTITY((next_virtual_gid), uint(uvec3((next_virtual_gid), 1u, 1u))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid)))))), ~ (next_virtual_gid), ~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / (1u & 1u)))))), 0u ^ ((_GLF_IDENTITY(~ (next_virtual_gid), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((next_virtual_gid), (true ? _GLF_IDENTITY((next_virtual_gid), uint(_GLF_IDENTITY(uvec3((next_virtual_gid), 1u, 1u), max(uvec3((next_virtual_gid), 1u, 1u), uvec3((next_virtual_gid), 1u, 1u))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((next_virtual_gid), (true ? _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), uint(_GLF_IDENTITY(uvec3((next_virtual_gid), 1u, 1u), max(uvec3((next_virtual_gid), 1u, 1u), uvec3((next_virtual_gid), 1u, 1u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), uint(_GLF_IDENTITY(uvec3((next_virtual_gid), 1u, 1u), max(uvec3((next_virtual_gid), 1u, 1u), uvec3((next_virtual_gid), 1u, 1u))))), (_GLF_IDENTITY((next_virtual_gid), uint(_GLF_IDENTITY(uvec3((next_virtual_gid), 1u, 1u), max(uvec3((next_virtual_gid), 1u, 1u), uvec3((next_virtual_gid), 1u, 1u)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) | (min(subgroup_local_id, subgroup_local_id))))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)) : _GLF_FUZZED(workgroup_base)))))))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), clamp((_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ _GLF_IDENTITY((next_virtual_gid), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | ((next_virtual_gid)))), (true ? ~ (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | ((next_virtual_gid)))) : _GLF_FUZZED(virtual_gid))))), ~ (next_virtual_gid))), clamp(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), max(~ (next_virtual_gid), ~ (next_virtual_gid))), _GLF_IDENTITY(~ (next_virtual_gid), ~ (~ (~ _GLF_IDENTITY((next_virtual_gid), clamp((next_virtual_gid), (next_virtual_gid), (next_virtual_gid)))))))), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), _GLF_IDENTITY(~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid)))) - 0u), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), clamp((next_virtual_gid), (next_virtual_gid), (next_virtual_gid)))) ^ 0u), ~ (next_virtual_gid)))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) >> 0u), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), 0u))) : ~ (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), 1u, 0u)), ~ (~ (uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), 1u, 0u))))))), min(clamp((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), 1u, 0u)), ~ (~ (uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), 1u, 0u))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), 1u, 0u)), ~ (~ (uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))) | 0u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) >> 0u)), 1u, 0u)))))))))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : ~ (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)), ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u))) | ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)), clamp(~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)), ~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)), ~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)))), (~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u))) - 0u))))))))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), ~ (~ (~ (next_virtual_gid)))), ~ (next_virtual_gid))), _GLF_IDENTITY(~ (next_virtual_gid), max(~ (next_virtual_gid), ~ (next_virtual_gid))))))), ~ (next_virtual_gid), ~ (next_virtual_gid)), (clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), ~ (~ (~ (next_virtual_gid)))), ~ (next_virtual_gid))), _GLF_IDENTITY(~ (next_virtual_gid), max(~ (next_virtual_gid), ~ (next_virtual_gid))))))), ~ (next_virtual_gid), ~ (next_virtual_gid))) << 0u)))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)), max(clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))), uint(uvec2(clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ _GLF_IDENTITY((next_virtual_gid), ~ (~ ((next_virtual_gid))))), 1u))))))) >> 0u)), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), ~ (~ (_GLF_IDENTITY((next_virtual_gid), 0u + ((next_virtual_gid)))))), 0u ^ ((next_virtual_gid))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ (_GLF_FUZZED(subgroup_id))) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), min(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) - 0u))), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ (next_virtual_gid))))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) + 0u)) ^ 0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (next_virtual_gid))), ~ (next_virtual_gid), ~ _GLF_IDENTITY((next_virtual_gid), (true ? _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) << 0u) : _GLF_FUZZED(uint(-46308))))))))) >> 0u))))))), _GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))))], uint(2), 4, 64, 4);
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
