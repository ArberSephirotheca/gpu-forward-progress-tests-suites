#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) && true)), bool(bvec4(_GLF_DEAD(false), false, true, false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED((+ 2.7))), (false ? _GLF_FUZZED(-1148.9804) : _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED((+ 2.7))), min(float(_GLF_FUZZED((+ 2.7))), float(_GLF_FUZZED((+ 2.7))))), min(_GLF_IDENTITY(float(_GLF_FUZZED((+ 2.7))), min(float(_GLF_FUZZED((+ 2.7))), float(_GLF_FUZZED((+ 2.7))))), _GLF_IDENTITY(float(_GLF_FUZZED((+ 2.7))), min(float(_GLF_FUZZED((+ 2.7))), _GLF_IDENTITY(float(_GLF_FUZZED((+ 2.7))), min(float(_GLF_FUZZED((+ 2.7))), float(_GLF_FUZZED((+ 2.7))))))))))), float(injectionSwitch.y), bool(true)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-146.251))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-146.251))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-146.251))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-146.251))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), true), true, false))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-146.251))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-146.251))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-146.251))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), true), true, false))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-146.251))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-146.251))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-146.251))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), true), true, false))))), false, true), true))), true)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(vec2(2271.1593, -7605.0917))), clamp(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(vec2(2271.1593, -7605.0917))), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(vec2(2271.1593, -7605.0917)))) / cos(vec2(0.0, 0.0))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(vec2(2271.1593, -7605.0917))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(vec2(2271.1593, -7605.0917)))))).y))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, log(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0))))).y, mix(float(_GLF_FUZZED(_GLF_IDENTITY((+ 2.7), min((+ 2.7), (+ 2.7))))), float(injectionSwitch.y), bool(true))), ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ 2.7))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))), 0.0 + (_GLF_IDENTITY(mix(float(_GLF_FUZZED((+ 2.7))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true)))) || false)), 1.0 * (mix(float(_GLF_FUZZED((+ 2.7))), float(injectionSwitch.y), bool(true))))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))), false, false)))))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))), false, false)))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(1.0, (1.0) / 1.0)))).x < injectionSwitch.y)))))))))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), false || (! (_GLF_IDENTITY((false), ! (! ((false)))))))))), true && ((! (false))))), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, true), true, true)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, true), true, true)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(false, true), true, true)), false), false)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))) && true, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), ! (! (bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(atomicAnd(workgroup_size, workgroup_size)))) + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 1u, 1u))) * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(atomicAnd(workgroup_size, workgroup_size))), ~ (~ (_GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(atomicAnd(workgroup_size, workgroup_size))), ((true ? workgroup_base : _GLF_FUZZED(atomicAnd(workgroup_size, workgroup_size)))) ^ 0u))))) + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 1u, 1u))) * subgroup_size + subgroup_local_id) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0, ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0) | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)) | _GLF_IDENTITY(0, (0) ^ 0), ((_GLF_IDENTITY(1, (1) ^ 0)) | _GLF_IDENTITY(0, (0) ^ 0)) << 0))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1))) ^ 0), 1))))))) ^ 0, ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)) / 1), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0) | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0))), (_GLF_IDENTITY(1, (1) ^ 0)) | _GLF_IDENTITY(0, (0) ^ 0))), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1))))))))) ^ 0, ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0) | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1))))))))) ^ 0))), (_GLF_IDENTITY(1, (1) ^ 0)) | _GLF_IDENTITY(0, (0) ^ 0))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0, ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0) | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0))), (_GLF_IDENTITY(1, (1) ^ 0)) | _GLF_IDENTITY(0, (0) ^ 0)))) << 0u, clamp(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0, ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0) | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0))), (_GLF_IDENTITY(1, (1) ^ 0)) | _GLF_IDENTITY(0, (0) ^ 0)))) << 0u, ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0, ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0) | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0))), (_GLF_IDENTITY(1, (1) ^ 0)) | _GLF_IDENTITY(0, (0) ^ 0)))) << 0u, ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0, ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0) | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0))), (_GLF_IDENTITY(1, (1) ^ 0)) | _GLF_IDENTITY(0, (0) ^ 0)))) << 0u))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3677) : 0)), _GLF_IDENTITY(0, int(ivec3(0, 1, 0))))), ((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0) | _GLF_IDENTITY(((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), int(ivec4(_GLF_IDENTITY(1, max(1, 1)), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) ^ 0), ~ (~ (((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), int(ivec4(_GLF_IDENTITY(1, max(1, 1)), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) ^ 0)))))), (_GLF_IDENTITY(1, (1) ^ 0)) | _GLF_IDENTITY(0, (0) ^ 0))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1))))), 1 * (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))))))))))))) ^ 0, ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0) | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ~ (~ ((1)))))))) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0))), (_GLF_IDENTITY(1, (1) ^ 0)) | _GLF_IDENTITY(0, (0) ^ 0)))))) | ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-73697) : 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (1)))), (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0, ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))), min(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))))) ^ 0) | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (17687 & int(_GLF_ZERO(0.0, injectionSwitch.x)))), (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0))), (_GLF_IDENTITY(1, (1) ^ 0)) | _GLF_IDENTITY(0, (0) ^ 0))))) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), 1 * ((_GLF_IDENTITY(1, (1) ^ 0)))) | 0)) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, max(1, 1))), 0 ^ (_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, max(1, 1))), 1 * ((1) | (_GLF_IDENTITY(1, max(1, 1))))))))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))), (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), 1))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), 1))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), 1))), 0, 1, 0)), (int(ivec4((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), 1))), 0, 1, 0))) / 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), 1))))))))), 0, 1, _GLF_IDENTITY(0, ~ (~ (0))))), (int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) / 1))))))), 0, 1, _GLF_IDENTITY(0, ~ (~ (0)))))) << 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), (true ? _GLF_IDENTITY(int(ivec4(0, _GLF_IDENTITY(0, max(0, 0)), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, abs(0.0), 0.0, 0.0))).y)), 0)), clamp(int(ivec4(0, 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(-30060) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0)), int(ivec4(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), int(ivec4(0, 0, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-88.98)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), 0)))) : _GLF_FUZZED(-34249))))), (_GLF_IDENTITY(1, (1) ^ 0)) | 0)) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0)) >> 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-93661))) ^ 0)) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-44449)))) ^ 0)))))))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), max(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0))), _GLF_IDENTITY(1, (1) ^ 0)))) | _GLF_IDENTITY(0, (0) * 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) | 0)))) % subgroup_size)) - 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(595.773) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true))), (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))), (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec2(true, false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))) / vec2(1.0, 1.0))).x, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), _GLF_IDENTITY(float(mat2x3(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat2x3(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat2x3(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0, 1.0, 1.0, 0.0, 1.0)))))), max(float(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), _GLF_IDENTITY(float(mat2x3(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat2x3(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat2x3(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0, 1.0, 1.0, 0.0, 1.0)))))), float(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), _GLF_IDENTITY(float(mat2x3(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat2x3(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat2x3(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0, 1.0, 1.0, 0.0, 1.0)))))))), _GLF_IDENTITY(float(_GLF_FUZZED(58.46)), (false ? _GLF_FUZZED(pow(vec3(_GLF_IDENTITY(-7308.4262, min(-7308.4262, _GLF_IDENTITY(-7308.4262, (-7308.4262) - 0.0))), -280.935, 43.90)[2], _GLF_IDENTITY(-4.2, mix(float(_GLF_IDENTITY(-4.2, (false ? _GLF_FUZZED(3168.9158) : -4.2))), float(_GLF_FUZZED(37.16)), bool(false))))) : _GLF_IDENTITY(float(_GLF_FUZZED(58.46)), min(float(_GLF_FUZZED(58.46)), float(_GLF_FUZZED(58.46)))))), bool(false)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-6.7), (_GLF_FUZZED(-6.7)) * 1.0) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), mix(float(1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(float(12996u)), _GLF_FUZZED(8.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)), 1.0, 1.0))).x, injectionSwitch.x)), injectionSwitch.x)))), float(_GLF_FUZZED(58.46)), bool(false)))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.0)), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2109.1261) : injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), true)), ! (! (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || _GLF_IDENTITY(false, true && (false))), true))))))), ! (! ((! (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), true)), ! (! (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || _GLF_IDENTITY(false, true && (false))), true))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(169.555)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(-91.11)), bool(false))) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.5)), bool(false))), injectionSwitch.y)))), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), ~ (~ (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), max(clamp(_GLF_IDENTITY(64, (64) - 0), 64, _GLF_IDENTITY(64, (64) << 0)), clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(64, _GLF_IDENTITY((64) << 0, _GLF_IDENTITY(int(ivec3((64) << 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0)), int(ivec4(int(ivec3((64) << 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0)), 0, 1, 1)))))) - 0))))) | (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), 0 + (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 + (64)), min(_GLF_IDENTITY(64, 0 + (64)), _GLF_IDENTITY(_GLF_IDENTITY(64, 0 + (64)), (false ? _GLF_FUZZED(-70412) : _GLF_IDENTITY(64, 0 + (64)))))), 0), min(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 + (64)), min(_GLF_IDENTITY(64, 0 + (64)), _GLF_IDENTITY(_GLF_IDENTITY(64, 0 + (64)), (false ? _GLF_FUZZED(-70412) : _GLF_IDENTITY(64, 0 + (64)))))), 0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 + (64)), min(_GLF_IDENTITY(64, 0 + (64)), _GLF_IDENTITY(_GLF_IDENTITY(64, 0 + (64)), (false ? _GLF_FUZZED(-70412) : _GLF_IDENTITY(64, 0 + (64)))))), 0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), min(0 + (64), 0 + (64)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), min(0 + (64), 0 + (64)))), 0)))))) ^ 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + _GLF_IDENTITY((64), ((64)) | ((64)))), 0)))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + _GLF_IDENTITY((64), min((64), (64)))), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0)) ^ 0), 1, 0, 0)))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, min(1, 1)))))))) : _GLF_FUZZED(-14546)))))), ((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(64, (64) << 0)) / 1)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), max(_GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(64, (64) << 0)) - 0))), _GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY(64, (64) << 0))), int(ivec4(_GLF_IDENTITY(64, (64) << 0), 1, 1, 1)))), max(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), clamp(64, 64, _GLF_IDENTITY(64, _GLF_IDENTITY((64) << 0, (_GLF_IDENTITY((64) << 0, (_GLF_IDENTITY((64) << 0, clamp((64) << 0, (64) << 0, (64) << 0))) - (0 | 0))) ^ 0)))))) | (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) | (64)), int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)) + (64), (0 + (64)) | (0 + _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), int(int(_GLF_IDENTITY((64), int(ivec4((64), 0, 1, 1))))))))))), 0)))))) ^ 0) : _GLF_FUZZED(-14546))))))) + 0), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), 0 + (_GLF_IDENTITY(64, (64) << 0)))), max(clamp(64, 64, _GLF_IDENTITY(64, _GLF_IDENTITY((64) << 0, (0 ^ 0) + ((64) << 0)))), clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) | (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0), clamp(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0), ivec2(_GLF_IDENTITY(64, 0 + (64)), 0), ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0), clamp(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0), ivec2(_GLF_IDENTITY(64, 0 + (64)), 0), ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))))), (~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0), clamp(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0), ivec2(_GLF_IDENTITY(64, 0 + (64)), 0), ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))))) << 0))))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (_GLF_IDENTITY(64, 0 | (64)))), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0), 1, 0, 0)))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))) : _GLF_FUZZED(-14546)))))), ((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(64, (64) << 0)) / 1)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), int(ivec4(_GLF_IDENTITY(64, (64) << 0), 1, 1, 1)))), max(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) | (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) ^ 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(64, (64) << 0)) / 1)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), int(ivec4(_GLF_IDENTITY(64, (64) << 0), 1, 1, 1)))), max(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) | (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) ^ 0, max((_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(64, (64) << 0)) / 1)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), int(ivec4(_GLF_IDENTITY(64, (64) << 0), 1, 1, 1)))), max(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) | (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) ^ 0, (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(64, (64) << 0)) / 1)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), int(ivec4(_GLF_IDENTITY(64, (64) << 0), 1, 1, 1)))), max(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) | (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) ^ 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))))) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))))) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))))) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))))) ^ 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))))) ^ 0), 1))))))) : _GLF_FUZZED(-14546))))))) + 0), (false ? _GLF_FUZZED(21648) : _GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), max(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(64, (64) << 0)) / 1)) << 0)) - 0))))) | (clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(64, (64) << 0))), (int(int(_GLF_IDENTITY(64, (64) << 0)))) << 0)))))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0, clamp((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0, (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0, (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), 1 * (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0), (ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)) ^ ivec2(0, 0)))))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 + (64)), 0 | (_GLF_IDENTITY(64, 0 + (64)))), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0), 1, 0, 0)))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))) : _GLF_FUZZED(-14546)))))), ((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(64, (64) << 0)) / 1)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), int(ivec4(_GLF_IDENTITY(64, (64) << 0), 1, 1, 1)))), max(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) | (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) ^ 0, int(int((_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(64, (64) << 0)) / 1)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), int(ivec4(_GLF_IDENTITY(64, (64) << 0), 1, 1, 1)))), max(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) | (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))))) ^ 0) : _GLF_FUZZED(-14546))))))) + 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), max(_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))) | 0), clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) | (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) | 0)))), 0 + (64)), 0)))) ^ 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)), max(int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)), int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0, (0) | (0)) + (64)), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), 0 + (64)), 0)))) ^ 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0)))) ^ 0), 1, 0, 0)))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))) : _GLF_FUZZED(_GLF_IDENTITY(-14546, clamp(-14546, -14546, -14546)))))))), ((_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (_GLF_IDENTITY(64, (64) << 0)) / 1)), (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), int(ivec4(_GLF_IDENTITY(64, (64) << 0), 1, 1, 1)))), max(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), clamp(64, _GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY(64, (64) << 0))))) | (clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) | (64)), int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, 0 + (64)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), min((_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) | (0 + (64)))), 0)))))) ^ 0) : _GLF_FUZZED(-14546))))))) + 0))) ^ 0)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))))), ((_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true)))))))) && true))), (! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))), false))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(674.805, -9.2)))).x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false || (false)), _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), bool(bvec3(_GLF_IDENTITY(true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), false || (bool(bvec2(false, false))))))))), true, true)))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
