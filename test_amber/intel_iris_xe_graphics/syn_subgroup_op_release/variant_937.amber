#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, cos(abs(0.0)), sqrt(1.0), 0.0, 0.0, 0.0))) / abs(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.4)), float(1.0), bool(true))))), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(4.4), max(_GLF_FUZZED(4.4), _GLF_FUZZED(4.4)))), float(1.0), bool(true)))))))) / 1.0))))).y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-244.017))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))))), ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) / vec2(1.0, 1.0)).y) || false))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.4)), float(1.0), bool(true))))), min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.4)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.4)), float(1.0), bool(true)))))))) / 1.0))))).y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-244.017, float(_GLF_IDENTITY(vec2(-244.017, log(_GLF_ONE(1.0, injectionSwitch.y))), (vec2(-244.017, log(_GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0))))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) || false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, length(log(vec2(1.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, tan(0.0), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, tan(0.0), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0))))).x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.4) : 0.0))) + tan(0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0)))) / 1.0)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-581.107, 963.471)) : injectionSwitch)), injectionSwitch)), injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0)))) / 1.0)) > injectionSwitch.y))))), false || (true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4359.9502)), bvec2(true, false))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(87619))), vec2(_GLF_FUZZED(8399.4646), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0))), _GLF_IDENTITY((float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0)))) / 1.0, max(_GLF_IDENTITY((float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0)))) / 1.0, float(mat4((float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0)))) / 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0)))) / 1.0)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0)))) / 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0)))) / 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0)))) / 1.0))) + 0.0)) - 0.0) > injectionSwitch.y))))), false || (true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 1.0, 0.0, 1.0))), max(injectionSwitch, injectionSwitch)).x, exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3357.3619)), float(1.0), bool(true))), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 0.0, sqrt(0.0), exp(0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-488.151), mix(float(_GLF_FUZZED(76.52)), float(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-488.151), min(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-488.151), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-488.151)))), bool(true))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0)))) / 1.0)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(exp(-33.10)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), exp(0.0)))) / 1.0)) > injectionSwitch.y))))), false || (true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))) || false))) || false)))))) && true)))
  return;
 uint subgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(16, 0 ^ (_GLF_IDENTITY(16, _GLF_IDENTITY(_GLF_IDENTITY((16), ~ (~ ((16)))), 0 ^ (_GLF_IDENTITY((16), ((16)) | 0))) | 0))), int(ivec2(16, 0)));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) && true)))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))) && true))))), (_GLF_DEAD(false)) && true)))))) && true))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, true, true))))))
  return;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)) && true)) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)) && true)) || false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)) && true)) || false))))))))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8297.4403)), vec2(_GLF_FUZZED(-8.1), (injectionSwitch)[1]), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true))).y))))
    break;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false)))))))))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))))))))))))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false), true, false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true)))), true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))))))))))))))), ! (! ((bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true)))), true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false)))))))))))))))))))))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))))))), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))))))))))))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), false || (_GLF_IDENTITY(! (false), false || (! (false))))))) || false)), true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))))))))))))) && true))))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), clamp(_GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(_GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u + (min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), clamp(_GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(_GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u + (min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) ^ 0u) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size), 0u | (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size)))) | (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u))) + 1) % subgroup_size))), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) + 0u, 0u ^ ((((subgroup_local_id + 1) % subgroup_size)) + 0u)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) + 0u)) ^ 0u), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) * _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) << 0u)), ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) << 0u))) | 0u)) + 1), (subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u, 0u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u, 0u)))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u, 0u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u, 0u)))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u, 0u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u, 0u)))))))), (((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 0u, 1u))), subgroup_local_id)) + 1) % subgroup_size)) + 0u)) ^ 0u)) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), clamp((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))) >> 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9547.7154), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y), ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))) && _GLF_IDENTITY(true, (true) && true)))), (((injectionSwitch.x > injectionSwitch.y))) && true))), ! (! (((injectionSwitch.x > injectionSwitch.y))))), false))), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1840.4533)), float(1.0), bool(true)))) * (injectionSwitch)).y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))) && _GLF_IDENTITY(true, (true) && true)))), (((injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (! (((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))) || false), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(-5.8) : _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))))), 1.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, 0.0)))) : _GLF_FUZZED(vec2(-9.8, 4.1))))))).y, mix(float(_GLF_FUZZED(-3979.8083)), float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(-5.8) : _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))))))), 1.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, 0.0)))) : _GLF_FUZZED(vec2(-9.8, 4.1))))))).y), bool(true))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))) && _GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bool(bvec4(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))) && _GLF_IDENTITY(true, (true) && true)))), true, false, false)), bool(bool(bool(bvec4(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))))) && _GLF_IDENTITY(true, (true) && true)))), true, false, false)))))), (((injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))) && _GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bool(bvec4(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))) && _GLF_IDENTITY(true, (true) && true)))), true, false, false)), bool(bool(bool(bvec4(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))))) && _GLF_IDENTITY(true, (true) && true)))), true, false, false)))))), (((injectionSwitch.x > injectionSwitch.y))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))) && _GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bool(bvec4(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))) && _GLF_IDENTITY(true, (true) && true)))), true, false, false)), bool(bool(bool(bvec4(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))))) && _GLF_IDENTITY(true, (true) && true)))), true, false, false)))))), (((injectionSwitch.x > injectionSwitch.y))) && true)))), false, false)))), ! (! (((injectionSwitch.x > injectionSwitch.y))))), false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1])) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-31.41)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))))), clamp((vec2(_GLF_FUZZED(8.1), (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))])) - vec2(0.0, 0.0), (vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1])) - vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0), _GLF_IDENTITY((vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1])) - vec2(0.0, 0.0), _GLF_IDENTITY(vec2(vec4((vec2(_GLF_FUZZED(8.1), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-912.663)), vec2(_GLF_FUZZED(1832.2848), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))))))[1])) - vec2(0.0, 0.0), 1.0, 0.0)), vec2(vec4(vec2(vec4((vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1])) - vec2(0.0, 0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(1.0), bool(true))), 0.0)), 0.0, 0.0))))))), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), log(1.0)), transpose(transpose(mat4x3(injectionSwitch, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), log(1.0))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(-6.7), (_GLF_FUZZED(-6.7)) - 0.0)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-6.7, min(_GLF_IDENTITY(-6.7, (-6.7) / cos(0.0)), -6.7)))), mat2(1.0) * (vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-6.7, min(_GLF_IDENTITY(-6.7, (-6.7) / cos(0.0)), -6.7))))))) - vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), bvec2(_GLF_IDENTITY(true, (true) && true), false))).y))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1])) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-31.41)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))))), clamp((vec2(_GLF_FUZZED(8.1), (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))])) - vec2(0.0, 0.0), (vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1])) - vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0), _GLF_IDENTITY((vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1])) - vec2(0.0, 0.0), _GLF_IDENTITY(vec2(vec4((vec2(_GLF_FUZZED(8.1), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-912.663)), vec2(_GLF_FUZZED(1832.2848), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))))))[1])) - vec2(0.0, 0.0), 1.0, 0.0)), vec2(vec4(vec2(vec4((vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1])) - vec2(0.0, 0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(1.0), bool(true))), 0.0)), 0.0, 0.0))))))), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), log(1.0)), transpose(transpose(mat4x3(injectionSwitch, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), log(1.0))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(-6.7), (_GLF_FUZZED(-6.7)) - 0.0)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-6.7, min(_GLF_IDENTITY(-6.7, (-6.7) / cos(0.0)), -6.7)))), mat2(1.0) * (vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-6.7, min(_GLF_IDENTITY(-6.7, (-6.7) / cos(0.0)), -6.7))))))) - vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), bvec2(_GLF_IDENTITY(true, (true) && true), false))).y))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1])) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-31.41)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))))), clamp((vec2(_GLF_FUZZED(8.1), (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))])) - vec2(0.0, 0.0), (vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1])) - vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0), _GLF_IDENTITY((vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1])) - vec2(0.0, 0.0), _GLF_IDENTITY(vec2(vec4((vec2(_GLF_FUZZED(8.1), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-912.663)), vec2(_GLF_FUZZED(1832.2848), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))))))[1])) - vec2(0.0, 0.0), 1.0, 0.0)), vec2(vec4(vec2(vec4((vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1])) - vec2(0.0, 0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(1.0), bool(true))), 0.0)), 0.0, 0.0))))))), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), log(1.0)), transpose(transpose(mat4x3(injectionSwitch, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), log(1.0))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(-6.7), (_GLF_FUZZED(-6.7)) - 0.0)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-6.7, min(_GLF_IDENTITY(-6.7, (-6.7) / cos(0.0)), -6.7)))), mat2(1.0) * (vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-6.7, min(_GLF_IDENTITY(-6.7, (-6.7) / cos(0.0)), -6.7))))))) - vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), bvec2(_GLF_IDENTITY(true, (true) && true), false))).y))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   buf[virtual_gid] = 1;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              return;
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y) || false)))))));
          }
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))))))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false), true)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false), true)))))), false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, false || (false))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), true), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / sqrt(1.0)) < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, false)))))))
    continue;
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)))), true && ((_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false))))), false, false, false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))) || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (_GLF_WRAPPED_LOOP(false)))))))))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (false ? _GLF_FUZZED(-66913) : int(int(_GLF_IDENTITY(1, max(1, 1))))))) < subgroup_size) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-66913), (_GLF_FUZZED(-66913)) | (_GLF_FUZZED(-66913))) : _GLF_IDENTITY(int(int(1)), (int(int(1))) | 0))), (_GLF_IDENTITY(int(int(1)), (false ? _GLF_FUZZED(-66913) : int(int(1))))) | (_GLF_IDENTITY(int(int(1)), (false ? _GLF_FUZZED(-66913) : int(int(1))))))) < subgroup_size) && true), true)), true && (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(-66913), max(_GLF_FUZZED(-66913), _GLF_IDENTITY(_GLF_FUZZED(-66913), min(_GLF_FUZZED(-66913), _GLF_FUZZED(-66913))))) : int(int(1))))) < subgroup_size) && true, ! (_GLF_IDENTITY(! ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (false ? _GLF_FUZZED(-66913) : int(int(1))))) < subgroup_size) && true), _GLF_IDENTITY(! (! (! ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (false ? _GLF_FUZZED(-66913) : int(int(1))))) < subgroup_size) && true))), true && (! (! (! ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-66913, (-66913) >> 0)) : int(int(1))))) < subgroup_size) && true))))))))), true))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
         break;
        }
       if(_GLF_DEAD(false))
        break;
       do
        {
         return;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))))))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))));
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(977.195, -3.0)))), injectionSwitch)).y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(64.82)), bool(false)))) * 1.0) > injectionSwitch.y)) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false), false || (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true) || false)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))), (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false))))) || false)))))) && true) || false))) || false)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, cos(0.0)), transpose(transpose(mat2(injectionSwitch, 1.0, cos(0.0))))))).y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, cos(0.0)), transpose(transpose(mat2(injectionSwitch, 1.0, cos(0.0))))))).y)))), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)) || false, bool(bvec2(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)) || false, ((! (injectionSwitch.x > injectionSwitch.y)) || false) || false), false)))))))))))))))));
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7695.2135)), bool(false))) > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true), false)), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))) && true)), true, false))), false, true)))))))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, tan(0.0))), mix(float(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, tan(0.0))), clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, tan(0.0))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, tan(0.0))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, tan(0.0)))))), float(_GLF_FUZZED(-95.82)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(580.281))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (false || (injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (false || (injectionSwitch.x > injectionSwitch.y)) && true)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (false || (injectionSwitch.x > injectionSwitch.y)) && true))))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(0.0), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, cos(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true)))), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0), (true ? mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0) : _GLF_FUZZED(mat4(-87.48, 4356.4841, 6830.2251, -594.985, 205.233, 2230.0969, 4.1, 8.1, -6.0, -9.7, 4.0, 59.88, 2.8, 10.48, -4.0, -691.448))))), max(float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0) : _GLF_FUZZED(mat4(-87.48, 4356.4841, 6830.2251, -594.985, 205.233, 2230.0969, 4.1, 8.1, -6.0, -9.7, 4.0, 59.88, 2.8, 10.48, -4.0, -691.448))))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(134.847)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.0)), bool(false)))), bool(true))), 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0), (true ? mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0) : _GLF_FUZZED(mat4(-87.48, 4356.4841, 6830.2251, -594.985, 205.233, 2230.0969, 4.1, 8.1, -6.0, -9.7, 4.0, 59.88, 2.8, 10.48, -4.0, -691.448)))))))) > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (false || (injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0), (true ? mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(127.631)), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(true)))), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, sqrt(1.0), 0.0), max(vec4(0.0, 0.0, sqrt(1.0), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, sqrt(1.0), 0.0), clamp(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))))))), 0.0) : _GLF_FUZZED(mat4(-87.48, 4356.4841, 6830.2251, -594.985, 205.233, 2230.0969, 4.1, 8.1, -6.0, -9.7, 4.0, 59.88, 2.8, 10.48, -4.0, -691.448))))), max(float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0), (true ? mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0) : _GLF_FUZZED(mat4(-87.48, 4356.4841, 6830.2251, -594.985, 205.233, 2230.0969, 4.1, 8.1, -6.0, -9.7, 4.0, 59.88, 2.8, 10.48, -4.0, -691.448))))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0), (true ? mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0) : _GLF_FUZZED(mat4(-87.48, 4356.4841, 6830.2251, -594.985, 205.233, 2230.0969, 4.1, 8.1, -6.0, -9.7, 4.0, 59.88, 2.8, 10.48, -4.0, -691.448)))))))) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y))), (false || (injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0), (true ? mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(127.631)), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(true)))), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, sqrt(1.0), 0.0), max(vec4(0.0, 0.0, sqrt(1.0), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, sqrt(1.0), 0.0), clamp(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))))))), 0.0) : _GLF_FUZZED(mat4(-87.48, 4356.4841, 6830.2251, -594.985, 205.233, 2230.0969, 4.1, 8.1, -6.0, -9.7, 4.0, 59.88, 2.8, 10.48, -4.0, -691.448))))), max(float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0), (true ? mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0) : _GLF_FUZZED(mat4(-87.48, 4356.4841, 6830.2251, -594.985, 205.233, 2230.0969, 4.1, 8.1, -6.0, -9.7, 4.0, 59.88, 2.8, 10.48, -4.0, -691.448))))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0), (true ? mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0) : _GLF_FUZZED(mat4(-87.48, 4356.4841, 6830.2251, -594.985, 205.233, 2230.0969, 4.1, 8.1, -6.0, -9.7, 4.0, 59.88, 2.8, 10.48, -4.0, -691.448)))))))) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y))), (false || (injectionSwitch.x > injectionSwitch.y)) && true)))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0), (true ? mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(127.631)), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(true)))), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, sqrt(1.0), 0.0), max(vec4(0.0, 0.0, sqrt(1.0), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, sqrt(1.0), 0.0), clamp(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))))))), 0.0) : _GLF_FUZZED(mat4(-87.48, 4356.4841, 6830.2251, -594.985, 205.233, 2230.0969, 4.1, 8.1, -6.0, -9.7, 4.0, 59.88, 2.8, 10.48, -4.0, -691.448))))), max(float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0), (true ? mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0) : _GLF_FUZZED(mat4(-87.48, 4356.4841, 6830.2251, -594.985, 205.233, 2230.0969, 4.1, 8.1, -6.0, -9.7, 4.0, 59.88, 2.8, 10.48, -4.0, -691.448))))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0), (true ? mat4(injectionSwitch.x, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, sqrt(1.0), 0.0))), 0.0) : _GLF_FUZZED(mat4(-87.48, 4356.4841, 6830.2251, -594.985, 205.233, 2230.0969, 4.1, 8.1, -6.0, -9.7, 4.0, 59.88, 2.8, 10.48, -4.0, -691.448)))))))) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y))), (false || (injectionSwitch.x > injectionSwitch.y)) && true))))))))) || false)))))) || false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bool((! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) + 0u), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 65.52))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0 + (injectionSwitch.x))), bool(true))), _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), max(float(vec3(injectionSwitch.x, 0.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(55.98) : injectionSwitch.x)), 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 1.0, 1.0))).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), (! (_GLF_DEAD(false))) && true))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (true ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(tan(injectionSwitch)))) : injectionSwitch))) - vec2(0.0, 0.0)), 1.0, 1.0)), mat2(1.0) * (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))), 0.0)), 0.0)), 1.0, 1.0))))).y)) || (false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, (true) && true)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(true, (true) && true)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (bool(bvec2(! (! (false)), true))) && true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (bool(bvec2(! (! (false)), true))) && true)))))), false, false))))
      return;
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
