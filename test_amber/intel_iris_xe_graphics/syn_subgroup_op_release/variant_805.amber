#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid) : GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid));
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.y = _GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u);
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.w = workgroup_id;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.w, (workgroup_size * GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.w) | _GLF_IDENTITY(0u, uint(uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) - 0u), _GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))) | (workgroup_base))) | (workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), clamp(_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))) | (workgroup_base))) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(7u), uint(7u))))), ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), clamp(_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))) | (workgroup_base))) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) / 1u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (_GLF_IDENTITY(0u, uint(uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(6u, (6u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u, 0u), (uvec3(uint(_GLF_IDENTITY(6u, (6u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u, 0u)) * uvec3(1u, 1u, 1u)))), uint(6u)))))))) | (workgroup_base))) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))) * subgroup_size, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))) | (workgroup_base))) | (workgroup_base), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))) | (workgroup_base))) | (workgroup_base), 0u + ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))) | (workgroup_base))) | (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))) | (workgroup_base))) | (workgroup_base), ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))) | (workgroup_base))) | (workgroup_base)) >> 0u)))) + subgroup_id * subgroup_size) ^ 0u)) - 0u) + subgroup_local_id;
 GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.z = virtual_gid;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY((1) | (1), ((1) | (1)) << 0) : _GLF_FUZZED(-71053)))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, ~ (~ ((1) ^ 0)))), 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY((1) | (1), ((1) | (1)) << 0) : _GLF_FUZZED(-71053)))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ _GLF_IDENTITY(0, max(0, 0)), ~ (~ ((1) ^ 0)))), 1))) - 0), min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1)), (1) - 0), (1) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) ^ 0, ~ (~ ((1) ^ 0))), clamp(_GLF_IDENTITY((1) ^ 0, ~ (~ ((1) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY((1) ^ 0, ~ (~ ((1) ^ 0))), min(_GLF_IDENTITY((1) ^ 0, ~ (~ ((1) ^ 0))), _GLF_IDENTITY((1) ^ 0, ~ (~ ((1) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY((1) ^ 0, ~ (~ ((1) ^ 0))), (_GLF_IDENTITY((1) ^ 0, ~ (~ ((1) ^ 0)))) >> 0)))), 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) | (1))) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) | (1))) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) | (1))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) | (1))) ^ 0))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), _GLF_IDENTITY(((1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(((1)), (true ? ((1)) : _GLF_FUZZED(29655))), 1), (ivec2(_GLF_IDENTITY(((1)), (true ? ((1)) : _GLF_FUZZED(29655))), 1)) / ivec2(1, 1))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(((1)), (true ? ((1)) : _GLF_FUZZED(29655))), 1), (ivec2(_GLF_IDENTITY(((1)), (true ? ((1)) : _GLF_FUZZED(29655))), 1)) / ivec2(1, 1)))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(((1)), (true ? ((1)) : _GLF_FUZZED(29655))), 1), (ivec2(_GLF_IDENTITY(((1)), (true ? ((1)) : _GLF_FUZZED(29655))), 1)) / ivec2(1, 1)))))) | 0)) - 0), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), min(_GLF_IDENTITY((1), ((1)) | ((1))), _GLF_IDENTITY((1), ((1)) | ((1))))))) ^ 0)), ((~ ((1) ^ 0))) << 0))), 1))))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), true, true), bvec3(bvec4(bvec3(! (! (true)), true, true), false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) || _GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (true))))))))), false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), _GLF_IDENTITY(! (! (true)), bool(bvec4(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec3(! (! (true)), true, false)), true && (bool(bvec3(! (! (true)), true, false))))), false, true, true))))))))))), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), true, true), bvec3(bvec4(bvec3(! (! (true)), true, true), false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) || _GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (true))))))))), false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), _GLF_IDENTITY(! (! (true)), bool(bvec4(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec3(! (! (true)), true, false)), true && (bool(bvec3(! (! (true)), true, false))))), false, true, true))))))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), true, true), bvec3(bvec4(bvec3(! (! (true)), true, true), false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) || _GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (true))))))))), false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), _GLF_IDENTITY(! (! (true)), bool(bvec4(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec3(! (! (true)), true, false)), true && (bool(bvec3(! (! (true)), true, false))))), false, true, true))))))))))), false))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), true, true), bvec3(bvec4(bvec3(! (! (true)), true, true), false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) || _GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (true))))))))), false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), _GLF_IDENTITY(! (! (true)), bool(bvec4(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec3(! (! (true)), true, false)), true && (bool(bvec3(! (! (true)), true, false))))), false, true, true))))))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(! (! (true)), true, true), bvec3(bvec4(bvec3(! (! (true)), true, true), false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) || _GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (true))))))))), false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), _GLF_IDENTITY(! (! (true)), bool(bvec4(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec3(! (! (true)), true, false)), true && (bool(bvec3(! (! (true)), true, false))))), false, true, true))))))))))), false)))))))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (true), true && (! (true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true)))))), (bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), ! (! _GLF_IDENTITY(((! (true))), false || (((! (true))))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))))), bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) || false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)))))), ! (! (true))))))))))))))), false))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), true && ((true)))))))) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, _GLF_IDENTITY(true, bool(bvec2(true, true))), true))) && true)), ! (! _GLF_IDENTITY((true), bool(bvec3((true), true, false)))))))))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), true && ((true)))))))) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, _GLF_IDENTITY(true, bool(bvec2(true, true))), true))) && true)), ! (! _GLF_IDENTITY((true), bool(bvec3((true), true, false)))))))))))), false))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), true && ((true)))))))) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, _GLF_IDENTITY(true, bool(bvec2(true, true))), true))) && true)), ! (! _GLF_IDENTITY((true), bool(bvec3((true), true, false)))))))))))), false)))) || false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bool(! (_GLF_IDENTITY(true, false || (true)))))), true && (! (_GLF_IDENTITY(true, false || (true)))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), false || (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), false), false)), true, false)))))))), false || (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (_GLF_IDENTITY(true, bool(bool(true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true))))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true))))))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (true) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true)))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true)))), true, false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), true, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), true, true))) && true)), _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), true, true))) && true)), _GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))))))))))) && true))), false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), false || (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), false), false)), true, false)))))))), false || (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (_GLF_IDENTITY(true, bool(bool(true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true))))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true))))))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (true) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true)))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true)))), true, false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), true, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), true, true))) && true)), _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), true, true))) && true)), _GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))))))))))) && true))), false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), false || (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), false), false)), true, false)))))))), false || (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (_GLF_IDENTITY(true, bool(bool(true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true))))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true))))))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (true) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true)))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), ! (! (true)))), true, false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), true, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), true, true))) && true)), _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), true, true))) && true)), _GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))))))))))) && true))), false))))))))))), false, _GLF_IDENTITY(false, false || (false)), false))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))))))))))
  {
   GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x = next_virtual_gid;
  }
 else
  {
  }
 buf[GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.z] = 1;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0), 0.0))), injectionSwitch)).x)) < injectionSwitch.y)))) || false))
  {
   if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) << 0u) < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u))), subgroup_size, subgroup_size))) * 1u))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 ^ (int(1))), 0 | (_GLF_IDENTITY(int(1), 0 ^ (int(1))))), int(1))), min(_GLF_IDENTITY(int(1), (int(1)) | (int(1))), int(1))), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (true ? _GLF_IDENTITY(int(1), (int(1)) << 0) : _GLF_FUZZED(55940))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(1)), (_GLF_IDENTITY(~ (int(1)), ~ (~ (~ (int(1)))))) >> 0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), (int(1)) / 1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0)), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), (int(1)) / 1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0)), (clamp(_GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), (int(1)) / 1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), (int(1)) / 1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0)), (clamp(_GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), (int(1)) / 1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0))) | (clamp(_GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), (int(1)) / 1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), (int(1)) / 1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0)), (clamp(_GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), (int(1)) / 1)), (~ (int(1))) >> 0), _GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0))) / 1)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           atomicStore(buf[GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x], uint(2), 4, 64, 4);
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.y : _GLF_FUZZED(reflect(8436.3824, -9806.0710))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))), false, false, false))))))))), bool(bvec4((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-377.630))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-377.630))) > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-377.630))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-377.630))) > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), false, true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(28.29))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec2(bvec2(bvec2((! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))))))), false), true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)) || false))))))), false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)) || false))))))), false), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)) || false))))))), false), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)) || false))))))), false), true))), false)))), false)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), false, true))), false, false))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), ! _GLF_IDENTITY((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(503.611), _GLF_FUZZED((7802.9812))), bvec2(false, false))).y)) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))) / 1.0)) / 1.0))))))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), false)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, exp(0.0), log(1.0)))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))) || false))))), false), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), false)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, exp(0.0), log(1.0)))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))) || false))))), false), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), false)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), false || (true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, exp(0.0), log(1.0)))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))) || false))))), false), true)))), false, false))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, false, true)))), bool(bvec3(bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, false, true)))), true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true)))))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(841.644), _GLF_FUZZED(8.7)), bvec2(false, false)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-17.38)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-73.70), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), min(vec2(_GLF_FUZZED(-73.70), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-73.70), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.3)), bvec2(true, false))).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true))), false)), true && (bool(bvec2(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true))), false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-79.63)), float(injectionSwitch.y), bool(true)))))), false)), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-79.63)), float(injectionSwitch.y), bool(true)))))), false)), true))), false), true, false)))), true && (bool(bvec2(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true))), false))))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))), bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))), bool(bvec2((! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))), true)))))))), (bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))), bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))), bool(bvec2((! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))), true))))))))) && true))))) || false))), bool(bvec4((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true))), false)), true && (bool(bvec2(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true))), false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))))))))), false || (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false, true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))))))))))))), false, false, true))))), false), false, false)))))))));
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         do
          {
           subgroupAll(false);
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   else
    {
     atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, min(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x))), min(~ (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, min(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, (GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x) + 0u), min(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, min(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x)), GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, (GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x) >> 0u)), ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, (GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x) >> 0u))) - 0u) >> 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz, (GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz) | (GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz)).x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, (GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x) | (GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x)), (GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x) >> 0u)) >> 0u)))), (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (4u), ((0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (4u)) | ((0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (4u))))), (uint(4u)) / 1u))) | (min(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x, _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x) >> 0u, uint(uvec4((GLF_merged2_0_3_72_3_1_12GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gidworkgroup_id.xyz.x) >> 0u, 0u, 0u, 0u))))) >> 0u)))))], uint(2), 4, 64, _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(6), int(6))) | (4)));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           subgroupAll(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true)))))) || false))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
