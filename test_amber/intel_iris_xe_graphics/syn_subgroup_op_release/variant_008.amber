#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, true))))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec3(! (! (_GLF_DEAD(false))), true, true))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true) && (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) && true)))), true, false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.7)), (vec2((injectionSwitch)[0], _GLF_FUZZED(-0.7))) * vec2(1.0, 1.0)), vec2(_GLF_FUZZED(98.52), (injectionSwitch)[1]), bvec2(false, true))).y))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true, false))), true))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_injected_loop_counter < 1, false, true))))))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))) && true) || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true) || (false)), (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 1 * (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))), (false ? _GLF_FUZZED(-35853) : _GLF_IDENTITY(_injected_loop_counter, 1 * (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))))) < (_GLF_IDENTITY((((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(3), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec3(-43932, -86086, 97559).y) : 0))) - _GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 + (int(5))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(_injected_loop_counter) : int(5)))) | 0), int(5))) * (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))))), min(ivec3(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)), 0), _GLF_IDENTITY(ivec3(int(3), 1, 0), (false ? _GLF_FUZZED(ivec3(79881, 94829, 82836)) : ivec3(int(3), 1, 0)))))), min(int(_GLF_IDENTITY(ivec3(int(3), 1, 0), _GLF_IDENTITY(min(ivec3(int(3), _GLF_IDENTITY(1, min(1, 1)), 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)) : _GLF_FUZZED(ivec3(91128, 24533, -18844)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(3), 1, 0), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), _GLF_IDENTITY(ivec3(int(3), 1, 0), ivec3(1, 1, 1) * (_GLF_IDENTITY(ivec3(int(3), 1, 0), (ivec3(int(3), 1, 0)) + ivec3(0, 0, 0))))), max(min(ivec3(int(3), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 1), ivec4(1, 1, 1, 1) * (ivec4(1, 0, 0, 1))))))), 0), ivec3(int(3), 1, _GLF_IDENTITY(0, 1 * (0)))), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), min(min(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), min(int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)))), 0), ivec3(int(3), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), _GLF_IDENTITY(ivec3(int(3), 1, 0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec4(ivec3(int(3), 1, 0), 1), (ivec4(ivec3(int(3), 1, 0), 1)) | ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec4(ivec3(int(3), 1, 0), 1), (ivec4(ivec3(int(3), 1, 0), 1)) | ivec4(0, 0, 0, 0))), (ivec3(_GLF_IDENTITY(ivec4(ivec3(int(3), 1, 0), 1), (ivec4(ivec3(int(3), 1, 0), 1)) | ivec4(0, 0, 0, 0)))) << ivec3(0, 0, 0))) / ivec3(1, 1, 1)))), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(53859, -23870, _GLF_IDENTITY(53466, (false ? _GLF_FUZZED(94955) : _GLF_IDENTITY(53466, ~ (~ (53466))))))), clamp(_GLF_FUZZED(ivec3(53859, -23870, 53466)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(53859, -23870, 53466)), (_GLF_FUZZED(ivec3(53859, -23870, 53466))) ^ ivec3(0, 0, 0)), _GLF_FUZZED(ivec3(53859, -23870, 53466)))))))))))), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(3), 1, 0), min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)))), (int(_GLF_IDENTITY(ivec3(int(3), 1, 0), min(ivec3(_GLF_IDENTITY(int(3), 0 + (int(3))), 1, 0), _GLF_IDENTITY(ivec3(int(3), 1, 0), (ivec3(int(3), 1, 0)) | ivec3(0, 0, 0)))))) ^ 0)))))), int(_GLF_IDENTITY(3, (3) / int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0) : _GLF_FUZZED(-344.554)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3))))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3))))), int(3)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3))))), int(3))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3))))), int(3))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3))))), int(3)))))))) | 0)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) * 1)))))), _GLF_IDENTITY((int(1)), (0 ^ 0) + ((int(1)))) | (0 ^ 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY((int(1)), ((int(1))) | 0) | (0 ^ 0)), 0 + (_GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1)))) | (0 ^ 0)))), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) ^ 0)) | (0 ^ 0)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(0, ~ (~ (0))) ^ 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(_injected_loop_counter) : int(1))), (int(1)) | (0 ^ 0)), (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED((-25152 * 92822))))) | (0 ^ 0))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(7.4))))))), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))) * 1), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), int(ivec4(_GLF_IDENTITY((int(1)), ((int(1))) ^ 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1))) | (0 ^ 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY((0 ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, int(ivec3(0, 0, 0)))))), 0))), int(ivec2((0 ^ 0), 1))))), ((_GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY((_GLF_IDENTITY(0 ^ 0, 0 ^ (_GLF_IDENTITY(0 ^ 0, 0 ^ (0 ^ 0))))), int(ivec2((_GLF_IDENTITY(0 ^ 0, min(0 ^ 0, _GLF_IDENTITY(0 ^ 0, _GLF_IDENTITY(int(int(0 ^ 0)), ~ (~ (int(int(0 ^ 0))))))))), 1)))))) | ((_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), min(_GLF_IDENTITY((int(1)), _GLF_IDENTITY((_GLF_IDENTITY((int(1)), 0 | ((int(1))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY((int(1)), 0 | ((int(1))))), max((_GLF_IDENTITY((int(1)), 0 | ((int(1))))), _GLF_IDENTITY((_GLF_IDENTITY((int(1)), 0 | ((int(1))))), min((_GLF_IDENTITY((int(1)), 0 | ((int(1))))), (_GLF_IDENTITY((int(1)), 0 | ((int(1))))))))))) | 0), _GLF_IDENTITY((int(1)), min((int(1)), (int(1)))))) | _GLF_IDENTITY((0 ^ 0), int(ivec2((0 ^ 0), 1)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(0 ^ 0, max(_GLF_IDENTITY(0 ^ 0, (0 ^ 0) | (0 ^ 0)), 0 ^ 0)))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(8), int(8))))), (int(1)) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-15660) : 0))) | 0)) | 0) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), (true ? _GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)) : _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - (1 ^ 1))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ _GLF_IDENTITY(0, ~ (~ (0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) | (0 ^ 0), int(ivec3((int(1)) | (0 ^ 0), 0, (0 << _GLF_IDENTITY(int(3), int(3))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(1), (int(1)) | (0 ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0)))))))), ((_GLF_IDENTITY(int(1), (int(1)) | (0 ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) + 0)), (int(_GLF_IDENTITY(0, (0) + 0))) | (int(_GLF_IDENTITY(0, (0) + 0)))))))))) >> (0 >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)), min((_GLF_IDENTITY(0, (0) / 1)), (_GLF_IDENTITY(0, (0) / 1)))) - 0))))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(1)) | (0 ^ 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY((0 ^ 0), (_GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))), min(0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(1878)))) | 0))), (int(1)) | (_GLF_IDENTITY(0 ^ 0, max(0 ^ 0, 0 ^ 0))))) / 1)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))), clamp(0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))))))))) << (0 & 65210)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))), ~ (~ (_GLF_IDENTITY(0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))), ~ (~ (_GLF_IDENTITY(0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))), int(ivec3(0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))), 1, 0))))))))), (0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))) | (0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), ~ (~ ((int(1))))) | (_GLF_IDENTITY(int(1), ~ (~ (int(1)))))), _GLF_IDENTITY((int(1)), clamp(_GLF_IDENTITY((int(1)), clamp((int(1)), (int(1)), (int(1)))), (int(1)), _GLF_IDENTITY((int(1)), ((int(1))) | ((int(1)))))) | (0 ^ 0)))))))), _GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) | (0 ^ 0)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), (int(1)) | (0 ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))), 0))), (int(1)) | (0 ^ 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), (int(1)) | (0 ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), (int(1)) | (0 ^ 0))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) / (1 | 0)), (int(1)) | (0 ^ 0)), (_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(0, max(0, 0)) ^ 0))) ^ (0 | 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(_injected_loop_counter)))), int(1))), (int(1)) | (0 ^ _GLF_IDENTITY(0, 0 | (0))))))))))), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (int(1)) * _GLF_IDENTITY(1, 0 + (1)))))) | 0))), (((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED((-74510 & -21124)) : int(3))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(3), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec3(_GLF_IDENTITY(-43932, (_GLF_IDENTITY(-43932, min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932))) | 0), -86086, 97559).y) : 0))) - 0)), min(ivec3(int(3), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)), 0), ivec3(int(3), 1, 0)))), min(int(_GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(-93041)))), 1, 0), _GLF_IDENTITY(min(ivec3(int(3), _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(0, (0) << 0)))), ivec3(int(3), 1, 0)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)) : _GLF_FUZZED(ivec3(91128, 24533, -18844)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(3), 1, 0), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), max(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), min(min(ivec3(int(3), 1, 0), ivec3(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), 1, _GLF_IDENTITY(0, (0) ^ 0))), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, max((0) << 0, (0) << 0))))) : _GLF_FUZZED(ivec3(53859, -23870, _GLF_IDENTITY(53466, clamp(53466, 53466, 53466)))))))))))), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(int(3), 1, 0), (ivec3(int(3), 1, 0)) / ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(5), ivec3(5))) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))), min(ivec3(int(3), 1, 0), ivec3(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3), int(3))), 1, 0)))), (int(_GLF_IDENTITY(ivec3(int(3), 1, 0), min(ivec3(_GLF_IDENTITY(int(3), 0 + (int(3))), 1, 0), _GLF_IDENTITY(ivec3(int(3), 1, 0), (ivec3(int(3), 1, 0)) | ivec3(0, 0, 0)))))) ^ 0)))))), int(_GLF_IDENTITY(3, _GLF_IDENTITY((3), ((3)) - 0) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) / 1)) - 0)), _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3))))), int(3)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED((-74510 & -21124)) : int(3))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(3), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec3(_GLF_IDENTITY(-43932, (_GLF_IDENTITY(-43932, _GLF_IDENTITY(min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932), clamp(min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932), min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932), min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932))))) | 0), -86086, 97559).y) : 0))) - 0)), min(ivec3(int(3), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)), int(ivec2(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)), 0))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), 0), ivec3(int(3), 1, 0)))), min(int(_GLF_IDENTITY(ivec3(int(3), 1, 0), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec3(int(3), _GLF_IDENTITY(1, min(1, 1)), 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)) : _GLF_FUZZED(ivec3(91128, 24533, -18844)))), ~ (~ (_GLF_IDENTITY(min(ivec3(int(3), _GLF_IDENTITY(1, min(1, 1)), 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(_GLF_IDENTITY(int(3), max(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))))), 1, 0), ivec3(int(3), 1, 0)) : _GLF_FUZZED(ivec3(91128, 24533, -18844))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(3), 1, 0), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), max(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), _GLF_IDENTITY(min(min(ivec3(int(3), 1, 0), ivec3(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, _GLF_IDENTITY(0, (0) << 0))) : _GLF_FUZZED(ivec3(53859, -23870, _GLF_IDENTITY(53466, clamp(53466, 53466, 53466))))))), min(min(min(ivec3(int(3), 1, 0), ivec3(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, _GLF_IDENTITY(0, (0) << 0))) : _GLF_FUZZED(ivec3(53859, -23870, _GLF_IDENTITY(53466, clamp(53466, 53466, 53466))))))), min(min(ivec3(int(3), 1, 0), ivec3(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, _GLF_IDENTITY(0, (0) << 0))) : _GLF_FUZZED(ivec3(53859, -23870, _GLF_IDENTITY(53466, clamp(53466, 53466, 53466)))))))))))))), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(int(3), 1, 0), (ivec3(int(3), 1, 0)) / ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(5), ivec3(5))) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))), min(ivec3(int(3), 1, 0), ivec3(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3), int(3))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(int(3), 1, 0), (ivec3(int(3), 1, 0)) / ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(5), ivec3(5))) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))), min(ivec3(int(3), 1, 0), ivec3(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3), int(3))), 1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(int(3), 1, 0), (ivec3(int(3), 1, 0)) / ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(5), ivec3(5))) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))), min(ivec3(int(3), 1, 0), ivec3(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3), int(3))), 1, 0)))))), (int(_GLF_IDENTITY(ivec3(int(3), 1, 0), min(ivec3(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0 + (int(3)), (0 + (int(3))) >> 0)), 1, 0), _GLF_IDENTITY(ivec3(int(3), 1, 0), (ivec3(int(3), 1, 0)) | ivec3(0, 0, 0)))))) ^ 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec2(_GLF_IDENTITY(3, (3) / int(_GLF_ONE(1.0, injectionSwitch.y))), 1)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) / 1)) - 0)), _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3))), ~ (~ (_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3)))))))), int(3)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED((-74510 & -21124)) : _GLF_IDENTITY(int(3), int(ivec2(int(3), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(3), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(-43932, (_GLF_IDENTITY(-43932, _GLF_IDENTITY(min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932), clamp(min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932), min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932), min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932))))) | 0), max(_GLF_IDENTITY(-43932, (_GLF_IDENTITY(-43932, _GLF_IDENTITY(min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932), clamp(min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932), min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932), min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932))))) | 0), _GLF_IDENTITY(-43932, (_GLF_IDENTITY(-43932, _GLF_IDENTITY(min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932), clamp(min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932), min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932), min(_GLF_IDENTITY(-43932, 1 * (-43932)), -43932))))) | 0))), -86086, 97559).y) : 0))) - 0)), min(ivec3(int(3), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)), int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, 1 * (1)), 1), (max(_GLF_IDENTITY(1, 1 * (1)), 1)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(1, 1 * (1)), 1), (false ? _GLF_FUZZED(int(workgroup_size)) : max(_GLF_IDENTITY(1, 1 * (1)), 1)))))), 0))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), 0), ivec3(_GLF_IDENTITY(int(3), (int(3)) >> 0), 1, 0)))), min(int(_GLF_IDENTITY(ivec3(int(3), 1, 0), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec3(int(3), _GLF_IDENTITY(1, min(1, 1)), 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)) : _GLF_FUZZED(ivec3(91128, 24533, -18844)))), ~ (~ (_GLF_IDENTITY(min(ivec3(int(3), _GLF_IDENTITY(1, min(1, 1)), 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(_GLF_IDENTITY(int(3), max(int(_GLF_IDENTITY(3, 0 | (3))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))))), 1, 0), ivec3(int(3), 1, 0)) : _GLF_FUZZED(ivec3(91128, 24533, -18844))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(3), 1, 0), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), max(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), _GLF_IDENTITY(min(min(ivec3(int(3), 1, 0), ivec3(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, _GLF_IDENTITY(0, (0) << 0))) : _GLF_FUZZED(ivec3(53859, -23870, _GLF_IDENTITY(53466, clamp(53466, 53466, 53466))))))), _GLF_IDENTITY(min(min(min(ivec3(int(3), 1, 0), ivec3(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, _GLF_IDENTITY(0, (0) << 0))) : _GLF_FUZZED(ivec3(53859, -23870, _GLF_IDENTITY(53466, clamp(53466, 53466, 53466))))))), min(min(ivec3(int(3), 1, 0), ivec3(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, _GLF_IDENTITY(0, (0) << 0))) : _GLF_FUZZED(ivec3(53859, -23870, _GLF_IDENTITY(53466, clamp(53466, 53466, 53466)))))))), min(min(min(min(ivec3(int(3), 1, 0), ivec3(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, _GLF_IDENTITY(0, (0) << 0))) : _GLF_FUZZED(ivec3(53859, -23870, _GLF_IDENTITY(53466, clamp(53466, 53466, 53466))))))), min(min(ivec3(int(3), 1, 0), ivec3(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, _GLF_IDENTITY(0, (0) << 0))) : _GLF_FUZZED(ivec3(53859, -23870, _GLF_IDENTITY(53466, clamp(53466, 53466, 53466)))))))), min(min(min(ivec3(int(3), 1, 0), ivec3(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, _GLF_IDENTITY(0, (0) << 0))) : _GLF_FUZZED(ivec3(53859, -23870, _GLF_IDENTITY(53466, clamp(53466, 53466, 53466))))))), min(min(ivec3(int(3), 1, 0), ivec3(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), 1, 0)), _GLF_IDENTITY(min(ivec3(int(3), 1, 0), ivec3(int(3), 1, 0)), (true ? min(ivec3(int(3), 1, 0), ivec3(int(3), 1, _GLF_IDENTITY(0, (0) << 0))) : _GLF_FUZZED(ivec3(53859, -23870, _GLF_IDENTITY(53466, clamp(53466, 53466, 53466)))))))))))))))), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(int(3), 1, 0), (ivec3(int(3), 1, 0)) / ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(5), ivec3(5))) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))), min(ivec3(int(3), 1, 0), ivec3(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3), int(3))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(int(3), 1, 0), (ivec3(int(3), 1, 0)) / ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(5), ivec3(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec3(5), ivec3(0, 0, 0) | (ivec3(5))), ivec3(5)))), min(ivec3(int(3), 1, 0), ivec3(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3), int(3))), 1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(3), (int(3)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 0), (ivec3(int(3), 1, 0)) / ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(5), ivec3(5))) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))), min(ivec3(int(3), 1, 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (1 & 1) * (int(3))), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3), int(3))), 1, 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(int(3), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) / 1)), min(ivec3(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0 + (int(3)), (0 + (int(3))) >> 0)), 1, 0), _GLF_IDENTITY(ivec3(int(3), 1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) + 0)))))), (ivec3(int(3), 1, 0)) | ivec3(0, 0, 0)))))), 0 | ((int(_GLF_IDENTITY(ivec3(int(3), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) / 1)), min(ivec3(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0 + (int(3)), (0 + (int(3))) >> 0)), 1, 0), _GLF_IDENTITY(ivec3(int(3), 1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) + 0)))))), (ivec3(int(3), 1, 0)) | ivec3(0, 0, 0)))))))) ^ 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec2(_GLF_IDENTITY(3, (3) / int(_GLF_ONE(1.0, injectionSwitch.y))), 1)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) / _GLF_IDENTITY(1, 1 * (1)))) - 0)), _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), clamp(int(3), int(3), int(3))), int(3))), ~ (~ (_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3)))))))), int(3))) / 1)) - 0)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (int(1))), max(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(_injected_loop_counter)))))), (0 ^ _GLF_IDENTITY(0, (0) ^ 0)) + ((int(1)))) | (_GLF_IDENTITY(0, ~ (~ (0))) ^ 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), _GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), (int(1)) - 0), (int(1)) | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))) ^ 0)), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))), _GLF_IDENTITY(((_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))) >> 0, ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))) >> 0), min(_GLF_IDENTITY(~ (((_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))) >> 0), ~ (~ (~ (((_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))) >> 0)))), ~ (((_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))) >> 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) >> 0)), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), min(int(1), int(1)))) | (0 ^ 0)) : _GLF_FUZZED((_injected_loop_counter + -87355))), (true ? (true ? _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), min(int(1), int(1)))) | (0 ^ 0)) : _GLF_FUZZED((_injected_loop_counter + -87355))) : _GLF_FUZZED(-5268)))), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1)))) | (1))), (int(1)) | (0 ^ 0))))), (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), max((int(1)), (int(1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), int(int(_GLF_IDENTITY(0, (0) | (0))))) ^ 0)), 0 + (_GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ 0))) | (0 ^ 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))))) | (0 ^ 0)), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 + (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), (false ? _GLF_FUZZED(-34084) : (int(1)))) | (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 ^ (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))))))), _GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), 0 | (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-51546) : 0)) + (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), (int(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))) | (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | 0)) | (0 ^ 0)), (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), clamp(int(_GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(ivec3(int(_GLF_IDENTITY(1, (1) | (1))), 1, 1))), int(_GLF_IDENTITY(1, (1) | (1)))))) | (0 ^ 0))) ^ (0 | 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, int(ivec2(0 ^ 0, 1)))) << 0))), 0 + (_GLF_IDENTITY(int(1), (int(1)) | (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), (int(1)) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 1, 0), ~ (~ (ivec3(0, 1, 0))))), clamp(int(ivec3(0, 1, 0)), int(ivec3(0, 1, 0)), int(_GLF_IDENTITY(ivec3(0, 1, 0), ivec3(ivec4(ivec3(0, 1, 0), 0))))))) ^ 0))))))))), int(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 1, 0))))))) << 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) ^ 0), (false ? _GLF_FUZZED(92144) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, 1 * ((1) | 0)))) ^ 0))), int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-570.419))))), 0)))), int(1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6951.1390)), vec2(_GLF_FUZZED(-2.1), (injectionSwitch)[1]), bvec2(false, true))).x, 1.0, 1.0, 0.0), (true ? mat2(injectionSwitch.x, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2(6.1, -114.458, 2.2, -6581.6540))))), mix(_GLF_IDENTITY(float(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, 0.0), (true ? mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(33.00)), bool(false))), 0.0) : _GLF_FUZZED(mat2(6.1, -114.458, 2.2, -6581.6540)))))), (float(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, 0.0), (true ? mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(33.00)), bool(false))), 0.0) : _GLF_FUZZED(mat2(6.1, -114.458, 2.2, -6581.6540))))))) / _GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(437.584)), bool(false)))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), vec2(_GLF_FUZZED(-8326.3860), _GLF_FUZZED(10.08)), bvec2(false, false))).x < injectionSwitch.y)))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5480.1816) : injectionSwitch.y)), injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5480.1816) : injectionSwitch.y)), injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, true, true)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), clamp(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), int(ivec3(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 0, 0))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1)))) + 0) >> _GLF_IDENTITY(int(1), int(1)))) >> _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) << (ivec4(-26369, 83844, -66109, -21030) & ivec4(0, 0, 0, 0)))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(41898))))), int(ivec4(_injected_loop_counter, 0, 0, 1))))) < ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), (true ? ~ (int(1)) : _GLF_FUZZED(_injected_loop_counter))))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))))))), ! (! (_GLF_IDENTITY(! (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))), clamp(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), int(ivec2(int(1), 1)))) + (0 << _GLF_IDENTITY(int(1), int(1)))), int(1)))))), (! _GLF_IDENTITY((_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), min((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))), ((_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), min((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))) && true)) && true))))))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, min(0, 0))), min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) ^ 0))))) ^ (_injected_loop_counter ++)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 | (~ (_injected_loop_counter))))) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(atomicXor(workgroup_base, 2476u)) : subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)) / 1u)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, 0u + (0u))), (uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, 0u + (0u)))) >> uvec2(0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 0u))), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 0u)))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) | (subgroup_local_id)) + 1), uint(uvec2((subgroup_local_id + 1), 0u))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0) - 0.0) > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)).x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y)))), false))))))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4746.6203) : injectionSwitch.x)) > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false)))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(462.466)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), true)))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)) < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(atan(70.49)) : 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.7)), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.7)), float(injectionSwitch.x), bool(true)))) / 1.0)) - _GLF_IDENTITY(sqrt(0.0), (true ? _GLF_IDENTITY(sqrt(0.0), (false ? _GLF_FUZZED(7826.3389) : sqrt(0.0))) : _GLF_FUZZED(min(vec3(-604.838, 9.0, 1.6), vec3(20.04, -7.1, -288.934)).b)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true), bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true, true))), false, true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     subgroupAll(false);
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) << 0));
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0) * (injectionSwitch)).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0))))], injectionSwitch[1])).x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              return;
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6167.3197), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.7)), bvec2(true, false))).y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, sqrt(0.0), sqrt(1.0), sqrt(1.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-66.24, 49.55, 93.21, 3.1, 9.0, 8791.8852, 46.61, 2314.2479, -225.464)) : mat3(injectionSwitch, 0.0, 0.0, sqrt(0.0), sqrt(1.0), sqrt(1.0), 1.0, 1.0))))).y)))))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
