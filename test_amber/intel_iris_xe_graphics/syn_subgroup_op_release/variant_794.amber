#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               return;
              }
            }
           for(int _injected_loop_counter = _GLF_IDENTITY(((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, min(0, 0))))))), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) << (0 | 0)))), (_GLF_IDENTITY(int(0), int(0))) - 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(int(int(4))), 1 * (int(int(int(4)))))), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ (int(4)), (0 ^ (int(4))) << 0)))), 0 ^ (((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> 0), _GLF_IDENTITY(int(0), max(int(0), int(0)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(0), int(0)), (1 | 1))), (int(ivec2(_GLF_IDENTITY(int(0), int(0)), (1 | 1)))) | 0)), _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 ^ (int(4))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) && _GLF_IDENTITY(true, true && (true))); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(false))
                continue;
               return;
               if(_GLF_DEAD(false))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))) | (((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), 0 + (((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 else
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 ^ (1 ^ 0), (0 ^ (1 ^ 0)) | (0 ^ (1 ^ 0))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, false)))), false, true)))))), false, true))))), bool(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, false)))), false, true)))))), false, true))))), true, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((139.751 - 8.4))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), 0 ^ (int(7)))) << 0), int(7))))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), 0 | (7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               break;
              }
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)) && true, false || ((_GLF_WRAPPED_LOOP(false)) && true)))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)) && true, false || ((_GLF_WRAPPED_LOOP(false)) && true)))), true && (bool(bool(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)) && true, false || ((_GLF_WRAPPED_LOOP(false)) && true))))))) && true))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), min((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), clamp((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), clamp((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), clamp((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), clamp((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))))))) | 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))) + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))), 0)) - ivec2(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, ((0) | 0) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), (int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) - ivec2(0, 0)))) - 0))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), _GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) | 0u) + 1 : _GLF_FUZZED(96915u))), subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1))), (0u | _GLF_IDENTITY(0u, 0u ^ (0u))) ^ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size)) << 0u);
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-48.14)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))))), (float(mat2x4(injectionSwitch.y, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, sin(0.0)))) / 1.0))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      continue;
     buf[virtual_gid] = _GLF_IDENTITY(1, int(ivec4(1, 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(6, 6, 6))) / (1 & 1)))))))); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))))
      break;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), min(_GLF_FUZZED(55658), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), clamp(_GLF_FUZZED(55658), _GLF_IDENTITY(_GLF_FUZZED(55658), (false ? _GLF_FUZZED(-70022) : _GLF_FUZZED(55658))), _GLF_IDENTITY(_GLF_FUZZED(55658), 0 | (_GLF_FUZZED(55658))))) : 1))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(59851) : _GLF_IDENTITY(int(4), int(4))))))])).y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)))))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0))))[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), min(_GLF_FUZZED(55658), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), clamp(_GLF_FUZZED(55658), _GLF_IDENTITY(_GLF_FUZZED(55658), (false ? _GLF_FUZZED(-70022) : _GLF_FUZZED(55658))), _GLF_IDENTITY(_GLF_FUZZED(55658), 0 | (_GLF_FUZZED(55658))))) : 1))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(59851) : _GLF_IDENTITY(int(4), int(4))))))])).y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1)), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y))), bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(5.0)), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(5.0)), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)) || false)))))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0))))[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)))))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), min(_GLF_FUZZED(55658), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(55658, (_GLF_IDENTITY(55658, (55658) >> 0)) | (_GLF_IDENTITY(55658, (55658) >> 0)))), min(_GLF_FUZZED(55658), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(55658, (_GLF_IDENTITY(55658, (55658) >> 0)) | (_GLF_IDENTITY(55658, (55658) >> 0)))), min(_GLF_FUZZED(55658), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(55658, (_GLF_IDENTITY(55658, (55658) >> 0)) | (_GLF_IDENTITY(55658, (55658) >> 0)))), min(_GLF_FUZZED(55658), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)), false, false))))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), clamp(_GLF_FUZZED(55658), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (true ? _GLF_FUZZED(55658) : _GLF_FUZZED(41793))), _GLF_FUZZED(55658))), (false ? _GLF_FUZZED(-70022) : _GLF_FUZZED(55658))), _GLF_IDENTITY(_GLF_FUZZED(55658), 0 | (_GLF_FUZZED(55658))))) : 1))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) ? _GLF_FUZZED(59851) : _GLF_IDENTITY(int(4), int(4))))))])).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), clamp(_GLF_FUZZED(55658), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (true ? _GLF_FUZZED(55658) : _GLF_FUZZED(41793))), _GLF_FUZZED(55658))), (false ? _GLF_FUZZED(-70022) : _GLF_FUZZED(55658))), _GLF_IDENTITY(_GLF_FUZZED(55658), 0 | (_GLF_FUZZED(55658))))) : 1))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) ? _GLF_FUZZED(59851) : _GLF_IDENTITY(int(4), int(4))))))])).y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), clamp(_GLF_FUZZED(55658), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (true ? _GLF_FUZZED(55658) : _GLF_FUZZED(41793))), _GLF_FUZZED(55658))), (false ? _GLF_FUZZED(-70022) : _GLF_FUZZED(55658))), _GLF_IDENTITY(_GLF_FUZZED(55658), 0 | (_GLF_FUZZED(55658))))) : 1))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) ? _GLF_FUZZED(59851) : _GLF_IDENTITY(int(4), int(4))))))])).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), clamp(_GLF_FUZZED(55658), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (true ? _GLF_FUZZED(55658) : _GLF_FUZZED(41793))), _GLF_FUZZED(55658))), (false ? _GLF_FUZZED(-70022) : _GLF_FUZZED(55658))), _GLF_IDENTITY(_GLF_FUZZED(55658), 0 | (_GLF_FUZZED(55658))))) : 1))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) ? _GLF_FUZZED(59851) : _GLF_IDENTITY(int(4), int(4))))))])).y))))) - tan(0.0))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y, float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(-7964.6435))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec2(4, 0)))), int(4))))])).y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec2(4, 0)))), int(4))))])).y))), false, true), bvec3(bvec3(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec2(4, 0)))), int(4))))])).y))), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec2(4, 0)))), int(4))))])).y))), false, true), bvec3(bvec3(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec2(4, 0)))), int(4))))])).y))), false, true))))))))), bool(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.5)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mat3(1.0) * (vec3(1.0, 1.0, 1.0)))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true))), 0.0, 0.0, 1.0)), _GLF_IDENTITY(mix(float(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(1904.1840)), bool(false)), min(mix(float(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(1904.1840)), bool(false)), mix(float(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(1904.1840)), bool(false))))))), bool(true)))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (_GLF_FUZZED(55658)) - 0), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.5)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(1904.1840)), bool(false))))), bool(true)))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (_GLF_FUZZED(55658)) - 0), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) << 0)))])).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), (false ? _GLF_FUZZED(-20415) : _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec2(4, 0)))), int(4))))])).y))), bool(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, exp(0.0), 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, exp(0.0), 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(0.5, clamp(_GLF_IDENTITY(0.5, float(mat4x3(0.5, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.5, 0.5)))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 1.0))), 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : 0.0)), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(1904.1840)), bool(false))))), bool(true)))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (_GLF_FUZZED(55658)) - 0), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(4))), int(4))))])).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-399.755) : 1.0))) / 1.0)) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) - log(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat4x2(vec4(1.0, 1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 0.0)))))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.5)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(7047.7454, -7.0, -58.91)) : vec3(0.0, 0.0, 0.0))), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-716.225) : 0.0)), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(1904.1840)), bool(false))))), bool(true)))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (_GLF_FUZZED(55658)) - 0), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), (false ? _GLF_FUZZED(-20415) : _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec2(4, 0)))), int(4))))])).y))), bool(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, exp(0.0), 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, exp(0.0), 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(0.5, clamp(_GLF_IDENTITY(0.5, float(mat4x3(0.5, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.5, 0.5)))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 1.0))), 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : 0.0)), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(1904.1840)), bool(false))))), bool(true)))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (_GLF_FUZZED(55658)) - 0), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(4))), int(4))))])).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-399.755) : 1.0))) / 1.0)) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) - log(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat4x2(vec4(1.0, 1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 0.0)))))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.5)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(7047.7454, -7.0, -58.91)) : vec3(0.0, 0.0, 0.0))), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-716.225) : 0.0)), 0.0)), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(1904.1840)), bool(false))))), bool(true)))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (_GLF_FUZZED(55658)) - 0), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), true, false, true)), bool(bvec4(bool(bvec4((! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55658) : 1))) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), int(ivec2(4, 0)))), int(4))))])).y))), bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.5)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-1.5, 67.01, 9.4, -2.2))))))) / abs(1.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(1904.1840)), bool(false))))), bool(true)))), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)))))[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (_GLF_FUZZED(55658)) - 0), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.5)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-1.5, 67.01, 9.4, -2.2))))))) / abs(1.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(1904.1840)), bool(false))))), bool(true)))), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)))))[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (_GLF_FUZZED(55658)) - 0), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.5)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-1.5, 67.01, 9.4, -2.2))))))) / abs(1.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(1904.1840)), bool(false))))), bool(true)))), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)))))[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (_GLF_FUZZED(55658)) - 0), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)))))), false))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.6, 3.7)))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.5)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(1904.1840)), bool(false))))), bool(true)))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(55658), max(_GLF_IDENTITY(_GLF_FUZZED(55658), (_GLF_FUZZED(55658)) - 0), _GLF_FUZZED(55658))) : 1))) ^ (0 << _GLF_IDENTITY(int(4), int(4))))])).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, true)), true, false, false))))))))))) || false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))) || false), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))), true)))))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))))))), false, false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)) && true))), false, false, false)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(false, true && (false))) || false), true, false), false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, true, true))), false)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), false, false, false))))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))))))), ! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))), true))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), true, true, true))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) - 0) != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))) && true)))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
                return;
               continue;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))), false || (false))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(-66.85)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
                      break;
                    }
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-4285.2208), _GLF_IDENTITY(_GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch))[1], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]) - 0.0), mix(float(_GLF_FUZZED(48.23)), float(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]) - 0.0)), bool(true)))), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(0.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), vec2(mat3x4(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - sqrt(vec2(0.0, 0.0))))), vec2(mat2(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(1.5)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0))), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat3(mat3(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), sqrt(0.0), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(mat3x4(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0, ((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0) + 0.0))), min((_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0, ((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0) + 0.0))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0, ((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0) + 0.0))))) - 0.0), 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(208.602)), bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(47.00)), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), sqrt(0.0), 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.6)), bool(false))), 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-4285.2208), _GLF_IDENTITY(_GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch))[1], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]) - 0.0), mix(float(_GLF_FUZZED(48.23)), float(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]) - 0.0)), bool(true)))), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(0.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), vec2(mat3x4(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - sqrt(vec2(0.0, 0.0))))), vec2(mat2(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(1.5)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0))), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat3(mat3(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), sqrt(0.0), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(mat3x4(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0, ((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0) + 0.0))), min((_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0, ((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0) + 0.0))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0, ((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0) + 0.0))))) - 0.0), 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(208.602)), bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(47.00)), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), sqrt(0.0), 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.6)), bool(false))), 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-4285.2208), _GLF_IDENTITY(_GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch))[1], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]) - 0.0), mix(float(_GLF_FUZZED(48.23)), float(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]) - 0.0)), bool(true)))), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(0.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), vec2(mat3x4(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - sqrt(vec2(0.0, 0.0))))), vec2(mat2(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(1.5)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0))), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat3(mat3(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), sqrt(0.0), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(mat3x4(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0, ((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0) + 0.0))), min((_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0, ((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0) + 0.0))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0, ((_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0) + 0.0))))) - 0.0), 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(208.602)), bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(47.00)), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), sqrt(0.0), 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.6)), bool(false))), 0.0, 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))), vec2(mat3x4(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, cos(0.0), 1.0, log(1.0), sin(0.0), sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0)), mix(float(_GLF_FUZZED(-895.700)), float(float(mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, cos(0.0), 1.0, log(1.0), sin(0.0), sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0))), bool(true))))))), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(cos(vec2(-3.6, 291.189)), vec2(-76.06, -4.9))) : 1.0)))))), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0)), sqrt(0.0), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(mat3x4(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0)))) - 0.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0))), 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), sqrt(0.0), 1.0, 0.0)) - mat4x3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(49.04)), float(0.0), bool(true))))), 0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0)))) + vec2(0.0, 0.0)))).x)), min(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.9, -5.1)))), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x)), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) * mat2(1.0))))))))).x)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (1) / 1), false || (_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))) / 1)))); _injected_loop_counter ++)
                  {
                   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(0, int(int(0)))), (_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(0, int(int(0)))), (ivec2(64, _GLF_IDENTITY(0, int(int(0))))) | (ivec2(64, _GLF_IDENTITY(0, int(int(0))))))) / ivec2(1, 1)))), 4);
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7835.5199), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-397.311)), bvec2(true, false)))) : injectionSwitch)))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       return;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(88.35), _GLF_FUZZED(80.87)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))), ! (_GLF_IDENTITY(! (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(88.35), _GLF_FUZZED(80.87)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)))))), bool(bool(! (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(88.35), _GLF_FUZZED(80.87)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))))))))) && true)))
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)));
      }
     subgroupAll(_GLF_IDENTITY(false, (false) && true));
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(false)))))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, determinant(mat3(1.0, sin(0.0), 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) * 1.0), exp(0.0), 1.0, abs(0.0)), mat2x4(mat4(mat2x4(injectionSwitch.y, determinant(mat3(1.0, sin(0.0), 0.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 1.0, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(5108.8982)), float(cos(_GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, abs(1.0)))))), bool(true))), exp(0.0), 1.0, abs(0.0)))))), float(float(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, determinant(mat3(1.0, sin(0.0), 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, cos(0.0), exp(0.0), 1.0, _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), mat2x4(mat4(mat2x4(injectionSwitch.y, determinant(mat3(1.0, sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.6) : 0.0))), 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, cos(0.0), exp(0.0), 1.0, abs(0.0)))))))))), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7.3 * 77.78))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false, bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false, true)))))))), ! (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6509.5503))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7.3 * 77.78))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false, bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false, bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false, bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false, true)))), false || (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false, bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false, true))))))))))))))))))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(_GLF_IDENTITY((0u | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) + 0u))), min((0u | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u ^ (6u))), uint(6u)), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (_GLF_IDENTITY(uint(6u), 0u | (uint(6u))))))) + 0u))), (_GLF_IDENTITY(0u | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) + 0u)), (144666u & 0u) + (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)) | _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) + 0u)), clamp(_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, 6u))), uint(_GLF_IDENTITY(6u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 6u)))), (_GLF_IDENTITY(uint(6u), uint(6u))) + 0u)), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) + 0u))) << 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))))), (_GLF_IDENTITY(uint(6u), uint(6u))) + 0u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(next_virtual_gid)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(next_virtual_gid)))), (false ? _GLF_FUZZED(next_virtual_gid) : uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(next_virtual_gid))))))) / 1u))) + 0u))))))))), _GLF_IDENTITY(((0u | (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))))) << 0u, 0u | (((0u | (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))))) << 0u))))], uint(2), 4, 64, 4);
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
                return;
               return;
              }
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     do
      {
       subgroupAll(true);
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), true, true)))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false)) || false), (! ((_GLF_IDENTITY(false, (false) || false)) || false)) && true))))))));
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
