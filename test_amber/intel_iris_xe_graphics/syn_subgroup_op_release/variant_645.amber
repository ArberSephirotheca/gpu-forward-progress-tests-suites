#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id) | (workgroup_id), ((workgroup_id) | (workgroup_id)) << 0u)))))) << 0u);
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), 1u))), 0u | (subgroup_local_id)), _GLF_IDENTITY(1u, (1u) | (1u)) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), 0u | (subgroup_local_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), 1u))), 0u | (subgroup_local_id)), _GLF_IDENTITY(1u, (1u) | (1u)) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), 0u | (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), 1u))), 0u | (subgroup_local_id)), _GLF_IDENTITY(1u, (1u) | (1u)) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), 0u | (subgroup_local_id))))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) | (workgroup_base + subgroup_id * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(uaddCarry(75000u, virtual_gid, virtual_gid)) : subgroup_local_id)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))), subgroup_local_id)), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(uaddCarry(75000u, virtual_gid, virtual_gid)) : subgroup_local_id)))))) + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(max(subgroup_local_id + 1, subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) + 1, subgroup_local_id + 1), ~ (~ (max(subgroup_local_id + 1, subgroup_local_id + 1))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) + 1, subgroup_local_id + 1), ~ (~ (max(subgroup_local_id + 1, subgroup_local_id + 1))))), ((_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) + 1, subgroup_local_id + 1), ~ (~ (max(subgroup_local_id + 1, subgroup_local_id + 1)))))) | ((_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) + 1, subgroup_local_id + 1), ~ (~ (max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))))))), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) + 1, subgroup_local_id + 1), ~ (~ (max(subgroup_local_id + 1, subgroup_local_id + 1))))), ((_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) + 1, subgroup_local_id + 1), ~ (~ (max(subgroup_local_id + 1, subgroup_local_id + 1)))))) | ((_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) + 1, subgroup_local_id + 1), ~ (~ (max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))))))), 1u, 0u, 1u))) ^ 0u)) * 1u)), subgroup_local_id + 1)))), 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(subgroup_local_id, 1u, 0u))), uint(_GLF_IDENTITY(uvec3(~ (uint(uvec3(subgroup_local_id, 1u, 0u))), 0u, 1u), clamp(uvec3(~ (uint(uvec3(subgroup_local_id, 1u, 0u))), 0u, 1u), uvec3(~ (uint(uvec3(subgroup_local_id, 1u, 0u))), 0u, 1u), uvec3(~ (uint(uvec3(subgroup_local_id, 1u, 0u))), 0u, 1u)))))))) + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(subgroup_local_id, 1u, 0u))), uint(_GLF_IDENTITY(uvec3(~ (uint(uvec3(subgroup_local_id, 1u, 0u))), 0u, 1u), clamp(uvec3(~ (uint(uvec3(subgroup_local_id, 1u, 0u))), 0u, 1u), uvec3(~ (uint(uvec3(subgroup_local_id, 1u, 0u))), 0u, 1u), uvec3(~ (uint(uvec3(subgroup_local_id, 1u, 0u))), 0u, 1u)))))))) + 1, subgroup_local_id + 1)))))) >> 0u, ~ (~ (((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(subgroup_local_id, 1u, 0u))), uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((uint(uvec3(subgroup_local_id, 1u, 0u))), ((uint(uvec3(subgroup_local_id, 1u, 0u)))) | ((uint(uvec3(subgroup_local_id, 1u, 0u))))), 0u, 1u), clamp(uvec3(~ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, 0u)), 1u * (uint(uvec3(subgroup_local_id, 1u, 0u))))))), 0u, 1u), uvec3(~ (uint(uvec3(subgroup_local_id, 1u, 0u))), 0u, 1u), uvec3(~ _GLF_IDENTITY((uint(uvec3(subgroup_local_id, 1u, 0u))), (_GLF_IDENTITY((uint(uvec3(subgroup_local_id, 1u, 0u))), ((uint(uvec3(subgroup_local_id, 1u, 0u)))) | 0u)) / 1u), 0u, 1u)))))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(84674) : 1)))))), subgroup_local_id + _GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))))) >> 0u)))) % subgroup_size);
 do
  {
   do
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
          {
           do
            {
             buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (1));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) | 0u))
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) - 0))), 0 | (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) - 0))), min((~ (_GLF_IDENTITY(64, (64) - 0))), (~ (_GLF_IDENTITY(64, (64) - 0))))))), 0 | (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) - 0))), 0 | (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) - 0))), min((~ (_GLF_IDENTITY(64, (64) - 0))), (~ (_GLF_IDENTITY(64, (64) - 0)))))))))), 64))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), 0 + (_GLF_IDENTITY(~ (4), (~ (4)) << (0 << _GLF_IDENTITY(int(7), int(7)))))))), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096), clamp(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096), ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096), ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096))).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (true ? ivec4(-54150, -75072, -13311, 41096).y : _GLF_FUZZED(-49661)))), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), min(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), _GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096), min(ivec4(-54150, -75072, -13311, 41096), _GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096), (ivec4(-54150, -75072, -13311, 41096)) - ivec4(0, 0, 0, 0)))).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(-54150, (_GLF_IDENTITY(-54150, (-54150) - 0)) | (-54150)), (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))))))) * int(_GLF_ONE(1.0, injectionSwitch.y))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))), max(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))), _GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))), max(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))), _GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))), max(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))), _GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))), max(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))), _GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0))))))))) >> 0), _GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (_GLF_IDENTITY(-13311, (-13311) | 0))))) << (0 & -7348)), _GLF_IDENTITY(-13311, _GLF_IDENTITY((_GLF_IDENTITY(-13311, (-13311) | (-13311))), int(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(-13311, (-13311) | (-13311))))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, min(_GLF_IDENTITY(-13311, int(ivec3(-13311, 1, 0))), -13311)), 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), ~ (~ _GLF_IDENTITY((_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)), ((_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))) | ((_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, 0 ^ (_GLF_IDENTITY(-54150, clamp(-54150, -54150, -54150)))), -75072, -13311, 41096).y), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))), _GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, _GLF_IDENTITY(-13311, max(_GLF_IDENTITY(_GLF_IDENTITY(-13311, ~ (~ (-13311))), (_GLF_IDENTITY(-13311, ~ (~ (-13311)))) << (0 & -7348)), _GLF_IDENTITY(-13311, (_GLF_IDENTITY(-13311, (-13311) | (-13311))) / 1))), 41096).y), (false ? _GLF_FUZZED(_GLF_IDENTITY(70448, (70448) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), clamp(_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), 0 + (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y))), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, _GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)) | (_GLF_IDENTITY(min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y), (min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)) - 0)))), ~ (~ (_GLF_IDENTITY(ivec4(-54150, -75072, -13311, 41096).y, min(ivec4(-54150, -75072, -13311, 41096).y, ivec4(-54150, -75072, -13311, 41096).y)))))))) >> 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), (0 << _GLF_IDENTITY(int(0), int(0))) | (_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y))), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y)))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y), (_GLF_FUZZED(ivec4(-54150, -75072, -13311, 41096).y)) / (0 ^ 1)), ~ (~ (_GLF_FUZZED(ivec4(_GLF_IDENTITY(-54150, (-54150) ^ 0), -75072, -13311, 41096).y))))))) ^ 0)))))) : 4)));
         subgroupAll(false);
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(true, false, true))), ! (! (! (bool(bvec3(true, false, true))))))))), false, false, true))) && ((injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(true, false, true))), ! (! (! (bool(bvec3(true, false, true))))))))), false, false, true))) && ((injectionSwitch.x < injectionSwitch.y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-442.216), _GLF_FUZZED(-99.86)), bvec2(false, false))) * vec2(1.0, 1.0)).y), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec4(bvec3(bvec3(true, false, true)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec4(bvec3(bvec3(true, false, true)), false)))), false))))), ! (_GLF_IDENTITY(! (bool(bvec3(true, false, true))), ! (! (! _GLF_IDENTITY((bool(bvec3(true, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))), true && ((bool(bvec3(true, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))))))))))), false, false, true))) && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(838.629))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.7)), bool(false))), mix(float(_GLF_FUZZED(8331.9153)), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.4, 8.4)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-40.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6414.0111)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))).y), bool(true))))), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, true, false)))) || false)))))))))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false, false)))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8331.9153)), float(injectionSwitch.y), bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false, false))))), bool(bvec4(true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8331.9153)), float(injectionSwitch.y), bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false, false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))) || (_GLF_WRAPPED_IF_TRUE(true))) || _GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec3(false || (_GLF_WRAPPED_IF_TRUE(true)), false, false)))))
                {
                 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), 1u * (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(min(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-27160) : _GLF_IDENTITY(4, max(4, 4)))), 4), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-27160) : 4)), 4), (min(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(-27160) : 4, 0 ^ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-27160) : 4)))), 4)) + 0)) ^ 0)), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))), false || ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))), false || ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))), false || ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))), false || ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))), false || ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))), false || ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))), false || ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)))))))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) ? _GLF_FUZZED(5759) : 4)), 64, _GLF_IDENTITY(4, (4) << 0));
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))));
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (0)))); _GLF_IDENTITY(_injected_loop_counter --, ~ (_GLF_IDENTITY(~ (_injected_loop_counter --), 0 ^ (~ (_injected_loop_counter --))))))
            {
             subgroupAll(true);
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
