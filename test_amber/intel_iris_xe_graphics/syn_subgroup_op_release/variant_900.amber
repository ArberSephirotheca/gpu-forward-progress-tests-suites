#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat4 _f0;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) || false)))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! _GLF_IDENTITY((! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! _GLF_IDENTITY((! ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), false || ((! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || _GLF_IDENTITY(((! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(((! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))), true, true), false)), true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))))), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, abs(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sqrt(vec2(0.0, 0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9312.1603) : dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9312.1603) : dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9312.1603) : dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, true, false, false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9312.1603) : dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9312.1603) : dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, true, false, false)))))))))))))) || false)), true, true, false)), true && (bool(bvec4((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9312.1603) : dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9312.1603) : dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9312.1603) : dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, true, false, false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9312.1603) : dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9312.1603) : dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, true, false, false)))))))))))))) || false)), true, true, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-817.584)), bool(false))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))) || false)) || false), false)), bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || false)))), _GLF_IDENTITY(false, ! (! (false))))), true, true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true, false, true)))))), _GLF_IDENTITY(false, true && (false)))), bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))), false)), true, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.8) : injectionSwitch.x)))) > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)), bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))), true, true))), false), true)))))))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 0.0, abs(0.0), sqrt(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 0.0, abs(0.0), sqrt(0.0), 0.0)), min(float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 0.0, abs(0.0), sqrt(0.0), 0.0)), float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 0.0, abs(0.0), sqrt(0.0), 0.0)))) : _GLF_FUZZED(-73.15))))))))))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 0.0, abs(0.0), sqrt(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 0.0, abs(0.0), sqrt(0.0), 0.0)), min(float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 0.0, abs(0.0), sqrt(0.0), 0.0)), float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 0.0, abs(0.0), sqrt(0.0), 0.0)))) : _GLF_FUZZED(-73.15))))))))))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 0.0, abs(0.0), sqrt(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 0.0, abs(0.0), sqrt(0.0), 0.0)), min(float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 0.0, abs(0.0), sqrt(0.0), 0.0)), float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 0.0, abs(0.0), sqrt(0.0), 0.0)))) : _GLF_FUZZED(-73.15))))))))))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) && true), false)), true, true))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(faceforward(-3.4, 3.5, 41.94)) : injectionSwitch.x)) : _GLF_FUZZED(7.3))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) : injectionSwitch), clamp((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(-398.887, 3152.5877, -64.61, 7751.3164)) : mat2(_GLF_ONE(1.0, injectionSwitch.y))))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)), ((_GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) : injectionSwitch), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(injectionSwitch) : (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)), ((_GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) : injectionSwitch))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.25)), float(1.0), bool(true))), injectionSwitch.y))) : injectionSwitch), min((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(ceil(injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) : injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) : injectionSwitch)))))).y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), false, false, true))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), false, true)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), false, false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), false, false, true))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), false, false, true))), true))))))), false, false, false))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.5), _GLF_FUZZED(8.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.5), _GLF_FUZZED(8.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))), injectionSwitch))) : injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))) && _GLF_IDENTITY(true, (true) && true)), false, false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), min((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), clamp((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, mix(float(_GLF_FUZZED(367.129)), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(true)))), false, false, true))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), min((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, max(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), clamp((false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, mix(float(_GLF_FUZZED(367.129)), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(66.30)), float((injectionSwitch)[1]), bool(true))) : _GLF_FUZZED(94.62)))), vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(4777.8426)), bvec2(false, false))))).y), bool(true)))), false, false, true)))) || false)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * mat3(1.0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) : injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), false, false, true))))), true && ((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * mat3(1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))))) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)).y), false, false, true))))))))), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false)))))))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), true, true)))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false)))))), bool(bvec3(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.0)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), exp(0.0))), min(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), exp(0.0))), float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), exp(0.0)))))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.0)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true))))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), clamp(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), exp(0.0))), min(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), exp(0.0))), float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), exp(0.0)))))) > injectionSwitch.y))))))), false)), true, true)))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true)))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), _GLF_IDENTITY(true, (true) && true))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), _GLF_IDENTITY(true, (true) && true))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true)))))), true && (! ((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), _GLF_IDENTITY(true, (true) && true))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true)))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) || false)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), ! (! (_GLF_IDENTITY(false || (! (false)), ! (! (false || (! (false)))))))))), bool(bvec4(! (_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))) && true), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))) && true) && true)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))) && true) && true)))))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))) && true) && true))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))) && true) && true))))))))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))) && true) && true))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))) && true) && true))))))))))), true)))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), true, false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), true, false))), false, false)), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), true, false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), true, false))), false, false)), false, true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), true, false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))) && true) && true)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))) && true) && true)))))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))) && true) && true))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))) && true) && true))))))))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))) && true) && true))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))))) && true) && true))))))))))), true)))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), true, false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), true, false))), false, false)), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), true, false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), true, false))), false, false)), false, true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false)) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), true, false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))), true)))), true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false)) && true, ! (! ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false)) && true))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))) && true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), 1.0, 1.0, sqrt(1.0), 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), (bool(_GLF_DEAD(false))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((4.4 + 73.71)), _GLF_FUZZED(1.9)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((4.4 + 73.71)), clamp(_GLF_FUZZED((4.4 + 73.71)), _GLF_FUZZED((4.4 + 73.71)), _GLF_IDENTITY(_GLF_FUZZED((4.4 + 73.71)), (_GLF_FUZZED((4.4 + 73.71))) / 1.0))), _GLF_FUZZED(1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((4.4 + 73.71)), clamp(_GLF_FUZZED((4.4 + 73.71)), _GLF_FUZZED((4.4 + 73.71)), _GLF_IDENTITY(_GLF_FUZZED((4.4 + 73.71)), (_GLF_FUZZED((4.4 + 73.71))) / 1.0))), _GLF_FUZZED(1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)) / sqrt(vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0)), sqrt(1.0) * (float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), ! (! (bool(bvec2((! (false)), true)))))))) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), (vec2(mat2(injectionSwitch, 1.0, 1.0))) / vec2(1.0, 1.0)))) * vec2(1.0, 1.0)).y)) && ((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + sin(determinant(mat2(0.0, 0.0, 0.0, 0.0))), float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + sin(determinant(mat2(0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + sin(determinant(mat2(0.0, 0.0, 0.0, 0.0))), max((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + sin(determinant(mat2(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + sin(determinant(mat2(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + sin(determinant(mat2(0.0, 0.0, 0.0, 0.0))), mix(float((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + sin(determinant(mat2(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-4228.5021)), bool(false))))), 0.0, sin(0.0), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0)))) < injectionSwitch.y))))))))))), ((! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-72.19, 312.850, -648.685, -848.028)) : mat2(1.0)))))), (injectionSwitch) * mat2(1.0)))))).y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED((726.636))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) - 0.0), 1.0))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(-72.19, mix(float(-72.19), float(_GLF_FUZZED(5205.6032)), bool(false))), 312.850, -648.685, -848.028)) : mat2(1.0)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)))))).y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.1)), bool(false))) < injectionSwitch.y) || false)))))), false || (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), true)))))))))))) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(33.23)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), false)))), (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), false)))), ! (! ((! (bool(bvec2(_GLF_DEAD(false), false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), (float(mat3x4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)))), 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))) / 1.0)), injectionSwitch.x), mix(float(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), (float(mat3x4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)))), 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))) / 1.0)), injectionSwitch.x)), float(_GLF_FUZZED(-79.50)), bool(false)))) < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)]))) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.9) : 0.0)), 0.0)).y)), false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))) && true), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec2(! (_GLF_IDENTITY(false, false || (false))), false)))))) && true, bool(bvec2((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) && true, true))))) || false)))), true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) | _GLF_IDENTITY((0u), max((0u), (0u)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u ^ 0u, min(_GLF_IDENTITY(0u ^ 0u, max(0u ^ 0u, 0u ^ 0u)), _GLF_IDENTITY(0u ^ 0u, uint(uvec4(0u ^ 0u, 0u, 1u, 1u)))))), clamp(0u ^ (_GLF_IDENTITY(0u ^ 0u, min(_GLF_IDENTITY(0u ^ 0u, max(0u ^ 0u, 0u ^ 0u)), _GLF_IDENTITY(0u ^ 0u, uint(uvec4(0u ^ 0u, 0u, 1u, 1u)))))), 0u ^ (_GLF_IDENTITY(0u ^ 0u, min(_GLF_IDENTITY(0u ^ 0u, max(0u ^ 0u, 0u ^ 0u)), _GLF_IDENTITY(0u ^ 0u, uint(uvec4(0u ^ 0u, 0u, 1u, 1u)))))), 0u ^ (_GLF_IDENTITY(0u ^ 0u, min(_GLF_IDENTITY(0u ^ 0u, max(0u ^ 0u, 0u ^ 0u)), _GLF_IDENTITY(0u ^ 0u, uint(uvec4(0u ^ 0u, 0u, 1u, 1u))))))))))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (0u ^ 0u))), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (0u ^ 0u))), 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (0u ^ 0u))), 1u, 1u))) ^ 0u))), 0u ^ ((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (0u ^ 0u)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-1.7, 1960.6123, -88.74, -50.42, 500.911, 8.2, 49.77, 4.9)))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat4(1.0), gl_WorkGroupID.x);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, true && (false))), true, false))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, max(_GLF_struct_replacement_0.workgroup_id, _GLF_struct_replacement_0.workgroup_id)), 0u ^ (workgroup_size * _GLF_struct_replacement_0.workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! ((_GLF_IDENTITY(! (false), (! (false)) && true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true))), false))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(43.23)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.4))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(vec4(-463.582, -3.4, -2729.7621, 1.9).p), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true))).y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))))), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), true, false), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + subgroup_id * subgroup_size)) | _GLF_IDENTITY((~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))), ((~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))))) / 1u)))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6024.6533, -0.0)) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(46.26)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.6)), vec2(_GLF_FUZZED(-6.1), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-356.584), _GLF_FUZZED(245.525)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, true && (true)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), 0u)))), (true ? uint(uvec2(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), 0u)) : _GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), clamp(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id, subgroup_local_id))))), 0u), (uvec2(subgroup_local_id, 0u)) | uvec2(0u, 0u)))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(1))), 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1)), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), 1u)))))) | (subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) + 0u, (_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) + 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) + 0u, (true ? _GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) + 0u : _GLF_FUZZED(virtual_gid)))) + 0u)))) + 1, 0u | (subgroup_local_id + 1)), 1u, 1u, 0u), (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), 1u, 1u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), 0u | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u))))))) : _GLF_FUZZED(virtual_gid))))) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))) + 0u) + 1, 0u | (subgroup_local_id + 1)), 1u, 1u, 0u), (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), 1u, 1u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), ~ (~ (0u))) : _GLF_FUZZED(virtual_gid))))) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(0u, 0u, 0u)), 1u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(0u, 0u, 0u)), 1u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(0u, 0u, 0u)), 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(0u, 0u, 0u)))))))))) | 0u)), 1u)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(4.9)), min((true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(4.9)), (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(4.9))))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false))))), true, true, false)), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false))))), true, true, false)), true, true))))))), false || ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(4.9))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(true && (false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true && (false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (bool(injectionSwitch.x > injectionSwitch.y)), true && (! (bool(injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-724.655, 8.7), -26.71, 152.368)))), injectionSwitch)).y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED((false ? 627.291 : 1496.8126)), _GLF_FUZZED(-2.2)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1]), bvec2(true, true))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.3)), vec2(_GLF_FUZZED(-142.647), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(55.37) : injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) / 1.0)), injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false))))) || false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))))), false, false), true)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) / 1.0)), injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false))))) || false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))))), false, false), true))))), (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) / 1.0)), injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false))))) || false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))))), false, false), true)))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec3(4, 0, (0 << _GLF_IDENTITY(int(4), int(4)))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, true && (false)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, (false) && true) || (false)) || false))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x) + 0.0), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)) > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true)), (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))))), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), false || (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), true, false)), (bool(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), true, false))) || false))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) - tan(0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) : _GLF_FUZZED(-4408.7402))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6028.2854) : 1.0)), float(mat2x4(1.0, 0.0, tan(0.0), 1.0, log(1.0), 0.0, 0.0, 0.0)))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(485.999, 865.319)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))), (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), true, true)))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec4(4, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), max(1, _GLF_IDENTITY(1, 0 ^ (1)))), 1))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) / 1), _GLF_IDENTITY(4, ~ (~ (4))));
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
