#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat4x2 _f0;
 uvec3 _f1;
 vec4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 bool _f1;
 mat4x2 _f2;
 ivec3 _f3;
 ivec3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 mat4 _f1;
 bvec4 _f2;
 ivec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 mat3x4 _f1;
 _GLF_struct_0 _f2;
 mat2 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
 uint workgroup_id;
 mat2x4 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 uint _f1;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.0))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0))) < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))))))), ((! (false))) || false)) || false)))), ! (! (bool(bvec3(false, false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0))) < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))))))), ((! (false))) || false)) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))), ((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))), uvec3(uvec3((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))) + (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))), (uint(6u)) - 0u)))))).x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(mat2x4(1.0), mat3x4(1.0), _GLF_struct_0(mat3x2(1.0), mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.6) : max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), _GLF_ONE(1.0, injectionSwitch.y), length(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-1192.8868), max(_GLF_FUZZED(-1192.8868), _GLF_FUZZED(-1192.8868))))), min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-1192.8868), max(_GLF_FUZZED(-1192.8868), _GLF_FUZZED(-1192.8868))))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-1192.8868), max(_GLF_FUZZED(-1192.8868), _GLF_FUZZED(-1192.8868))))))), 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1742.0120) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.4) : 0.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-964.575)), float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(661.880), _GLF_FUZZED(39.57)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1]))), (injectionSwitch)[1]))), bvec2(true, true))).x)), bool(true)))), mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(length(0.0), mix(_GLF_IDENTITY(float(length(0.0)), mix(float(float(length(0.0))), float(_GLF_FUZZED(712.495)), bool(false))), float(_GLF_FUZZED(_GLF_IDENTITY(-5.7, mix(float(_GLF_IDENTITY(-5.7, (true ? -5.7 : _GLF_FUZZED(521.295)))), float(_GLF_FUZZED(583.436)), bool(false))))), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-50.92))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(75.51)), float(0.0), bool(true))))))), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (true ? determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-955.560)))))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x), sqrt(0.0), 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0)), 0.0))))))))), bvec4(true), ivec3(1), uvec2(1u)), mat2(1.0), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec2(bvec2(bvec2(bvec2(true)))))), false))))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), false)))))), true, _GLF_IDENTITY(false, true && (false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true))))))), false, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true))))))), false))), true, mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0 + (_GLF_IDENTITY(1.0, (1.0) + 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0 + (_GLF_IDENTITY(1.0, (1.0) + 0.0)))) / 1.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, (1.0) + 0.0)))), ivec3(1), ivec3(1), mat4(1.0)), _GLF_struct_2(mat4x2(1.0), uvec3(1u), vec4(1.0), mat2x4(1.0)), gl_WorkGroupID.x, mat2x4(1.0)), 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)) * _GLF_struct_replacement_4._f0.workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))), workgroup_base + subgroup_id * subgroup_size)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / 1u, min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 1u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), max(subgroup_local_id, subgroup_local_id))) / 1u, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / 1u))), (subgroup_local_id) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) + 0u)), uint(0u))) / _GLF_IDENTITY(1u, ~ (~ (1u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))), _GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) ^ 0)), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) ^ 0))) | (66828u & 0u)) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), min((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1))) % subgroup_size)), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | 0u, max(((subgroup_local_id + 1) % subgroup_size) | 0u, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1)))))) % subgroup_size) | 0u) - (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), 0u | (clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u + ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1))))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) * 1u)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ (0 & -8100))), max((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ (0 & -8100))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ (0 & -8100))))) % subgroup_size)), ((subgroup_local_id + 1) % subgroup_size) | 0u)))), 0u ^ (clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) >> (104176u & 0u))) + 1)) + 0u) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1) % subgroup_size))) | 0u))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) + 0u) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (subgroup_local_id)) + 1) % subgroup_size) | 0u, max(((subgroup_local_id + 1) % subgroup_size) | 0u, ((subgroup_local_id + 1) % subgroup_size) | 0u)))), 0u | (clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u + ((subgroup_local_id + 1))))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), 0u + ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) * 1u)) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ (0 & -8100))) % subgroup_size)), ((subgroup_local_id + 1) % subgroup_size) | 0u)))), 0u ^ (clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)) + 0u) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)))) - 0u) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(6587)))) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1) % subgroup_size))) | 0u)))))))) | 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | 0u, min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | 0u, 0u ^ (((subgroup_local_id + 1) % subgroup_size) | 0u)), ((subgroup_local_id + 1) % subgroup_size) | 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), 1u * (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u)))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)))) << 0u)), 0u, 0u, 1u), (uvec4((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), 0u | _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), uint(uvec2((subgroup_local_id), 1u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), _GLF_IDENTITY(1u * ((subgroup_local_id)), (1u * ((subgroup_local_id))) ^ 0u)))))) ^ 0u) + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | (0)))))) % subgroup_size) | 0u, max(((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size) | 0u, ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) ^ 0)) % subgroup_size) | 0u)))))), 0u, 0u, 1u)) * uvec4(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(165538u) : (1u))), (1u)))), 1u)), 1u, 1u, 1u))), 1u * (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))) + _GLF_IDENTITY(1, 0 ^ (1))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))) + _GLF_IDENTITY(1, 0 ^ (1)))) >> 0u) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u | (subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)) - 0u) % subgroup_size) - 0u), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1, subgroup_local_id + 1, subgroup_local_id + 1))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) | (subgroup_local_id + 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), max((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)))), clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), 0u + (_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) | (uint(subgroup_local_id))))))) + _GLF_IDENTITY(1, (1) - 0), subgroup_local_id + 1))))))) % subgroup_size), max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)), subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)), subgroup_local_id + 1, subgroup_local_id + 1)))) << 0u), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), subgroup_local_id + 1))))))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY(0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), max((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), subgroup_local_id + 1)))))), clamp(0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), max((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), subgroup_local_id + 1)))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), max((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), subgroup_local_id + 1)))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), max((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), subgroup_local_id + 1)))))), (0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), max((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), subgroup_local_id + 1))))))) | (0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), max((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), subgroup_local_id + 1))))))))))) % subgroup_size)) | 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), max((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)), min(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)), subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)))), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - 0), subgroup_local_id + 1))))))) % subgroup_size))) | 0u)))), 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), 1u), (_GLF_IDENTITY(uvec4((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)), (subgroup_local_id + 1)))) << 0u) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(atomicXor(workgroup_size, (num_workgroup - virtual_gid)))))) % subgroup_size) | 0u)))), 0u, 0u, 1u), (uvec4((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)), (subgroup_local_id + 1)))) << 0u) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(atomicXor(workgroup_size, (num_workgroup - virtual_gid)))))) % subgroup_size) | 0u)))), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u))) * uvec4(1u, 1u, 1u, 1u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), min(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) >> 0u), _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) | (_GLF_FUZZED(virtual_gid))))) : buf[virtual_gid] = 1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) | (4)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-3.7)))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, false))), _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))), true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))), true)))), false, false, false)))) && true, ! (! ((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, _GLF_IDENTITY(false, true && (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.1)), bool(false))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) || false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(7861.1724))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true)))), true)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), false), true)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), false), true)))))))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), false), true)))))))))), false, true))))))), true, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), false || (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ((_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
