#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, false)), bool(bvec4(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, false)), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) && (true)) && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false)))))), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], 0.0, 0.0, 0.0))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-2146.1161)), bool(false))) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-5.2, 1186.5147, 5.7, 98.40)) : mat2(1.0))), mix(vec2(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-5.2, 1186.5147, 5.7, 98.40)) : mat2(1.0))))[0], _GLF_FUZZED(246.049)), vec2(_GLF_FUZZED(-6.2), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-5.2, 1186.5147, 5.7, 98.40)) : mat2(1.0))))[1]), bvec2(false, true)))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))), false, true))) || false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))) || false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))) * 1.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 1.0 * ((injectionSwitch.x))) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0)))) > injectionSwitch.y)))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), true), true)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), false)))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), true), false)))))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) || false))) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_IDENTITY(false, (false) && true), false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)) && true)) && true))), _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-3.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), max(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-3.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true))))))), _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-3.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), mix(vec2((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-3.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))[0], _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-3.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))[1], clamp((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-3.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))[1], (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-3.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))[1], (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-3.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))[1]))), vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED(42.66)), bvec2(false, false)))))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(false))))) || false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(uvec3(_GLF_IDENTITY((gl_NumWorkGroups.x), 1u * ((gl_NumWorkGroups.x))), 0u, 0u))) - 0u, clamp(_GLF_IDENTITY((gl_NumWorkGroups.x) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)), uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), _GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, (_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))))).x), 0u, 0u))))) - 0u, 0u), min(uvec2((gl_NumWorkGroups.x) - 0u, 0u), uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), min((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))) - 0u, 0u)))))) << (_GLF_IDENTITY(0u | 0u, 0u | (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(uint(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), _GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)))).x) - _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)))).x) - _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u)))) | _GLF_IDENTITY(0u, min(0u, 0u)), max(((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)))).x) - _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)))).x) - _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u)))) | _GLF_IDENTITY(0u, min(0u, 0u))))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, clamp(_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, (_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, ((gl_NumWorkGroups.x) - 0u) - 0u)) * 1u), (_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))))) - 0u, 0u), min(uvec2((gl_NumWorkGroups.x) - 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(156373u)))), uvec2((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x) - _GLF_IDENTITY(0u, (0u) >> 0u), 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, _GLF_IDENTITY(0u, (0u) >> 0u)), (false ? _GLF_FUZZED(uvec3(123002u, 91135u, 196096u)) : uvec3((gl_NumWorkGroups.x), 0u, 0u))), uvec3((gl_NumWorkGroups.x), 0u, 0u))))) - 0u, 0u), min(uvec2((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, (gl_NumWorkGroups.x) / 1u)) | (gl_NumWorkGroups.x))) - 0u, 0u), uvec2((gl_NumWorkGroups.x) - 0u, 0u))))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) << _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u))), max((_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u))), (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u)))))) * 1u)), _GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))) << uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))) << uvec3(0u, 0u, 0u)) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))).x) - _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u)))) | 0u)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x) - 0u, clamp(_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, _GLF_IDENTITY(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), (_GLF_IDENTITY(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), max(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), uint(_GLF_IDENTITY(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)), (uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))) | (uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))))) - 0u)), clamp(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)), uint(uvec2(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)), (((0u | 1u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), (_GLF_IDENTITY(uint(uint(uvec2((gl_NumWorkGroups.x) - _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | 0u))), 0u))), max(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), uint(_GLF_IDENTITY(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)), 1u)), min(uint(uvec2(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)), 1u)), _GLF_IDENTITY(uint(uvec2(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)), 1u)), max(uint(uvec2(_GLF_IDENTITY(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)), clamp(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)), uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)), uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)))), 1u)), uint(uvec2(uint(uvec2((_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 1u, 0u)))) - 0u, 0u)), 1u))))))))))) - 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), (_GLF_IDENTITY(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), max(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) - 0u)), min(uint(_GLF_IDENTITY(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), (_GLF_IDENTITY(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), max(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) - 0u)), uint(_GLF_IDENTITY(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), (_GLF_IDENTITY(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), max(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) - 0u)))), uint(_GLF_IDENTITY(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), (_GLF_IDENTITY(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), max(uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u))), uint(uint(uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) - 0u)))))), _GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))))) - 0u, 0u), min(uvec2((gl_NumWorkGroups.x) - 0u, 0u), uvec2((gl_NumWorkGroups.x) - 0u, _GLF_IDENTITY(0u, (0u) | 0u))))))) << (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u))), clamp((_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))))) - 0u, 0u), min(uvec2((gl_NumWorkGroups.x) - 0u, 0u), uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) << (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), _GLF_IDENTITY(max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u)), (max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - uvec3(0u, 0u, 0u)))))) - 0u, 0u), min(uvec2((gl_NumWorkGroups.x) - 0u, 0u), uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) << (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u))), (_GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))))) - 0u, 0u), min(uvec2((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)))) - 0u, 0u), uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) << (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u))), (_GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))))) - 0u, 0u), min(uvec2((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)))) - 0u, 0u), uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) << (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))))) - 0u, 0u), min(uvec2((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)))) - 0u, 0u), uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) << (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u)))), clamp(~ ((_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))))) - 0u, 0u), min(uvec2((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)))) - 0u, 0u), uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) << (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u)))), ~ ((_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))))) - 0u, 0u), min(uvec2((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)))) - 0u, 0u), uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) << (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u)))), ~ ((_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))))) - 0u, 0u), min(uvec2((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)))) - 0u, 0u), uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) << (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u))))))))) | 0u)) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) - 0u), 0u, 1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) - 0u), 0u, 1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) - 0u), 0u, 1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) - 0u), 0u, 1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), min(uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) - 0u), 0u, 1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), uvec4(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) - 0u), 0u, 1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))))) - 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, 0u))))) - 0u, 0u), min(uvec2((gl_NumWorkGroups.x) - 0u, 0u), uvec2((gl_NumWorkGroups.x) - 0u, 0u)))))) << (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(subgroup_size)), ~ (~ ((true ? 0u : _GLF_FUZZED(subgroup_size))))))) / 1u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | (0u | 0u))), ((_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups.x), 0u, 0u), max(uvec3((gl_NumWorkGroups.x), 0u, 0u), uvec3((gl_NumWorkGroups.x), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | 0u)))))) - 0u, 0u), _GLF_IDENTITY(min(uvec2((gl_NumWorkGroups.x) - 0u, 0u), uvec2(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) >> 0u) - 0u, 0u)), (min(uvec2((gl_NumWorkGroups.x) - 0u, 0u), uvec2((gl_NumWorkGroups.x) - 0u, 0u))) | uvec2(0u, 0u)))))) << (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u)))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), _GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)))).x) - _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u)))) | 0u))))) | 0u) : _GLF_FUZZED(subgroup_id)));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)) || false, (_GLF_IDENTITY((_GLF_DEAD(false)) || false, true && (_GLF_IDENTITY((_GLF_DEAD(false)) || false, false || ((_GLF_DEAD(false)) || false))))) && true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << (140095u & 0u)), workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u)) >> 0u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))))) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)))))))) || false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)))))))), bool(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(52.27)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)))))))), true, false))) || false)))) && true), false, true))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-77.30, 4.3)))).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (false)), false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), false), false)))))))))))))))))), (false) || false)), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) - 0u) * subgroup_size, ~ (~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | ((subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (subgroup_id)))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (subgroup_id)))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size) / 1u))) | 0u) >> 0u)))) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), _GLF_IDENTITY((mat2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))) * mat2(1.0)))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), _GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))) * mat2(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(float(-34415))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x), 0.0, 0.0, 1.0), _GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))) * mat2(1.0)))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.0), _GLF_FUZZED(-2.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x), 0.0, 0.0, 1.0), (true ? mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.0), _GLF_FUZZED(-2.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2(mat4x3(-1.2, 5.3, -9.0, -2.2, -80.04, -281.349, -997.746, -3992.6544, 747.541, 54.88, -8510.8366, 7938.4396)))))), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0)))), mat2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))))), mat2(1.0) * (mat4x2(_GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))))))))) * mat2(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), _GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-362.031)), float(0.0), bool(true))), 0.0)), 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))) * mat2(1.0)))), mix(float(_GLF_FUZZED(2141.8928)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), _GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))) * mat2(1.0))))), bool(true)))))))), 1u, 0u)), ~ (~ (uint(uvec4((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), _GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))) * mat2(1.0)))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), _GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.6))), 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))) * mat2(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), transpose(transpose((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))))), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))) * mat2(1.0)))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))), mat2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))))), mat2(1.0) * (mat4x2(_GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))))))))) * mat2(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), _GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-362.031)), float(0.0), bool(true))), 0.0)), 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 0.0, 0.0, 1.0)))) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))), mix(float(_GLF_FUZZED(2141.8928)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), _GLF_IDENTITY((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), mat2(1.0) * ((mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))) * mat2(1.0))))), bool(true)))))))), 1u, 0u))))), (true ? uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)) >> _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec4(0u, 0u, 0u, 0u))))), (~ (_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), (uvec4((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))))) : _GLF_FUZZED(max(workgroup_id, subgroup_id))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), true, false)), true, true, true))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ((bool(false))) && true) && true)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), true)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false || (((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), false || (bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   buf[next_virtual_gid] = _GLF_IDENTITY(2, 0 | (2));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(6.6, _GLF_IDENTITY(vec3(7.9, -0.2, 6.3)[1], _GLF_IDENTITY(min(_GLF_IDENTITY(vec3(7.9, -0.2, _GLF_IDENTITY(6.3, min(6.3, 6.3)))[1], max(vec3(7.9, -0.2, 6.3)[1], vec3(7.9, -0.2, 6.3)[1])), vec3(7.9, -0.2, 6.3)[1]), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(min(_GLF_IDENTITY(vec3(7.9, -0.2, 6.3)[1], max(vec3(7.9, -0.2, 6.3)[1], vec3(7.9, -0.2, 6.3)[1])), vec3(7.9, -0.2, 6.3)[1]), min(min(_GLF_IDENTITY(vec3(7.9, _GLF_IDENTITY(-0.2, mix(float(_GLF_FUZZED(-61.11)), float(-0.2), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 6.3)[1], max(vec3(7.9, -0.2, 6.3)[1], vec3(7.9, -0.2, 6.3)[1])), vec3(7.9, -0.2, 6.3)[1]), min(_GLF_IDENTITY(vec3(7.9, -0.2, 6.3)[1], max(vec3(7.9, -0.2, 6.3)[1], vec3(7.9, -0.2, 6.3)[1])), vec3(7.9, -0.2, 6.3)[1]))), 0.0, 0.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(min(_GLF_IDENTITY(vec3(7.9, -0.2, 6.3)[1], max(vec3(7.9, -0.2, 6.3)[1], vec3(7.9, -0.2, 6.3)[1])), vec3(7.9, -0.2, 6.3)[1]), min(min(_GLF_IDENTITY(vec3(7.9, -0.2, 6.3)[1], max(vec3(_GLF_IDENTITY(7.9, mix(float(_GLF_FUZZED(2.1)), float(7.9), bool(true))), -0.2, 6.3)[1], vec3(7.9, -0.2, 6.3)[1])), vec3(7.9, -0.2, 6.3)[1]), min(_GLF_IDENTITY(vec3(7.9, -0.2, 6.3)[1], max(vec3(7.9, -0.2, 6.3)[1], vec3(7.9, -0.2, 6.3)[1])), vec3(7.9, -0.2, 6.3)[1]))), 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sqrt(1.0)))))))) : injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))) && true)))))), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY((_GLF_IDENTITY(((false)), ! (! (((false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((false)), ! (! (((false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(((false)), ! (! (((false)))))), true && ((_GLF_IDENTITY(((false)), ! (! (((false))))))))))), ! (! ((_GLF_IDENTITY(((false)), ! (! (((false)))))))))) || false) || false), false || (_GLF_IDENTITY(((false)), _GLF_IDENTITY((_GLF_IDENTITY(((false)), ! (! (((false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(((false)), ! (! (((false)))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bool(((false))))))))))), true && ((! ((_GLF_IDENTITY(((false)), ! (! (((false)))))))))))) || false) || false))) && true) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(13.13)), vec2((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))[0], (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch), (injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(-887.021), _GLF_IDENTITY((_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, ! (! (false))))) ? _GLF_IDENTITY(_GLF_FUZZED(-887.021), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-887.021), float(mat2x3(_GLF_FUZZED(-887.021), 0.0, 1.0, 1.0, 0.0, 1.0)))), clamp(1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-887.021), float(mat2x3(_GLF_FUZZED(-887.021), 0.0, 1.0, 1.0, 0.0, 1.0)))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-887.021), float(mat2x3(_GLF_FUZZED(-887.021), 0.0, 1.0, 1.0, 0.0, 1.0)))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-887.021), float(mat2x3(_GLF_FUZZED(-887.021), 0.0, 1.0, 1.0, 0.0, 1.0))))))) : _GLF_FUZZED(-62.15)), (true ? (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, ! (! (false))))) ? _GLF_IDENTITY(_GLF_FUZZED(-887.021), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-887.021), float(mat2x3(_GLF_FUZZED(-887.021), 0.0, 1.0, 1.0, 0.0, 1.0))))) : _GLF_FUZZED(-62.15)) : _GLF_FUZZED(-9.6))))), vec2(_GLF_FUZZED(1.1), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(13.13)), vec2((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))[0], (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch), (injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(-887.021), _GLF_IDENTITY((_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, ! (! (false))))) ? _GLF_IDENTITY(_GLF_FUZZED(-887.021), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-887.021), float(mat2x3(_GLF_FUZZED(-887.021), 0.0, 1.0, 1.0, 0.0, 1.0)))), clamp(1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-887.021), float(mat2x3(_GLF_FUZZED(-887.021), 0.0, 1.0, 1.0, 0.0, 1.0)))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-887.021), float(mat2x3(_GLF_FUZZED(-887.021), 0.0, 1.0, 1.0, 0.0, 1.0)))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-887.021), float(mat2x3(_GLF_FUZZED(-887.021), 0.0, 1.0, 1.0, 0.0, 1.0))))))) : _GLF_FUZZED(-62.15)), (true ? (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, ! (! (false))))) ? _GLF_IDENTITY(_GLF_FUZZED(-887.021), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-887.021), float(mat2x3(_GLF_FUZZED(-887.021), 0.0, 1.0, 1.0, 0.0, 1.0))))) : _GLF_FUZZED(-62.15)) : _GLF_FUZZED(-9.6))))), vec2(_GLF_FUZZED(1.1), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) / vec2(1.0, 1.0)).y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-887.021), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(-887.021) : _GLF_FUZZED(-62.15)))), vec2(_GLF_FUZZED(1.1), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), max(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-887.021), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(-887.021) : _GLF_FUZZED(-62.15), mix(float(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(-887.021) : _GLF_FUZZED(-62.15)), float(_GLF_FUZZED(-41.87)), bool(false)))))), vec2(_GLF_FUZZED(1.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-887.021), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(((true)), bool(bool(((true))))) || _GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(-887.021) : _GLF_FUZZED(-62.15)))), vec2(_GLF_FUZZED(1.1), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))) / vec2(1.0, 1.0)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(32.58)), vec2(_GLF_FUZZED(-693.402), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), sin(0.0), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0), vec3(0.0, 0.0, sqrt(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sqrt(0.0)))), 1.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-887.021), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(-887.021) : _GLF_FUZZED(-62.15)))), vec2(_GLF_FUZZED(1.1), (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1))]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) / vec2(1.0, 1.0)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(32.58)), vec2(_GLF_FUZZED(-693.402), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), sin(0.0), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0), vec3(0.0, 0.0, sqrt(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sqrt(0.0)))), 1.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-887.021), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(-887.021) : _GLF_FUZZED(-62.15)))), vec2(_GLF_FUZZED(1.1), (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1))]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) / vec2(1.0, 1.0)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(32.58), (true ? _GLF_FUZZED(32.58) : _GLF_FUZZED(clamp(1.7, -67.12, 18.43))))), vec2(_GLF_FUZZED(-693.402), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) >> 0)]), bvec2(false, true))), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(22.84, -9525.5620)))), vec2(injectionSwitch[0], injectionSwitch[1])), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), sin(0.0), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0), vec3(0.0, 0.0, sqrt(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sqrt(0.0)))), 1.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-887.021), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(-887.021) : _GLF_FUZZED(-62.15)))), vec2(_GLF_FUZZED(1.1), (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1))]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) / vec2(1.0, 1.0)).y)) && true))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-887.021), (false ? _GLF_FUZZED(abs(-999.153)) : _GLF_IDENTITY(_GLF_FUZZED(-887.021), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * (_GLF_FUZZED(-887.021))))), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(-887.021) : _GLF_FUZZED(-62.15)))), vec2(_GLF_FUZZED(1.1), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) / vec2(1.0, 1.0)).y))), false)))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.1) : injectionSwitch.y))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
