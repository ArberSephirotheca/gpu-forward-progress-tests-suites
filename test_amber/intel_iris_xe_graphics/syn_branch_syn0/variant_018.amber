#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = _GLF_IDENTITY(16, 0 + (_GLF_IDENTITY(16, max(_GLF_IDENTITY(_GLF_IDENTITY(16, (16) ^ 0), (false ? _GLF_FUZZED(-73602) : _GLF_IDENTITY(16, (16) ^ 0))), 16))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bvec2((_GLF_DEAD(false)) || false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0))), injectionSwitch)), injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || false)))) && true))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(uvec4(128382u, 46997u, 190599u, 162512u)[_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (true ? _GLF_IDENTITY(2, max(2, 2)) : _GLF_FUZZED(633))))))) ^ 0)]) : workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x)) + _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(1u * ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), max(~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), ~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))))))), clamp(_GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), max(~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), ~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))))))), _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), max(~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), ~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))))))), _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), max(~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), ~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)))))))))), min(1u * ((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)) ^ 0u) : _GLF_FUZZED(packUnorm4x8(vec4(-8.8, -5.0, -3280.9151, 988.754))))))), 1u * ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(((mat4(_GLF_IDENTITY(-544.187, float(mat2x3(-544.187, 0.0, 1.0, 0.0, 0.0, 1.0))), -1275.9423, -268.311, 31.41, 1986.5064, 99.36, -7.4, -6496.9622, 9750.3983, -1670.0844, 0.1, 174.056, -856.402, 9.7, -67.11, 3.0) == mat4(-143.198, 7.4, 0.5, -93.12, -0.8, 7196.9823, 1.3, 301.575, 0.3, -3.5, _GLF_IDENTITY(-2.8, mix(float(-2.8), float(_GLF_FUZZED(-103.081)), bool(false))), -7.5, 2206.1357, -36.80, -4244.1117, 9.8)) ? 178277u : (workgroup_id - workgroup_size))) : 1u)) * ((workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) + (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u))), (workgroup_id) ^ 0u))), min(1u * ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), 1u * ((workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) * 1u)) >> 0u) ^ 0u)))))) : _GLF_FUZZED(144596u)))))))) - 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | (workgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : (workgroup_size) | (workgroup_size)))) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), clamp(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), (workgroup_id), _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))))), ((workgroup_id)) | ((workgroup_id)))) | 0u)) / 1u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) ^ 0u, _GLF_IDENTITY(((workgroup_id) ^ 0u), (true ? ((workgroup_id) ^ 0u) : _GLF_FUZZED(num_workgroup))) / 1u))))), max((_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | (workgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : (workgroup_size) | (workgroup_size)))) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))), max(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))))), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))))) | _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) * 1u)))) - 0u))) / 1u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) ^ 0u, _GLF_IDENTITY(((workgroup_id) ^ 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (((workgroup_id) ^ 0u))) / _GLF_IDENTITY(1u, max(1u, 1u))))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | (workgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : (workgroup_size) | (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) / 1u))))) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))) / 1u)) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u | (uint(4u))))), ~ (~ ((0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u | (uint(4u))))))))) ^ 0u, ((workgroup_id) ^ 0u) / 1u))))))) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)) * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), 0u | (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) ^ 0u)))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), max(max(0u, 0u), max(0u, 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base))))), max(workgroup_base, workgroup_base))), _GLF_IDENTITY((~ (workgroup_base)), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), min(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), _GLF_IDENTITY(uint(uvec2((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), 1u)), min(uint(uvec2((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), 1u)), uint(uvec2((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), 1u))))), (~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))))))))), ((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), min(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), _GLF_IDENTITY(uint(uvec2((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), 1u)), min(uint(uvec2((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), 1u)), uint(uvec2((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), 1u))))), (~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))))))) + 0u)) >> 0u)), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base))))), max(workgroup_base, workgroup_base))), _GLF_IDENTITY((~ (workgroup_base)), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), min(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), _GLF_IDENTITY(uint(uvec2((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), 1u)), min(uint(uvec2((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), 1u)), uint(uvec2((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), 1u))))), (~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))))))))), ((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), min(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), _GLF_IDENTITY(uint(uvec2((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), 1u)), min(uint(uvec2((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), 1u)), uint(uvec2((~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))), 1u))))), (~ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), clamp(uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)), 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))))))) + 0u)) >> 0u))) - 0u)), (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u | (_GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))))), _GLF_IDENTITY((~ (workgroup_base)) >> _GLF_IDENTITY(0u, (0u) | 0u), ((~ (workgroup_base)) >> 0u) | (_GLF_IDENTITY((~ (workgroup_base)) >> 0u, ((~ (workgroup_base)) >> 0u) | 0u))))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base)))) >> 0u), clamp(_GLF_IDENTITY(~ (workgroup_base), (~ _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(34939u) : workgroup_base))), (workgroup_base)))) >> 0u), _GLF_IDENTITY(~ (workgroup_base), (~ _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), ~ (workgroup_base))))), (~ _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base)))) >> 0u)))))))), (_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u | (_GLF_IDENTITY((workgroup_base), uint(uint(_GLF_IDENTITY((workgroup_base), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_base)))))))), _GLF_IDENTITY((~ (workgroup_base)) >> 0u, _GLF_IDENTITY(((~ (workgroup_base)) >> 0u), ~ (~ (((~ (workgroup_base)) >> 0u)))) | (_GLF_IDENTITY((~ (workgroup_base)) >> 0u, ((~ (workgroup_base)) >> 0u) | 0u))))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base)))) >> 0u), clamp(_GLF_IDENTITY(~ (workgroup_base), (~ _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base)))) >> 0u), _GLF_IDENTITY(~ (workgroup_base), (~ _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base)))) >> 0u), _GLF_IDENTITY(~ (workgroup_base), (~ _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base)))) >> 0u))))))))) ^ 0u), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), ~ (~ (((workgroup_base))))) ^ 0u) | (workgroup_base))) - 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) << 0u), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) << 0u)) * 1u) * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) << 0u), 0u + (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_ONE(1.0, injectionSwitch.y)))))) << 0u))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) << 0u, uint(uvec4((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) << 0u, 1u, 1u, 0u)))) * subgroup_size)))))) >> 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, 0u, 0u)))) | (workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, 0u, 0u)))), ((_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, 0u, 0u))))) << 0u) | (workgroup_base)) : _GLF_FUZZED(workgroup_base))), ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, 0u, 0u)))) | (workgroup_base))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, 0u, 0u), max(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, 0u, 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (true ? _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) : _GLF_FUZZED((workgroup_base --)))))), 1u, 0u, 0u)))))) | _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (workgroup_base))))), 0u, (0u ^ 0u))), 0u ^ (uint(uvec3(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))), 0u, (0u ^ 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 1u)))), (true ? uint(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 1u)))) : _GLF_FUZZED((subgroup_id)))))), (_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (true ? clamp(workgroup_base, workgroup_base, workgroup_base) : _GLF_FUZZED(virtual_gid))))))), 1u, 0u, 0u)))) | (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY(max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)), (max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), clamp((_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY(max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)), (max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY(max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)), (max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY((_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY(max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)), (max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY(max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)), (max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), (uint((_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY(max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)), (max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) / 1u)), (uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY(max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)), (max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), (uint((_GLF_IDENTITY(max(subgroup_id, subgroup_id), _GLF_IDENTITY(max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)), (max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) / 1u))) / 1u)))) | (max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(11101u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(11101u, 1u * (11101u)), 0u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec3(6u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) - 0u)) | (_GLF_IDENTITY(uint(7u), uint(7u))))), 1u)))))), 0u)), (uint(uvec4(11101u, 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1u << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u)) & 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(max(subgroup_id, subgroup_id), max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)))), min((_GLF_IDENTITY(max(subgroup_id, subgroup_id), max(max(subgroup_id, subgroup_id), _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) * 1u)))), (_GLF_IDENTITY(max(subgroup_id, subgroup_id), max(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)))))) | _GLF_IDENTITY((_GLF_IDENTITY(max(subgroup_id, subgroup_id), clamp(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(max(subgroup_id, subgroup_id), clamp(max(subgroup_id, subgroup_id), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u))))), (true ? (_GLF_IDENTITY(max(subgroup_id, subgroup_id), clamp(max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 1u, 0u)), (uint(uvec4(subgroup_id, 0u, 1u, 0u))) - 0u)), subgroup_id), max(subgroup_id, subgroup_id), max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u, ~ (~ ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) - 0u)))))))) : _GLF_FUZZED(uaddCarry(workgroup_size, virtual_gid, subgroup_local_id))))) << 0u))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-76.87))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-76.87))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-76.87))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-76.87))))), cos(0.0)), (vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-76.87), (true ? _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-76.87), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(-76.87)), float(_GLF_FUZZED(-3.9)), bool(false))) : _GLF_FUZZED(-5979.1530))))), cos(0.0))) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.7))), 1.0))), (true ? float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-76.87))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-76.87))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-76.87))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-76.87))))), cos(0.0)), (vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-76.87), (true ? _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-76.87), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(-76.87)), float(_GLF_FUZZED(-3.9)), bool(false))) : _GLF_FUZZED(-5979.1530))))), cos(0.0))) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.7))), 1.0))) : _GLF_FUZZED(-4882.6136))))) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false))) || false)) || false)) && true)) && (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, _GLF_IDENTITY(false, false || (false)))), (bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false))) && true)) && (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false))) && true, _GLF_IDENTITY(bool(bvec4((bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false))) && true, false, true, false)), false || (bool(bvec4((bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false))) && true, false, true, false))))))) && (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec4(! (_GLF_IDENTITY(true, true && (true))), false, true, false)))))) && true) && (_GLF_DEAD(false)))))), bool(bvec2(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false))) && true, _GLF_IDENTITY(bool(bvec4((bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false))) && true, false, true, false)), false || (bool(bvec4((bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false, false))) && true, false, true, false))))))) && (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec4(! (_GLF_IDENTITY(true, true && (true))), false, true, false)))))) && true) && (_GLF_DEAD(false)))))), true))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * sqrt(vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4.1), _GLF_FUZZED(-83.44)), vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * sqrt(vec2(1.0, 1.0)))[0], ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * sqrt(vec2(1.0, 1.0)))[1]), bvec2(true, true)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - log(1.0))), float(_GLF_FUZZED(7.3)), bool(false)))))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), float(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))) || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * sqrt(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y, false, true, false))))))))), false)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0), (mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(1.0, 1.0) * ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec3(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), 0.0))))))) + (injectionSwitch), mat2(1.0) * (abs(vec2(0.0, 0.0)) + (injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(vec2(0.0, 0.0)) + (injectionSwitch), mat2(1.0) * (abs(vec2(0.0, 0.0)) + (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(vec2(0.0, 0.0)) + (injectionSwitch), mat2(1.0) * (abs(vec2(0.0, 0.0)) + (injectionSwitch)))).y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec3(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), 0.0))))))) + (injectionSwitch), mat2(1.0) * (abs(vec2(0.0, 0.0)) + (injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(vec2(0.0, 0.0)) + (injectionSwitch), mat2(1.0) * (abs(vec2(0.0, 0.0)) + (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(vec2(0.0, 0.0)) + (injectionSwitch), mat2(1.0) * (abs(vec2(0.0, 0.0)) + (injectionSwitch)))).y))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec3(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), 0.0))))))) + (injectionSwitch), mat2(1.0) * (abs(vec2(0.0, 0.0)) + (injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(vec2(0.0, 0.0)) + (injectionSwitch), mat2(1.0) * (abs(vec2(0.0, 0.0)) + (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(vec2(0.0, 0.0)) + (injectionSwitch), mat2(1.0) * (abs(vec2(0.0, 0.0)) + (injectionSwitch)))).y)))) || false)) || false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0))) + (subgroup_local_id))))), 0u + ((true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id))), 0u | (bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)))))))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
  }
 else
  {
   buf[next_virtual_gid] = _GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, min(2, 2)) : _GLF_FUZZED(-46476)));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
