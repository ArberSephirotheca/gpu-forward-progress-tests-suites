#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_28 {
 mat4x2 _f0;
 uint _f1;
 uint _f2;
} ;

struct _GLF_struct_27 {
 mat3x2 _f0;
 vec2 _f1;
 ivec4 _f2;
 vec4 _f3;
 mat4x3 _f4;
 uvec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_26 {
 float _f0;
} ;

struct _GLF_struct_29 {
 _GLF_struct_26 _f0;
 _GLF_struct_27 _f1;
 uvec3 _f2;
 float _f3;
 _GLF_struct_28 _f4;
} ;

struct _GLF_struct_24 {
 int _f0;
 mat4 _f1;
} ;

struct _GLF_struct_25 {
 mat3x4 _f0;
 uvec2 _f1;
 mat2x4 _f2;
 _GLF_struct_24 _f3;
 float _f4;
} ;

struct _GLF_struct_22 {
 mat3x2 _f0;
 mat2x4 _f1;
 ivec4 _f2;
 uvec4 _f3;
 mat2x3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_21 {
 uint _f0;
 uvec2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_20 {
 mat4 _f0;
 uvec3 _f1;
 vec2 _f2;
 vec4 _f3;
 mat4x3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_23 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 uint _f2;
 uvec4 _f3;
 ivec3 _f4;
 _GLF_struct_22 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_18 {
 mat2x3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 bool _f3;
 ivec3 _f4;
 vec4 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
 ivec2 _f1;
 mat2x4 _f2;
 mat3x4 _f3;
 vec2 _f4;
 bvec2 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_15 {
 int _f0;
 ivec3 _f1;
 mat4x3 _f2;
 ivec3 _f3;
 int _f4;
 vec3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_19 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 mat3x4 _f2;
 ivec2 _f3;
 _GLF_struct_17 _f4;
 int _f5;
 _GLF_struct_18 _f6;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
 vec2 _f1;
 bvec4 _f2;
 mat3x2 _f3;
 mat4 _f4;
 uint _f5;
 vec3 _f6;
} ;

struct _GLF_struct_14 {
 mat3x4 _f0;
 _GLF_struct_13 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_30 {
 uint workgroup_base;
 uint _f0;
 bool _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_23 _f4;
 _GLF_struct_25 _f5;
 _GLF_struct_29 _f6;
} ;

struct _GLF_struct_11 {
 uint _f0;
 ivec3 _f1;
 ivec2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 uint _f1;
 mat2 _f2;
 mat4 _f3;
 mat2x3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 mat3x2 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 uvec2 _f1;
 uint subgroup_id;
 bvec3 _f2;
 bool _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 mat3 _f1;
 mat2x4 _f2;
 float _f3;
 mat2x3 _f4;
 vec3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 mat2x4 _f1;
 uvec4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 int _f1;
 float _f2;
 _GLF_struct_4 _f3;
 mat3x2 _f4;
 mat4x3 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 mat4x2 _f1;
 bvec4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 _GLF_struct_0 _f1;
 uint _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 uvec4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 uint next_virtual_gid;
 _GLF_struct_7 _f2;
 bvec3 _f3;
 mat4x2 _f4;
 mat2x3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), clamp(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), clamp(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), clamp(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y) || false)) && true, ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, cos(0.0), 0.0, abs(1.0), 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0)), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, cos(0.0), 0.0, abs(1.0), 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0)), 0.0)))))), 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((-4.8)), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED((+ -161.985))), bvec2(true, false))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y)), injectionSwitch.y))))) || false)) && true) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))), bool(bvec3((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))), true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))), false || (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), (float(mat4(injectionSwitch.x, 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))) * 1.0)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), (float(mat4(injectionSwitch.x, 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))) * 1.0)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))), false, true))))))))))))) || false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_10(uvec2(1u), mat3x2(1.0), _GLF_struct_9(bvec2(true), 1u, mat2(1.0), mat4(1.0), mat2x3(1.0), ivec3(1))), uvec2(1u), gl_SubgroupID, bvec3(true), true, _GLF_struct_11(1u, ivec3(1), ivec2(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | (ivec2(1, 1))))), 1, _GLF_IDENTITY(1, 0 ^ (1))))), ivec4(1)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-273.892, 4552.1900)) : injectionSwitch)).y)), true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), false, true, true)))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), true, true)))))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.0), _GLF_FUZZED(vec4(-5.4, 820.949, -3.9, 894.709).w)), bvec2(false, false))).y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(bool(bool((injectionSwitch.x < injectionSwitch.y)))), true && (bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))), true && (bool(bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, false)), true && (bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, false))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 2587.1597)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.1)), bvec2(true, false))).x < injectionSwitch.y), false, true, false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x) + 0.0)) + 0.0) < injectionSwitch.y), false, true, false)))), (bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x) + 0.0)) + 0.0) < injectionSwitch.y), false, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false)))))))))))), true && (bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat2x4(vec2(1.0, 1.0), 0.0, 1.0, sin(0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0))))), clamp(vec2(mat2x4(vec2(1.0, 1.0), 0.0, 1.0, sin(0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0))))), vec2(mat2x4(vec2(1.0, 1.0), 0.0, 1.0, sin(0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0))))), vec2(mat2x4(vec2(1.0, 1.0), 0.0, 1.0, sin(0.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0)))))))) * (injectionSwitch)).x < injectionSwitch.y))))))))), true))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (false)), false || (false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, true)))))) && true)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (true)))) || _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(bool(bool((injectionSwitch.x < injectionSwitch.y)))), true && (bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.9) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(4319.7259, -8176.5704, -59.29, -8.2).y)), float(injectionSwitch.y), bool(true))))) && true))))))))), _GLF_IDENTITY(true, false || (true)) && (bool(bool(bool((injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false)))))), false || (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false)))))), bool(bool((bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))))))))))))))), true && (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false)))))), false || (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false)))))), bool(bool((bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))))))))))))))))), true && (bool(bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)))))), true))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, true)))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))), ! (! (! (! (false)))))) || false)))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, false)))) || _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)), ! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true))))))))))), bool(_GLF_IDENTITY(bool(bool(bool((injectionSwitch.x < injectionSwitch.y)))), true && (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))))))))))), true && (bool(bool(bool((injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false)))))))))))), true && (bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), 1.0) * (injectionSwitch)).x < injectionSwitch.y)))))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)), ! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)), ! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true))))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)), ! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)), ! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true))))))) || false))))))))), bool(_GLF_IDENTITY(bool(bool(bool((injectionSwitch.x < injectionSwitch.y)))), true && (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-226.577) : injectionSwitch.x)) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))))))))))))), true && (bool(bool(bool((injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, _GLF_IDENTITY(false, (false) && true)))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false)))))))))))) && true)), true && (bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), 1.0) * (injectionSwitch)).x < injectionSwitch.y)))))), true))))) && true)))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))), false || (false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, true)))), true && ((_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, true))))))), bool(bvec4(_GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, true)))), true && ((_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, true))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, injectionSwitch.x)) > injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((false), bool(bool((false)))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false, true)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) && true))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = _GLF_IDENTITY(16, min(16, _GLF_IDENTITY(16, (16) / 1)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), max(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(sin(_GLF_IDENTITY(-4827.4501, min(-4827.4501, -4827.4501))), max(sin(_GLF_IDENTITY(-4827.4501, (-4827.4501) - _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, abs(0.0))), min(dot(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, abs(0.0))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, abs(0.0))), max(dot(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, abs(0.0))), dot(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, abs(0.0))))))), dot(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, abs(0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(sin(-4827.4501), clamp(sin(-4827.4501), _GLF_IDENTITY(sin(-4827.4501), max(sin(-4827.4501), sin(-4827.4501))), _GLF_IDENTITY(sin(-4827.4501), (_GLF_IDENTITY(sin(-4827.4501), float(mat3x2(sin(-4827.4501), 1.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0))), float(mat3x2(sin(-4827.4501), _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, cos(length(0.0)), sin(0.0), 1.0, log(1.0)))), 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0))) * mat2(1.0))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])).y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_FUZZED(607.253)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), bvec2(true, true))), injectionSwitch)).y))))) - 0.0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(sin(_GLF_IDENTITY(-4827.4501, min(-4827.4501, -4827.4501))), max(sin(_GLF_IDENTITY(-4827.4501, (-4827.4501) - _GLF_IDENTITY(dot(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, abs(0.0))), dot(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, abs(0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(sin(-4827.4501), clamp(sin(-4827.4501), _GLF_IDENTITY(sin(-4827.4501), max(sin(-4827.4501), sin(-4827.4501))), _GLF_IDENTITY(sin(-4827.4501), (_GLF_IDENTITY(sin(-4827.4501), float(mat3x2(sin(-4827.4501), 1.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0))), float(mat3x2(sin(-4827.4501), 1.0, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))))))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(sin(_GLF_IDENTITY(-4827.4501, min(-4827.4501, -4827.4501))), max(sin(_GLF_IDENTITY(-4827.4501, (-4827.4501) - _GLF_IDENTITY(dot(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, abs(0.0))), dot(vec2(1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3058.0777)), bool(false)))), float(_GLF_FUZZED(-39.44)), bool(false))))), vec2(0.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(sin(-4827.4501), clamp(sin(-4827.4501), _GLF_IDENTITY(sin(-4827.4501), max(sin(-4827.4501), sin(-4827.4501))), _GLF_IDENTITY(sin(-4827.4501), (_GLF_IDENTITY(sin(-4827.4501), float(mat3x2(sin(-4827.4501), 1.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0))), float(mat3x2(sin(-4827.4501), 1.0, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(injectionSwitch.y, injectionSwitch.y))))) - 0.0)), ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(sin(_GLF_IDENTITY(_GLF_IDENTITY(-4827.4501, mix(float(_GLF_FUZZED(35.81)), float(-4827.4501), bool(true))), min(-4827.4501, -4827.4501))), max(sin(_GLF_IDENTITY(-4827.4501, (-4827.4501) - _GLF_IDENTITY(dot(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, abs(0.0))), dot(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, abs(0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(sin(-4827.4501), clamp(sin(-4827.4501), _GLF_IDENTITY(sin(-4827.4501), max(sin(-4827.4501), sin(-4827.4501))), _GLF_IDENTITY(sin(-4827.4501), (_GLF_IDENTITY(_GLF_IDENTITY(sin(-4827.4501), float(vec3(_GLF_IDENTITY(sin(-4827.4501), mix(float(_GLF_FUZZED(944.226)), float(sin(-4827.4501)), bool(true))), cos(0.0), 0.0))), float(mat3x2(sin(-4827.4501), 1.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0))), float(mat3x2(sin(-4827.4501), 1.0, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0))).y, injectionSwitch.y)), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))) - 0.0))) || false)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))) || false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))), vec2(mat4x2(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0)), (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch)))).x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), vec2(mat2(injectionSwitch, 1.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(85.86), _GLF_FUZZED(-3074.1665)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3x4((injectionSwitch)[1], 1.0, 0.0, 1.0, 1.0, sin(0.0), abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))), bvec2(true, true))).y), true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.3)), bool(false))))), 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))))))).x > injectionSwitch.y)))) && true))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))), mix(vec2(_GLF_FUZZED(85.13), _GLF_FUZZED(4.8)), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))))[1], ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))))[1]) / 1.0)), bvec2(true, true))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 0.0)), vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(54.61)), bool(false))))), vec2(mat2(injectionSwitch, 1.0, 0.0))))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.6), _GLF_FUZZED((-52.03 * 60.88))), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6097.0068)), float(1.0), bool(true))), 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, abs(1.0), sqrt(0.0), 0.0), mat2x3(mat2x4(mat2x3(1.0, 0.0, 1.0, abs(1.0), sqrt(0.0), 0.0)))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9570.1899)), float(1.0), bool(true))))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))))).x > injectionSwitch.y)))) && true))), false, false, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))) || false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), false)))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))))))), ! (! (bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))), 0u, 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))), 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))), 0u, 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))), 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))), 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))), 0u, 1u)))))) ^ 0u))))), (false ? _GLF_FUZZED((++ num_workgroup)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id)), clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), clamp(~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))))), 0u, 1u)))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))), 0u, 1u), (uvec3(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))), 0u, 1u)) - uvec3(0u, 0u, 0u)))))), (false ? _GLF_FUZZED((++ num_workgroup)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))), 0u, 1u)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> _GLF_IDENTITY(0u, (0u) << 0u))))), 0u, 1u))))), (false ? _GLF_FUZZED((++ num_workgroup)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))) - 0u), clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), min(~ (workgroup_id), ~ (workgroup_id))))))), uint(uvec3(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (~ ((workgroup_id)))) >> 0u)))), 0u, 1u))))))))) >> 0u)))) ^ 0u), _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), true, _GLF_struct_14(mat3x4(1.0), _GLF_struct_13(vec3(1.0), vec2(1.0), bvec4(true), mat3x2(1.0), mat4(1.0), 1u, vec3(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0)), min(mat3(1.0) * (vec3(1.0)), mat3(1.0) * (vec3(1.0))))), mix(vec3(_GLF_FUZZED(-3740.4882), (_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))))[1], _GLF_FUZZED(((_GLF_IDENTITY(71.23 + 69.69, float(_GLF_IDENTITY(vec2(71.23 + 69.69, 0.0), mix(vec2((vec2(71.23 + 69.69, 0.0))[0], _GLF_FUZZED(8558.9703)), vec2(_GLF_FUZZED(-4.5), (vec2(71.23 + 69.69, 0.0))[1]), bvec2(false, true))))))))), vec3((_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))))[0], _GLF_FUZZED(_GLF_IDENTITY(919.598, (919.598) - 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), mat3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) * (vec3(1.0))), mix(vec3(_GLF_FUZZED(33.52), (_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))))[1], _GLF_IDENTITY(_GLF_FUZZED(3.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(6685.7150)), float(_GLF_FUZZED(3.4)), bool(true))), 0.0, 0.0, 1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x2(mat2(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(6685.7150)), float(_GLF_FUZZED(3.4)), bool(true))), 0.0, 0.0, 1.0)), (mat4x2(mat2(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(6685.7150)), float(_GLF_FUZZED(3.4)), bool(true))), 0.0, 0.0, 1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat2(-672.302, 1841.1325, 3.3, 3.0)) : mat2(_GLF_IDENTITY(mat4x2(mat2(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(6685.7150)), float(_GLF_FUZZED(3.4)), bool(true))), 0.0, 0.0, 1.0)), (mat4x2(mat2(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(6685.7150)), float(_GLF_FUZZED(3.4)), bool(true))), 0.0, 0.0, 1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(6685.7150)), float(_GLF_FUZZED(3.4)), bool(true))), 0.0, 0.0, 1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x2(mat2(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(6685.7150)), float(_GLF_FUZZED(3.4)), bool(true))), 0.0, 0.0, 1.0)), (mat4x2(mat2(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(6685.7150)), float(_GLF_FUZZED(3.4)), bool(true))), 0.0, 0.0, 1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat2(-672.302, 1841.1325, 3.3, 3.0)) : mat2(_GLF_IDENTITY(mat4x2(mat2(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(6685.7150)), float(_GLF_FUZZED(3.4)), bool(true))), 0.0, 0.0, 1.0)), (mat4x2(mat2(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(6685.7150)), float(_GLF_FUZZED(3.4)), bool(true))), 0.0, 0.0, 1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) / 1.0))), vec3((_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))))[0], _GLF_FUZZED(-346.212), (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), vec3(1.0, 1.0, 1.0) * (vec3(1.0))), mat3(1.0) * (vec3(1.0))))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))[2], _GLF_IDENTITY(min((_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))))[2], (_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))))[2]), (min((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0))), mat3(1.0) * (vec3(1.0))))[2], _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0)))), max((_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0)))), min((_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0)))), (_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))))))))[2])) - 0.0))), bvec3(true, false, true)))), _GLF_struct_19(_GLF_struct_15(1, ivec3(1), mat4x3(1.0), _GLF_IDENTITY(ivec3(1), ~ (_GLF_IDENTITY(~ (ivec3(1)), (_GLF_IDENTITY(~ (ivec3(1)), (~ (ivec3(1))) | (_GLF_IDENTITY(~ (ivec3(1)), max(~ (ivec3(1)), ~ (ivec3(1))))))) - ivec3(0, 0, 0)))), _GLF_IDENTITY(1, int(int(1))), vec3(1.0), bvec2(true)), _GLF_struct_16(bvec4(true), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)), (false ? _GLF_FUZZED(ivec2(-3034, 17076)) : (ivec2(1)))) / ivec2(1, 1)), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), max(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), max(max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))), max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))))))), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), 1.0))))), mat3x4(1.0), vec2(1.0), bvec2(true), uvec3(1u)), mat3x4(1.0), _GLF_IDENTITY(ivec2(1), (ivec2(-99293, 19789) & _GLF_IDENTITY(ivec2(0, 0), (ivec2(-68260, -752) & ivec2(0, 0)) + (ivec2(0, 0)))) | (ivec2(1))), _GLF_struct_17(mat4x2(1.0), mat3x2(1.0), mat2x3(1.0), true, _GLF_IDENTITY(ivec3(1), ivec3(ivec4(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, 0)), 0))), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * vec4(1.0, 1.0, 1.0, 1.0)), uvec2(1u)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) + 0)) >> 0))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) + 0)) >> 0)))) ^ (0 << _GLF_IDENTITY(int(6), int(6)))), _GLF_struct_18(mat2x3(1.0), bvec3(true))), _GLF_struct_23(_GLF_struct_20(mat4(1.0), uvec3(1u), vec2(1.0), _GLF_IDENTITY(vec4(1.0), min(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))), vec4(1.0))), mat4x3(1.0), mat4x3(1.0)), _GLF_struct_21(1u, uvec2(1u), bvec4(true)), 1u, uvec4(1u), ivec3(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-72386) : 1, 0 | (_GLF_IDENTITY(false ? _GLF_FUZZED(-72386) : 1, (true ? false ? _GLF_FUZZED(-72386) : 1 : _GLF_FUZZED(26311)))))))))), _GLF_struct_22(mat3x2(1.0), mat2x4(1.0), ivec4(_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, 1u)), clamp(_GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, 1u)), (~ (uvec4(1u, 1u, 1u, 1u))) >> uvec4(0u, 0u, 0u, 0u)), ~ (uvec4(1u, 1u, 1u, 1u)), ~ (uvec4(1u, 1u, 1u, 1u)))), (_GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, 1u)), clamp(_GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, 1u)), (~ (uvec4(1u, 1u, 1u, 1u))) >> uvec4(0u, 0u, 0u, 0u)), ~ (uvec4(1u, 1u, 1u, 1u)), ~ (uvec4(1u, 1u, 1u, 1u))))) >> uvec4(0u, 0u, 0u, 0u))) | _GLF_IDENTITY((~ (uvec4(1u, 1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec4(72047u, 185595u, 191285u, 165099u)) : (~ (uvec4(1u, 1u, 1u, 1u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, 1u)), uvec4(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u) + (~ (uvec4(1u, 1u, 1u, 1u))))))), (_GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), uint(uvec4(min(1u, 1u), 0u, 1u, 0u))))))))), clamp(~ (uvec4(1u, 1u, 1u, 1u)), ~ (uvec4(1u, 1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u, 1u))), 1u)), ~ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (min(1u, 1u)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u | ((1u))) / 1u)) >> 0u)) >> (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, uint(_GLF_IDENTITY(uvec2(3u, 0u), (_GLF_IDENTITY(uvec2(3u, 0u), uvec2(0u, 0u) + (uvec2(3u, 0u)))) | uvec2(0u, 0u)))))))), 1u, 1u))))) | (~ (uvec4(1u, 1u, 1u, 1u)))) : _GLF_FUZZED(uvec4(198952u, 16161u, 97367u, 110747u)))), (_GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, 1u)), clamp(~ (uvec4(1u, 1u, 1u, 1u)), ~ (uvec4(1u, 1u, 1u, 1u)), ~ (uvec4(1u, 1u, 1u, 1u))))) | (~ (uvec4(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(1u, 0u ^ (1u))))) ^ 0u)))), ((_GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, 1u)), clamp(~ (uvec4(1u, 1u, 1u, 1u)), ~ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(188815u) : 1u))), min((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(188815u) : 1u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(188815u) : 1u))), clamp((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(188815u) : 1u))), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(188815u) : 1u))), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(188815u) : 1u))))))) ^ 0u), 1u, 1u, 1u)), ~ (uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u, 1u, 1u))))) | (~ (uvec4(1u, 1u, 1u, 1u)))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u, 1u, 1u, 1u)), clamp((uvec4(1u, 1u, 1u, 1u)), (uvec4(1u, 1u, 1u, 1u)), (uvec4(1u, 1u, 1u, 1u)))), clamp(~ (uvec4(1u, 1u, 1u, 1u)), ~ (uvec4(1u, 1u, 1u, 1u)), ~ (uvec4(1u, 1u, 1u, 1u))))) | (~ (uvec4(1u, 1u, 1u, 1u))))))) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (uvec4(1u, 1u, 1u, 1u))) * (_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (0u)), _GLF_IDENTITY(0u, (0u) - 0u))), (true ? _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (0u)), _GLF_IDENTITY(0u, (0u) - 0u))) : _GLF_FUZZED(packSnorm4x8(vec4(2.6, -983.976, -0.5, -705.341))))), clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u))), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ _GLF_IDENTITY((0u), ((0u)) << 0u), ~ (0u)))))), min(uvec4(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, min(0u, 0u))))), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ _GLF_IDENTITY((0u), ((0u)) << 0u), ~ (0u)))))), uvec4(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u))), 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ _GLF_IDENTITY((0u), ((0u)) << 0u), ~ (0u)))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), clamp(~ (0u), ~ _GLF_IDENTITY((0u), ((0u)) << 0u), ~ (0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ _GLF_IDENTITY((0u), ((0u)) << 0u), ~ (0u)))), clamp((_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ _GLF_IDENTITY((0u), ((0u)) << 0u), _GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))) | 0u)))), (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ _GLF_IDENTITY((0u), ((0u)) << 0u), ~ (0u)))), (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ _GLF_IDENTITY((0u), ((0u)) << 0u), ~ (0u))))))) | 0u), (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) << 0u), 0u ^ (_GLF_IDENTITY((0u), ((0u)) << 0u)))))), ~ (0u)))))))))) ^ (uvec4(1u))))), mat2x3(1.0), mat2x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), mat3x4(1.0)), _GLF_struct_25(mat3x4(1.0), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), mat2x4(1.0), _GLF_struct_24(1, mat4(1.0)), 1.0), _GLF_struct_29(_GLF_struct_26(1.0), _GLF_struct_27(mat3x2(1.0), vec2(1.0), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(ivec2(1, 1)))), (~ (_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(1, (1) | 0)))))) << _GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY((false ? _GLF_FUZZED(-65277) : _GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(ivec2(1, 1)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (true ? _GLF_IDENTITY(1, int(ivec2(1, 1))) : _GLF_FUZZED(bitfieldInsert(ivec4(61761, 3544, 82795, -13746), ivec4(60905, 38133, 46310, -5031), -83806, -40096)[2]))))) << 0)), 0 | ((false ? _GLF_FUZZED(-65277) : _GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(ivec2(1, 1)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (true ? _GLF_IDENTITY(1, int(ivec2(1, 1))) : _GLF_FUZZED(bitfieldInsert(ivec4(61761, 3544, 82795, -13746), ivec4(60905, 38133, 46310, -5031), -83806, -40096)[2]))))) << 0))))))), (_GLF_IDENTITY(1, (1) / 1)) / 1)), vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat4x3(1.0), uvec3(1u), mat2(1.0)), uvec3(1u), 1.0, _GLF_struct_28(mat4x2(1.0), 1u, 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, max(_GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size), min((false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)))))), _GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, max(_GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size), min((false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)))))), _GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)) >> 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)))), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)))), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_3(mat3(1.0), _GLF_struct_0(vec3(1.0), _GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], _GLF_FUZZED(9.2), _GLF_IDENTITY((vec3(1.0))[2], 1.0 * ((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(0.0, 0.0, 0.0)))[2]))), vec3(_GLF_FUZZED(6212.2205), (vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.6), min(_GLF_IDENTITY(_GLF_FUZZED(9.6), min(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(9.6), 1.0 * (_GLF_FUZZED(9.6))))), _GLF_IDENTITY(_GLF_FUZZED(9.6), max(_GLF_FUZZED(9.6), _GLF_FUZZED(9.6)))))), float(1.0), bool(true)))))[1], _GLF_FUZZED(95.63)), bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))))), 1u, _GLF_struct_1(mat2x3(1.0), mat2x3(1.0), _GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_IDENTITY(1u, min(1u, 1u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3(1u, 1u, 1u)))), ivec4(1)), _GLF_struct_2(mat2x4(1.0), mat4x2(1.0), bvec4(true), vec3(1.0)), uvec4(1u), mat2(1.0)), _GLF_struct_5(mat4x3(1.0), 1, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(543.773)), float(1.0), bool(true))), _GLF_struct_4(ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) * 1) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(6), int(6)))), (_GLF_IDENTITY(1, (1) << ((0 >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(6), int(6))))) * 1)) << 0), 1))), mat2x4(1.0), uvec4(1u), mat4x2(1.0)), mat3x2(1.0), mat4x3(1.0), ivec4(1)), _GLF_struct_replacement_30.workgroup_base + _GLF_struct_replacement_12.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - _GLF_IDENTITY(0u, (0u) / 1u))) | 0u) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), min(ivec2(1, 1), ivec2(1, 1)))), clamp(int(_GLF_IDENTITY(ivec2(1, 1), min(ivec2(1, 1), ivec2(1, 1)))), int(_GLF_IDENTITY(ivec2(1, 1), min(ivec2(1, 1), ivec2(1, 1)))), int(_GLF_IDENTITY(ivec2(1, 1), min(ivec2(1, 1), ivec2(1, 1))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1)), (int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1))) | (int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1)))))), min((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1)), (int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1))) | (int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1)))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1)), (int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1))) | (int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1)))))))) << _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(12971))), 0)))))), ((subgroup_local_id + 1)) - 0u)) | 0u) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u)) | 0u) % subgroup_size))), _GLF_struct_7(_GLF_struct_6(uvec2(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, min(1u, 1u))))) - 0u), 1u))))), mat3(1.0), mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), mat2x3(1.0), vec3(1.0), bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), bvec3(true), mat4x2(1.0), mat2x3(1.0));
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))))), ! _GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), ((! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), ((! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)), ((_GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), ((! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))) && true)) || false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(1, 1))) | 0) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(121472u, 83123u))) : injectionSwitch)), injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(121472u, _GLF_IDENTITY(_GLF_IDENTITY(83123u, (_GLF_IDENTITY(83123u, (83123u) | 0u)) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(83123u, 1u, 1u), (_GLF_IDENTITY(uvec3(83123u, 1u, 1u), min(uvec3(83123u, 1u, 1u), uvec3(83123u, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(83123u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(133924u, 124554u, 90300u)) : uvec3(83123u, 1u, 1u))), (uvec3(83123u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))) >> 0u))))) : injectionSwitch)), injectionSwitch))), (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (_GLF_IDENTITY(true, (true) && true) ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-70.60, 8.9)))), vec2(_GLF_IDENTITY(_GLF_FUZZED(360.940), clamp(_GLF_IDENTITY(_GLF_FUZZED(360.940), (true ? _GLF_FUZZED(360.940) : _GLF_FUZZED(-4.8))), _GLF_FUZZED(360.940), _GLF_IDENTITY(_GLF_FUZZED(360.940), (_GLF_FUZZED(360.940)) - 0.0))), _GLF_FUZZED(-4.7)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x2(619.837, 5262.9092, 9124.8729, 215.190, -333.131, -28.14)) : mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(360.940), _GLF_FUZZED(-4.7)), bvec2(false, false))), 0.0, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(121472u, 83123u))) : injectionSwitch)), injectionSwitch)) / vec2(1.0, 1.0))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), true && (! (! (false || (false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), injectionSwitch)))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch)))), mix(vec2(_GLF_FUZZED(-1.7), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch)))))[0], _GLF_FUZZED(-427.859)), bvec2(true, false))))).y), false || ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch)))).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, abs(1.0), 1.0))), vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(78.54) : 1.0)), 1.0, 1.0, 1.0, 1.0))), injectionSwitch)))).y) && true)))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0)))).x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1619.8296) : injectionSwitch.y))), max(determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1619.8296) : injectionSwitch.y))), determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1619.8296) : injectionSwitch.y))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y)), false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), min(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0))))))).y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y)))), false))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   buf[_GLF_struct_replacement_8.next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) && true)))) && true)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(true, false, true)))), (bool(bool(bool(bvec3(true, false, true))))) && true)), false || (bool(bvec3(true, false, true))))) && (true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   buf[_GLF_struct_replacement_8.next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, log(1.0), 0.0), mat2(mat4x3(mat2(injectionSwitch.y, 1.0, log(1.0), 0.0))))), float(mat2(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 1.0))))), 1.0, log(1.0), 0.0), mat2(mat4x3(mat2(injectionSwitch.y, 1.0, log(1.0), 0.0))))), 0.0, 1.0, 0.0))))), abs(0.0), length(abs(0.0)), 0.0, sqrt(abs(0.0)), 1.0, exp(0.0))), min(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.3))), 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-5211.9659)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), abs(0.0), length(abs(0.0)), 0.0, sqrt(abs(0.0)), 1.0, exp(0.0))), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), length(abs(0.0)), 0.0, sqrt(_GLF_IDENTITY(abs(0.0), float(_GLF_IDENTITY(mat3x4(abs(0.0), 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0), (_GLF_IDENTITY(mat3x4(abs(0.0), 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec2(1.0, 1.0)))))), mat4(1.0) * (mat3x4(abs(0.0), 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat3(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-7.3), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(34.98)), bvec2(true, false))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(0.0, 0.0, 1.0))))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)))) - mat3x4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-179.970) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, exp(0.0))), max(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), length(abs(0.0)), 0.0, sqrt(abs(0.0)), 1.0, exp(0.0))), vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), length(abs(0.0)), 0.0, sqrt(abs(0.0)), 1.0, exp(0.0)))))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(8118.9200, 610.241)))).x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
