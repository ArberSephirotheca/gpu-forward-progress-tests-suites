#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(false || (false), (false || (false)) || false)))))))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.1, -7963.2086)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) + uvec3(0u, 0u, 0u))))) | (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(465.372), max(_GLF_IDENTITY(_GLF_FUZZED(465.372), max(_GLF_FUZZED(465.372), _GLF_FUZZED(465.372))), _GLF_IDENTITY(_GLF_FUZZED(465.372), (false ? _GLF_FUZZED(-328.030) : _GLF_FUZZED(465.372))))) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(465.372) : injectionSwitch.y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(465.372) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) ^ uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * (uvec3(1u, 1u, 1u)))).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) | 0u)))) ^ 0u))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-7.6, mix(float(-7.6), float(_GLF_FUZZED(-9.9)), bool(false))) - _GLF_IDENTITY((394.690 + -61.81), min((394.690 + -61.81), (_GLF_IDENTITY(_GLF_IDENTITY(394.690 + -61.81, min(394.690 + -61.81, 394.690 + -61.81)), min(_GLF_IDENTITY(394.690 + -61.81, clamp(394.690 + -61.81, 394.690 + -61.81, _GLF_IDENTITY(394.690 + _GLF_IDENTITY(-61.81, min(-61.81, -61.81)), (false ? _GLF_FUZZED(66.19) : 394.690 + -61.81)))), 394.690 + -61.81))))), 1.0 * (_GLF_IDENTITY(-7.6 - _GLF_IDENTITY((394.690 + -61.81), min((394.690 + -61.81), (394.690 + -61.81))), max(-7.6 - _GLF_IDENTITY((394.690 + -61.81), min((394.690 + -61.81), (394.690 + -61.81))), -7.6 - _GLF_IDENTITY((394.690 + -61.81), min((394.690 + -61.81), (394.690 + _GLF_IDENTITY(-61.81, max(-61.81, -61.81)))))))))))), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.6 - (_GLF_IDENTITY(394.690 + -61.81, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 394.690 + -61.81 : _GLF_FUZZED(radians(67.49)))))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.6 - (394.690 + -61.81)))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.6 - (394.690 + _GLF_IDENTITY(-61.81, (true ? -61.81 : _GLF_FUZZED(float(findMSB(61742))))))))), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.6 - (394.690 + -61.81)))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))))).x, mix(float(_GLF_FUZZED((-7.6 - (394.690 + -61.81)))), float(injectionSwitch.x), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.6 - (394.690 + _GLF_IDENTITY(-61.81, (_GLF_IDENTITY(true, ! (! (true))) ? -61.81 : _GLF_FUZZED(float(findMSB(61742))))))))), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.6 - (394.690 + -61.81)))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))))).x, mix(float(_GLF_FUZZED((-7.6 - (394.690 + -61.81)))), float(injectionSwitch.x), bool(true)))))) / sqrt(1.0)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(mat4x2((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.3)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec4(! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true, true))), false || (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec4(! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true, true))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (vec4(injectionSwitch, 0.0, 1.0)) * mat4(1.0)))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (vec4(injectionSwitch, 0.0, 1.0)) * mat4(1.0)))) : _GLF_FUZZED(ldexp(vec2(89.30, 3.8), (ivec2(80008, -31962) & ivec2(90795, -65374)))))).y))) && true))))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch), min(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch), min(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), (vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427))) * mat2(1.0)), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)))), bvec2(false, false))), injectionSwitch), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0)]), vec2(_GLF_FUZZED(6.6), _GLF_IDENTITY(_GLF_FUZZED(-1865.0427), max(_GLF_FUZZED(-1865.0427), _GLF_FUZZED(-1865.0427)))), bvec2(false, false))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch)))))).y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (32211 & 0) ^ (_GLF_IDENTITY(1, (1) - 0)))]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch), min(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.6), _GLF_IDENTITY(_GLF_FUZZED(-1865.0427), 0.0 + (_GLF_FUZZED(-1865.0427)))), (vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427))) * mat2(1.0)), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)))), bvec2(false, false))), injectionSwitch), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0)]), vec2(_GLF_FUZZED(6.6), _GLF_IDENTITY(_GLF_FUZZED(-1865.0427), max(_GLF_FUZZED(-1865.0427), _GLF_FUZZED(-1865.0427)))), bvec2(false, false))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-1865.0427)), bvec2(false, false))), injectionSwitch)))))).y)))) || false)))) && true)) || false))))), false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-9226.8917)), vec2(_GLF_IDENTITY(_GLF_FUZZED(7.5), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7.5), min(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5))) : _GLF_FUZZED(1.3))), (vec2(0.0, 0.0))[1]), bvec2(false, true)))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-86122, -77826))) : injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(22.19)), float(1.0), bool(true))), 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, min(_GLF_IDENTITY((1.0) - 0.0, min((1.0) - 0.0, (1.0) - 0.0)), (1.0) - 0.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.9)), float(0.0), bool(true)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true))) || false))))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (1u & 1u) * (subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | (0u))) | 0u)) ^ (0u & 70923u), (false ? _GLF_FUZZED(69064u) : _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | _GLF_IDENTITY((0u), ((0u)) >> 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | _GLF_IDENTITY((0u), ((0u)) >> 0u)), max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | _GLF_IDENTITY((0u), ((0u)) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | _GLF_IDENTITY((0u), ((0u)) >> 0u)), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | _GLF_IDENTITY((0u), ((0u)) >> 0u)))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | _GLF_IDENTITY((0u), ((0u)) >> 0u)), max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | _GLF_IDENTITY((0u), ((0u)) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | _GLF_IDENTITY((0u), ((0u)) >> 0u)), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | _GLF_IDENTITY((0u), ((0u)) >> 0u))))))))) - 0u)))) | 0u)) ^ (0u & 70923u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) * 1u)) | (0u))) | 0u)) ^ (0u & 70923u))), (uint(uint((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | (_GLF_IDENTITY(0u, max(0u, 0u))))) | 0u)) ^ (0u & 70923u)))) | (uint(uint((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | (0u))) | _GLF_IDENTITY(0u, max(0u, 0u)))) ^ (_GLF_IDENTITY(0u & 70923u, 0u ^ (_GLF_IDENTITY(0u & 70923u, (false ? _GLF_FUZZED(workgroup_size) : 0u & 70923u))))))))), (_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, 0u))), ((_GLF_IDENTITY(0u, max(0u, 0u)))) >> 0u) - _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) | (0u))) | 0u)) ^ (0u & 70923u))), (uint(uint((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | (0u))) | _GLF_IDENTITY(0u, max(0u, 0u)))) ^ (0u & 70923u)))) | (uint(uint((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | (0u))) | 0u)) ^ (0u & 70923u)))))) | (_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | (0u))) | 0u)) ^ (0u & _GLF_IDENTITY(70923u, (_GLF_IDENTITY(70923u, (_GLF_IDENTITY(70923u, (70923u) / 1u)) - 0u)) << 0u)))), (uint(uint((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) | (0u))) | 0u)) ^ (0u & 70923u)))) | (uint(uint((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, 0u))) - 0u, min((_GLF_IDENTITY(0u, max(0u, 0u))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, 0u))) - 0u, ((_GLF_IDENTITY(0u, max(0u, 0u))) - 0u) ^ 0u))))) | (0u))) | 0u)) ^ (0u & 70923u))))))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))) + subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))) << 0u)))) >> _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), max((0u), (0u))))))) + 0u) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))))) ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), ~ _GLF_IDENTITY((~ (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), ((~ (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))) ^ 0u))) / _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))), 0u ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))), clamp((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))))))))) * 1u))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))), clamp((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))) ? subgroup_local_id : _GLF_FUZZED(workgroup_base))))))), min(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), ~ (~ (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))))) * 1u))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))), clamp((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), ~ (~ (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))))) * 1u))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))), clamp((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) : _GLF_FUZZED(workgroup_base))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), ~ (~ (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))), _GLF_IDENTITY(1u, uint(uvec2(1u, _GLF_IDENTITY(0u, (0u) / 1u)))))))))) * 1u))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))), clamp((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) << 0u), (1u | 0u), 1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (1u | 0u), 1u)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (1u | 0u), 1u)), (false ? _GLF_FUZZED(uvec3(145494u, 81937u, 1649u)) : uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, (0u) / 1u)), (1u | 0u), 1u))))) | (uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (1u | 0u), 1u))))))) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (0 | 0) | (int(1))))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) + _GLF_IDENTITY(0u, (0u) * 1u))) % subgroup_size : _GLF_FUZZED(workgroup_size)), 0u + (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))) ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) ^ 0u)) / 1u)) << 0u)), ((true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))) << 0u)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)) | (0u | 0u))))) | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))))))) + 1, (subgroup_local_id + 1) + _GLF_IDENTITY(0u, (0u) * 1u))) % subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), true))), true)))))) && true), true, false)))))))) ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))))))) + 1, (subgroup_local_id + 1) + _GLF_IDENTITY(0u, (0u) * 1u))) % subgroup_size : _GLF_FUZZED(workgroup_size)) : _GLF_FUZZED(subgroup_size)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) / 1), 4)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-14.49)), bool(false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 1u)), (uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) / 1u)) - 0u)), subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))))))) - 0u, ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), 1u, 0u, 1u), (true ? uvec4(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), 1u, 0u, 1u) : _GLF_FUZZED(uvec4(102580u, 45837u, 86686u, 22079u))))), _GLF_IDENTITY((uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) / 1u, min((uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) / 1u, (uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) / 1u)))) - 0u)), subgroup_local_id)), subgroup_local_id, subgroup_local_id))) - 0u) << 0u)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) && true))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(7.5), mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.5), mix(float(_GLF_FUZZED(471.150)), float(_GLF_FUZZED(7.5)), bool(true)))), float(_GLF_FUZZED(-91.51)), bool(_GLF_IDENTITY(false, false || (false))))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))), (injectionSwitch.y) + 0.0) : _GLF_FUZZED(-35.52))), 1.0, 0.0, 1.0)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(_GLF_IDENTITY(mat4(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), cos(0.0) * (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), max(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0), (true ? mat4(vec4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-55.27, 61.24, 454.876, -30.31, 32.53, -5309.9327, -33.57, 3969.4256, -8.2, -54.37, 535.239, 20.22, -0.0, -43.42, -14.88, 1.4)))))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0))), (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(7.1)), bool(false))) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (true ? _GLF_IDENTITY(0, (0) ^ 0) : _GLF_FUZZED((-62772 << -95643))))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-77649) : 0)) + (~ (_GLF_IDENTITY(0, (0) ^ 0)))), max(~ (_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, ~ (~ (0))))), ~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), int(int((0))))) / (1 & 1)) ^ 0))))), _GLF_IDENTITY(max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0)))))))), (_GLF_IDENTITY(max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0)))))))), (max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0))))))))) | (max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0))))))))))) | (max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0))))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (true ? _GLF_IDENTITY(0, (0) ^ 0) : _GLF_FUZZED((-62772 << -95643))))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-77649) : 0)) + (~ (_GLF_IDENTITY(0, (0) ^ 0)))), max(~ (_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, ~ (~ (0))))), ~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), int(int((0))))) / (1 & 1)) ^ 0))))), _GLF_IDENTITY(max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0)))))))), (_GLF_IDENTITY(max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0)))))))), (max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0))))))))) | (max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0))))))))))) | (max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0))))))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (true ? _GLF_IDENTITY(0, (0) ^ 0) : _GLF_FUZZED((-62772 << -95643))))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-77649) : 0)) + (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) + 0)))), max(~ (_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, ~ (~ (0))))), ~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), int(int((0))))) / (1 & 1)) ^ 0))))), _GLF_IDENTITY(max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0)))))))), (_GLF_IDENTITY(max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), int(ivec4(~ (_GLF_IDENTITY(0, (0) ^ 0)), (0 & -46949), 1, 0))), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), _GLF_IDENTITY(0, ~ (~ (0))) ^ ((_GLF_IDENTITY(0, (0) ^ 0)))))))), (max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0))))))))) | (max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) ^ 0), 1)), ~ (~ (int(ivec2(_GLF_IDENTITY(0, (0) ^ 0), 1))))))), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0))))))))))) | (max((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ 0)), max(~ (_GLF_IDENTITY(0, (0) ^ 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 ^ ((_GLF_IDENTITY(0, (0) ^ 0))))))))))) : _GLF_FUZZED(-47913))))))), _GLF_IDENTITY((0) | 0, _GLF_IDENTITY(((0) | 0) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((0) | 0) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1 * (((0) | 0) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))) ^ 0)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (_GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), max(((injectionSwitch)) * mat2(1.0), ((injectionSwitch)) * mat2(1.0)))) * vec2(1.0, 1.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (_GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), max(((injectionSwitch)) * mat2(1.0), ((injectionSwitch)) * mat2(1.0)))) * vec2(1.0, 1.0)))).y)) || false))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, true))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-4.3), (false ? _GLF_FUZZED(39.36) : _GLF_FUZZED(-4.3))) : injectionSwitch.x)))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) ^ 0u)) ^ 0u), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)), mix(float(_GLF_FUZZED(-6.0)), float(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0))), bool(true)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
