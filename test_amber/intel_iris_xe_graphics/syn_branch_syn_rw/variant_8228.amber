#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(1.9) : injectionSwitch.x), min((false ? _GLF_FUZZED(1.9) : injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(1.9) : injectionSwitch.x), ((false ? _GLF_FUZZED(1.9) : injectionSwitch.x)) / 1.0)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 0.0, 1.0, 1.0))), _GLF_FUZZED(-0.2)), vec2(_GLF_FUZZED(-75.02), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, false || (true))))), vec2(mat3(injectionSwitch, cos(0.0), 0.0, 0.0, 0.0, 0.0, length(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) || false)), ((! (true))) || false)), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false)))))))) && true), bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (true)), ((! (true))) || false)), true && (! (_GLF_IDENTITY((! (true)), ((! (true))) || false)))))))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(88376u))), float(injectionSwitch.y), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-9938.3125, max(-9938.3125, -9938.3125))) : _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(88376u))), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(88376u)), (_GLF_FUZZED(float(88376u))) / 1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(88376u))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (true))))), (false ? _GLF_FUZZED(-1.2) : mix(float(_GLF_FUZZED(float(88376u))), float(injectionSwitch.y), bool(true))))))))))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && _GLF_IDENTITY((bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(736.356), _GLF_FUZZED(52.72)), bvec2(false, false)))[0], float(mat2(injectionSwitch[0], 1.0, 0.0, 1.0))))), injectionSwitch[1])).y))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh(injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))), true, true, false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.3, 4.1)))))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) && true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.1)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7.3, clamp(7.3, _GLF_IDENTITY(7.3, float(vec2(7.3, 1.0))), _GLF_IDENTITY(7.3, (_GLF_IDENTITY(7.3, clamp(7.3, 7.3, 7.3))) + 0.0))))), bool(false)))), bool(true))) > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7543.9249) : injectionSwitch.y))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), false)))), true && (! (_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), false)))))))))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), false)), false || (bool(bvec2(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7543.9249) : injectionSwitch.y))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), false)))), true && (! (_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), false)))))))))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), false))))))), true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), bool(bvec2(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))).y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y)))) || false)))), false)))))), bool(bvec4((! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), bool(bvec2(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))).y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y)))) || false)))), false)))))), true, true, true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) >> 0)) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))), false || (bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, (false) || false)))), true, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, 64)), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), false || (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ceil(vec2(76.08, 4.3))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, true))), (true) || false), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), false, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), min(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0))))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, _GLF_IDENTITY(0 ^ (64), max(0 ^ _GLF_IDENTITY((64), ~ (~ ((64)))), _GLF_IDENTITY(0 ^ (64), clamp(0 ^ (64), 0 ^ (64), 0 ^ (64)))))), _GLF_IDENTITY(64, min(64, 64)))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.3)), bool(false))), injectionSwitch.y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.3)), bool(false))), injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.3)), bool(false))), injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.3)), bool(false))), injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, true))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))) || false)) && true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x < injectionSwitch.y)), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0), (mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-774.240), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY((true ? (injectionSwitch)[0] : _GLF_FUZZED(-490.293)), ((true ? (injectionSwitch)[0] : _GLF_FUZZED(-490.293))) * 1.0)), _GLF_FUZZED(-5416.1010)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(2.7, clamp(2.7, _GLF_IDENTITY(2.7, max(2.7, 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1]))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2((injectionSwitch), 1.0, abs(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2((injectionSwitch), 1.0, abs(1.0)))))), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(554.828)), float(float(_GLF_IDENTITY(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat3(mat3(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), bool(true)))), _GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0))))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? float(mat2(_GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, (2.7) - _GLF_ZERO(0.0, injectionSwitch.x)), 2.7, _GLF_IDENTITY(2.7, (2.7) - 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0)), (false ? _GLF_FUZZED(mat3x4(-56.19, -4.4, -91.96, 5951.1852, -5.3, -663.447, -700.394, 871.170, 5.5, -105.116, -2.2, 728.741)) : mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0))))))[1])).y) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s))), (false ? _GLF_FUZZED(length(min(vec3(-1363.2496, -7220.8193, 646.180), vec3(2050.8686, 578.064, 5951.1768)))) : _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), 0.0, 0.0))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))))))))))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), abs(1.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), (float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), abs(1.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0))) / 1.0))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > injectionSwitch.y) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) || false)))))), false), false))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2((injectionSwitch), 1.0, abs(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2((injectionSwitch), 1.0, abs(1.0)))))), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(554.828)), float(float(_GLF_IDENTITY(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat3(mat3(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), bool(true)))), _GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0))))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? float(mat2(_GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, (2.7) - _GLF_ZERO(0.0, injectionSwitch.x)), 2.7, _GLF_IDENTITY(2.7, (2.7) - 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0)), (false ? _GLF_FUZZED(mat3x4(-56.19, -4.4, -91.96, 5951.1852, -5.3, -663.447, -700.394, 871.170, 5.5, -105.116, -2.2, 728.741)) : mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0))))))[1])).y) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s))), (false ? _GLF_FUZZED(length(min(vec3(-1363.2496, -7220.8193, 646.180), vec3(2050.8686, 578.064, 5951.1768)))) : _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), 0.0, 0.0))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))))))))))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), abs(1.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), (float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), abs(1.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0))) / 1.0))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > injectionSwitch.y) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) || false)))))), false), false)))))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2((injectionSwitch), 1.0, abs(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2((injectionSwitch), 1.0, abs(1.0)))))), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(554.828)), float(float(_GLF_IDENTITY(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat3(mat3(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), bool(true)))), _GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0))))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? float(mat2(_GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, (2.7) - _GLF_ZERO(0.0, injectionSwitch.x)), 2.7, _GLF_IDENTITY(2.7, (2.7) - 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0)), (false ? _GLF_FUZZED(mat3x4(-56.19, -4.4, -91.96, 5951.1852, -5.3, -663.447, -700.394, 871.170, 5.5, -105.116, -2.2, 728.741)) : mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0))))))[1])).y) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.7, mix(float(_GLF_FUZZED(8.4)), float(2.7), bool(true))), float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s))), (false ? _GLF_FUZZED(length(min(vec3(-1363.2496, -7220.8193, 646.180), vec3(2050.8686, 578.064, 5951.1768)))) : _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))))), mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(2.7, min(2.7, _GLF_IDENTITY(2.7, max(2.7, 2.7))))), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, float(mat3(2.7, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), 0.0, 0.0))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))))))))))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(float(165221u))), bool(false)))), float(_GLF_FUZZED(3829.2792)), bool(false))))) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), abs(1.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), (float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(2.7, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0)) : _GLF_FUZZED(vec3(-4307.8336, 64.94, 521.107).s)))), mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), abs(1.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0))) / 1.0))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > injectionSwitch.y) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) || false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) || false)))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) || false)))))))), true, false, false)))), false), false))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, true))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(2.7, clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(_GLF_IDENTITY(2.7, min(_GLF_IDENTITY(2.7, mix(float(2.7), float(_GLF_FUZZED(-6.3)), bool(false))), _GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), (_GLF_IDENTITY(2.7, mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(2.7, _GLF_IDENTITY(max(_GLF_IDENTITY(2.7, float(mat2x3(2.7, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))), _GLF_IDENTITY(2.7, 0.0 + (_GLF_IDENTITY(2.7, (false ? _GLF_FUZZED(97.87) : 2.7))))), float(_GLF_IDENTITY(mat4x2(max(_GLF_IDENTITY(2.7, float(mat2x3(2.7, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))), _GLF_IDENTITY(2.7, 0.0 + (_GLF_IDENTITY(2.7, (false ? _GLF_FUZZED(97.87) : 2.7))))), log(1.0), abs(0.0), 1.0, 0.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat4x2(max(_GLF_IDENTITY(2.7, float(mat2x3(2.7, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))), _GLF_IDENTITY(2.7, 0.0 + (_GLF_IDENTITY(2.7, (false ? _GLF_FUZZED(97.87) : 2.7))))), log(1.0), abs(0.0), 1.0, 0.0, 0.0, 1.0, 0.0))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))).y))))))) / 1.0), 2.7)), 2.7))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), true))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(2.7, _GLF_IDENTITY(clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(2.7, mix(float(_GLF_FUZZED(-5.2)), _GLF_IDENTITY(_GLF_IDENTITY(float(2.7), min(float(2.7), float(2.7))), clamp(_GLF_IDENTITY(float(2.7), min(float(2.7), float(2.7))), _GLF_IDENTITY(float(2.7), min(float(2.7), float(2.7))), _GLF_IDENTITY(float(2.7), min(float(2.7), float(2.7))))), bool(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))) / 1.0), 2.7)), 2.7), (clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(2.7, mix(float(_GLF_FUZZED(-5.2)), _GLF_IDENTITY(float(2.7), (true ? _GLF_IDENTITY(float(2.7), clamp(float(2.7), float(2.7), float(2.7))) : _GLF_FUZZED(-9702.2717))), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), 2.7)), 2.7)) - sin(0.0)))), (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ 0)]), vec2((injectionSwitch)[0], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > injectionSwitch.y)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (bool(bvec4(false, true, true, true)))), true && (bool(bvec4(false, true, true, true))))))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-7.1, 602.888)) : injectionSwitch), min((false ? _GLF_FUZZED(vec2(-7.1, 602.888)) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-7.1, 602.888)) : injectionSwitch), clamp((false ? _GLF_FUZZED(vec2(-7.1, 602.888)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-7.1, 602.888)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-7.1, 602.888)) : injectionSwitch)))))), injectionSwitch)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(2.7, clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(_GLF_IDENTITY(2.7, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5.2), (_GLF_FUZZED(-5.2)) - 0.0)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(_GLF_IDENTITY(2.7, mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_IDENTITY(false, true && (false)), false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_IDENTITY(false, true && (false)), false)))))))))))), _GLF_IDENTITY(2.7, mix(float(_GLF_FUZZED(-5.2)), float(2.7), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), true && ((true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) / 1.0), 2.7)), 2.7))), _GLF_IDENTITY(float(vec3(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(7.8)), float(float(mat4x3(_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), bool(true)))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(2.7, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.2)), max(float(_GLF_FUZZED(-5.2)), float(_GLF_FUZZED(-5.2)))), float(2.7), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true)))), bool(bool(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true)))))))))) / 1.0), 2.7)), 2.7))), 1.0, 1.0)), (float(vec3(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)), (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(7.8)), float(float(mat4x3(_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), bool(true)))), clamp(2.7, _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, (_GLF_IDENTITY(2.7, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.2)), max(float(_GLF_FUZZED(-5.2)), float(_GLF_FUZZED(-5.2)))), float(2.7), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true))))))) / 1.0), 2.7)), 2.7))), 1.0, 1.0))) / determinant(mat4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0, 1.0)))), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED(-60.88)), bvec2(true, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(intBitsToFloat(ivec2(-31566, 28429))))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(intBitsToFloat(ivec2(-31566, 28429))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2(_GLF_FUZZED(7.1), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(-5850.5460)), bvec2(true, false))) : _GLF_FUZZED(intBitsToFloat(ivec2(-31566, 28429))))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(intBitsToFloat(ivec2(-31566, 28429))))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(intBitsToFloat(ivec2(-31566, 28429))))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(intBitsToFloat(ivec2(-31566, 28429))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(intBitsToFloat(ivec2(-31566, 28429))))), max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(intBitsToFloat(ivec2(-31566, 28429))))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(intBitsToFloat(ivec2(-31566, 28429))))))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.2)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(mix(float(_GLF_FUZZED(5.2)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(5.2)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.2)), float(injectionSwitch.y), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), min(mix(float(_GLF_FUZZED(5.2)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(5.2)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4x2(injectionSwitch.x, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(vec2(232.183, 8.1), vec2(5.9, 0.6), vec2(-1.8, 3.2), vec2(-4284.7654, -8.6)))))), (float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4x2(injectionSwitch.x, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(vec2(232.183, 8.1), vec2(5.9, 0.6), vec2(-1.8, 3.2), vec2(-4284.7654, -8.6))))))) * 1.0)) > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4x2(injectionSwitch.x, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(vec2(232.183, 8.1), vec2(5.9, 0.6), vec2(-1.8, 3.2), vec2(-4284.7654, -8.6)))))), (float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4x2(injectionSwitch.x, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(vec2(232.183, 8.1), vec2(5.9, 0.6), vec2(-1.8, 3.2), vec2(-4284.7654, -8.6))))))) * 1.0)) > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, false)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))))))), false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), false || (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), ! (! (_GLF_IDENTITY(bool((! (false))), bool(bool(bool((! (false))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 0.0))), 1.0, 0.0))))), 0.0)), (transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[0])), injectionSwitch[1])), 0.0, 1.0, 1.0, 0.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(vec2(-6.6, 397.511)) : vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(-5.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), 0.0, 1.0, 1.0, 0.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))).y, injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))) || false))), false, true, true)), ! (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, true, true))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, true, true)), true && (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), (injectionSwitch.x > injectionSwitch.y) || false))), false, true, true))))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, false))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), false))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))) / vec2(1.0, 1.0))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-735.261, -0.0))))[0], injectionSwitch[1])))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, sin(0.0)), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, sin(0.0)), vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_FUZZED(_GLF_IDENTITY(85.78, max(85.78, 85.78))) : dot(vec3(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, sin(0.0)), vec3(0.0, 1.0, 0.0))))), 1.0, 1.0, 1.0, exp(0.0), 1.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
