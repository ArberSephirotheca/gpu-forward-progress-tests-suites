#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, (true) && true), false)), ! (! _GLF_IDENTITY((bool(bvec4(false, false, true, false))), (_GLF_IDENTITY((bool(bvec4(false, false, true, false))), _GLF_IDENTITY(((bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), true, false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(16.97)), bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) || false))), (((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false, true, false)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(11.38)), vec2(_GLF_FUZZED(666.903), (injectionSwitch)[1]), bvec2(false, true))).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || false))) && true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0))) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || _GLF_IDENTITY((false), false || ((false)))) || false))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - _GLF_IDENTITY(0u, (0u) | (0u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))), _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uvec2(~ (1u), 0u))))) : _GLF_FUZZED(virtual_gid))), 0u, 1u))), (subgroup_size)), _GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))), (subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))), uint(uvec4((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), 1u, 0u, 1u))), (subgroup_size))), min(_GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))), (subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : min(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))), (subgroup_size)))))) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))), uint(uvec4((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), 1u, 0u, 1u))), (subgroup_size))), max((max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))), (subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size))))))), uint(uvec4((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), 1u, 0u, 1u))), (subgroup_size))), (max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))), (subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), clamp((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED((workgroup_id - subgroup_id))))), (subgroup_size), (subgroup_size))))), uint(uvec4((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), 1u, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), (subgroup_size))))), (max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))), (subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), clamp((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (subgroup_size), (subgroup_size))))), uint(uvec4((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), 1u, 0u, 1u))), (subgroup_size))))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), (((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))) ^ 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), 1u, 0u, 1u))), (subgroup_size)), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))), uint(uvec4((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), 1u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))), uint(uvec4((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), 1u, 0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))), uint(uvec4((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), 1u, 0u, 1u))))), (subgroup_size))) | 0u)))))) >> (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(4u), uint(4u)))), subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, 1, 0), min(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, 1, 0), ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, 1, 0))))), (1) ^ 0))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, 1, 0), min(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, 1, 0), ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, 1, 0))))), (1) ^ 0)))) ^ 0u)) % subgroup_size), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, 1, 0), min(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) / 1)) | (1)), max(1, 1)), 0, 1, 0), ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, 1, 0))))), (1) ^ 0)))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))), 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))), (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), buf[virtual_gid])), (buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) ^ 0u))))), ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])))) << 0u)) / 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))), (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), buf[virtual_gid])), (buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) ^ 0u))))), ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])))) << 0u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))), (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), buf[virtual_gid])), (buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) ^ 0u))))), ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])))) << 0u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))), (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), buf[virtual_gid])), (buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) ^ 0u))))), ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])))) << 0u)) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY((4) | 0, ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((4) | 0), _GLF_IDENTITY((((4) | 0)) | 0, min(_GLF_IDENTITY((((4) | 0)) | 0, ((((4) | 0)) | 0) | ((((4) | 0)) | 0)), (((4) | 0)) | 0)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ ((4) | 0)), int(ivec2((~ ((4) | 0)), 0))), (0 & _GLF_IDENTITY(-33682, max(-33682, -33682))) ^ (_GLF_IDENTITY((~ ((4) | 0)), clamp((~ ((4) | 0)), (~ ((4) | 0)), (~ ((4) | 0))))))), max(~ (_GLF_IDENTITY((~ ((4) | 0)), (0 & -33682) ^ ((~ ((4) | 0))))), ~ (_GLF_IDENTITY((~ (_GLF_IDENTITY((4) | 0, ((4) | 0) | 0))), (0 & -33682) ^ ((~ ((4) | 0)))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ ((4) | 0)), int(ivec2((~ ((4) | 0)), 0))), _GLF_IDENTITY((0 & -33682), 0 | ((0 & -33682))) ^ (_GLF_IDENTITY((~ ((4) | 0)), clamp((~ ((4) | 0)), (~ ((4) | 0)), (~ (_GLF_IDENTITY((4) | 0, ~ (~ (_GLF_IDENTITY((4) | 0, ((4) | 0) << 0))))))))))), max(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(64159))) | 0)), (0 & -33682) ^ ((_GLF_IDENTITY(~ ((4) | 0), (~ ((4) | 0)) | 0))))), ~ (_GLF_IDENTITY((~ ((4) | 0)), (0 & -33682) ^ ((~ ((4) | 0))))))))) ^ _GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(3), int(3))))))), clamp(_GLF_IDENTITY((4) | 0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((4) | 0), (((4) | 0)) << 0), int(int(~ (_GLF_IDENTITY((4), _GLF_IDENTITY(0, (0) | (0)) ^ ((4))) | 0)))))), _GLF_IDENTITY((4) | 0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(((4) | 0), (((4) | 0)) / 1), (((4) | 0)) | (-64614 & 0)))), _GLF_IDENTITY((4) | 0, ~ (~ ((4) | 0))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-88991))))), (4) | (4))))) >> 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0))))), ~ (~ ((4) | _GLF_IDENTITY(0, 0 | (0))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY((4) | 0, ~ (~ ((4) | 0))), _GLF_IDENTITY((4) | _GLF_IDENTITY(0, (0) << 0), ~ (~ ((4) | 0))), _GLF_IDENTITY((4) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitCount(-18304)) : _GLF_IDENTITY((4), ((4)) / 1))) | 0), min(_GLF_IDENTITY(~ ((4) | 0), 0 ^ (~ ((4) | 0))), ~ ((4) | 0)))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((4) | 0, ~ (~ ((4) | 0))), _GLF_IDENTITY((4) | _GLF_IDENTITY(0, (0) << 0), ~ (~ ((4) | 0))), _GLF_IDENTITY((4) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitCount(-18304)) : _GLF_IDENTITY((4), ((4)) / 1))) | 0), min(_GLF_IDENTITY(~ ((4) | 0), 0 ^ (~ ((4) | 0))), ~ ((4) | 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-84612) : _GLF_IDENTITY(clamp(_GLF_IDENTITY((4) | 0, ~ (~ ((4) | 0))), _GLF_IDENTITY((4) | _GLF_IDENTITY(0, (0) << 0), ~ (~ ((4) | 0))), _GLF_IDENTITY((4) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitCount(-18304)) : _GLF_IDENTITY((4), ((4)) / 1))) | 0), min(_GLF_IDENTITY(~ ((4) | 0), 0 ^ (~ ((4) | 0))), ~ ((4) | 0)))))), (clamp(_GLF_IDENTITY((4) | 0, ~ (~ ((4) | 0))), _GLF_IDENTITY((4) | _GLF_IDENTITY(0, (0) << 0), ~ (~ ((4) | 0))), _GLF_IDENTITY((4) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitCount(-18304)) : _GLF_IDENTITY((4), ((4)) / 1))) | 0), min(_GLF_IDENTITY(~ ((4) | 0), 0 ^ (~ ((4) | 0))), ~ ((4) | 0))))))) / 1))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((4) | 0, ~ (~ ((4) | 0))), _GLF_IDENTITY((4) | _GLF_IDENTITY(0, (0) << 0), ~ (~ ((4) | 0))), _GLF_IDENTITY((4) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitCount(-18304)) : _GLF_IDENTITY((4), ((4)) / 1))) | 0), min(_GLF_IDENTITY(~ ((4) | 0), 0 ^ (~ ((4) | 0))), ~ ((4) | 0)))))), (clamp(_GLF_IDENTITY((4) | 0, ~ (~ ((4) | 0))), _GLF_IDENTITY((4) | _GLF_IDENTITY(0, (0) << 0), ~ (~ ((4) | 0))), _GLF_IDENTITY((4) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitCount(-18304)) : _GLF_IDENTITY((4), ((4)) / 1))) | 0), min(_GLF_IDENTITY(~ ((4) | 0), 0 ^ (~ ((4) | 0))), ~ ((4) | 0))))))) << 0))), (clamp(_GLF_IDENTITY((4) | 0, ~ (~ ((4) | 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(4, (4) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, (4) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | _GLF_IDENTITY(0, (0) << 0), ~ (_GLF_IDENTITY(~ ((4) | 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)) * (~ ((4) | 0))))), _GLF_IDENTITY((4) | _GLF_IDENTITY(0, (0) | (0)), ~ (_GLF_IDENTITY(~ ((4) | 0), min(_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, int(int(4)))))) | 0), 0 ^ (~ ((4) | 0))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), ((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)) | ((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), ((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)) | ((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0))), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), ((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)) | ((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0))))))), ~ (~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), ((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)) | ((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0))), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, tan(0.0), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, tan(0.0), 1.0))))))) | _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0))), (_GLF_IDENTITY((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)))) | ((_GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)))))))))))))))))) - 0)))), ((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4))) | 0, ~ (~ ((4) | _GLF_IDENTITY(0, 0 | (0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4) | 0, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((4) | 0)), (true ? ~ _GLF_IDENTITY((~ ((4) | 0)), ~ (~ (_GLF_IDENTITY((~ ((4) | 0)), ((~ ((4) | 0))) | ((~ ((4) | 0))))))) : _GLF_FUZZED(26103))), ~ (_GLF_IDENTITY(~ (~ (~ ((4) | 0))), (~ (_GLF_IDENTITY(~ (~ ((4) | 0)), 0 + (~ (~ ((4) | 0)))))) << 0)))), (_GLF_IDENTITY((4) | 0, _GLF_IDENTITY(~ (~ ((4) | 0)), ~ (_GLF_IDENTITY(~ (~ (~ ((4) | 0))), (~ (~ (~ ((4) | 0)))) << 0))))) << 0), _GLF_IDENTITY((4) | _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, max((0) << 0, (_GLF_IDENTITY(0, max(0, 0))) << 0))), (0 << _GLF_IDENTITY(int(8), int(8))) ^ (_GLF_IDENTITY(0, (0) << 0))), ~ (~ (_GLF_IDENTITY((4), ((4)) - 0) | 0))), _GLF_IDENTITY((4) | 0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((4) | 0), min(_GLF_IDENTITY(~ ((4) | 0), 0 ^ (~ ((4) | 0))), ~ _GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4))) | 0), (_GLF_IDENTITY(((4) | 0), (((4) | 0)) + 0)) | 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ ((4) | 0), min(_GLF_IDENTITY(~ ((4) | 0), 0 ^ (~ ((4) | 0))), ~ _GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4))) | 0), (_GLF_IDENTITY(((4) | 0), (((4) | 0)) + 0)) | 0))), (_GLF_IDENTITY(~ ((4) | 0), min(_GLF_IDENTITY(~ ((4) | 0), 0 ^ (~ ((4) | 0))), ~ _GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4))) | 0), (_GLF_IDENTITY(((4) | 0), (((4) | 0)) + 0)) | 0)))) / 1), _GLF_IDENTITY(~ ((4) | 0), min(_GLF_IDENTITY(~ ((4) | 0), 0 ^ (~ ((4) | 0))), ~ _GLF_IDENTITY(((_GLF_IDENTITY(4, 0 ^ (4))) | 0), (_GLF_IDENTITY(((4) | 0), (((4) | 0)) + 0)) | 0)))))))))))) >> 0) | (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) | (4))))) >> 0)) * 1), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, min(4, 4))), ~ (~ (max(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), int(ivec2(min(4, 4), 0))))))))), _GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), (true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY(((64)) / 1, max(_GLF_IDENTITY((_GLF_IDENTITY((64), clamp((64), (64), _GLF_IDENTITY((64), ((64)) << 0)))), clamp((_GLF_IDENTITY((64), clamp((64), (64), _GLF_IDENTITY((64), ((64)) << 0)))), (_GLF_IDENTITY((64), clamp((64), (64), _GLF_IDENTITY((64), ((64)) << 0)))), (_GLF_IDENTITY((64), clamp((64), (64), _GLF_IDENTITY((64), ((64)) << 0)))))) / 1, ((64)) / 1)), _GLF_IDENTITY((((64)) / 1), ((((64)) / 1)) << 0) | (((64)) / 1)))), _GLF_IDENTITY(min((_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(-45647)))) / 1, (((64)) / 1) | (((64)) / 1)))), (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1))))), (_GLF_IDENTITY(min((_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (_GLF_IDENTITY(((64)) / 1, clamp(((64)) / 1, ((64)) / 1, ((64)) / 1)))))), (_GLF_IDENTITY((64), _GLF_IDENTITY(((_GLF_IDENTITY(64, 0 | (64)))) / 1, (((64)) / 1) | (_GLF_IDENTITY(((64)), 0 + (_GLF_IDENTITY(((64)), min(((64)), ((64)))))) / 1))))), max(min((_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1)))), (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (_GLF_IDENTITY(((64)), max(((64)), ((64)))) / 1))))), _GLF_IDENTITY(min((_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1)))), (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1))))), max(min((_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1))), 0 | (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1))))), _GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1))), _GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1))), clamp(_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1))), _GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1))), _GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (((64)) / 1))))))), min((_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((64)) / 1) | (_GLF_IDENTITY(((64)) / 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((64)) / 1, ~ (~ (((64)) / 1)))), (true ? ~ (_GLF_IDENTITY(((64)) / 1, ~ (~ (((64)) / 1)))) : _GLF_FUZZED(31298))))))))), (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) / 1, (((_GLF_IDENTITY(64, (64) - 0))) / 1) | (((64)) / 1)))))))))) - 0)) | ((64))) : _GLF_FUZZED(13330))))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, false))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (_GLF_DEAD(false)))), false, true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))))), true && (false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), false, true, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0)))) >> (0 >> _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), (false ? _GLF_FUZZED(-9887) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0)))) >> (0 >> _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), (false ? _GLF_FUZZED(-9887) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))))))))) >> (0 & ivec3(-15464, 22648, 95023).r)) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0)), (false ? _GLF_FUZZED((false ? 30037 : -7640)) : _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0)), (false ? _GLF_FUZZED((false ? 30037 : -7640)) : _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0))))), int(ivec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0)), (false ? _GLF_FUZZED((false ? 30037 : -7640)) : _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0))))), 0, 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) * 1u), bool(bvec2(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0)))) >> (0 >> _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), (false ? _GLF_FUZZED(-9887) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0)))) >> (0 >> _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))), (false ? _GLF_FUZZED(-9887) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, (1) | 0)) - 0))))))))) >> (0 & ivec3(-15464, 22648, 95023).r)) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0)), (false ? _GLF_FUZZED((false ? 30037 : -7640)) : _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0)), (false ? _GLF_FUZZED((false ? 30037 : -7640)) : _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0))))), int(ivec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0)), (false ? _GLF_FUZZED((false ? 30037 : -7640)) : _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << 0)), 1 * ((_GLF_IDENTITY(0, (0) << 0)))))) | (0))))), 0, 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) * 1u), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false)), bool(bvec3(bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false)), false, true)))))), true)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false)), bool(bvec3(bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false)), false, true)))))), true))))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false)), bool(bvec3(bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false)), false, true)))))), true))))))), true))))))))))))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), true))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), true))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), true))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), false))))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), true))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), false))))))))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), true))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), true))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), false))))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false)))), true))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), false))))))))))))), false, false)), false, false, false))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), bool(bool(_GLF_IDENTITY(! (bool(bvec2(false, true))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), (! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), bool(bool(_GLF_IDENTITY(! (bool(bvec2(false, true))), bool(bvec2(! (bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))))))))))), false, true, true)))))) || false) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)));
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) >> (1 ^ 1)), _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), max((4) | (4), _GLF_IDENTITY((4) | (4), ((4) | (4)) | 0)))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, 0 | (64)), 64, 64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)).y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))), ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(3.0, 5.0, 51.81, 2.9).g) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-15.48), _GLF_FUZZED(vec4(_GLF_IDENTITY(-4239.7376, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-4239.7376, 0.0 + (-4239.7376)), 1.0 * (-4239.7376))), float(_GLF_FUZZED(221.021)), bool(false))), -505.665, 4.4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(676.956, min(676.956, 676.956)), min(_GLF_IDENTITY(676.956, min(676.956, 676.956)), _GLF_IDENTITY(676.956, min(676.956, 676.956)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(676.956, min(676.956, 676.956)), clamp(_GLF_IDENTITY(676.956, min(676.956, 676.956)), _GLF_IDENTITY(_GLF_IDENTITY(676.956, min(676.956, 676.956)), clamp(_GLF_IDENTITY(676.956, min(676.956, 676.956)), _GLF_IDENTITY(676.956, min(676.956, 676.956)), _GLF_IDENTITY(676.956, min(676.956, 676.956)))), _GLF_IDENTITY(676.956, min(676.956, 676.956)))), mix(float(_GLF_FUZZED(-355.037)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(676.956, min(676.956, 676.956)), min(_GLF_IDENTITY(676.956, min(676.956, 676.956)), _GLF_IDENTITY(676.956, min(676.956, 676.956)))), min(_GLF_IDENTITY(_GLF_IDENTITY(676.956, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(676.956, max(_GLF_IDENTITY(676.956, (false ? _GLF_FUZZED(362.162) : 676.956)), 676.956)), length(vec2(0.0, 0.0)), 1.0, 1.0), vec4(mat4x3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(676.956, max(_GLF_IDENTITY(676.956, (false ? _GLF_IDENTITY(_GLF_FUZZED(362.162), clamp(_GLF_FUZZED(362.162), _GLF_IDENTITY(_GLF_FUZZED(362.162), min(_GLF_FUZZED(362.162), _GLF_FUZZED(362.162))), _GLF_IDENTITY(_GLF_FUZZED(362.162), (false ? _GLF_FUZZED(-7.9) : _GLF_FUZZED(362.162))))) : 676.956)), 676.956)), length(vec2(0.0, 0.0)), 1.0, 1.0), vec4(mat3(vec4(_GLF_IDENTITY(676.956, max(_GLF_IDENTITY(676.956, (false ? _GLF_FUZZED(362.162) : 676.956)), 676.956)), length(vec2(0.0, 0.0)), 1.0, 1.0), 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), min(676.956, 676.956)), _GLF_IDENTITY(676.956, min(676.956, 676.956))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(676.956, min(676.956, 676.956)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(676.956, min(676.956, 676.956)), (false ? _GLF_FUZZED(-8.7) : _GLF_IDENTITY(676.956, min(676.956, 676.956))))), float(_GLF_FUZZED(float((_GLF_IDENTITY(129478u, uint(_GLF_IDENTITY(uvec2(129478u, 0u), (uvec2(129478u, 0u)) - uvec2(0u, 0u)))) / 120581u)))), _GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))))))) - 0.0), _GLF_IDENTITY(676.956, min(676.956, 676.956))))).p)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), _GLF_IDENTITY(float(_GLF_FUZZED(-99.38)), (false ? _GLF_FUZZED(510.993) : float(_GLF_FUZZED(-99.38)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1], min(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1], ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]))), vec2(_GLF_FUZZED(8603.4105), _GLF_FUZZED(-5.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[1], min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))[1])))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-65461)))], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80573) : 1))])))[1]))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false), false || (_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false), false || (_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true && (_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true)), _GLF_IDENTITY((bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && _GLF_IDENTITY(true, ! (! (true))))), ((bool(bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true, true)))) || false)) && true) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec3(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true, false))), _GLF_IDENTITY((bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, true))), bool(_GLF_IDENTITY(bool((bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, true)))), ! (! (bool((bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, true))))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true), (bool(bvec4(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))), true, true))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true))))), _GLF_IDENTITY(false, ! (! (false)))))))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(99.29, -843.682, 7387.6101).r), _GLF_FUZZED(87.46)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ((! (false))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-127.088), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(4357.5550)), bvec2(true, false)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
