#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 mat3x2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 mat4x2 _f1;
 bvec3 _f2;
 uvec3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_7 {
 bool _f0;
 mat4x2 _f1;
 bvec2 _f2;
 uint workgroup_size;
 mat3x2 _f3;
} ;

struct _GLF_struct_6 {
 uint _f0;
 ivec4 _f1;
 ivec2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_10 {
 int _f0;
 _GLF_struct_6 _f1;
 uint _f2;
 _GLF_struct_7 _f3;
 bool _f4;
 _GLF_struct_8 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat3x2 _f1;
 mat4x2 _f2;
 vec2 _f3;
 mat4x2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 ivec3 _f1;
 mat3 _f2;
 float _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat4x2 _f2;
 uint subgroup_size;
 _GLF_struct_2 _f3;
 bvec3 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_5 {
 float _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(1.0, _GLF_struct_4(_GLF_struct_0(mat3(1.0), ivec3(1), mat3(1.0), 1.0), _GLF_struct_1(uvec2(1u), mat3x2(1.0), mat4x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), vec2(1.0), mat4x2(1.0), ivec4(1)), mat4x2(1.0), gl_SubgroupSize, _GLF_struct_2(mat3(1.0), mat4x3(1.0)), bvec3(true), _GLF_struct_3(mat2x4(1.0), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(130172u, _GLF_IDENTITY(145165u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : 145165u, 0u | (false ? _GLF_FUZZED(subgroup_id) : 145165u)))), 170732u, 24340u), (uvec4(130172u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(145165u, (145165u) * 1u), (false ? _GLF_FUZZED(subgroup_id) : 145165u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(145165u, (145165u) * 1u), (false ? _GLF_FUZZED(subgroup_id) : 145165u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(145165u, (145165u) * 1u), (false ? _GLF_FUZZED(subgroup_id) : 145165u)), (_GLF_IDENTITY(_GLF_IDENTITY(145165u, (145165u) * 1u), (false ? _GLF_FUZZED(subgroup_id) : 145165u))) << 0u), 1u)))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(145165u, (145165u) * 1u), (false ? _GLF_FUZZED(subgroup_id) : 145165u))) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), 170732u, 24340u)) / uvec4(1u, 1u, 1u, 1u))) : uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), (true ? 1u : _GLF_FUZZED(subgroup_id)) | (true ? 1u : _GLF_FUZZED(subgroup_id))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)) | (true ? 1u : _GLF_FUZZED(subgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), clamp(_GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u | ((true ? 1u : _GLF_FUZZED(subgroup_id)))), (true ? 1u : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), uint(uint((true ? 1u : _GLF_FUZZED(subgroup_id))))))) | (true ? 1u : _GLF_FUZZED(subgroup_id)), max((true ? 1u : _GLF_FUZZED(subgroup_id)) | (true ? 1u : _GLF_FUZZED(subgroup_id)), (true ? 1u : _GLF_FUZZED(subgroup_id)) | (true ? 1u : _GLF_FUZZED(subgroup_id)))), (true ? 1u : _GLF_FUZZED(subgroup_id)) | (true ? 1u : _GLF_FUZZED(subgroup_id)), (true ? 1u : _GLF_FUZZED(subgroup_id)) | (true ? 1u : _GLF_FUZZED(subgroup_id))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), (true ? 1u : _GLF_FUZZED(subgroup_id)) | (true ? 1u : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), (true ? 1u : _GLF_FUZZED(subgroup_id)) | (true ? 1u : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), (true ? 1u : _GLF_FUZZED(subgroup_id)) | _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), clamp((true ? _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? 1u : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? 1u : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? 1u : _GLF_FUZZED(subgroup_id)) | 0u)) >> 0u)), (true ? 1u : _GLF_FUZZED(subgroup_id))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), (true ? 1u : _GLF_FUZZED(subgroup_id)) | (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED(subgroup_id))))), uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 1u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) | (true ? 1u : _GLF_FUZZED(subgroup_id))))), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-878.686) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-878.686) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-269.027, 279.943)) : mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(3929.7918, 5.3, 9.7, 638.348).z, (vec4(3929.7918, 5.3, 9.7, 638.348).z) + 0.0)), _GLF_FUZZED(-57.83)), bvec2(false, _GLF_IDENTITY(false, bool(bool(false)))))))), min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-878.686) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(3929.7918, 5.3, 9.7, 638.348).z, (vec4(_GLF_IDENTITY(3929.7918, min(3929.7918, _GLF_IDENTITY(3929.7918, (_GLF_IDENTITY(3929.7918, 0.0 + (3929.7918))) - 0.0))), 5.3, 9.7, 638.348).z) + 0.0)), _GLF_FUZZED(-57.83)), bvec2(false, false))))), min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ((_GLF_DEAD(false))) || false)))))) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ((_GLF_DEAD(false))) || false)))))) || false))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-84.04)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_10(1, _GLF_struct_6(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (1u)))), ivec4(1), ivec2(_GLF_IDENTITY(1, 0 ^ (1))), mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec4(66.75, 1.9, -9004.9815, 9.3), vec4(-8.3, 8684.3826, -56.73, -54.90))) : 1.0)), clamp(1.0, 1.0, 1.0))))), float(_GLF_FUZZED(-9051.9390)), bool(false))), 1.0)), 1.0, 1.0), 0.0 + (clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9051.9390)), bool(false))), 1.0)), 1.0, 1.0)))))), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_struct_7(true, mat4x2(1.0), bvec2(true), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, false)), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true && (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (true && (true)) && true)) || false), false, false, true)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (true && (true)) && true)) || false), false, false, true))), false || ((bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (true && (true)) && true)) || false), false, false, true)))))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true && (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (true), _GLF_IDENTITY((_GLF_IDENTITY(true && (true), (true && (true)) && true)) || false, ! (! ((_GLF_IDENTITY(true && (true), _GLF_IDENTITY((true && (true)) && true, true && ((true && (true)) && true)))) || false)))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (true && (true)) && true)) || false), false, false, true)))))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true), true, true, false))), _GLF_IDENTITY(true && (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (true && (true)) && true)) || false), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (true && (true)) && true)) || false), false, false, true)))))), true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true && (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (true && (true)) && true)) || false), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (true && (true)) && true)) || false), false, false, true)))))), true, false)))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true && (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (true && (true)) && true)) || false), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), _GLF_IDENTITY((true && (true)) && true, ((true && (true)) && true) && true))) || false), false, false, true)))))), true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true && (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (true), (_GLF_IDENTITY(true && (true), (true && (true)) && true)) || false), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (true && (true)) && true)) || false), false, false, true)))))), true, false)))), false)))), false)))))), false, true)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(true, false || (true))))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(true, false || (true))))), false, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) & uvec3(33216u, 155279u, 47617u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) & uvec3(33216u, 155279u, 47617u))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) & uvec3(33216u, 155279u, 47617u))))), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) & uvec3(33216u, 155279u, 47617u))))), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) & uvec3(33216u, 155279u, 47617u))))))), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) & uvec3(33216u, 155279u, 47617u))))))).x : _GLF_FUZZED(subgroup_local_id))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(num_workgroup))))), (((true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) && true)))) ? _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)) : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(num_workgroup)))) >> 0u) << _GLF_IDENTITY(0u, 0u | (0u)))), mat3x2(1.0)), true, _GLF_struct_8(_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(9.6), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(82.61)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(82.61)), min(float(_GLF_FUZZED(82.61)), float(_GLF_FUZZED(82.61)))) : _GLF_FUZZED(-555.217))), float(_GLF_IDENTITY(_GLF_FUZZED(9.6), _GLF_IDENTITY((_GLF_FUZZED(9.6)) + 0.0, float(mat3x2((_GLF_FUZZED(9.6)) + 0.0, 0.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0 + (mix(float(_GLF_FUZZED(82.61)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(9.6), (_GLF_FUZZED(9.6)) + 0.0)), (float(_GLF_IDENTITY(_GLF_FUZZED(9.6), (_GLF_FUZZED(9.6)) + 0.0))) - 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.1), _GLF_FUZZED(-2273.1763)), bvec2(false, false)))) + vec2(0.0, 0.0)), 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.1), _GLF_FUZZED(-2273.1763)), bvec2(false, false)))) + vec2(0.0, 0.0)), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.1), _GLF_FUZZED(-2273.1763)), bvec2(false, false)))) + vec2(0.0, 0.0)), 1.0, 1.0))))).y))))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.0)), float(1.0), bool(true)))) - 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0)), _GLF_IDENTITY(((_GLF_IDENTITY(vec2(1.0), mat2(1.0) * _GLF_IDENTITY((vec2(1.0)), vec2(vec3(_GLF_IDENTITY((vec2(1.0)), mix(vec2(_GLF_FUZZED((-6509.1180 / 8.5)), ((vec2(1.0)))[1]), vec2((_GLF_IDENTITY((vec2(1.0)), mat2(1.0) * ((vec2(1.0)))))[0], _GLF_FUZZED(-3.3)), bvec2(true, false))), 1.0)))))) * mat2(1.0), min(((vec2(1.0))) * mat2(1.0), ((vec2(1.0))) * mat2(1.0)))), (_GLF_IDENTITY((vec2(1.0)), _GLF_IDENTITY(((_GLF_IDENTITY(vec2(1.0), mat2(1.0) * _GLF_IDENTITY((vec2(1.0)), vec2(vec3(_GLF_IDENTITY((vec2(1.0)), mix(vec2(_GLF_FUZZED((-6509.1180 / 8.5)), ((vec2(1.0)))[1]), vec2(((vec2(1.0)))[0], _GLF_FUZZED(-3.3)), bvec2(true, false))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))))))))) * mat2(1.0), min(((vec2(1.0))) * mat2(1.0), ((vec2(1.0))) * mat2(1.0))))) / vec2(1.0, 1.0))) - sqrt(vec2(0.0, 0.0)))[1]), vec2((_GLF_IDENTITY(vec2(1.0), vec2(mat4(vec2(1.0), _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(length(0.0)), 0.0, log(1.0), 0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-556.264))), 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), float(mat2(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 0.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 1.0))), 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0))))[0], _GLF_FUZZED(_GLF_IDENTITY((9000.7375 - float(false)), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * _GLF_IDENTITY(((9000.7375 - float(false))), (((9000.7375 - float(false)))) * 1.0)))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), true, true))))))))))), mat4x2(1.0), bvec3(true), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))), 1u)), uint(uvec4(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(uvec2(_GLF_IDENTITY((1u), uint(uint((1u)))), 0u))) | (1u))) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) | _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u))), 0u + ((_GLF_IDENTITY(1u, (1u) | (1u)))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) - 0u)) | 0u)) >> 0u, uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) - 0u)) | 0u)) >> 0u, 1u))))))))))), 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u))), _GLF_IDENTITY(0u, ~ (~ (0u))))))), (uvec3(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(1u * (_GLF_IDENTITY(1u, (1u) | (1u))), min(1u * (_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(1u, (1u) | (1u))), (1u * (_GLF_IDENTITY(1u, (1u) | (1u)))) | 0u)) | (1u * (_GLF_IDENTITY(1u, (1u) | (1u)))))))), min(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) | (1u)))))), 0u, ((_GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u))), mat2x4(1.0)), _GLF_struct_9(mat3x2(1.0), uvec2(1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u) | ((gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-228.999)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_struct_replacement_11._f0._f3.workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uint(workgroup_id)), 0u + (uint(uint(workgroup_id)))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1.subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1.subgroup_size, (true ? workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1.subgroup_size : _GLF_FUZZED(workgroup_base)))) + 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), (_GLF_IDENTITY(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), max(_GLF_IDENTITY(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), min(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), _GLF_IDENTITY(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), (min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size)) - 0u))), min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size)))) | (min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size))), (_GLF_IDENTITY(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), (_GLF_IDENTITY(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), max(_GLF_IDENTITY(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), min(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), _GLF_IDENTITY(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), (min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size)) - 0u))), min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size)))) | (min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size)))) | (_GLF_IDENTITY(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), (_GLF_IDENTITY(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), max(_GLF_IDENTITY(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), min(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), _GLF_IDENTITY(min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), (min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size)) - 0u))), min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size)))) | (min((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) + 0), 4, 4)), int(ivec2(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) + 0), 4, 4)), 1))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true), true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)], uint(1), 4, 64, _GLF_IDENTITY(4, (4) >> 0));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1 < _GLF_struct_replacement_5._f1.subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY((! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))), true && (true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bool(! ((false) || false)), ! (! (bool(! ((false) || false)))))))))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY((! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))), true && (true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bool(! ((false) || false)), ! (! (bool(! ((false) || false)))))))))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))))))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY((! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))), true && (true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bool(! ((false) || false)), ! (! (bool(! ((false) || false)))))))))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))))))))))))))), true && (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY((! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))), true && (true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bool(! ((false) || false)), ! (! (bool(! ((false) || false)))))))))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))))))))))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY((! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))), true && (true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bool(! ((false) || false)), ! (! (bool(! ((false) || false)))))))))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))))))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY((! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))), true && (true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bool(! ((false) || false)), ! (! (bool(! ((false) || false)))))))))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))))))))))))))), true && (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY((! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))), true && (true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bool(! ((false) || false)), ! (! (bool(! ((false) || false)))))))))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))))))))))))))), true), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY((! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))), true && (true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bool(! ((false) || false)), ! (! (bool(! ((false) || false)))))))))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))))))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY((! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))), true && (true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bool(! ((false) || false)), ! (! (bool(! ((false) || false)))))))))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))))))))))))))), true && (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY((! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))), true && (true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bool(! ((false) || false)), ! (! (bool(! ((false) || false)))))))))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))))))))))))))), true))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY((! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY(true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))))))))))), (true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))) || false), true && (true && ((! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false, _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! ((false) || false)), bool(bvec4(bool(! ((false) || false)), true, false, true))), ! (! (bool(! ((false) || false)))))))), false || (! (_GLF_IDENTITY(! ((false) || false), bool(_GLF_IDENTITY(bool(! ((false) || false)), ! (! (bool(_GLF_IDENTITY(! ((false) || false), false || (! ((false) || false)))))))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), ! (! ((_GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))) && true)))))))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), (! ((false) || false)) && true))), ! (! ((false) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))), true && (bool(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))), false, false, true))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))), false, false, true)))))))) || false, ! (! ((false) || false))))))))))))))))) || false))), true && (((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))), false, false, true)))))) || false, ! (! ((false) || false))))))))))))))))) || false))))))))))))))))))) || _GLF_IDENTITY(false, ! (! (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), (! (false)) || false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), min(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))))).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, false || (false)), true))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8224.3274, 9.6)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && _GLF_IDENTITY(true, (true) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) << 0u), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), ~ (~ (64))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1185.4664), _GLF_FUZZED(vec2(-9.2, -3.9).t)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
