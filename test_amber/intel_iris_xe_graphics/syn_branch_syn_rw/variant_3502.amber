#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, abs(cos(0.0)), determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), abs(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0, 0.0))).x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), true), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), true), false)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(abs(vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(ceil(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(ceil(injectionSwitch)))) : injectionSwitch)).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ceil(injectionSwitch)) : injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(ceil(injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(ceil(injectionSwitch), mat2(1.0) * (ceil(injectionSwitch)))))) : injectionSwitch)).y)))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true)), false))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))), (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(403.264))), _GLF_FUZZED(-8.0)), vec2(_GLF_FUZZED(-6375.3629), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, true, true))))))) || (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), false || ((_GLF_IDENTITY(! (false), false || (! (false))))))), true, false, false))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), false || (! (false))))), true, false, false))), false, true, false)), true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), false || ((_GLF_IDENTITY(! (false), false || (! (false))))))), true, false, false))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), false || (! (false))))), true, false, false))), false, true, false)), true, false))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), false || ((_GLF_IDENTITY(! (false), false || (! (false))))))), true, false, false))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), false || (! (false))))), true, false, false))), false, true, false)), true, false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), false || ((_GLF_IDENTITY(! (false), false || (! (false))))))), true, false, false))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), false || (! (false))))), true, false, false))), false, true, false)), true, false))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), false || ((_GLF_IDENTITY(! (false), false || (! (false))))))), true, false, false))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), false || (! (false))))), true, false, false))), false, true, false)), true, false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(dot(injectionSwitch, vec2(-92.09, -34.29)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.8)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), true))), false))))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)), bool(bvec2(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true))))))) && true)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, exp(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, exp(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) || false), ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, exp(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, exp(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) || false), ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))), false, true, true)), true, false, true)))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, ! (! (true))), true))))), true, false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true, false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), 0u | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))))))) * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), abs(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, sqrt(0.0), abs(0.0)), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.2)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.2)), float(0.0), bool(true)))) / 1.0))))), (true ? _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.8) : injectionSwitch.y)), injectionSwitch.y))) + 0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), abs(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(sqrt(0.0), (false ? _GLF_FUZZED(-4.0) : _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), abs(0.0)), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(373.813, float(vec3(_GLF_IDENTITY(373.813, min(373.813, 373.813)), 1.0, 1.0))))), float(0.0), bool(true)))))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.0)), float(0.0), bool(true))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY((float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), abs(0.0)), vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-951.297))), 0.0, 0.0)), dot(vec3(1.0, sqrt(0.0), abs(0.0)), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), float(vec2(_GLF_IDENTITY((float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6734.3949)), float(0.0), bool(true))), 0.0)), 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7976.0969)), bool(false))), sqrt(0.0), abs(0.0)), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-951.297)), max(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-951.297)), (false ? _GLF_FUZZED(8.7) : (true ? 1.0 : _GLF_FUZZED(-951.297)))), (true ? 1.0 : _GLF_FUZZED(-951.297))))), 0.0, 0.0)), dot(vec3(1.0, sqrt(0.0), abs(0.0)), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), ((float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), abs(0.0)), vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-951.297))), 0.0, 0.0)), dot(vec3(1.0, sqrt(0.0), abs(0.0)), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) + abs(0.0)), 0.0))) + 0.0) : _GLF_FUZZED(distance(injectionSwitch, vec2(-2.2, -34.02))))))))) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false, false, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false, false, true))), true && (bool(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false, false, true)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y))))) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) + _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (0u))))), _GLF_IDENTITY((workgroup_base) << 0u, ~ (~ ((workgroup_base) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) + 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))) : _GLF_FUZZED(num_workgroup))))))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), min((1), (1))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 0, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)))))) << 0)))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) | (1), clamp((1) | (1), (1) | (1), _GLF_IDENTITY((1) | (1), 0 + ((1) | (1))))), ((1) | (1)) | ((1) | (1)))))) * 1u)), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))), int(ivec2(_GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))), 0)))))) * 1u))))) * 1u)) / 1u) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | 0, clamp((64) | 0, _GLF_IDENTITY((64) | 0, min((64) | 0, (64) | 0)), (64) | 0))), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], _GLF_IDENTITY(uint(1), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x < injectionSwitch.y))))))) ? uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((+ -48544)) : 1))) | 0)) : _GLF_FUZZED(next_virtual_gid))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, max(64, 64))) >> 0, ((64) >> 0) / 1), _GLF_IDENTITY(int(ivec3((64) >> 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | 0)), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1)), min(int(ivec3((64) >> 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) | 0)), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1)), int(ivec3((64) >> 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | 0)), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, max(64, 64))) >> 0, ((64) >> 0) / 1), _GLF_IDENTITY(int(ivec3((64) >> 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | 0)), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1)), min(int(ivec3((64) >> 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) | 0)), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1)), int(ivec3((64) >> 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | 0)), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1))))), 0)), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, max(64, 64))) >> 0, ((64) >> 0) / 1), _GLF_IDENTITY(int(ivec3((64) >> 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | 0)), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1)), min(int(ivec3((64) >> 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) | 0)), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1)), int(ivec3((64) >> 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | 0)), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1))))), 0))) / 1))), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(sign(65666)) : 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x), (_GLF_IDENTITY(true ? max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x))) : _GLF_FUZZED(0.6), clamp(true ? _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x))), float(mat2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x))), clamp(max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x))))), 1.0, exp(0.0), sqrt(1.0)))) : _GLF_FUZZED(0.6), true ? max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(1.0, 1.0) * (vec2(vec2(injectionSwitch))))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x))) : _GLF_FUZZED(0.6), _GLF_IDENTITY(true ? max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x))) : _GLF_FUZZED(0.6), (false ? _GLF_FUZZED(9.6) : true ? max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x))) : _GLF_FUZZED(0.6)))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2((injectionSwitch), 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 1.0, 1.0), (mat4x2((injectionSwitch), 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 1.0, 1.0)) * mat4(1.0))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2((injectionSwitch), 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 1.0, 1.0), (mat4x2((injectionSwitch), 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 1.0, 1.0)) * mat4(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(mat4x2((injectionSwitch), 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 1.0, 1.0), (mat4x2((injectionSwitch), 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 1.0, 1.0)) * mat4(1.0))))), vec2(_GLF_IDENTITY(mat4x2((injectionSwitch), 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 1.0, 1.0), (mat4x2((injectionSwitch), 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 1.0, 1.0)) * mat4(1.0))), vec2(_GLF_IDENTITY(mat4x2((injectionSwitch), 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 1.0, 1.0), (mat4x2((injectionSwitch), 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 1.0, 1.0)) * mat4(1.0)))))))), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))))), max(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0), mix(vec4(_GLF_FUZZED(-5.7), _GLF_FUZZED(306.530), _GLF_FUZZED(652.720), (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[3]), vec4(_GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[0], clamp((vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[0], (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[0], (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[0])), (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[1], (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[2], _GLF_FUZZED(6.4)), bvec4(true, true, true, false))))), (true ? _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0), mix(vec4(_GLF_FUZZED(-5.7), _GLF_FUZZED(306.530), _GLF_FUZZED(652.720), (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[3]), vec4(_GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[0], clamp((vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[0], (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[0], (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(2495.3971) : float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0)))))), bool(true))), 0.0, abs(1.0), 1.0))[0])), (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[1], (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(72.58)), float(1.0), bool(true))), 0.0, abs(1.0), 1.0))[2], _GLF_FUZZED(6.4)), bvec4(true, true, true, false))))) : _GLF_FUZZED(-235.660))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))))), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))))))), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))))))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0)))))), (true ? mat2(1.0) * _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0)))))), ((vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))))))) + vec2(0.0, 0.0)) : _GLF_FUZZED((mat3x2(4833.5900, -6.3, -4977.4463, -3894.8979, -31.43, -9.6) * vec3(2581.1174, 6549.8901, 734.559)))))))))))).x, float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, exp(0.0), 1.0, 0.0)))), float(_GLF_FUZZED(-387.383)), bool(false))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)), vec2(vec2(injectionSwitch))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)), vec2(vec2(injectionSwitch))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)), vec2(vec2(injectionSwitch))).x > injectionSwitch.y, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x)))) - 0.0), float(_GLF_FUZZED(vec4(-4929.4655, -1.7, -4705.5393, -2100.5951).g)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(_GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-0.0)))), float(_GLF_IDENTITY(mat2(length(normalize(1.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, exp(0.0), 0.0))), 1.0))), (mat2(length(normalize(1.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 1.0, 1.0)), sqrt(1.0)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-70.94)), bool(false))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), (bool(bvec3((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))) || false)), ! (! (false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(450.845) : (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-1.7), _GLF_FUZZED(-0.4)), bvec2(false, false))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, int(ivec3(4, 1, 1))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
