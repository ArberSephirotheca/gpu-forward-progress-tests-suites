#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 mat2x3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_11 {
 ivec4 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_8 {
 int _f0;
 vec2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_7 {
 uint _f0;
 bvec2 _f1;
 uvec3 _f2;
 ivec3 _f3;
 mat2x3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
 _GLF_struct_9 _f1;
 mat2x3 _f2;
 _GLF_struct_11 _f3;
 uint read_val;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 bool _f1;
 float _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 uint _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 ivec3 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 bool _f1;
 _GLF_struct_5 _f2;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))), bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(sqrt(0.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(sqrt(0.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) + (injectionSwitch.y)))), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(sqrt(0.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(sqrt(0.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) + (injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-3.0)), float(float(mat2x3(0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0))), bool(true)))), 0.0)) * (injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-1.6, 6.1), (true ? vec2(-1.6, 6.1) : _GLF_FUZZED(vec2(949.167, 2520.8426))))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-1.6, 6.1), (true ? vec2(-1.6, 6.1) : _GLF_FUZZED(vec2(949.167, 2520.8426)))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(atanh(-76.11)))), injectionSwitch.x))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (! (false))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! (false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || ((! (! (false)))))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false)), true)), ! (! (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false)), true))))))), (_GLF_IDENTITY(false, false || (false))) && true))), false, true))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, true && _GLF_IDENTITY(((true) || false), (_GLF_IDENTITY(((true) || false), false || (((true) || false)))) || false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, true && ((true) || false)))), bool(bvec4((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, true && ((true) || false)))), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))) || false)) && _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(true, true && (true)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (false)), _GLF_IDENTITY(false, ! (! (false))), true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false, false, false))), false, false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false, false, false))), false, false))))), false, true)))))) && true)), (true) || false))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), false || (bool(bvec4(true, false, true, false))))))))) && true))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false, false, false))), false, false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (false)))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), bool(bvec4(true, false, true, false)))), false, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, false))))))), bool(bvec4(true, false, true, false)))) && true))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, false))))))), bool(bvec4(true, false, true, false)))) && true))))))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), false, false, false))), false, false))))), false, true)))))) && true)), (true) || _GLF_IDENTITY(false, ! (! (false)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), _GLF_IDENTITY(true, true && (true)), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (float(vec3(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((6297.4428 - -4146.5680)), _GLF_FUZZED(-4134.4324)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (true) || false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch)).y)))))), true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY((true) || false, _GLF_IDENTITY(bool(bvec3((true) || false, false, false)), bool(bool(bool(bvec3((true) || false, false, false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))) && true), true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY((_GLF_IDENTITY((true) || false, true && ((true) || false))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((true) || false, true && ((true) || false))) && true)))), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bool(_GLF_IDENTITY((true) || false, ! (! ((true) || false))))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) || false, bool(bvec2((true) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((true) || false, ! (! ((true) || false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).y)), true))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), false || (! (_GLF_IDENTITY(false, false || (false)) || (true)))))))), true && (! (_GLF_IDENTITY(true, false || (true))))))), true && (true)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ! (! ((_GLF_IDENTITY(true, false || (true)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ! (! ((_GLF_IDENTITY(true, false || (true)))))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ! (! ((_GLF_IDENTITY(true, false || (true))))))))), bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ! (! ((_GLF_IDENTITY(true, false || (true))))))))))))))) || false), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true)))))))))), true && (true)), true, true)))))), true))), (injectionSwitch.x > injectionSwitch.y)))) || false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), min(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(vec4(injectionSwitch, 1.0, 1.0))))))[0], _GLF_FUZZED(-8.8)), vec2(_GLF_FUZZED(0.1), (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, log(1.0) + (1.0))))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), mat3x4(mat4(mat3x4(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0))))))).y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))), true)))), true))))))), true && (bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) | (gl_NumWorkGroups[2]))))) | _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)))))), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)))))), 0u ^ (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)))))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)))))))))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) | (_GLF_IDENTITY(0u, 0u ^ (0u)))))))), 0u)) ^ uvec3(0u, 0u, 0u))).x, (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) | (gl_NumWorkGroups[2]))))) | _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)))))), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)))))), 0u ^ (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)))))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, min((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((0u), ((0u)) - 0u)) >> 0u)))))))))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), max(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) | (_GLF_IDENTITY(0u, 0u ^ (0u)))))))), 0u)) ^ uvec3(0u, 0u, 0u))).x));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_4(_GLF_struct_0(mat4x2(1.0), 1u, bvec3(true)), _GLF_struct_1(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (true ? ivec3(1) : _GLF_FUZZED(ivec3(80121, 1387, 46275))))) ^ ivec3(0, 0, 0)), true, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), float(_GLF_FUZZED(-2.8)), bool(false))))), bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)), bool(bvec4(_GLF_IDENTITY((bool(true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY((bool(true)), ! (! ((bool(true))))))), (_GLF_IDENTITY((! ((bool(true)))), bool(bool(_GLF_IDENTITY((! ((bool(true)))), ! (! ((! ((bool(true))))))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), false, false, false))) || false)))))))), _GLF_struct_2(bvec4(true)), ivec3(1), _GLF_struct_3(mat3x4(1.0))), true, _GLF_struct_5(_GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0)))), gl_WorkGroupID.x);
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_6.workgroup_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))) + 0.0)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), true)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5168.4990) : 1.0)), 1.0)).y) + 0.0)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, log(1.0) + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY((injectionSwitch.y) + 0.0, _GLF_IDENTITY(0.0 + ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) + 0.0), 0.0 + (_GLF_IDENTITY(0.0 + ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) + 0.0), (true ? _GLF_IDENTITY(0.0 + ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) + 0.0), 1.0 * (0.0 + ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) + 0.0))) : _GLF_FUZZED(6.9))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, log(1.0) + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY((injectionSwitch.y) + 0.0, _GLF_IDENTITY(0.0 + ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) + 0.0), 0.0 + (_GLF_IDENTITY(0.0 + ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) + 0.0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0 + ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5))), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) + 0.0), 1.0 * _GLF_IDENTITY((0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), bool(true)))) + 0.0)), max((0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), bool(true)))) + 0.0)), _GLF_IDENTITY((0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), bool(true)))) + 0.0)), mix(float((0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), bool(true)))) + 0.0))), float(_GLF_FUZZED(-62.32)), bool(false)))))) : _GLF_FUZZED(6.9), (false ? _GLF_FUZZED(-413.095) : true ? _GLF_IDENTITY(0.0 + ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5))), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) + 0.0), 1.0 * _GLF_IDENTITY((0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), bool(true)))) + 0.0)), max((0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), bool(true)))) + 0.0)), _GLF_IDENTITY((0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), bool(true)))) + 0.0)), mix(float((0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), bool(true)))) + 0.0))), float(_GLF_FUZZED(-62.32)), bool(false)))))) : _GLF_FUZZED(6.9)))))))))))))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (0.0) - 0.0)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + _GLF_IDENTITY(0.0, (0.0) - 0.0), max((injectionSwitch.y) + _GLF_IDENTITY(0.0, (0.0) - 0.0), (injectionSwitch.y) + _GLF_IDENTITY(0.0, (0.0) - 0.0))))) && true)))), true)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, true), false)))))))), true, true)), true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(true, false || (true))))), true, true, true))))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, true && ((_GLF_IDENTITY(false, (false) || false)) || false))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)) && true)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (true)) && _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (true)) && _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (true)) && _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))), _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))) && (false)), _GLF_IDENTITY(bool(bvec4((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), false, true, false)), _GLF_IDENTITY((bool(bvec4((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), false || (false || (true)))))))) || false), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true))))))) && (false)), false, true, false))), ((bool(bvec4((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), false || (false || (true)))))))) || false), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true))))))) && (false)), false, true, false)))) && true) && true)))))), (((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))) && (false)), _GLF_IDENTITY(bool(bvec4((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), false, true, false)), _GLF_IDENTITY((bool(bvec4((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), false || (false || (true)))))))) || false), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true))))))) && (false)), false, true, false))), ((bool(bvec4((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), false || (false || (true)))))))) || false), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true))))))) && (false)), false, true, false)))) && true) && true))))))) && true) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(write_val, max(write_val, write_val))))) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
  return;
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), min(uint(virtual_gid), _GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))) * 1u)) | (uint(virtual_gid))), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) | (64)))), 1), ~ (~ (ivec2(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) | (64)))), 1)))))), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4(1.0), _GLF_struct_9(_GLF_struct_7(1u, _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), uvec3(1u), ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(min(int(1), int(_GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(min(int(1), int(1)), ~ (_GLF_IDENTITY(~ (min(int(1), int(1))), max(~ (min(int(1), int(1))), ~ (min(int(1), int(1)))))))), ((_GLF_IDENTITY(min(int(1), int(1)), ~ (_GLF_IDENTITY(~ (min(int(1), int(1))), max(~ (min(int(1), int(1))), ~ (min(int(1), int(1))))))))) - _GLF_IDENTITY(0, (0) / (1 & int(_GLF_ONE(1.0, injectionSwitch.y))))) | 0)), max(int(1), int(1))), 0 ^ (_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec2((1), 0)), int(ivec2(int(ivec2((1), 0)), 1)))) * _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> 0)))))), 0)), 0 | (0)) + (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), max(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(17306))), 0 ^ ((1))) * 1)))), int(1)))))))), mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(false))), (_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))) - 0.0)) * cos(0.0)), (_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0)) / 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), clamp((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), max((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), ((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false))))) + 0.0))), (_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))))) - 0.0)) * _GLF_IDENTITY(cos(0.0), (cos(0.0)) / abs(1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(1.0)) * 1.0)) / 1.0)), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), clamp((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), max((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), ((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false))))) + 0.0))), (_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))))) - 0.0)) * _GLF_IDENTITY(cos(0.0), (cos(0.0)) / abs(1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(1.0)) * 1.0)) / 1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), clamp((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), max((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), ((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false))))) + 0.0))), (_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))))) - 0.0)) * _GLF_IDENTITY(cos(0.0), (cos(0.0)) / abs(1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(1.0)) * 1.0)) / 1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), clamp((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), max((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))), ((_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false))))) + 0.0))), (_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))))) - 0.0)) * _GLF_IDENTITY(cos(0.0), (cos(0.0)) / abs(1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(1.0)) * 1.0)) / 1.0)))), (false ? _GLF_FUZZED(pow(0.5, 1109.1943)) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(false))), (_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0), max(_GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0), clamp(_GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))))))), float(_GLF_FUZZED(-13.03)), bool(false)))) - 0.0)) * cos(0.0)), (_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0)) / 1.0)), (float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(-13.03)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(float(1.0), mix(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0))), float(_GLF_FUZZED(-13.03)), bool(false)))) - 0.0)) * cos(0.0)), (_GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(-5.3)), float(float(1.0)), bool(true)))) * _GLF_IDENTITY(1.0, 1.0 * (1.0)))) / 1.0))) / 1.0))) : _GLF_FUZZED(3.8))))), bvec4(true)), _GLF_struct_8(1, _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))))), mat3x2(1.0))), mat2x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) * 1.0)), clamp(clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) * 1.0)), _GLF_IDENTITY(clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) * 1.0)), (true ? clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) * 1.0)) : _GLF_FUZZED(78.25))), clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) * 1.0)))))) - length(0.0)), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4690.9948))), 0.0), (vec2(0.0, 0.0)) / vec2(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(7743.1448), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-49.19)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), clamp(exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), exp(0.0), exp(0.0))), sqrt(1.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(exp(0.0), sqrt(1.0), 1.0)))), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(false))), bool(false))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) * 1.0)))), mix(float(_GLF_FUZZED(-79.48)), float((_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) * 1.0))))), bool(true))) - length(0.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(7743.1448), (vec2(1.0, 1.0))[1]), vec2((vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))[0], _GLF_FUZZED(-49.19)), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), sqrt(1.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(exp(0.0), sqrt(1.0), 1.0)))), (true ? vec3(_GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), max(_GLF_IDENTITY(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.2) : 0.0)), 0.0), vec2(mat3(vec2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.2) : 0.0)), 0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, sqrt(0.0)), vec4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec4(1.0, 0.0, 0.0, sqrt(0.0)), vec4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), cos(0.0), 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0)), (_GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), vec2(1.0, 1.0)), clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) * 1.0)))) - _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0)))), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) + 0.0), injectionSwitch.y))))), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(7743.1448), (vec2(1.0, 1.0))[1]), vec2((vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(60.62))), 1.0))[0], _GLF_FUZZED(-49.19)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(0.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(exp(0.0), clamp(exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), exp(0.0), exp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), sqrt(1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(82.49)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), sqrt(1.0), 1.0)))) : _GLF_FUZZED(uintBitsToFloat(uvec3(92798u, 170545u, 30348u))))), vec3(_GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(min(max(1.0, 1.0), max(1.0, 1.0)), (_GLF_IDENTITY(min(max(1.0, 1.0), max(1.0, 1.0)), (true ? min(max(1.0, 1.0), max(1.0, 1.0)) : _GLF_FUZZED(97.27)))) / determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), max(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) / 1.0))), clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (0.0) / exp(0.0)), 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-1.8, 7.5)) : _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) * 1.0)))) - length(0.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0)))))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(7743.1448), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-49.19)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 0.0, 0.0), vec3(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(_GLF_IDENTITY(0.0, (0.0) * 1.0)), exp(0.0))), sqrt(1.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(exp(0.0), sqrt(1.0), 1.0)))))), min(vec3(_GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))) + 0.0), 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) - 0.0), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY((dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), min(_GLF_IDENTITY((dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), ((dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))) * 1.0), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))) - 0.0), (_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) - 0.0)) - 0.0) : _GLF_FUZZED(-6.3)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec3(exp(0.0), sqrt(1.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(exp(0.0), sqrt(1.0), 1.0)))), vec3(_GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.5, 224.454)) : vec2(0.0, 0.0))), vec2(1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(exp(0.0), sqrt(1.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(exp(0.0), sqrt(1.0), 1.0))))))))), 1.0))), _GLF_struct_11(ivec4(1), _GLF_struct_10(mat2x3(1.0), ivec2(1))), atomicLoad(write_val, 4, 64, 0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), 1.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(float(mat4x3(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), 1.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), (float(mat4x3(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), 1.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))) / 1.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true)))))), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) ? _GLF_FUZZED(fract(908.650)) : injectionSwitch.y))))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) ? _GLF_FUZZED(fract(908.650)) : injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.39), _GLF_FUZZED(2103.1604)), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.39), _GLF_FUZZED(2103.1604)), bvec2(false, false))).y))))), true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(72.65)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(461.797), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1], min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[1], (false ? _GLF_FUZZED(4374.3845) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[1], (_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[1]) + 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(8.4, -93.37).x)), bvec2(true, false))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / _GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(72.65)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), true))) || false))))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(461.797), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))), min((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))))[_GLF_IDENTITY(1, 0 | (1))], min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))], (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))) ? _GLF_FUZZED(4374.3845) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[1], (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))), max(min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(20.91), (min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[1]), vec2((min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[0], _GLF_FUZZED(25.80)), bvec2(true, false))))))[1]) + 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(8.4, -93.37).x)), bvec2(true, false))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false)) || false)))
    return;
   return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_struct_replacement_12.read_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
