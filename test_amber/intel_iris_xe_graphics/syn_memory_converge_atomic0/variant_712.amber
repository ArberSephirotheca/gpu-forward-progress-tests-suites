#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(intBitsToFloat(ivec2(-58428, -46355))) : injectionSwitch)).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(intBitsToFloat(ivec2(-58428, -46355))) : injectionSwitch)).x > injectionSwitch.y))), false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))), true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))), true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))), true)))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))), true)))), true, true)), false, true)))), true, false))), true))))), true, true))), true, false))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), true && (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec3(! (! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))) && true)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(_GLF_IDENTITY(false, ! (! (false)))))) || false))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))), ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), true))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))), true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), true && ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), true && ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), true, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (false))))))))))))))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))), ((bool(_GLF_IDENTITY(false, ! (! (false)))))) || false))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true, false, _GLF_IDENTITY(false, false || (false)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))))) || _GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))))), bool(bvec3((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (! (false)))), true, false, false)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(_GLF_IDENTITY(false, ! (! (false)))))) || false))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))), ! (_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(bool(bvec2(! (false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))))), true)), false || (bool(bvec2(! (false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))))), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) && true)))))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(_GLF_IDENTITY(false, ! (! (false)))))) && true)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(true && (bool(_GLF_IDENTITY(false, ! (! (false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(true && (bool(_GLF_IDENTITY(false, ! (! (false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))))))))))))))))) && true))))))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))), _GLF_IDENTITY((bool(bvec2(false, true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), ((bool(bvec2(false, true))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) || false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (178688u & 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), min(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (178688u & 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), min(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (178688u & 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), min(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (178688u & 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), min(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (178688u & 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), min(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))))))) / 1u), workgroup_id)), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (true ? _GLF_IDENTITY(min(0.0, 0.0), float(mat2x4(min(0.0, 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-41.52)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), injectionSwitch.x)) | (workgroup_size * workgroup_id), uint(uvec2(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (true ? _GLF_IDENTITY(min(0.0, 0.0), float(mat2x4(min(0.0, 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-41.52)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), injectionSwitch.x)) | (workgroup_size * workgroup_id), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (true ? _GLF_IDENTITY(min(0.0, 0.0), float(mat2x4(min(0.0, 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-41.52)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), injectionSwitch.x)) | (workgroup_size * workgroup_id)) >> 0u), 1u)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_id) : workgroup_id))) * 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), _GLF_IDENTITY(-641.708, max(_GLF_IDENTITY(-641.708, (-641.708) / 1.0), -641.708)), -2759.0688)))), (false ? _GLF_FUZZED(2.5) : (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), _GLF_IDENTITY(-641.708, max(_GLF_IDENTITY(-641.708, (-641.708) / 1.0), -641.708)), -2759.0688))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), abs(0.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), float(vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0)))), -641.708, -2759.0688))))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))))))), injectionSwitch.x)) | (workgroup_size * workgroup_id)), 0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, _GLF_IDENTITY(-3.5, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -3.5 : _GLF_FUZZED(-75.96))), -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), min(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), clamp(_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), (_GLF_IDENTITY(_GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), max(_GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0))))))) * 1.0), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), _GLF_IDENTITY(-641.708, mix(float(-641.708), float(_GLF_FUZZED(15.01)), bool(false))), _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))))))))))), injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(1.0), 1.0, 0.0, 1.0))), injectionSwitch[1])).y), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2117.3354)), bool(false))))), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0)))) | (workgroup_size * workgroup_id)))) : _GLF_FUZZED(num_workgroup), min(true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, _GLF_IDENTITY((0.1) / cos(0.0), ((0.1) / cos(0.0)) + log(1.0))), -641.708, -2759.0688))))), float(vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(8.9)), bool(false))), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0))))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))))))), injectionSwitch.x)) | (workgroup_size * workgroup_id)), 0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-5019.2978))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), min(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), clamp(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))))))))))), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(_GLF_IDENTITY(-0.6, min(-0.6, _GLF_IDENTITY(-0.6, (-0.6) * exp(0.0)))), -3.5, _GLF_IDENTITY(-4.4, mix(float(_GLF_FUZZED(-4227.1023)), float(_GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(-9.5)), bool(false)))), bool(true)))), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), min(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), clamp(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(_GLF_IDENTITY(vec3(-0.6, -3.5, -4.4), mix(vec3((vec3(-0.6, -3.5, -4.4))[0], (vec3(-0.6, -3.5, -4.4))[1], _GLF_FUZZED(2.9)), vec3(_GLF_FUZZED(251.511), _GLF_FUZZED(-6.4), (vec3(-0.6, -3.5, -4.4))[2]), bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))))))))))), injectionSwitch.x)) - 0.0), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), injectionSwitch[1])).y), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, abs(1.0), log(1.0), 1.0, abs(0.0), 0.0)), min(float(mat2x3(1.0, abs(1.0), log(1.0), 1.0, abs(0.0), 0.0)), float(mat2x3(1.0, abs(1.0), log(1.0), 1.0, abs(0.0), 0.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2117.3354)), bool(false))))), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0)))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)))))) : _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), float(vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))))))), injectionSwitch.x)) | (workgroup_size * workgroup_id), clamp(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), float(vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))))))), injectionSwitch.x)) | (workgroup_size * workgroup_id), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), float(vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))))))), injectionSwitch.x)) | (workgroup_size * workgroup_id), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), float(vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))))))), injectionSwitch.x)) | (workgroup_size * workgroup_id)))), 0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), min(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), clamp(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))))))))))), injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), injectionSwitch[1])).y), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2117.3354)), bool(false))))), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), min(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), clamp(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))))))))))), injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), injectionSwitch[1])).y), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2117.3354)), bool(false))))), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0))), max(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), min(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), clamp(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))))))))))), injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), injectionSwitch[1])).y), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2117.3354)), bool(false))))), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0))), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), min(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), clamp(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))))))))))), injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), injectionSwitch[1])).y), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2117.3354)), bool(false))))), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), min(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), clamp(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))))))))))), injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), injectionSwitch[1])).y), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2117.3354)), bool(false))))), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0))), (_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), min(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), clamp(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))))))))))), injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), injectionSwitch[1])).y), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2117.3354)), bool(false))))), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), min(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), clamp(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))))))))))), injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), injectionSwitch[1])).y), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2117.3354)), bool(false))))), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0))), (_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, -2759.0688))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), min(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), clamp(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))))))))))), injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), injectionSwitch[1])).y), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2117.3354)), bool(false))))), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0)))) - 0.0)))) | (workgroup_size * workgroup_id)))) : _GLF_FUZZED(num_workgroup), uint(uint(true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), max(min(0.0, 0.0), min(0.0, 0.0)))))), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))), float(vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(_GLF_IDENTITY(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688)), 1.0 * (distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(_GLF_FUZZED(-8.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(45.43)), bool(false))))) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(_GLF_IDENTITY(0.1, (0.1) / cos(0.0)), -641.708, -2759.0688))))))))), injectionSwitch.x)) | (workgroup_size * workgroup_id)), 0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, _GLF_IDENTITY(-3.5, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((- 10.40)) : _GLF_IDENTITY(-3.5, mix(float(-3.5), float(_GLF_FUZZED(-8.5)), bool(false))))), -4.4), vec3(0.1, -641.708, -2759.0688))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), min(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, _GLF_IDENTITY(-3.5, mix(float(_GLF_FUZZED((5874.7536))), float(-3.5), bool(true))), -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), clamp(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, _GLF_IDENTITY(-4.4, max(-4.4, -4.4))), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) - 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))), true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(vec3(-0.6, -3.5, -4.4), vec3(0.1, -641.708, _GLF_IDENTITY(-2759.0688, (-2759.0688) + 0.0)))))))))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), injectionSwitch[1])).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), injectionSwitch[1])).y), float(_GLF_FUZZED(-7.9)), bool(false)))), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2117.3354)), bool(false))))), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0)))) | (workgroup_size * workgroup_id)))) : _GLF_FUZZED(num_workgroup))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, uint(uvec3((subgroup_id * subgroup_size) >> 0u, 1u, 0u))), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ((subgroup_id * subgroup_size) >> 0u) - 0u), _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, clamp((subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ((subgroup_id * subgroup_size) >> 0u) | 0u), (subgroup_id * subgroup_size) >> 0u)), (subgroup_id * subgroup_size) >> 0u))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))) || false)), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.2) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))), true && (! (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))))))))) || false)) && true)))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(634.363)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, false || ((false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, true && (false))) || false)), ! (! (_GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, ! (! (false)))) || false))), ((false) || false) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || false) && true)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((false) || false, ((false) || false) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))), bool(bvec4((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(step(-6.9, 7676.0833)) : injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), true), true))))) || false), false, true, true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)) || false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false)))), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false)))), true)))), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))) || false))) && true)))))), false)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(19164)))])).x > injectionSwitch.y)))), false)), false, false)), false, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) ^ 0), 1))])).x > injectionSwitch.y)))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false)), false, false)), false, false))))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))), false)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false)), false, false)), false, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || false)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) || false))), false)), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-3755.1064)), bool(false))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-3755.1064)), bool(false))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false, false)), false, true)))))), true))), true))))), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false))) && true, false || ((bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0))))) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-3.3, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(-3.3, mix(float(_GLF_FUZZED((8.9 / vec4(69.68, -9845.3431, -2.8, 5842.3150).g))), float(-3.3), bool(true))), 0.0 + (-3.3))))), _GLF_FUZZED(2.4)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)))), false))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.1) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.4) : injectionSwitch.y))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), _GLF_IDENTITY((_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, min(_GLF_IDENTITY(read_val, uint(uvec4(read_val, 1u, 1u, 1u))), read_val))))), (~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) | 0u)) - 0u))) ^ 0u)) + 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, min(_GLF_IDENTITY(read_val, uint(uvec4(read_val, 1u, 1u, 1u))), read_val))))), (~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) | 0u)) - 0u))) ^ 0u)) + 0u), 0u ^ (~ ((_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, min(_GLF_IDENTITY(read_val, uint(uvec4(read_val, 1u, 1u, 1u))), read_val))))), (~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) | 0u)) - 0u))) ^ 0u)) + 0u)))))), (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), _GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) | 0u)), 0u ^ ((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) | 0u)))) - 0u))) ^ 0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u + (uint(subgroupAllEqual(read_val))))) - 0u)) | 0u)) - 0u)), (0u | 0u) ^ (~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u + (uint(subgroupAllEqual(read_val))))) - 0u)) | 0u)) - 0u))))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u + (uint(subgroupAllEqual(read_val))))) - 0u)) | 0u)) - 0u)), (0u | 0u) ^ (~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u + (uint(subgroupAllEqual(read_val))))) - 0u)) | 0u)) - 0u))))) ^ 0u, ((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u + (uint(subgroupAllEqual(read_val))))) - 0u)) | 0u)) - 0u)), (0u | 0u) ^ (~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u + (uint(subgroupAllEqual(read_val))))) - 0u)) | 0u)) - 0u))))) ^ 0u) - 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + 0u)) + uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(mix(float(_GLF_FUZZED(71.60)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(71.60)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
