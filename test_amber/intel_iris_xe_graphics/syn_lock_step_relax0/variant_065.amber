#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 uvec4 _f0;
} ;

struct _GLF_struct_14 {
 mat3x2 _f0;
 mat3x2 _f1;
 bvec2 _f2;
 uint _f3;
 float _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 vec2 _f1;
 _GLF_struct_15 _f2;
 mat4 _f3;
 bvec2 _f4;
 mat2 _f5;
 int _f6;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
} ;

struct _GLF_struct_11 {
 uint _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 uvec2 _f1;
 mat4x3 _f2;
 mat4x2 _f3;
 int _f4;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 bvec3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 mat2x4 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 float _f1;
 mat3x2 _f2;
 bool _f3;
 ivec3 _f4;
 mat4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 mat4x3 _f1;
 vec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 float _f3;
} ;

struct _GLF_struct_17 {
 _GLF_struct_8 _f0;
 _GLF_struct_13 _f1;
 uint virtual_gid;
 mat4x3 _f2;
 _GLF_struct_16 _f3;
 uint _f4;
 mat4x2 _f5;
 bool _f6;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 vec4 _f1;
 vec2 _f2;
 vec2 _f3;
 ivec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 int _f1;
 mat2x4 _f2;
 uvec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 ivec2 _f1;
 bvec4 _f2;
 ivec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_0 {
 float _f0;
 vec3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true))))) && true))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), true), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), true), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), true), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) || false)), true), true))))), (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), true), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), true), true)))))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), true), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), true), true))))), (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), true), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), true), true)))))) && true))), false)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))))))) && (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), true), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))))))))), bool(bvec2((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))))))))), true))) || false)), true), true)))))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))), bvec2(bvec3(bvec2(true && (false), true), true)))))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! (false)), true, true, false)), (bool(bvec4(! (! (false)), true, true, false))) && true)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))))), bool(bool(! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-268.317, 42.72)) : injectionSwitch)).x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-1.5)), bool(false))) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-268.317, mix(float(-268.317), float(_GLF_FUZZED(-1.1)), bool(false))), 42.72)) : injectionSwitch)).x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-1.5)), bool(false))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-268.317, 42.72)) : injectionSwitch)).x), min(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(7.7))), float(injectionSwitch.x))), float(_GLF_FUZZED(-1.5)), bool(false))) > injectionSwitch.y))), ! (! (! (bool((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-268.317, 42.72)) : injectionSwitch)).x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-1.5)), bool(false))) > injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), false || (! (bool(false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-1.5)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-1.5)), float(vec2(float(_GLF_FUZZED(-1.5)), 0.0))), (false ? _GLF_FUZZED(-16.72) : float(_GLF_FUZZED(-1.5)))), cos(0.0), 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4566.9639), (_GLF_FUZZED(-4566.9639)) / 1.0)), float(0.0), bool(true)))), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY((vec2(0.0, 1.0)) * mat2(1.0), clamp((vec2(0.0, 1.0)) * mat2(1.0), (vec2(0.0, 1.0)) * mat2(1.0), (vec2(0.0, 1.0)) * mat2(1.0)))), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)))))), bool(false))) > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))), mat3(1.0) * (mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), mat2(mat3(mat2(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))))))))))))), transpose(transpose(mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))), mat3(1.0) * (mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))))))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) * vec2(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), min(float(vec2(1.0, 0.0)), _GLF_IDENTITY(float(vec2(1.0, 0.0)), (float(vec2(1.0, 0.0))) - 0.0))))), _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0) + (mat2(1.0))) * (mat2(1.0))) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))), mat3(1.0) * (mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))))), transpose(transpose(mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)))), (mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))) + mat2(0.0, 0.0, 0.0, 0.0)))))), mat3(1.0) * (mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))))))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? 0.0 : _GLF_FUZZED(68.81))), 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))))), ! (! (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true), false))))))))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), ! (! (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))))) && true))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))) || false))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(37.05)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(37.05)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(37.05)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, 1.0, sin(0.0)))).y), bool(true))), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(37.05)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(37.05)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(37.05)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))) ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(107293u, 154573u, _GLF_IDENTITY(_GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), _GLF_IDENTITY(91069u, (91069u) | (_GLF_IDENTITY(91069u, ~ (~ (91069u))))))), min(_GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)), _GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u))))), clamp(uvec3(107293u, 154573u, _GLF_IDENTITY(_GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)), min(_GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)), _GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u))))), _GLF_IDENTITY(uvec3(107293u, 154573u, _GLF_IDENTITY(_GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)), min(_GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)), _GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u))))), (_GLF_IDENTITY(uvec3(107293u, 154573u, _GLF_IDENTITY(_GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)), min(_GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)), _GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (_GLF_IDENTITY(91069u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u))) | (_GLF_IDENTITY(91069u, 0u | (91069u)))))), 91069u))))), (uvec3(107293u, 154573u, _GLF_IDENTITY(_GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)), min(_GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)), _GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)))))) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u)), uvec3(107293u, 154573u, _GLF_IDENTITY(_GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)), min(_GLF_IDENTITY(91069u, clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)), _GLF_IDENTITY(91069u, _GLF_IDENTITY(clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u), (clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | (91069u)), 91069u)) / 1u))))))), clamp(uvec3(_GLF_IDENTITY(107293u, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(107293u, 0u | (107293u)), (_GLF_IDENTITY(107293u, 0u | (107293u))) / 1u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), _GLF_IDENTITY(0u, (0u) ^ 0u)))), _GLF_IDENTITY(154573u, (false ? _GLF_FUZZED(131087u) : 154573u)), _GLF_IDENTITY(91069u, clamp(91069u, 91069u, 91069u))), uvec3(107293u, 154573u, _GLF_IDENTITY(91069u, clamp(91069u, 91069u, 91069u))), _GLF_IDENTITY(uvec3(107293u, 154573u, _GLF_IDENTITY(91069u, clamp(91069u, 91069u, _GLF_IDENTITY(91069u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u) * (91069u))))), (uvec3(107293u, 154573u, _GLF_IDENTITY(91069u, clamp(91069u, 91069u, 91069u)))) << uvec3(0u, 0u, 0u))))), ~ (~ (true ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY(uvec3(107293u, 154573u, _GLF_IDENTITY(_GLF_IDENTITY(91069u, ~ (~ (91069u))), clamp(91069u, _GLF_IDENTITY(91069u, (91069u) | _GLF_IDENTITY((91069u), clamp((91069u), (91069u), (91069u)))), 91069u))), clamp(uvec3(_GLF_IDENTITY(107293u, uint(uvec3(_GLF_IDENTITY(107293u, 0u | (107293u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), 154573u, _GLF_IDENTITY(91069u, clamp(91069u, 91069u, 91069u))), uvec3(107293u, 154573u, _GLF_IDENTITY(91069u, clamp(91069u, 91069u, _GLF_IDENTITY(91069u, 0u ^ (91069u))))), _GLF_IDENTITY(uvec3(107293u, 154573u, _GLF_IDENTITY(91069u, clamp(91069u, 91069u, 91069u))), (uvec3(107293u, 154573u, _GLF_IDENTITY(_GLF_IDENTITY(91069u, clamp(91069u, 91069u, 91069u)), (_GLF_IDENTITY(91069u, clamp(91069u, 91069u, 91069u))) - (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))) << uvec3(0u, 0u, 0u)))))))))) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), max(((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u))), ((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))) ^ uvec3(0u, 0u, 0u)))), (~ (((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))))) >> uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u))), ((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))) ^ uvec3(0u, 0u, 0u)))), (~ (((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))))) >> uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u))), ((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))) ^ uvec3(0u, 0u, 0u)))), (~ (((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))))) >> uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u))), ((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))) ^ uvec3(0u, 0u, 0u)))), (~ (((true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(107293u, 154573u, 91069u)))))) >> uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))) ^ (uvec3(100723u, 128041u, _GLF_IDENTITY(134755u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(134755u, (true ? 134755u : _GLF_FUZZED(subgroup_size)))), max(uint(_GLF_IDENTITY(134755u, (true ? 134755u : _GLF_FUZZED(subgroup_size)))), uint(_GLF_IDENTITY(134755u, (true ? 134755u : _GLF_FUZZED(subgroup_size))))))))) & uvec3(0u, 0u, 0u))))))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-35.56))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.0)), bvec2(true, false)), (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.0)), bvec2(true, false)), _GLF_IDENTITY((mix(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.0)), bvec2(true, false))) * mat2(1.0), clamp((mix(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.0)), bvec2(true, false))) * mat2(1.0), (mix(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.0)), bvec2(true, false))) * mat2(1.0), (mix(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.0)), bvec2(true, false))) * mat2(1.0))))) - sin(vec2(0.0, 0.0)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(_GLF_struct_0(1.0, vec3(1.0), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, _GLF_IDENTITY(1, 1 * (1))), ~ (~ (_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), (_GLF_IDENTITY((ivec4(1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1))))) ^ ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1), ((ivec4(1)) / ivec4(1, 1, 1, 1)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), (_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), (true ? _GLF_IDENTITY((ivec4(1)), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY((ivec4(1)), ivec4(0, 0, 0, 0) + ((ivec4(1)))))) / ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-41043, -37658, -71210, -6912))))) ^ ivec4(0, 0, 0, 0)), min((ivec4(1)) / ivec4(1, 1, 1, 1), (ivec4(1)) / ivec4(1, 1, 1, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))) / ivec4(1, 1, 1, 1), (true ? (ivec4(1)) / ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-41043, -37658, -71210, -6912))))) ^ ivec4(0, 0, 0, 0)), min((ivec4(1)) / ivec4(1, 1, 1, 1), (ivec4(1)) / ivec4(1, 1, 1, 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))))) / ivec4(1, 1, 1, 1), (true ? (ivec4(1)) / ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-41043, -37658, -71210, -6912))))) ^ ivec4(0, 0, 0, 0)), min((ivec4(1)) / ivec4(1, 1, 1, 1), (ivec4(1)) / ivec4(1, 1, 1, 1))))) ^ (ivec4(1, 1, 1, 1) ^ ivec4(1, 1, 1, 1)))) - ivec4(0, 0, 0, 0)))) | (_GLF_IDENTITY((ivec4(1)) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), (true ? ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-70398, -93890, 86920, -88383)))), (_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-90374) : 1)), 1), ivec4(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), 0, 0, 0) + ((ivec4(1)) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), max(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1)))))) | ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), max((ivec4(1)) / ivec4(1, 1, 1, 1), (ivec4(1)) / ivec4(1, 1, 1, 1)))) + ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, _GLF_IDENTITY(0, min(0, 0)), 0))))))), _GLF_struct_1(ivec4(1), ivec2(1), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), false || (_GLF_IDENTITY(true, (true) || false))))), ! (! ((true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (true) || false))))))))), (_GLF_IDENTITY(! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, (true) || false)))))), (! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))) || (_GLF_IDENTITY(true, (true) || false))))))) && true)) && true)))), ivec3(1), uvec4(1u)), _GLF_struct_2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1, mat2x4(_GLF_IDENTITY(1.0, float(float(1.0)))), uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), bvec4(true)), _GLF_struct_3(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u)))) << uvec2(0u, 0u)), vec4(1.0), vec2(1.0), vec2(1.0), ivec2(1), vec2(1.0))), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), _GLF_IDENTITY(uint(uvec3(~ _GLF_IDENTITY((gl_WorkGroupID.x), 0u | ((gl_WorkGroupID.x))), 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u)), (uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u))) | (uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u))))) >> 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupID.x), _GLF_IDENTITY(uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u)), (uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u))) | (uint(uvec3(~ (gl_WorkGroupID.x), _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u))))) >> 0u)))) / 1u), (false ? _GLF_FUZZED(atomicAnd(workgroup_size, _GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup), clamp((num_workgroup), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u)), _GLF_IDENTITY((num_workgroup), max((num_workgroup), (num_workgroup))))) | (num_workgroup)))) : ~ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(8170u, 164461u, 84268u)) : gl_WorkGroupID)).x), 0u, 1u))))))) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u)))) : _GLF_FUZZED(atomicCompSwap(subgroup_id, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), min(uvec2(subgroup_size, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u))))), 0u) | (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), (uvec2(0u, 0u) | (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))) ^ (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(5u), _GLF_IDENTITY(uvec2(5u), uvec2(1u, 1u) * (uvec2(5u))))))))))), 47877u)), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), _GLF_IDENTITY(uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u)), max(uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u)), uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u)))))), ~ (~ ((_GLF_IDENTITY(~ (gl_WorkGroupID.x), _GLF_IDENTITY(uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u)), max(uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u)), uint(uvec3(~ (gl_WorkGroupID.x), 0u, 1u))))))))) : _GLF_FUZZED(atomicCompSwap(subgroup_id, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), 0u | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(6u, 6u))), uint(6u)))))), min(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), uvec2(0u, 0u) | (uvec2(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))))), 47877u))) ^ 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) && (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), true, true, false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(bool((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))))))), (! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), ((! (false))) && true)))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false)))), true)), false)))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), ((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (! (! (! (false)))), (! (! (! (! (false))))) && true))), bool(bvec2(! (! (! (false))), true)))))), bool(bvec4(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))) && true)), (! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-6.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_5.workgroup_id;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_8(vec3(1.0), _GLF_struct_6(bvec4(true), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0))), min(_GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0))), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0)), (mat2(1.0) * (vec2(1.0))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, ~ (~ (1u)))))), _GLF_struct_7(mat3x2(1.0), 1.0, mat3x2(1.0), true, ivec3(1), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mat4(1.0)), 1.0), _GLF_struct_13(_GLF_struct_9(ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), true)))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), true)))))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), true)))))))), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), true)))))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), true)))))))), true)))))))))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true)), false)))))))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))))))), true)))))))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(false, ! (! (false)))))))))), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true)))), true && (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))))))) && (bool(bool(true))))), false, true)))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))), true))), true))))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(true), false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(true), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(true), false), true)), false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(true), false)))))), true)))), bvec3(bvec3(bvec3(bvec2(true), false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(true), false)))))), true)))), bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))))))))))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))), false))))))))))), false, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))))), false, false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true))))), (! (_GLF_IDENTITY(true, (true) && true))) && true))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), ! (! (! ((true))))))) && true))) && true))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)))), false))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, true, false))))))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true))) && true))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, false))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true))), true, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(bvec2(bvec2(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true))), true))), true, true))), false)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))))), false, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), false))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3(bvec2(true), false)))))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))))), false))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), false), true)))))), bvec3(bvec3(bvec3(bvec2(true), false)))))))))))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, _GLF_IDENTITY(false, (false) && true)))))), true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))))))))))), false, true)))))), false, false)), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(bvec2(bvec2(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(bvec2(bvec2(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(bvec2(bvec2(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)), false)))))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))))))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) && true)))))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) && true))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)), false))))), false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true))) && true))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, (true) && true)), true, true)), (bool(bvec3((_GLF_IDENTITY(true, (true) && true)), true, true))) || false)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, (true) && true)), true, true)), (bool(bvec3((_GLF_IDENTITY(true, (true) && true)), true, true))) || false)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true))) && true))), false || (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, (true) && true)), true, true)), (bool(bvec3((_GLF_IDENTITY(true, (true) && true)), true, true))) || false)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true))) && true)))))))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), bvec2(bvec2(bvec2(true)))), true, true)), false))))), false))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))), (_GLF_IDENTITY((true), ! (! ((true))))) && true) && true))) && true))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)), false))))), false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true))) && true))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true)), false))))), false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true))) && true)), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true))) && true)), true)))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))), (injectionSwitch.x < injectionSwitch.y))))), false, false))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, true))), true, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))), bvec2(bvec2(bvec2(true))))))), true, true))), true, true))), false)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))))))))))), false, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(bvec2(true), _GLF_IDENTITY(false, ! (! (false)))), true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true)))))))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true)))))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true)))))))))), true)))))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), true)))))))))))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), false), _GLF_IDENTITY(false, bool(bool(false)))))), bvec3(bvec3(bvec3(bvec2(true), false))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))))))))))), false, true)))))), false, false)), true))), true))))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), false))), true))))))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (true)))))), false, false)), false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true), true)))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true), true)))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true), true))))))))), true, true))), false, false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)))), false))))))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), false, false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), false), true)))))))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), false, false)))), true))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true))))))), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), false, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false))))))))), false, false)), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec2(bvec2(true)))), false, false)), false, false)))), true))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), false, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false, false)), false, false)))), true)))))), false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), false, false)), true, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), false, false)), true, false))))))))), true)))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))), false)))))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))))), false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(true), false)))))))))))), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(true), true, true)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))))))), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))))), false, true)), false))))), bvec2(bvec4(bvec2(true), true, true))), true, true))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec4(bvec2(true), true, true))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)))), false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), false)))))))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), true, false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), true, false)))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), true, false)))), false))))))), true, true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), false))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), true, false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), true, false)))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), true, false)))), false))))))), true, true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), false))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), true, false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), true, false)))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))), true, false)))), false))))))), true, true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), false))))))))))))))))), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))), true))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))), true))), false))), true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))), false)))))))), false)), false)), true)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bool(true)))), bvec2(bvec4(bvec2(true), true, true))), true, true))), false)))))), false)))))), _GLF_IDENTITY(false, true && (false)))))))), false, false))))))))), true, true))))), true, false))))), mat2x4(1.0), _GLF_struct_10(mat2(1.0), uvec2(1u), mat4x3(1.0), mat4x2(1.0), 1), _GLF_struct_11(1u, mat3x4(1.0)), _GLF_struct_12(uvec4(1u)), mat3x4(1.0)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id))))), mat4x3(1.0), _GLF_struct_16(_GLF_struct_14(mat3x2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.2) : 1.0)) : _GLF_FUZZED(86.77)))), mat3x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-734.738)), bool(false))), (injectionSwitch.y) / 1.0))))) && (true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && (true))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), true)))))), true))), false))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) + 0u)) ^ 0u), 1.0, ivec2(1)), _GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-2.2)), vec2(_GLF_FUZZED(-47.20), (vec2(1.0))[1]), bvec2(false, true))), _GLF_struct_15(uvec4(1u)), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.8)))))), (false ? _GLF_FUZZED(mat4(8.7, -5.4, -523.246, 8.8, -1.2, -67.60, -1.6, 1954.3592, -204.392, 64.83, -9.6, -34.05, 6920.7448, 1.9, 2.4, 990.145)) : mat4(1.0))), bvec2(true), mat2(1.0), 1), 1u, mat4x2(1.0), true);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u))) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size)))), _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, uint(uvec2(0u, (1u & 1u)))) ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | 0u)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), ~ (~ (0u ^ (subgroup_id * subgroup_size))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 1u, 0u))))) ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (subgroup_id * subgroup_size))))) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)) - uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (0u ^ (subgroup_id * subgroup_size)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) | (subgroup_size))) / 1u), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) / (0u ^ 1u)), 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) / 1u))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))) << 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) - 0u))))), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))) << 0u)) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), subgroup_size)))), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))) << 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)))))), 0u ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u ^ (subgroup_id * subgroup_size))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))) << 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) / 1u))), max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (0u ^ (subgroup_id * subgroup_size)) | 0u)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (0u ^ (subgroup_id * subgroup_size)) | 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (0u ^ (subgroup_id * subgroup_size)) | 0u)))), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))))), max(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))))), (uint(uint(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)))))) ^ 0u), uint(uint(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)))))))) ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))) << 0u)) / 1u)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))) | _GLF_IDENTITY(0u, (0u) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(atomicAnd(workgroup_size, subgroup_size)) : workgroup_base))) << (1u ^ 1u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(atomicAnd(workgroup_size, subgroup_size)) : workgroup_base))) << (1u ^ 1u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))) ^ 0u)) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), max(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), 0u ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id * subgroup_size)), 0u ^ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (1u ^ 1u))), uint(uvec2((subgroup_id * subgroup_size), 0u)))) - 0u))))) << 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), min(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), clamp(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))), 0u ^ (subgroup_id * subgroup_size))))))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u | 0u) + (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))), 1u))))), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))), uint(uvec2(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))), 1u))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))))), uint(uvec2(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))), 1u))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)) ^ (subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))), uint(uvec2(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))), 1u)))))))))) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(97716u))) * 1u)) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ (subgroup_id * subgroup_size)), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), subgroup_id * subgroup_size))))), 0u ^ (subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u ^ 1u)))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size)))), (~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size))))) >> 0u)))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) / 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 0u)), (uint(uvec3(1u, 1u, 0u))) | (uint(uvec3(1u, 1u, 0u))))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), 0u ^ (subgroup_id * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(199503u) : subgroup_size)), 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u))))) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u)))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u))))) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))))))))), 1u), (false ? _GLF_FUZZED((uvec2(142542u, 182887u) % (subgroup_local_id << workgroup_base))) : uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) / 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 0u)), (uint(uvec3(1u, 1u, 0u))) | (uint(uvec3(1u, 1u, 0u))))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), 0u ^ (subgroup_id * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(199503u) : subgroup_size)), 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u))))) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u)))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), 0u ^ (subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u))))) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))))))))), 1u)))))))))) << 0u)))))) / 1u)) / 1u)) | (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), 0u ^ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (0u ^ (subgroup_id * subgroup_size)) | 0u)))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[_GLF_struct_replacement_17.virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), (_GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0)))) * 1.0), 1.0, 1.0, 0.0, 0.0))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) - vec2(0.0, 0.0)).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.5)), float(1.0), bool(true)))))), 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0)))) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(5.2, -4.7)) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bvec3(! (false), false, false))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bvec3(! (false), false, false))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), ! (! ((! (bool(false)))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(1.0), 1.0)), (false ? _GLF_FUZZED(vec2(69.13, 605.840)) : vec2(vec4(injectionSwitch, sqrt(1.0), 1.0)))))), _GLF_IDENTITY(clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))), true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0))))))), mix(vec2((clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))), true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0))))))))[0], _GLF_IDENTITY((clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))), true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0))))))))[1], ((clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))), true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0))))))))[1]) + 0.0)), vec2(_GLF_FUZZED(9.6), _GLF_FUZZED(4.3)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-90.02), min(_GLF_FUZZED(-90.02), _GLF_IDENTITY(_GLF_FUZZED(-90.02), 0.0 + (_GLF_FUZZED(-90.02))))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(radians(-8.7))))) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x), (false ? _GLF_FUZZED(88.62) : _GLF_IDENTITY((false ? _GLF_FUZZED(-90.02) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x), float(_GLF_IDENTITY(mat4((false ? _GLF_FUZZED(-90.02) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-868.598, 502.104, 72.19, 0.8, 39.35, 4217.0443, 5.2, -1678.3500, _GLF_IDENTITY(29.16, min(29.16, 29.16)), -6604.1069, 275.236, -3.8, -25.81, -9745.2871, 138.901, 859.386)) : mat4((false ? _GLF_FUZZED(-90.02) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0)))))))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8774.9532), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8512.2739)), bvec2(true, false))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec2((false), true)))), ((! _GLF_IDENTITY((false), bool(bvec2((false), true))))) && true))))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, false))), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), false, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, false, false))))))), false, false))))), true && ((false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, false, false))))))), false, false))))))), bool(bvec3(_GLF_IDENTITY(! (false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, false))))), ! (! (! (false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, false)))))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, false)), bool(bvec4(bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, false)), true, false, true))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))), false, false))))), ! (! (! (false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ! (! (_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), true, false)))))), true, true))))))))), true))))))) && true)))))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, false)))))))), false, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
