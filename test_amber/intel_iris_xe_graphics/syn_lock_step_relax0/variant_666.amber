#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))), ! (! ((bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true)))))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_DEAD(false), true, true)), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))), true))), false || ((bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))), true))))) || false))) && true))) && true)), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))), (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))) || false))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))), (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))) || false))))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))) || false), bool(bvec2(false, false))), false, _GLF_IDENTITY(true, (true) && true))), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))), ! (_GLF_IDENTITY(! ((! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true))))), bool(bool(! ((! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, true, false)))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true)))))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))) && true), false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) || false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || _GLF_IDENTITY(false, false || (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - abs(vec2(0.0, 0.0)), _GLF_IDENTITY(mix(vec2(((injectionSwitch) - abs(vec2(0.0, 0.0)))[0], ((injectionSwitch) - abs(vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(4.8), _GLF_FUZZED((-55.00 + 5.6))), bvec2(false, false)), (mix(vec2(((injectionSwitch) - abs(vec2(0.0, 0.0)))[0], ((injectionSwitch) - abs(vec2(0.0, 0.0)))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(4.8), (_GLF_IDENTITY(_GLF_FUZZED(4.8), mix(float(_GLF_FUZZED(4.8)), float(_GLF_FUZZED(6.9)), bool(false)))) - 0.0), _GLF_FUZZED((-55.00 + 5.6))), bvec2(false, false))) / vec2(1.0, 1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false, true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, false)))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, false)))), true && (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, true))), false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, true))), false, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, true))), false, false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), true && (_GLF_DEAD(false)))), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))), max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-234.849)), float(max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), false || (! (bool(true))))))))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 0.0, tan(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), clamp(float(mat4x2(injectionSwitch.y, 1.0, 0.0, tan(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), float(mat4x2(injectionSwitch.y, 1.0, 0.0, tan(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), float(mat4x2(injectionSwitch.y, 1.0, 0.0, tan(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))))), float(_GLF_FUZZED(float(true))), bool(false))), injectionSwitch.y))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch)))).y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(false)), true)), (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true)), false || (bool(bvec2((_GLF_DEAD(false)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false)))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))) * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) >> 0u), (85431u & 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) >> 0u), (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) >> 0u)) | (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) >> 0u)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)))))), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), _GLF_IDENTITY(min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)), ~ (~ (min(0u ^ (workgroup_size * workgroup_id), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) | 0u)))))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), _GLF_IDENTITY(min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)), ~ (~ (min(0u ^ (workgroup_size * workgroup_id), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) | 0u))))))))))) / 1u)))))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), max(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))), workgroup_size * workgroup_id)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) ^ (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)) * workgroup_id)))) / 1u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))) * (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))))))), 1u, 0u, 0u)), max(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))))))), 1u, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))))))), 1u, 0u, 0u))))))))))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), max(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | 0u)), workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) | 0u))), workgroup_size * workgroup_id)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) - 0u)))) / 1u)), ((_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))), min(0u ^ (workgroup_size * workgroup_id), _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(workgroup_id)))) ^ (workgroup_size * workgroup_id)))), clamp(~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) * 1u)))))))))))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(max(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_size * workgroup_id), max(max(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_size * workgroup_id), _GLF_IDENTITY(max(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_size * workgroup_id), _GLF_IDENTITY(uint(uvec2(max(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_size * workgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (uint(uvec2(max(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_size * workgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), workgroup_size * workgroup_id)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) ^ _GLF_IDENTITY((workgroup_size * workgroup_id), max((workgroup_size * workgroup_id), (workgroup_size * workgroup_id)))))) / 1u))) / _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)) * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), workgroup_size * workgroup_id, workgroup_size * workgroup_id))) / 1u))) >> 0u), clamp(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) >> 0u), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)) : _GLF_FUZZED(subgroup_size))))), (workgroup_id) << 0u), _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_id)))), workgroup_id)))) >> 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) >> 0u)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), workgroup_id)))), 0u ^ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id))), max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)))))))), uint(_GLF_IDENTITY(uvec3(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), workgroup_size * workgroup_id))) - 0u), 0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(uvec3(_GLF_IDENTITY(uvec3(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id)), workgroup_size * workgroup_id)), workgroup_size * workgroup_id)), 0u ^ (workgroup_size * workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id)), workgroup_size * workgroup_id)), workgroup_size * workgroup_id)), 0u ^ (workgroup_size * workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) / uvec3(1u, 1u, 1u)))))))) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id) | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (workgroup_size * workgroup_id) - 0u))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(83245u, 114534u).x) : workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(83245u, 114534u).x) : workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), uint(uvec4((false ? _GLF_FUZZED(uvec2(83245u, 114534u).x) : workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) + 0u)) >> 0u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u)))) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) * 1u), ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id) | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (_GLF_IDENTITY(uvec4(workgroup_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(workgroup_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) | (uvec4(workgroup_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), (workgroup_size * workgroup_id) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(83245u, 114534u).x), max(_GLF_FUZZED(uvec2(83245u, 114534u).x), _GLF_FUZZED(uvec2(83245u, 114534u).x))) : workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), ((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(83245u, 114534u).x), max(_GLF_FUZZED(uvec2(83245u, 114534u).x), _GLF_FUZZED(uvec2(83245u, 114534u).x))) : workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))) | ((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(83245u, 114534u).x), max(_GLF_FUZZED(uvec2(83245u, 114534u).x), _GLF_FUZZED(uvec2(83245u, 114534u).x))) : workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(83245u, 114534u).x) : workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), uint(uvec4((false ? _GLF_FUZZED(uvec2(83245u, 114534u).x) : workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) + 0u)) >> 0u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u)))) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))))))) * 1u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) || false)) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, true)))))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), false, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), false, true)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) && true), bool(bvec4(_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), false, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3425.6043), _GLF_FUZZED(-3.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), float(_GLF_FUZZED(-9.8)), bool(false)))), bvec2(true, true)))) / vec2(1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3425.6043), _GLF_FUZZED(-3.9)), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 ^ (0))))], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(3425.6043), _GLF_FUZZED(-3.9)), mix(vec2(_GLF_FUZZED(-6530.0337), (vec2(_GLF_FUZZED(3425.6043), _GLF_FUZZED(-3.9)))[1]), vec2((vec2(_GLF_FUZZED(3425.6043), _GLF_FUZZED(-3.9)))[0], _GLF_FUZZED((-1945.9523 / -8001.7643))), bvec2(true, false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, true), false)), true))))))) / vec2(1.0, 1.0))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5304.6338)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) : _GLF_FUZZED(vec2(68.65, 8874.0654)))).y))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY((! (! (! (false)))) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (! (! (false)))), ! (_GLF_IDENTITY(! ((! (! (! (false))))), ! (! (_GLF_IDENTITY(! ((! (! (! (false))))), false || (! ((! (! (! (false)))))))))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (! (! (false)))) && true, bool(bvec4((! (! (! (false)))) && true, false, false, false))), false)), false || (bool(bvec2(_GLF_IDENTITY((! (! (! (false)))), false || (_GLF_IDENTITY((! (! (! (false)))), ((! (! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, false)))), true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && (_GLF_IDENTITY((false), false || ((false)))))))), (! (! (false))) && _GLF_IDENTITY(true, (true) && true)))))), (bool(bool(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), true && ((! _GLF_IDENTITY((false), false || ((false)))))), (! (! (false))) && _GLF_IDENTITY(true, (true) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bool(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((false), ! (! ((false))))))))), true, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), true, false)))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false))), ! (! (false)))))), true, false))), ! (! (_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), true, false)))))), true, true)))) || false, ((_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec3(bool(bool(true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))), true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! (bool(bvec3(bool(bool(true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))), true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))) || false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), true))), true)), false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), true, false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))), false))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))), bool(bvec3(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)))))), true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), true))), true)), false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), true, false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))), false))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))), bool(bvec3(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)))))), true, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))), true, false), true))), true)), false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), true, false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))), false))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))), bool(bvec3(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)))))), true, true))))))) || false) || false, ((_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bool(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))))))))), true, false)))) || false) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.9, 132.783)) : injectionSwitch)).y)))) || false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(77.28)), float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(625.566, (false ? _GLF_FUZZED(-4876.2575) : 625.566))), _GLF_FUZZED(2588.8502)), bvec2(false, false))), 1.0, 1.0, exp(0.0), 1.0), mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(tan(0.0), 1.0)), dot(vec2(1.0, 0.0), vec2(tan(0.0), 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0) + (mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 0.0, 0.0, 1.0, 0.0)))[1]), vec2(_GLF_FUZZED(625.566), _GLF_FUZZED(2588.8502)), bvec2(false, false))), 1.0, 1.0, exp(0.0), 1.0))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(91.30)), 0.0 + (float(_GLF_FUZZED(91.30)))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (bool(true)))), false || (! (_GLF_IDENTITY(bool(true), false || (bool(true)))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_DEAD(false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))), min(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))))))).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))), min(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))))))).x, mix(float(_GLF_FUZZED(-78.40)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))), min(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))))))).x), bool(true))) : _GLF_FUZZED(-3.4))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(91.30)), 0.0 + (float(_GLF_FUZZED(91.30)))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || _GLF_IDENTITY((bool(true)), ((bool(true))) && true))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.7)), float(injectionSwitch.y), bool(true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bool((false)))))), bool(bvec4((! (_GLF_IDENTITY((false), bool(bool((false)))))), true, false, true))))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), false), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-544.239), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1430.3177)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)) + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | 0u)) | (subgroup_local_id))), (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), min((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))) | (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), ((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), (uvec2(subgroup_id * subgroup_size, 1u)) * uvec2(1u, 1u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 1u)), clamp(uint(uvec2(subgroup_id * subgroup_size, 1u)), uint(uvec2(subgroup_id * subgroup_size, 1u)), uint(uvec2(subgroup_id * subgroup_size, 1u))))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))), 1u)))))) / 1u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(bool(bvec3(false, true, true)))))), true))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(_GLF_IDENTITY((num_workgroup) | (num_workgroup), _GLF_IDENTITY(0u, 0u | (0u)) ^ ((num_workgroup) | (num_workgroup))), uint(uvec2((num_workgroup) | (num_workgroup), 1u))))), (_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup), ((num_workgroup)) ^ (0u | _GLF_IDENTITY(0u, ~ (~ (0u))))) | _GLF_IDENTITY((num_workgroup), (_GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u)), (true ? (num_workgroup) : _GLF_FUZZED(workgroup_base)))) + 0u)))) - (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) << (0u ^ 0u))), uint(4u)))) : subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup) | _GLF_IDENTITY((num_workgroup), ((num_workgroup)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec2((num_workgroup) | _GLF_IDENTITY((num_workgroup), (_GLF_IDENTITY((num_workgroup), uint(_GLF_IDENTITY(uint((num_workgroup)), 0u + (uint((num_workgroup))))))) << 0u), 1u))))), (_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup), ((num_workgroup)) ^ (0u | 0u)) | _GLF_IDENTITY((num_workgroup), (_GLF_IDENTITY((num_workgroup), (_GLF_IDENTITY(true, ! (! (true))) ? (num_workgroup) : _GLF_FUZZED(workgroup_base)))) + 0u)))) - (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) << 0u)), uint(4u)))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> (1u ^ 1u)))) / 1u)));
 _GLF_IDENTITY(buf[virtual_gid] = 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))) ? 1 : _GLF_FUZZED(-62699)))) | _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), 0 | ((1))), _GLF_IDENTITY((1), max((1), (1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (true ? 1 : _GLF_FUZZED(3860))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(3860)))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (buf[virtual_gid] = 1)), (1u | 1u) * ((~ (buf[virtual_gid] = 1)))), (~ _GLF_IDENTITY((~ (buf[virtual_gid] = 1)), (1u | 1u) * ((~ (buf[virtual_gid] = _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(-11665)))))))) | (1u ^ 1u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (true ? 1 : _GLF_FUZZED(3860))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(3860)))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (buf[virtual_gid] = 1)), (1u | 1u) * ((~ (buf[virtual_gid] = 1)))), (~ _GLF_IDENTITY((~ (buf[virtual_gid] = 1)), (1u | 1u) * ((~ (buf[virtual_gid] = _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(-11665)))))))) | (1u ^ 1u))), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (true ? 1 : _GLF_FUZZED(3860))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(3860)))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (buf[virtual_gid] = 1)), (1u | 1u) * ((~ (buf[virtual_gid] = 1)))), (~ _GLF_IDENTITY((~ (buf[virtual_gid] = 1)), (1u | 1u) * ((~ (buf[virtual_gid] = _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(-11665)))))))) | (1u ^ 1u)))) ^ 0u) : _GLF_FUZZED(num_workgroup)))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), max(ivec3(1, 0, 0), ivec3(1, 0, 0))))), (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - 0u)) + 0u), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(3860), _GLF_IDENTITY(min(true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(3860), 0 + (_GLF_FUZZED(3860))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (true) && true)))) ? 1 : _GLF_FUZZED(3860), 0 ^ (true ? 1 : _GLF_FUZZED(3860)))), _GLF_IDENTITY((min(true ? 1 : _GLF_FUZZED(3860), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? 1 : _GLF_FUZZED(3860), 0 ^ (true ? 1 : _GLF_FUZZED(3860))))) / 1, ~ (~ (_GLF_IDENTITY((min(true ? 1 : _GLF_FUZZED(3860), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? 1 : _GLF_FUZZED(3860), 0 ^ (true ? 1 : _GLF_FUZZED(3860))))), (_GLF_IDENTITY((min(true ? 1 : _GLF_FUZZED(3860), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? 1 : _GLF_FUZZED(3860), 0 ^ (true ? 1 : _GLF_FUZZED(3860))))), clamp((min(true ? 1 : _GLF_FUZZED(3860), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? 1 : _GLF_FUZZED(3860), 0 ^ (true ? 1 : _GLF_FUZZED(3860))))), (min(true ? 1 : _GLF_FUZZED(3860), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? 1 : _GLF_FUZZED(3860), 0 ^ (true ? 1 : _GLF_FUZZED(3860))))), (min(true ? 1 : _GLF_FUZZED(3860), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? 1 : _GLF_FUZZED(3860), 0 ^ (true ? 1 : _GLF_FUZZED(3860)))))))) | ((min(true ? 1 : _GLF_FUZZED(3860), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? 1 : _GLF_FUZZED(3860), 0 ^ (true ? 1 : _GLF_FUZZED(3860))))))) / 1))))))), ~ (~ (buf[virtual_gid] = 1)))) / 1u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(3860, 0 + (_GLF_IDENTITY(3860, (_GLF_IDENTITY(3860, max(_GLF_IDENTITY(3860, (3860) - 0), _GLF_IDENTITY(3860, ~ (~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860)))))))) | (48860 & 0))))))), ~ (~ _GLF_IDENTITY((buf[virtual_gid] = _GLF_IDENTITY(1, (1) >> 0)), ((buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), (1) >> 0))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u, ~ (~ ((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(3860, 0 + (_GLF_IDENTITY(3860, _GLF_IDENTITY((_GLF_IDENTITY(3860, max(_GLF_IDENTITY(3860, (3860) - 0), _GLF_IDENTITY(3860, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860))), max(~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860))), ~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860))))), 0)))))))), ((_GLF_IDENTITY(3860, max(_GLF_IDENTITY(3860, (3860) - 0), _GLF_IDENTITY(3860, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860))), max(~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860))), ~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860))))), 0))))))))) | ((_GLF_IDENTITY(3860, max(_GLF_IDENTITY(3860, (3860) - 0), _GLF_IDENTITY(3860, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860))), max(~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860))), ~ (_GLF_IDENTITY(3860, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41211), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-41211)), (~ (_GLF_FUZZED(-41211))) - 0))) : 3860))))), 0)))))))))) | (48860 & 0))))))), ~ (~ _GLF_IDENTITY((buf[virtual_gid] = _GLF_IDENTITY(1, (1) >> 0)), ((buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), (1) >> 0))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)))), 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(3860))), 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(3860))))), ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) | 0u)))) / 1u))) : _GLF_FUZZED(workgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y)), false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y)) && true)), false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), _GLF_IDENTITY(((uint(_GLF_IDENTITY(2, min(2, 2))))) | (_GLF_IDENTITY((uint(2)), uint(uvec4((uint(2)), 1u, 1u, 0u)))), (_GLF_IDENTITY(((uint(2))), 0u | (_GLF_IDENTITY(((uint(2))), (_GLF_IDENTITY(((uint(2))), ~ (_GLF_IDENTITY(~ (((uint(2)))), max(_GLF_IDENTITY(~ (((uint(2)))), uint(uvec4(~ (((uint(2)))), 0u, 1u, 0u))), ~ (((uint(2))))))))) | 0u))) | (_GLF_IDENTITY((uint(2)), uint(uvec4((uint(2)), 1u, 1u, 0u))))) - 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
