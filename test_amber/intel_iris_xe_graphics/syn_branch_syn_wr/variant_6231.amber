#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(false)) || false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(349.025) : injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.3), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.9) : _GLF_FUZZED(_GLF_IDENTITY(-5.3, min(_GLF_IDENTITY(-5.3, (-5.3) * 1.0), -5.3))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED((+ 18.31))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.3), min(_GLF_FUZZED(-5.3), _GLF_FUZZED(-5.3))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 18.31))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.3), min(_GLF_FUZZED(-5.3), _GLF_FUZZED(-5.3))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 18.31))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.3), min(_GLF_FUZZED(-5.3), _GLF_FUZZED(-5.3))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 18.31))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.3), min(_GLF_FUZZED(-5.3), _GLF_FUZZED(-5.3))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 18.31))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).x > injectionSwitch.y) || false), true, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true), true, true))))))), bool(bvec4(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.3), (_GLF_FUZZED(-5.3)) - length(0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((+ 18.31)), max(_GLF_IDENTITY(_GLF_FUZZED((+ 18.31)), (true ? _GLF_IDENTITY(_GLF_FUZZED((+ 18.31)), clamp(_GLF_FUZZED((+ 18.31)), _GLF_FUZZED((+ 18.31)), _GLF_FUZZED((+ 18.31)))) : _GLF_FUZZED(_GLF_IDENTITY(-902.309, mix(float(_GLF_FUZZED(704.188)), float(-902.309), bool(true)))))), _GLF_FUZZED((+ 18.31))))), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5769.0186) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && (injectionSwitch.x > injectionSwitch.y)))))))), vec2(_GLF_IDENTITY(vec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.3), (_GLF_FUZZED(-5.3)) - length(0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((+ 18.31)), max(_GLF_IDENTITY(_GLF_FUZZED((+ 18.31)), (true ? _GLF_IDENTITY(_GLF_FUZZED((+ 18.31)), clamp(_GLF_FUZZED((+ 18.31)), _GLF_FUZZED((+ 18.31)), _GLF_FUZZED((+ 18.31)))) : _GLF_FUZZED(_GLF_IDENTITY(-902.309, mix(float(_GLF_FUZZED(704.188)), float(-902.309), bool(true)))))), _GLF_FUZZED((+ 18.31))))), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5769.0186) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && (injectionSwitch.x > injectionSwitch.y)))))))), 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0))), mat4(1.0) * (vec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.3), (_GLF_FUZZED(-5.3)) - length(0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((+ 18.31)), max(_GLF_IDENTITY(_GLF_FUZZED((+ 18.31)), (true ? _GLF_IDENTITY(_GLF_FUZZED((+ 18.31)), clamp(_GLF_FUZZED((+ 18.31)), _GLF_FUZZED((+ 18.31)), _GLF_FUZZED((+ 18.31)))) : _GLF_FUZZED(_GLF_IDENTITY(-902.309, mix(float(_GLF_FUZZED(704.188)), float(-902.309), bool(true)))))), _GLF_FUZZED((+ 18.31))))), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5769.0186) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && (injectionSwitch.x > injectionSwitch.y)))))))), 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0)))))))))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y)), true)))))))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = (_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, min((1) / 1, (1) / 1))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 + (0)), 0))) + 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))) && true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    return;
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
        break;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))), (_GLF_DEAD(false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), false)))))))))) && true) || false))), _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.9), _GLF_FUZZED(524.376)), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_IDENTITY(false, true && (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)).y))))))))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((794.356 / -1.9))), float(injectionSwitch.y), bool(true)))))))))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 | 0), ! (! (_injected_loop_counter != (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(6370) : 0)), 0, _GLF_IDENTITY(0, int(ivec2(0, 1))))))) | 0))))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           continue;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 1.0 * (injectionSwitch.y))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))) && true))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(90.77) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.6)), bool(false)))), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(90.77) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.6)), bool(false)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(90.77) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.6)), bool(false)))), clamp((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(90.77) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.6)), bool(false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(90.77) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.6)), bool(false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(90.77) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.6)), bool(false))))))))), injectionSwitch.y))))))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))) || false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sinh(696.058)) : injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-855.685)), bvec2(true, false))).x > injectionSwitch.y))))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         do
          {
           barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))), false)), ! (! (bool(bvec2(bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))), false))))))));
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
            return;
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(21145))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (false), ! (! (false || (false)))))))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(164241u, 115123u, 60197u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))))) | uvec3(0u, 0u, 0u)).x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(49.71)), vec2(_GLF_FUZZED(-2.1), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_injected_loop_counter < 1), ! (! (bool(_injected_loop_counter < 1))))), ! (! (bool(_GLF_IDENTITY(bool(_injected_loop_counter < 1), ! (! (bool(_injected_loop_counter < 1)))))))))), false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false)))))), _GLF_IDENTITY(bool(bvec3((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false)))))), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false)))))), false, true)), bool(bool(bool(bvec3((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false)))))), false, true)))))))))))); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (injectionSwitch.y)))), false, false)), false, false, true))))))
      {
       barrier();
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), exp(0.0)))).y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), vec2(1.0, 1.0) * (vec2(injectionSwitch.y, 0.0))))), min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))));
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch[1]), bool(true))))).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))), (bool(bvec2(false, true))) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), true), true, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch[1]), bool(true))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch[1]), bool(true))))).y)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), (injectionSwitch.x > injectionSwitch.y))) && true)), false, true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch[1]), bool(true))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch[1]), bool(true))))).y)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), (injectionSwitch.x > injectionSwitch.y))) && true)), false, true))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch[1]), bool(true))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch[1]), bool(true))))).y)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), (injectionSwitch.x > injectionSwitch.y))) && true)), false, true))), true), true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, true))), true), true, true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (127738u & 0u) | (gl_WorkGroupID.x));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
  }
 else
  {
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) / ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(workgroup_size)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(4u, 4u))) / (1u & 1u))), min(uint(4u), uint(4u)))))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))), max(~ (subgroup_size), ~ (subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 1u))), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (_GLF_IDENTITY(uint(4u), (uint(4u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), min(uint(4u), uint(4u))), uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (~ (_GLF_IDENTITY(4u, (4u) ^ 0u))) - 0u) : _GLF_FUZZED(num_workgroup)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))), 0u ^ (uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) >> 0u))), max(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_size)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) / ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(workgroup_size)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(4u, 4u))) / (1u & 1u))), min(uint(4u), uint(4u)))))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))), max(~ (subgroup_size), ~ (subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 1u))), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (_GLF_IDENTITY(uint(4u), (uint(4u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), min(uint(4u), uint(4u))), uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (~ (_GLF_IDENTITY(4u, (4u) ^ 0u))) - 0u) : _GLF_FUZZED(num_workgroup)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))), 0u ^ (uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) >> 0u))), max(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_size)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) / ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(workgroup_size)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(4u, 4u))) / (1u & 1u))), min(uint(4u), uint(4u)))))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))), max(~ (subgroup_size), ~ (subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 1u))), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (_GLF_IDENTITY(uint(4u), (uint(4u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), min(uint(4u), uint(4u))), uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (~ (_GLF_IDENTITY(4u, (4u) ^ 0u))) - 0u) : _GLF_FUZZED(num_workgroup)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))), 0u ^ (uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) >> 0u))), max(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_size)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) / ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(workgroup_size)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(4u, 4u))) / (1u & 1u))), min(uint(4u), uint(4u)))))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))), max(~ (subgroup_size), ~ (subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 1u))), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (_GLF_IDENTITY(uint(4u), (uint(4u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), min(uint(4u), uint(4u))), uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (~ (_GLF_IDENTITY(4u, (4u) ^ 0u))) - 0u) : _GLF_FUZZED(num_workgroup)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))), 0u ^ (uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) >> 0u))), max(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_size)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) / ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(workgroup_size)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(4u, 4u))) / (1u & 1u))), min(uint(4u), uint(4u)))))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))), max(~ (subgroup_size), ~ (subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 1u))), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (_GLF_IDENTITY(uint(4u), (uint(4u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), min(uint(4u), uint(4u))), uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (~ (_GLF_IDENTITY(4u, (4u) ^ 0u))) - 0u) : _GLF_FUZZED(num_workgroup)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))), 0u ^ (uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) >> 0u))), max(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_size)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) / ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(workgroup_size)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(4u, 4u))) / (1u & 1u))), min(uint(4u), uint(4u)))))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))), max(~ (subgroup_size), ~ (subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 1u))), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (_GLF_IDENTITY(uint(4u), (uint(4u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), min(uint(4u), uint(4u))), uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (~ (_GLF_IDENTITY(4u, (4u) ^ 0u))) - 0u) : _GLF_FUZZED(num_workgroup)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))), 0u ^ (uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) >> 0u))), max(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_size)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) / ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(workgroup_size)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(4u, 4u))) / (1u & 1u))), min(uint(4u), uint(4u)))))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))), max(~ (subgroup_size), ~ (subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 1u))), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (_GLF_IDENTITY(uint(4u), (uint(4u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), min(uint(4u), uint(4u))), uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(4u, (4u) ^ 0u)), (~ (_GLF_IDENTITY(4u, (4u) ^ 0u))) - 0u) : _GLF_FUZZED(num_workgroup)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))), 0u ^ (uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u ^ (4u)), _GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, (4u) | (4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))))))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) >> 0u))), max(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_size)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), clamp((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))) | 0u))), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))))))))))) * 1u) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(1, (1) / 1)), ((_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(1, (1) / 1))) >> 0))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))) | ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ((subgroup_local_id + 1) ^ 0u) | 0u))))) >> 0u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) >> 0u)))))) >> 0u)) % subgroup_size), max(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 0u))) * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u))), subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) + (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1) | (subgroup_local_id + 1), 0u, 1u, 1u)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1) | (subgroup_local_id + 1), 0u, 1u, 1u))))) | (~ (_GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1) | (subgroup_local_id + 1), 0u, 1u, 1u)))))))))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) - 0u)))))) | (_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) - 0u)))))) | (_GLF_IDENTITY(0u, min(0u, 0u)))))) * 1u)))))) >> _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (1u ^ 1u)), _GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) >> (0u | 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), max(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u)))), uvec2(subgroup_local_id, 1u))))))) + 1, (subgroup_local_id + 1) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), subgroup_local_id)), 0u, 0u))) + 1) >> 0u), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), max(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (0u) >> 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u)))), uvec2(subgroup_local_id, 1u)), (_GLF_IDENTITY(max(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u)))), uvec2(subgroup_local_id, 1u)), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u)))), uvec2(subgroup_local_id, 1u)), max(max(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u)))), uvec2(subgroup_local_id, 1u)), max(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u)))), uvec2(subgroup_local_id, 1u)))), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u)))), uvec2(subgroup_local_id, 1u)), uvec2(uvec4(max(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u)))), uvec2(subgroup_local_id, 1u)), 0u, 0u))), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u)))), uvec2(subgroup_local_id, 1u)), (max(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u)))), uvec2(subgroup_local_id, 1u))) ^ uvec2(0u, 0u))))) / uvec2(1u, 1u))))))) + 1, (subgroup_local_id + 1) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))), subgroup_local_id)), 0u, 0u))) + 1) >> 0u), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), max(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (0u) >> 0u))))))))) << 0u) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))), 1u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))), 1u, 0u))), 1u * (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))), 1u, 0u))))), _GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), max(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) | (_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))))))), 1u, 0u))))) + 1) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)) % subgroup_size), 1u * (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1, _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, 0u + (0u)) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0)) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) ^ 0u, min((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) ^ 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) ^ 0u, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) ^ 0u) - 0u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 1u, _GLF_IDENTITY(0u, (0u) / 1u), 0u)))))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 1)), (subgroup_local_id + 1) >> _GLF_IDENTITY(0u, (0u) + 0u)))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u))), (subgroup_local_id + 1) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(67366) : 1))))) >> 0u)) ^ 0u)) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))), 1u, 1u, 1u)))) >> 0u)) % subgroup_size)))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), 4, 64, _GLF_IDENTITY(0, (0) - 0));
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(81.79)), float(abs(0.0)), bool(true))), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, _GLF_IDENTITY(35.07, min(35.07, _GLF_IDENTITY(35.07, max(35.07, _GLF_IDENTITY(35.07, clamp(35.07, 35.07, 35.07)))))))) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(595.615)), float(abs(0.0)), bool(true))), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(845.382), (vec4(0.0, 0.0, 1.0, 1.0))[1], _GLF_FUZZED(8.0), (vec4(0.0, 0.0, 1.0, 1.0))[3]), vec4((vec4(0.0, 0.0, 1.0, 1.0))[0], _GLF_FUZZED(667.786), (vec4(0.0, 0.0, 1.0, 1.0))[2], _GLF_FUZZED(-0.3)), bvec4(true, false, true, false)))) / vec4(1.0, 1.0, 1.0, 1.0)), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), min(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.4) : 1.0)), 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), determinant(mat4(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-717.437)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), abs(0.0), tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-50.47))), 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-278.116)), float(0.0), bool(true))))), 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (vec4(0.0, 0.0, 1.0, 1.0)) * mat4(1.0)), vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 1.0)), min(float(vec4(1.0, 1.0, 1.0, 1.0)), float(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-9.3), min(_GLF_IDENTITY(_GLF_FUZZED(-9.3), (false ? _GLF_FUZZED(9378.4313) : _GLF_FUZZED(-9.3))), _GLF_FUZZED(-9.3)))), bool(false)))), float(_GLF_FUZZED(6.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? 0.0 : _GLF_FUZZED((+ (-15.37 + 9.1)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? 0.0 : _GLF_FUZZED((+ (-15.37 + 9.1)))), (false ? _GLF_FUZZED(8.9) : (_GLF_IDENTITY(true, false || (true)) ? 0.0 : _GLF_FUZZED((+ (-15.37 + 9.1)))))), (_GLF_IDENTITY(true, false || (true)) ? 0.0 : _GLF_FUZZED((+ (-15.37 + 9.1)))), (_GLF_IDENTITY(true, false || (true)) ? 0.0 : _GLF_FUZZED((+ (-15.37 + 9.1)))))))))), mat2(1.0) * (vec2(vec3(injectionSwitch, tan(_GLF_IDENTITY(0.0, float(float(0.0))))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false))) ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), min(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0)))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0)))), (float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))) + 0.0)), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false))) ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), min(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0)))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0)))), (float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))) + 0.0)), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false))) ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), min(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0)))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0)))), (float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))) + 0.0)), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(-20.03) : float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false))) ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), min(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0)))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0)))), (float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))) + 0.0)), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0)))))), float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false))) ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), min(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), 0.0, 0.0)))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0)))), (float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))) + 0.0)), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, _GLF_IDENTITY(determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), float(mat4x3(determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 1.0, sin(0.0), 0.0), transpose(transpose(mat2(_GLF_IDENTITY(determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), float(mat4x3(determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 1.0, sin(0.0), 0.0)))))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(152.729)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(410.992)), float(0.0), bool(true))))), 0.0)), 0.0, 0.0, 1.0)), 0.0, length(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-38.34) : 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)))))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), tan(0.0), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3387.3577)), bool(false))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(9.2)), bool(false))), 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), mix(vec4((vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(9.2)), bool(false))), 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))))[0], (vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(9.2)), bool(false))), 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))))[1], _GLF_FUZZED(-2.5), (vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(9.2)), bool(false))), 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))))[3]), vec4(_GLF_FUZZED(float(-96377)), _GLF_FUZZED(842.529), (vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(9.2)), bool(false))), 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))))[2], _GLF_FUZZED(-5391.9490)), bvec4(false, false, true, false))), vec4(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), min(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0))), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, _GLF_IDENTITY(35.07, (_GLF_IDENTITY(35.07, (35.07) + 0.0)) * 1.0))) : mat4x2(0.0, determinant(mat4(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-717.437, (-717.437) - 0.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-50.47), (true ? 1.0 : _GLF_FUZZED(-50.47)) - 0.0))), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(97.27)), bool(false)))), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-9.3), min(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3)))), bool(false)))), float(_GLF_FUZZED(6.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (true ? 0.0 : _GLF_FUZZED((+ _GLF_IDENTITY((-15.37 + 9.1), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, cos(0.0))), _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, cos(0.0))), max(dot(vec4(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, cos(0.0))), dot(vec4(determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, cos(0.0)))))) + ((-15.37 + 9.1)))))))))), mat2(1.0) * (vec2(vec3(injectionSwitch, tan(0.0)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), min(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0))), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-717.437)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-50.47))), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-9.3), min(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3)))), bool(false)))), float(_GLF_FUZZED(6.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (true ? 0.0 : _GLF_FUZZED((+ (-15.37 + 9.1)))))))), mat2(1.0) * (vec2(vec3(injectionSwitch, tan(0.0)))))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, tan(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), min(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0))), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-717.437)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-50.47))), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-9.3), min(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3)))), bool(false)))), float(_GLF_FUZZED(6.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(_GLF_IDENTITY(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0), (true ? mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-3.6, 2.5, -42.93, -1.3, -8223.6305, 40.69, 67.85, -39.67, -1210.3801, -4.7, -1.0, 7763.0716, 7291.2525, -2644.2859, -3.8, 202.073))))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, _GLF_IDENTITY(-3341.4937, min(_GLF_IDENTITY(-3341.4937, (-3341.4937) - 0.0), -3341.4937)), 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(distance(vec2(233.387, 22.17), vec2(3.7, 9447.9300)))))), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, _GLF_IDENTITY(determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0 + (_GLF_IDENTITY(determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), (determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)), vec4(vec4(_GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82))))))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0))) + sqrt(0.0)))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.4)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.0) : 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0))), max(abs(0.0), abs(0.0))), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), min(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0))), vec4(1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.2) : 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-717.437)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-50.47))), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-9.3), min(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3)))), bool(false)))), float(_GLF_FUZZED(6.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))) - 0.0), (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY((+ (-15.37 + 9.1)), mix(float((+ (-15.37 + 9.1))), float(_GLF_FUZZED(83.92)), bool(false))))))))), mat2(1.0) * (vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5101.9382), _GLF_FUZZED(-2898.1574)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), tan(0.0)))))) : _GLF_FUZZED(injectionSwitch))).x, (false ? _GLF_FUZZED(-4.3) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), _GLF_IDENTITY(tan(0.0), float(_GLF_IDENTITY(vec4(tan(0.0), 0.0, 0.0, 1.0), clamp(vec4(tan(0.0), 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(tan(0.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(tan(0.0), 0.0, 0.0, 1.0))), vec4(tan(0.0), 0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), _GLF_IDENTITY(max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0)), (max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))) / abs(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0), vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), _GLF_IDENTITY(abs(0.0), max(abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), abs(0.0))), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (vec4(0.0, 0.0, 1.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(min(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0)), vec4(vec4(min(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0)))))), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7434.2040)), float(0.0), bool(true))))), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-717.437)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-50.47))), 1.0), vec4(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-9.3), min(_GLF_FUZZED(-9.3), _GLF_IDENTITY(_GLF_FUZZED(-9.3), (false ? _GLF_FUZZED(-9784.2960) : _GLF_FUZZED(-9.3)))))), bool(false)))), float(_GLF_FUZZED(6.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (true ? 0.0 : _GLF_FUZZED((+ (_GLF_IDENTITY(-15.37 + 9.1, (-15.37 + 9.1) / 1.0))))))))), mat2(1.0) * (vec2(vec3(injectionSwitch, tan(0.0)))))).x)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.9))), 0.0))), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), (true ? dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(355.977))), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, _GLF_IDENTITY(-7.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(-7.0, 0.0, sin(0.0), 1.0), transpose(transpose(mat2(-7.0, 0.0, sin(0.0), 1.0))))), (float(_GLF_IDENTITY(mat2(-7.0, 0.0, sin(0.0), 1.0), transpose(transpose(mat2(-7.0, 0.0, sin(0.0), 1.0)))))) + 0.0)), 35.07)) : mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(tanh(-76.29)) : 1.0))) / 1.0), 1.0, 1.0)))), 0.0, 1.0), max(vec4(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0), vec4(1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(1060.8240)), bool(false))), 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), abs(0.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1234.0138)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED((3.2 + (463.791 / 8.3))), (vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 1.0))[1], (vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 1.0))[2], (vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 1.0))[3]), vec4(_GLF_IDENTITY((vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 1.0))[0], (true ? (vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 1.0))[0] : _GLF_FUZZED(-188.757))), _GLF_FUZZED(462.776), _GLF_FUZZED(1.9), _GLF_FUZZED(1.2)), bvec4(true, false, false, false))), (true ? vec4(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(1.9, -1.2, 7660.4965, -17.82)))), vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(487.425))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(_GLF_IDENTITY(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(3.1, 96.02, -96.37, -5.0, -23.80, 51.74, 7.6, 695.943, -94.09, 3404.9174, 711.105, -6100.1238, -2.7, 7.5, -105.680, 26.56)) : _GLF_IDENTITY(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(cos(0.0), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0))))))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, determinant(mat4(cos(0.0), _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), min(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0))), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(349.277, 78.34, 8.6, -3341.4937, 77.68, -1.6, -7.0, 35.07)) : mat4x2(0.0, determinant(mat4(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-717.437)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), abs(0.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), sqrt(0.0), determinant(mat2(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0))), (1.0) / 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-50.47))), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec2(-1.1, -6267.1215), injectionSwitch)) : 1.0)), 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-9.3), min(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3)))), bool(false)))), float(_GLF_FUZZED(6.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (true ? 0.0 : _GLF_FUZZED((+ (-15.37 + 9.1)))))))), mat2(1.0) * (vec2(vec3(injectionSwitch, tan(0.0)))))).x)) > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true, false)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true, _GLF_IDENTITY(false, ! (! (false))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3207.5481))), injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0))) : _GLF_FUZZED(-9.6))), tan(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? -7011.4678 : -8.1))), bool(false))))), clamp(float(mat3x4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat2(0.0, 1.0, 0.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, cos(0.0), 0.0))) : _GLF_FUZZED(-9.6))), tan(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? -7011.4678 : -8.1))), bool(false))))), clamp(float(mat3x4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, float(mat4(0.0, sqrt(0.0), 0.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0))), 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, log(1.0), length(vec3(0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))))) * _GLF_ONE(1.0, injectionSwitch.y))))));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size))) >> 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size))) >> 0u, 0u ^ (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size))) >> 0u)), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size))) >> 0u, (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size))) >> 0u) | 0u))))) << 0u))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY(false, (false) && true)))))))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 1, 1))), 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) - 0)) | (~ (~ (1)))))); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), true, false))));
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))) | (int(4))), int(4))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ (0 & -1967))) - 0, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ (0 & -1967))) - 0, max((_GLF_IDENTITY(1, (1) ^ (0 & -1967))) - 0, (_GLF_IDENTITY(1, (1) ^ (0 & -1967))) - 0))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ (0 & -1967))) - 0, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ (0 & -1967))) - 0, max((_GLF_IDENTITY(1, (1) ^ (0 & -1967))) - 0, (_GLF_IDENTITY(1, (1) ^ (0 & -1967))) - 0)))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ (0 & -1967))) - 0, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ (0 & -1967))) - 0, max((_GLF_IDENTITY(1, (1) ^ (0 & -1967))) - 0, (_GLF_IDENTITY(1, (1) ^ (0 & -1967))) - 0))))))) << 0))))); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-5.5)), bool(false)))))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
               barrier();
              }
             return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
              return;
            }
           else
            {
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, true)))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))));
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       int i = 0;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           atomicStore(checker[virtual_gid], read, 4, 64, 4);
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)) + (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0, 1.0, 1.0), mat4x2(mat4x2(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(4.3) : float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0, 1.0, 1.0), mat4x2(mat4x2(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, cos(sqrt(0.0)), 0.0, 1.0, 1.0))))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
        barrier();
      }
     else
      {
       atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), _GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0))))) >> (0 | 0))))), 64, 4);
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), bool(bool(! (bool(bvec2(false, true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)))), false || (bool((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))))), false || (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)))), false || (bool((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)))))))))))))
          barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))) || false), (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x), max(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), mix(float(_GLF_FUZZED(6.2)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-8255.0043)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-8255.0043)), bool(false))), mix(float(_GLF_FUZZED(277.025)), float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-8255.0043)), bool(false)))), bool(true)))) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))) - 0.0), injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(log(575.883)) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(log(575.883)) : injectionSwitch.y, float(vec3(false ? _GLF_FUZZED(log(575.883)) : injectionSwitch.y, sqrt(1.0), 0.0)))) - 0.0)))))));
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)).y), true, false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false)))), false, false, true))))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-810.417)))) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-810.417)))) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-810.417)))) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-810.417)))) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), true, true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) && true)), true && (! (_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) && true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), min(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, length(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0))).x > injectionSwitch.y))))
                break;
               barrier();
              }
            }
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! _GLF_IDENTITY((false), bool(bool((false))))))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
