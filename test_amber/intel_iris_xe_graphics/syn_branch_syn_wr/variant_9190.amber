#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)))))))).x > injectionSwitch.y)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), true && (bool(bvec4(true, true, false, false))))))), false)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(bool(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_IDENTITY(true, (true) && true)))), (! (bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_IDENTITY(true, (true) && true))))) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), ! (! (true && (false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(811.697)), float(injectionSwitch.y), bool(true)))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u))))), (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), 0u | (_GLF_FUZZED(_GLF_IDENTITY((-- subgroup_id), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((-- subgroup_id)), (((-- subgroup_id))) ^ 0u), (_GLF_IDENTITY(~ ((-- subgroup_id)), ~ (~ (~ ((-- subgroup_id)))))) * 1u))))))) << 0u, 0u + ((_GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), 0u | (_GLF_FUZZED(_GLF_IDENTITY((-- subgroup_id), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((-- subgroup_id)), (((-- subgroup_id))) ^ 0u), 0u | (_GLF_IDENTITY(((-- subgroup_id)), (((-- subgroup_id))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((-- subgroup_id)), (~ ((-- subgroup_id))) >> (75168u & 0u)), ~ (~ (~ ((-- subgroup_id)))))) * 1u))))))) << 0u))))), 0u), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), uvec3(0u, 0u, 0u) + ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)))), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))))), (~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)), (true ? _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), max(~ (~ (0u)), ~ (~ (0u))))) : _GLF_FUZZED((-- subgroup_id)))), 0u)))) : _GLF_FUZZED(uvec3(84420u, 134578u, 41331u))))) / uvec3(1u, 1u, 1u))), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))))), (~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)), (true ? _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED((-- subgroup_id)) : _GLF_FUZZED(subgroup_id))), ~ (~ (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))))))), 0u)))) : _GLF_FUZZED(uvec3(84420u, 134578u, 41331u))))) / uvec3(1u, 1u, 1u)))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), uvec3(0u, 0u, 0u) + ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)))), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))))), (~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)), (true ? _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), max(~ _GLF_IDENTITY((~ (0u)), clamp((~ (0u)), (~ (0u)), (~ (0u)))), ~ (~ (0u))))) : _GLF_FUZZED((-- subgroup_id)), 0u ^ (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), max(~ _GLF_IDENTITY((~ (0u)), clamp((~ (0u)), (~ (0u)), (~ (0u)))), ~ (~ (0u))))) : _GLF_FUZZED((-- subgroup_id)))))), 0u)))) : _GLF_FUZZED(uvec3(84420u, 134578u, 41331u))))) / uvec3(1u, 1u, 1u))), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))))), (~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)), (true ? _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)), uvec3(0u, 0u, 0u) | ((uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED((-- subgroup_id)) : _GLF_FUZZED(subgroup_id))), ~ (~ (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))))))), 0u)))) : _GLF_FUZZED(uvec3(84420u, 134578u, 41331u))))) / uvec3(1u, 1u, 1u))))))) / uvec3(1u, 1u, 1u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * ((_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(5u), ~ (~ (uvec3(5u)))))), uvec3(5u)), (uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) - uvec3(0u, 0u, 0u))) | (uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) ^ 0u)), uvec3(5u))))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))), (uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)), 0u), ~ (~ (uvec4(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)), 0u)))))))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) << (0u & 63500u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-- subgroup_id, 0u | (-- subgroup_id))), (_GLF_IDENTITY((-- subgroup_id), ((-- subgroup_id)) + 0u)) / 1u)), (_GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u)))))) | (_GLF_FUZZED((-- subgroup_id))))) << 0u))), 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), (_GLF_FUZZED((-- subgroup_id))) / 1u))), 0u)), _GLF_IDENTITY((~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(39650u) : ~ (0u))))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, 1u, 1u), ((~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * ((uvec3(_GLF_IDENTITY(1u, (0u | 0u) ^ (1u)), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), 0u | (_GLF_FUZZED((-- subgroup_id))))) << 0u))), 0u), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ 0u), (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))))), (~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(62102u, 20456u, 6025u)))), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), 0u, 0u))) | ((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ 0u), (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))))), (~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(62102u, 20456u, 6025u)))), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), 0u, 0u))) | ((_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u))))))), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | (0u))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | (0u))), 1u * (~ (_GLF_IDENTITY(0u, (0u) | (0u))))) : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), ((0u)) | ((0u)))), _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, 1u, 1u)))), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, 1u, 1u))))) + uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << (uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), (false ? _GLF_FUZZED(uvec3(104859u, 76021u, 193870u)) : uvec3(5u))), uvec3(5u)))) << uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))), (uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-- subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((-- subgroup_id), ((-- subgroup_id)) * 1u), ((-- subgroup_id)) + 0u)), ((_GLF_IDENTITY((-- subgroup_id), ((-- subgroup_id)) + 0u))) - 0u) / 1u)), (_GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), 0u | _GLF_IDENTITY((_GLF_FUZZED((-- subgroup_id))), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))))) ^ ((_GLF_FUZZED((-- subgroup_id))))))) << 0u))), 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY((~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / 1u), 1u), ((~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))), (1u) / 1u), 1u)) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)), uvec3(0u, 0u, 0u) + (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))))), ((~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)))) + uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * ((uvec3(1u, _GLF_IDENTITY(1u, (1u) / 1u), 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec2(5u, 1u), max(uvec2(5u, 1u), uvec2(5u, 1u)))))), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (5u) - 0u))))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), 0u | (_GLF_FUZZED((-- subgroup_id))))) << 0u))), 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), _GLF_IDENTITY(~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)))), ~ (~ (~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)))))))), (~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | ((uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))))) / uvec3(1u, 1u, 1u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), 0.0))).x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), (true ? _GLF_FUZZED((-- subgroup_id)) : _GLF_FUZZED(subgroup_id))))), 0u))))), (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, 1u, 1u)))))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << (uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | 0u))), 0u) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (uvec3(5u)) | uvec3(0u, 0u, 0u))))))), (uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-- subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-- subgroup_id, (_GLF_IDENTITY(-- subgroup_id, 0u ^ (_GLF_IDENTITY(-- subgroup_id, (true ? -- subgroup_id : _GLF_FUZZED(subgroup_local_id)))))) | 0u)), ((-- subgroup_id)) * 1u), (_GLF_IDENTITY((_GLF_IDENTITY(-- subgroup_id, (_GLF_IDENTITY(-- subgroup_id, 0u ^ (_GLF_IDENTITY(-- subgroup_id, (true ? -- subgroup_id : _GLF_FUZZED(subgroup_local_id)))))) | 0u)), ((-- subgroup_id)) * 1u)) >> 0u), ((-- subgroup_id)) + 0u)), ((_GLF_IDENTITY((-- subgroup_id), ((-- subgroup_id)) + _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u))))))) - 0u) / 1u)), (_GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), 0u | _GLF_IDENTITY((_GLF_FUZZED((-- subgroup_id))), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))))) ^ ((_GLF_FUZZED((-- subgroup_id))))))) << 0u))), 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), _GLF_IDENTITY((~ (uvec3(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / 1u), 1u), (_GLF_IDENTITY((~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))), ((~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u)))) + uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), _GLF_IDENTITY((~ (uvec3(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / 1u), 1u), (_GLF_IDENTITY((~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))), ((~ (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((_GLF_IDENTITY(-- subgroup_id, (-- subgroup_id) >> (1u ^ 1u)))))), 0u)))) + uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u)))) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))) ^ (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * ((uvec3(1u, _GLF_IDENTITY(1u, (1u) / 1u), 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (5u) - 0u)))))))))))), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), 0u | (_GLF_FUZZED((-- subgroup_id))))) << 0u))), 0u), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((_GLF_IDENTITY(-- subgroup_id, _GLF_IDENTITY((-- subgroup_id), ~ (~ (_GLF_IDENTITY((-- subgroup_id), ((-- subgroup_id)) >> 0u)))) >> 0u))))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), (~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)), ~ (~ (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))))))), 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))))) / 1u)) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) - 0u), 0u))))) / uvec3(1u, 1u, 1u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((_GLF_IDENTITY(-- subgroup_id, _GLF_IDENTITY((-- subgroup_id), ~ (~ (_GLF_IDENTITY((-- subgroup_id), ((-- subgroup_id)) >> 0u)))) >> 0u))))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), (~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)), ~ (~ (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))))))), 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))))) / 1u)) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) - 0u), 0u))))) / uvec3(1u, 1u, 1u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, 0u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), clamp((gl_NumWorkGroups) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), (gl_NumWorkGroups) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), (gl_NumWorkGroups) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), max(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(uvec3(5u), uvec3(5u)))))), 1u)), (uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), max(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), min(_GLF_IDENTITY(uvec3(5u), (true ? uvec3(5u) : _GLF_FUZZED(uvec3(199753u, 153278u, 119874u)))), uvec3(5u))), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(uvec3(5u), uvec3(5u)))))), 1u))) >> uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), min(uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-- subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((-- subgroup_id), (_GLF_IDENTITY((-- subgroup_id), (true ? (-- subgroup_id) : _GLF_FUZZED(subgroup_local_id)))) * 1u), ((-- subgroup_id)) + 0u)), ((_GLF_IDENTITY((-- subgroup_id), ((-- subgroup_id)) + 0u))) - 0u) / 1u)), (_GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), 0u | _GLF_IDENTITY((_GLF_FUZZED((-- subgroup_id))), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))))) ^ ((_GLF_FUZZED((-- subgroup_id))))))) << 0u))), 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (_GLF_IDENTITY(~ (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))), ~ (_GLF_IDENTITY(~ (~ (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)))), (true ? ~ (~ (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)))) : _GLF_FUZZED(uvec3(163838u, 53671u, 46557u)))))))), _GLF_IDENTITY((~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))), ((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))) << 0u)), 0u))) / uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, (_GLF_IDENTITY((1u) / 1u, ~ (~ (_GLF_IDENTITY((1u) / 1u, min((1u) / 1u, (1u) / 1u)))))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 1u), _GLF_IDENTITY((_GLF_IDENTITY((~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))), ((~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))), (true ? (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))) : _GLF_FUZZED(194860u)))), 0u)))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)), ~ (~ ((_GLF_IDENTITY((~ (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))), ((~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))), (true ? (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))) - 0u) : _GLF_FUZZED((-- subgroup_id))) : _GLF_FUZZED(194860u)))), 0u)))) + uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))))) | uvec3(0u, 0u, 0u))))) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * ((uvec3(1u, _GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, (1u) * 1u)), 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - 0u, clamp((5u) - 0u, (5u) - 0u, (5u) - 0u)))))))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), 0u | (_GLF_FUZZED((-- subgroup_id))))) << 0u))), 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((_GLF_IDENTITY(-- subgroup_id, _GLF_IDENTITY((-- subgroup_id), ~ (~ (_GLF_IDENTITY((-- subgroup_id), ((-- subgroup_id)) >> 0u)))) >> 0u))))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), (~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)), ~ (~ (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))))))), 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))))) / 1u)) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) - 0u), 0u))))) / uvec3(1u, 1u, 1u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, 1u, 1u)))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), 0u | (_GLF_FUZZED((-- subgroup_id))))) << 0u))), 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((_GLF_IDENTITY(-- subgroup_id, _GLF_IDENTITY((-- subgroup_id), ~ (~ (_GLF_IDENTITY((-- subgroup_id), ((-- subgroup_id)) >> 0u)))) >> 0u))))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), (~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)), ~ (~ (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))))))), 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))))) / 1u)) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) - 0u), 0u)), ((uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))))) / 1u)) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) - 0u), 0u))) << uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(smoothstep(-2698.1440, 28.12, 0.2)) : 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u))))), (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u))))) | (_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(0u, 0u ^ (0u)))), ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))) / uvec3(1u, 1u, 1u)))))))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), clamp((gl_NumWorkGroups) << (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, (0u) << 0u))), 0u, 0u)), (gl_NumWorkGroups) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), (gl_NumWorkGroups) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), max(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(uvec3(5u), uvec3(5u)))))), 1u)), (uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), max(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(uvec3(5u), uvec3(5u)))))), 1u))) >> uvec3(0u, 0u, 0u))))))), (uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-- subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((-- subgroup_id), (_GLF_IDENTITY((-- subgroup_id), (true ? (-- subgroup_id) : _GLF_FUZZED(subgroup_local_id)))) * 1u), ((-- subgroup_id)) + 0u)), ((_GLF_IDENTITY((-- subgroup_id), ((-- subgroup_id)) + 0u))) - 0u) / 1u)), (_GLF_IDENTITY(_GLF_FUZZED((-- subgroup_id)), 0u | _GLF_IDENTITY((_GLF_FUZZED((-- subgroup_id))), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY((uint(5u)) | (uint(5u)), _GLF_IDENTITY(uint(uvec4((uint(5u)) | (uint(5u)), 1u, 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(_GLF_IDENTITY(uint(uint(uvec4((uint(5u)) | (uint(5u)), 1u, 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))), uint(uvec2(uint(uint(uvec4((uint(5u)) | (uint(5u)), 1u, 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))), 1u))))))))), uint(uvec3((~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY((uint(5u)) | (uint(5u)), _GLF_IDENTITY(uint(uvec4((uint(5u)) | (uint(5u)), 1u, 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(_GLF_IDENTITY(uint(uint(uvec4((uint(5u)) | (uint(5u)), 1u, 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))), uint(uvec2(uint(uint(uvec4((uint(5u)) | (uint(5u)), 1u, 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))), 1u))))))))), 1u, 0u)))))) ^ ((_GLF_FUZZED((-- subgroup_id))))))) << 0u))), 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)), ~ (_GLF_IDENTITY(~ (~ (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED((-- subgroup_id)), 0u | (true ? 0u : _GLF_FUZZED((-- subgroup_id)))))), 0u))), ~ (_GLF_IDENTITY(~ (~ (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)))), (_GLF_IDENTITY(true ? ~ (~ (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)))) : _GLF_FUZZED(uvec3(163838u, 53671u, 46557u)), uvec3(0u, 0u, 0u) + (true ? ~ (~ (~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((-- subgroup_id)))), 0u)))) : _GLF_FUZZED(uvec3(163838u, 53671u, 46557u)))))))))), _GLF_IDENTITY((~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))), ((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))) << 0u), (true ? _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))), ((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))) << 0u) : _GLF_FUZZED(subgroup_local_id)))), 0u))) / uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, (_GLF_IDENTITY((1u) / 1u, ~ (~ (_GLF_IDENTITY((1u) / 1u, min((1u) / 1u, (1u) / 1u)))))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 1u), _GLF_IDENTITY((_GLF_IDENTITY((~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))), ((~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))), (true ? (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))) : _GLF_FUZZED(194860u)))), 0u)))) + uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)), ~ (~ ((_GLF_IDENTITY((~ (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id)))), 0u))), ((~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))), (true ? (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((-- subgroup_id))) : _GLF_FUZZED(194860u)))), 0u)))) + uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))))) | uvec3(0u, 0u, 0u))))) ^ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * ((uvec3(1u, _GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, (1u) * 1u)), 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - 0u, clamp((5u) - 0u, (5u) - 0u, (5u) - 0u)))))))))))))))))))))).x) - uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), false || (true && ((false))))) && _GLF_IDENTITY(true, true && (true)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), false || (true && ((false))))) && _GLF_IDENTITY(true, true && (true)))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))), 1u, 0u))) * workgroup_id) | (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(workgroup_base + subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> 0), 1))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 0u | (_GLF_FUZZED(virtual_gid))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + _GLF_IDENTITY(1, (1) | (1))))))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true), false, true, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY((! (false)) && true, ! (! ((! (false)) && true))))))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(55897u))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))) > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))), bool(bvec2(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec2(-35.08, -6.5))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec2(-35.08, -6.5))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))))))))))))), true))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))), bool(bvec2(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec2(-35.08, -6.5))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec2(-35.08, -6.5))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))))))))))))), true))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))), bool(bvec2(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec2(-35.08, -6.5))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec2(-35.08, -6.5))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))))))))))))), true))))), false))), bvec2(bvec4(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))), bool(bvec2(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec2(-35.08, -6.5))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec2(-35.08, -6.5))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))))))))))))), true))))), false))), true, false)))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), vec2(mat2x3(vec2(injectionSwitch.y, 0.0), 1.0, 1.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(1.1) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), vec2(mat2x3(vec2(injectionSwitch.y, 0.0), 1.0, 1.0, 1.0, 0.0)))), min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), vec2(mat2x3(vec2(injectionSwitch.y, 0.0), 1.0, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), vec2(mat2x3(vec2(injectionSwitch.y, 0.0), 1.0, 1.0, 1.0, 0.0)))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6568.7005), (_GLF_IDENTITY(false ? _GLF_FUZZED(-85.69) : _GLF_FUZZED(_GLF_IDENTITY(6568.7005, mix(float(_GLF_FUZZED(60.72)), float(6568.7005), bool(true)))), clamp(false ? _GLF_FUZZED(-85.69) : _GLF_FUZZED(6568.7005), false ? _GLF_FUZZED(-85.69) : _GLF_FUZZED(6568.7005), false ? _GLF_FUZZED(-85.69) : _GLF_FUZZED(6568.7005)))))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), float(vec3(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED((- -9.0))), float(float(injectionSwitch.x)), bool(true))), 0.0, 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0))), bool(true))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))), false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false, false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.06)), vec2(_GLF_FUZZED(-5.3), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((3.8 + injectionSwitch)) : injectionSwitch)))[1]), bvec2(false, true))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.06)), vec2(_GLF_FUZZED(-5.3), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((3.8 + injectionSwitch)) : injectionSwitch)))[1]), bvec2(false, true))).x, 1.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.06)), vec2(_GLF_FUZZED(-5.3), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((3.8 + injectionSwitch)) : injectionSwitch)))[1]), bvec2(false, true))).x, 1.0, 1.0, 1.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.06)), vec2(_GLF_FUZZED(-5.3), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((3.8 + injectionSwitch)) : injectionSwitch)))[1]), bvec2(false, true))).x, 1.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.06)), vec2(_GLF_FUZZED(-5.3), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((3.8 + injectionSwitch)) : injectionSwitch)))[1]), bvec2(false, true))).x, 1.0, 1.0, 1.0, 0.0, 0.0)))))) + 0.0)) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)))), clamp(vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0), (true ? _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, tan(0.0), sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), sin(sqrt(0.0)), 0.0, 1.0, cos(0.0), abs(0.0)))), tan(0.0), 0.0, 0.0), (true ? mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0) : _GLF_FUZZED(mat4(-0.2, -38.45, -2.7, 1.3, -228.047, 17.62, 4132.0501, 71.87, -562.250, 496.693, -9.5, -9.5, -3514.3683, 9.8, 952.664, -906.481)))) : _GLF_FUZZED(mat4(-7.2, 2.5, -3410.0547, -3633.3990, -1.6, 117.186, -7397.7952, -12.27, 4358.2922, 4.9, 3.9, 8.4, 7.9, 6.1, -1.6, 9.0))))))), vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)))), vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)))))))))).y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
