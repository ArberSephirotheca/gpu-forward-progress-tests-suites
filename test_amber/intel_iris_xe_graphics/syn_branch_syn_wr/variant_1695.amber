#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! _GLF_IDENTITY((false), ((false)) && true)))) && true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec2((false), false)))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true && (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) && true)) || false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false))))) ? injectionSwitch.x : _GLF_FUZZED(intBitsToFloat(-79092)))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | _GLF_IDENTITY(0u, 1u * (0u)))) | ((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) | (0u | 0u)), gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), true, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))) > injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))))))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.7))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.7))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.7))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.7))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.7)))) - 0.0))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true)), true, true, true)))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, (false) || false))), false)))), false, false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))), (false) || false))), false)))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, (false) || false))), false)))), false, false, true))))), false))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, (false) || false))), false)))), false, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, (false) || false))), false)))), false, false, true)), false)))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), min(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))) >> 0u, 0u | ((workgroup_size) >> 0u))))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)), (min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | (min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)))))) + 0u) * workgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)) >> 0u)) - 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id, max(false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id, false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.6)))), bool(true))), injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.6)))), bool(true))), injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.6)))), bool(true))), injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))))) | (workgroup_size)) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.6)))), bool(true))), injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))) | (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))) * workgroup_id) | (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.6)))), bool(true))), injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))) | (workgroup_size)) * workgroup_id)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id, max(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)) >> 0u) ^ 0u)) >> 0u), false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)))))) : _GLF_FUZZED(workgroup_id)));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u | (0u ^ 0u))), _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 1u))))) + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) : (true ? subgroup_size : _GLF_FUZZED(workgroup_id)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id))))), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) * (1u & 1u)))) : (true ? subgroup_size : _GLF_FUZZED(workgroup_id)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ _GLF_IDENTITY(0u, 0u | (0u))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) : (true ? subgroup_size : _GLF_FUZZED(workgroup_id)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id))))), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) * (1u & 1u)))) : (true ? subgroup_size : _GLF_FUZZED(workgroup_id)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ _GLF_IDENTITY(0u, 0u | (0u))), _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) : (true ? subgroup_size : _GLF_FUZZED(workgroup_id)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id))))), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) * (1u & 1u)))) : (true ? subgroup_size : _GLF_FUZZED(workgroup_id)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ _GLF_IDENTITY(0u, 0u | (0u)))))))))) / 1u) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) << 0u));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (0u) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u), (subgroup_id)))) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u), (subgroup_id)))) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u), (subgroup_id)))) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u)))))) | 0u, (_GLF_IDENTITY(1u | 0u, (false ? _GLF_FUZZED((++ num_workgroup)) : 1u | 0u))) >> 0u)), (false ? _GLF_FUZZED((145776u + workgroup_size)) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * (1u | 0u), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY((subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) / 1u) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ (_GLF_IDENTITY((0u), 0u + ((0u))))) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(subgroup_id)))))) * (_GLF_IDENTITY(1u | 0u, min(1u | 0u, 1u | 0u))) : _GLF_FUZZED(workgroup_size))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))))))) << 0u, 0u + (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))))))) << 0u, uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))))))) << 0u, 0u, 1u), min(uvec3((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))))))) << 0u, 0u, 1u), uvec3((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))))))) << 0u, 0u, 1u)))))))) * (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, (false ? _GLF_FUZZED((++ num_workgroup)) : 1u | 0u))) >> 0u)), (false ? _GLF_FUZZED((145776u + workgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x))))), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x)))))) / 1u) * (1u | 0u), (true ? (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * (1u | 0u) : _GLF_FUZZED(workgroup_size)))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), 0u | (_GLF_IDENTITY(0u, 0u + (0u)))))) ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-1306.0505)), bool(false))))))), subgroup_size), _GLF_IDENTITY((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)), 1u * ((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)))))) * (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) << 0u))), (_GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), clamp(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u))), ~ (~ (_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), (false ? _GLF_FUZZED(subgroup_size) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u)))))))) ^ 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-1306.0505)), bool(false))))))), subgroup_size), _GLF_IDENTITY((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)), 1u * ((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)))))) * (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) << 0u))), (_GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), clamp(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u))), ~ (~ (_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), (false ? _GLF_FUZZED(subgroup_size) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u)))))))) ^ 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-1306.0505)), bool(false))))))), subgroup_size), _GLF_IDENTITY((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)), 1u * ((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)))))) * (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) << 0u))), (_GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), clamp(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u))), ~ (~ (_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), (false ? _GLF_FUZZED(subgroup_size) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u)))))))) ^ 0u)))), max((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-1306.0505)), bool(false))))))), subgroup_size), _GLF_IDENTITY((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)), 1u * ((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)))))) * (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) << 0u))), (_GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), clamp(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u))), ~ (~ (_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), (false ? _GLF_FUZZED(subgroup_size) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u)))))))) ^ 0u)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-1306.0505)), bool(false))))))), subgroup_size), _GLF_IDENTITY((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)), 1u * ((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)))))) * (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) << 0u))), (_GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), clamp(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u))), ~ (~ (_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), (false ? _GLF_FUZZED(subgroup_size) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u)))))))) ^ 0u)))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-1306.0505)), bool(false))))))), subgroup_size), _GLF_IDENTITY((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)), 1u * ((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)))))) * (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) << 0u))), (_GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), clamp(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u))), ~ (~ (_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), (false ? _GLF_FUZZED(subgroup_size) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u)))))))) ^ 0u)))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-1306.0505)), bool(false))))))), subgroup_size), _GLF_IDENTITY((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)), 1u * ((min(subgroup_size, subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u)))))) * (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) << 0u))), (_GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), clamp(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(1u, 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u))), ~ (~ (_GLF_IDENTITY(uvec3(1u, (_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), (false ? _GLF_FUZZED(subgroup_size) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))))))), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), min(uint(uvec3(1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 0u, 0u), ~ (~ (uvec3(1u, 0u, 0u))))) + uvec3(0u, 0u, 0u))))))) >> 0u), 1u))) << 0u), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))), 0u)))))))) ^ 0u))))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u | (max(subgroup_size, subgroup_size)))), 0u ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (0u | _GLF_IDENTITY(0u, (0u) | 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) | ((subgroup_size) << 0u))) / 1u)), subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), subgroup_size)) << 0u)) * (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) >> (0u | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), uint(1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) - 0u), (_GLF_IDENTITY(uint(1u), uint(1u))))) | (_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(1u, 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) / uvec4(1u, 1u, 1u, 1u)))))))))))), 0u), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u, clamp((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u))))), min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) >> (0u | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), uint(1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) - 0u), (_GLF_IDENTITY(uint(1u), uint(1u))))) | (_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(1u, 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) / uvec4(1u, 1u, 1u, 1u)))))))))))), 0u), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u, clamp((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) >> (0u | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), uint(1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) - 0u), (_GLF_IDENTITY(uint(1u), uint(1u))))) | (_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(1u, 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) / uvec4(1u, 1u, 1u, 1u)))))))))))), 0u), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u, clamp((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u))))), (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u), max(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) >> (0u | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), uint(1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) - 0u), (_GLF_IDENTITY(uint(1u), uint(1u))))) | (_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(1u, 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) / uvec4(1u, 1u, 1u, 1u)))))))))))), 0u), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u, clamp((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) << 0u))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u)))))) | (1u ^ 1u)))) ^ 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED((workgroup_size)))), _GLF_IDENTITY(0u, max(0u, 0u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), uint(1u))))) >> uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(6956u, 150272u, 185270u))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), clamp(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u), uint(1u)))), (uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) | (_GLF_IDENTITY(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> uvec3(0u, 0u, 0u)))))), (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u + (1u)))), (false ? _GLF_FUZZED(subgroup_id) : 1u))), clamp(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))), uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | (1u)))), (false ? _GLF_FUZZED(subgroup_id) : 1u))))), uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u))) | (1u)))))), (uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 1u)))), uint(1u))))) >> uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 1u)), (uint(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 1u))) << 0u)), 0u)) : _GLF_FUZZED(uvec3(6956u, 150272u, 185270u))))), uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_id)))) >> 0u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (uvec3(subgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_id) : ~ (1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_id) : ~ (1u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (~ (1u)) + 0u), (false ? _GLF_FUZZED(workgroup_id) : ~ (1u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_id) : ~ (1u)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) >> 0u)), (false ? _GLF_FUZZED(workgroup_id) : ~ (1u))))) + 0u)))) >> (1u ^ 1u)))))))) >> uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(6956u, 150272u, 185270u))))))))), (min(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) << 0u)) * (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))), (uint(_GLF_IDENTITY(1u, (1u) + 0u))) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) / 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))), (uint(_GLF_IDENTITY(1u, (1u) + 0u))) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) / 1u, ~ (~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))), (uint(_GLF_IDENTITY(1u, (1u) + 0u))) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) / 1u)))), 1u * (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))), (uint(_GLF_IDENTITY(1u, (1u) + 0u))) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) / 1u, ~ (~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))), (uint(_GLF_IDENTITY(1u, (1u) + 0u))) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) / 1u))))))) / 1u))))))))), uint(1u))), 0u), max(uvec3(1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, 0u ^ (1u))), uint(1u))), ((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec3(uint(1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (true ? uvec3(uint(1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u) : _GLF_FUZZED((uvec3(198523u, 138259u, 195425u) * subgroup_size))))))))) << 0u)) | 0u) | (_GLF_IDENTITY(uint(1u), uint(1u))))), 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) / 1u)) | (_GLF_IDENTITY((1u), min((1u), (1u)))))))), 0u | (~ (1u))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) >> 0u), 1u))) << 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) >> 0u), 1u))) << 0u))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u))))) ^ 0u))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(1, min(1, 1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(uint(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-9428.5529)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(true, ! (! (true)))))), 1.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0))))))) >> 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(1, min(1, 1))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(uint(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-9428.5529)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, abs(1.0), 0.0, 0.0, abs(0.0)))), 0.0, 1.0, abs(1.0), 1.0))))))) >> 0u))) / 1u), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4)))), _GLF_IDENTITY(max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4))), min(max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4))), max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4))))))) | (_GLF_IDENTITY(4, (4) | (4)))), _GLF_IDENTITY(1, (1) | (1)), (1 | 0), (0 ^ 1)))), 64, _GLF_IDENTITY(0, (0) + 0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, true)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, true)))), true)))))))))), _GLF_IDENTITY(true, (true) && true)), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true)))), true, true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, ! (! (_GLF_IDENTITY((! (false)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))), ! (_GLF_IDENTITY(! ((! (false)) && true), (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), false || (bool(bvec2((! (false)), true))))) && true)) && true))))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) && true), false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) && true), false)))))), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true)))), true, true))), true, true)))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false)))))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, ! (! (false)))))) && true)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((! (false))) || false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false))), true)))), true, true))), true)))), true, true)))), true), true))))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(_GLF_FUZZED(-9.1), min(_GLF_IDENTITY(_GLF_FUZZED(-9.1), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_FUZZED(639.828)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(-9.1), min(_GLF_IDENTITY(_GLF_FUZZED(-9.1), float(vec3(_GLF_FUZZED(-9.1), 1.0, 1.0))), _GLF_FUZZED(-9.1)))))), vec2(_GLF_FUZZED(-6447.5014), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0)))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), max(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))))), float(_GLF_FUZZED(449.459)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(abs(0.0), log(1.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(abs(0.0), log(1.0), 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(abs(0.0), log(1.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(abs(0.0), log(1.0), 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), transpose(transpose(transpose(mat4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(abs(0.0), log(1.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(abs(0.0), log(1.0), 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))))))).y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-60.05)), bool(false))) > injectionSwitch.y)), true)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), (injectionSwitch.x > injectionSwitch.y)), true))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) && true))), false || (bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), ! (! ((! ((! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))))), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-23.24)))))) : _GLF_FUZZED(-9.3))) > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)) && true))))))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, false)))), false)))) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))) || false), true, false, false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-44.99))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))))))))
    return;
   int i = 0;
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), 64)), 4);
  }
 else
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, (64) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(23946))) | _GLF_IDENTITY(0, min(0, 0)), clamp(0 | 0, 0 | 0, 0 | _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-43200))), int(ivec4(0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) >> 0), 0, 1))))))), 64), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(int(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) / 1)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) / 1), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) / 1), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) / 1)))), 1, 1)))), (true ? int(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) / 1), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) / 1), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) / 1)))), 1, 1)))) : _GLF_FUZZED(-89687))), int(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) / 1)), int(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) / 1)))))), ~ (~ (64))), _GLF_IDENTITY(64, (64) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(23946))) | _GLF_IDENTITY(0, min(0, 0)), clamp(0 | 0, 0 | 0, 0 | 0)))), 64)) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, (64) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(23946))) | _GLF_IDENTITY(0, min(0, 0)), clamp(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, min(0, 0)))) | 0, 0 | 0, 0 | _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 1 * (0)), 0)))))), 64), (clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, (64) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(23946))) | _GLF_IDENTITY(0, min(0, 0)), clamp(0 | 0, 0 | 0, 0 | 0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(51939, -84733, 57673)[2], (ivec3(51939, -84733, 57673)[2]) << 0)) : (_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(23946))) | _GLF_IDENTITY(0, min(0, 0)), clamp(0 | 0, 0 | 0, _GLF_IDENTITY(0, (0) + 0) | 0)))))), 64)) | 0)))), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
