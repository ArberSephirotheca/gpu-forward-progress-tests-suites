#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || _GLF_IDENTITY((false), false || ((false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || (_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false))), (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.9) : injectionSwitch.y)))), bool(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(31.48, 220.269)) : injectionSwitch)).y)), (true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))) / vec2(1.0, 1.0))).x > injectionSwitch.y))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), bool(bool(true && ((injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, log(1.0), 0.0, 1.0))))), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acos(vec2(-9898.1856, 3327.3807))))).x > injectionSwitch.y))) || false)))), bool(bvec3((_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, log(1.0), 0.0, 1.0))))), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)))), false, true))) || false)))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(44.82)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false), (true && ((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)))))), (_GLF_IDENTITY(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4974.6548)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(false, true && (false)), true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6859.1990))) < injectionSwitch.y)))))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, log(1.0), 0.0, 1.0))))), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))) || false)))), bool(bvec3((_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, log(1.0), 0.0, 1.0))))), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), false, true))) || false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(true && ((injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), (true && ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, log(1.0), 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, log(1.0), 0.0, 1.0)))) - 0.0))), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, log(1.0), 0.0, 1.0))))), ! (! (true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, log(1.0), 0.0, 1.0)))))))), true && (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)))), false, true))) || false)))), false, false, true))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), min(_GLF_IDENTITY((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), max((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), ((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))), (injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0)))))).y)), false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), min(_GLF_IDENTITY((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), max((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), ((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))), (injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0)))))).y)), false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), min(_GLF_IDENTITY((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), max((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), ((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))), (injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0)))))).y)), false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), min(_GLF_IDENTITY((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), max((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0))), ((injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))), (injectionSwitch) - tan(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - vec2(0.0, 0.0)))))).y)), false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true)))))), false, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(144641u), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(144641u), (_GLF_FUZZED(144641u)) << 0u), 0u))) : gl_WorkGroupSize.x, min(false ? _GLF_IDENTITY(_GLF_FUZZED(144641u), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(144641u), (_GLF_FUZZED(144641u)) << 0u), 0u))) : gl_WorkGroupSize.x, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(144641u, min(144641u, 144641u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_FUZZED(144641u), _GLF_IDENTITY((_GLF_FUZZED(144641u)) << 0u, (0u ^ 0u) ^ ((_GLF_FUZZED(144641u)) << 0u))), 0u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_FUZZED(144641u), (_GLF_FUZZED(144641u)) << 0u), 0u), _GLF_IDENTITY(uvec2(uvec3(uvec2(_GLF_IDENTITY(_GLF_FUZZED(144641u), (_GLF_FUZZED(144641u)) << 0u), 0u), 1u)), (uvec2(uvec3(uvec2(_GLF_IDENTITY(_GLF_FUZZED(144641u), (_GLF_FUZZED(144641u)) << 0u), 0u), 1u))) | uvec2(0u, 0u))), uvec2(_GLF_IDENTITY(_GLF_FUZZED(144641u), (_GLF_FUZZED(144641u)) << 0u), 0u))))) : gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(144641u, min(144641u, 144641u))), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(144641u), (_GLF_FUZZED(144641u)) << 0u), 0u))) : gl_WorkGroupSize.x, 0u + (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(144641u, min(144641u, 144641u))), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(144641u), (_GLF_FUZZED(144641u)) << 0u), 0u))) : gl_WorkGroupSize.x)), false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(144641u, min(144641u, 144641u))), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(144641u), (_GLF_FUZZED(144641u)) << 0u), 0u))) : gl_WorkGroupSize.x, false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(144641u, min(144641u, 144641u))), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(144641u), (_GLF_FUZZED(144641u)) << 0u), 0u))) : gl_WorkGroupSize.x))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(mod(-6081.9243, 5.4)) : injectionSwitch.y), min(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-6081.9243, 5.4)) : injectionSwitch.y), (false ? _GLF_FUZZED(40.41) : (false ? _GLF_FUZZED(mod(-6081.9243, 5.4)) : injectionSwitch.y))), (false ? _GLF_FUZZED(mod(-6081.9243, 5.4)) : injectionSwitch.y)))), injectionSwitch.y)))))) && true)))))))), false || ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(mod(-6081.9243, 5.4)) : injectionSwitch.y), min(_GLF_IDENTITY((false ? _GLF_FUZZED(mod(-6081.9243, 5.4)) : injectionSwitch.y), (false ? _GLF_FUZZED(40.41) : (false ? _GLF_FUZZED(mod(-6081.9243, 5.4)) : injectionSwitch.y))), (false ? _GLF_FUZZED(mod(-6081.9243, 5.4)) : injectionSwitch.y)))), injectionSwitch.y)))))) && true)))))))))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(168201u, 114957u, 101625u)) : gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))), ((gl_WorkGroupID)) / uvec3(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)), _GLF_IDENTITY(1u, 0u | (1u)), 1u)) | (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))))))) / uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))))))))).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, 0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u)) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))) << 0u, ((_GLF_IDENTITY(0u, 0u | (0u))) << 0u) * 1u))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << ((_GLF_IDENTITY(1u ^ 1u, max(_GLF_IDENTITY(1u ^ 1u, ~ (~ (_GLF_IDENTITY(1u ^ 1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u ^ 1u, ~ (_GLF_IDENTITY(~ (1u ^ 1u), (~ (1u ^ 1u)) | (~ (1u ^ 1u)))))), (true ? uint(_GLF_IDENTITY(1u ^ 1u, ~ (_GLF_IDENTITY(~ (1u ^ 1u), (~ (1u ^ 1u)) | (~ (1u ^ 1u)))))) : _GLF_FUZZED(subgroup_size)))))))), 1u ^ 1u))) ^ 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << ((_GLF_IDENTITY(1u ^ 1u, max(_GLF_IDENTITY(1u ^ 1u, ~ (~ (_GLF_IDENTITY(1u ^ 1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u ^ 1u, ~ (_GLF_IDENTITY(~ (1u ^ 1u), (~ (1u ^ 1u)) | (~ (1u ^ 1u)))))), (true ? uint(_GLF_IDENTITY(1u ^ 1u, ~ (_GLF_IDENTITY(~ (1u ^ 1u), (~ (1u ^ 1u)) | (~ (1u ^ 1u)))))) : _GLF_FUZZED(subgroup_size)))))))), 1u ^ 1u))) ^ 0u)), ~ (~ (_GLF_IDENTITY(0u, (0u) << ((_GLF_IDENTITY(1u ^ 1u, max(_GLF_IDENTITY(1u ^ 1u, ~ (~ (_GLF_IDENTITY(1u ^ 1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u ^ 1u, ~ (_GLF_IDENTITY(~ (1u ^ 1u), (~ (1u ^ 1u)) | (~ (1u ^ 1u)))))), (true ? uint(_GLF_IDENTITY(1u ^ 1u, ~ (_GLF_IDENTITY(~ (1u ^ 1u), (~ (1u ^ 1u)) | (~ (1u ^ 1u)))))) : _GLF_FUZZED(subgroup_size)))))))), 1u ^ 1u))) ^ 0u))))), 1u, 1u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) | _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))))) ^ 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))))) ^ 0u), (((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))), (_GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))), 0u | ((0u) | (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u))))))) | ((0u) | (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))))))) ^ 0u)) + 0u)) | (((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))), 0u ^ ((0u) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 1u, 1u), max(uvec4(0u, 1u, 1u, 1u), uvec4(0u, 1u, 1u, 1u)))))))))) ^ 0u))))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), (uint(uvec2(0u, 0u))) >> 0u)))))) << (_GLF_IDENTITY((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(uvec3((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x))))) ^ 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), (uint(uvec2(0u, 0u))) >> 0u)))))) << (_GLF_IDENTITY((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(uvec3((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x))))) ^ 0u))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), (uint(uvec2(0u, 0u))) >> 0u)))))) << (_GLF_IDENTITY((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(uvec3((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x))))) ^ 0u))), (uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), (uint(uvec2(0u, 0u))) >> 0u)))))) << (_GLF_IDENTITY((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(uvec3((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x))))) ^ 0u)))) - 0u))))) >> 0u), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(0u, 0u)), max(uint(uvec2(0u, 0u)), _GLF_IDENTITY(uint(uvec2(0u, 0u)), (uint(uvec2(0u, 0u))) | 0u))), (uint(uvec2(0u, 0u))) >> 0u)))))) << (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, 1u ^ 1u)), min(1u ^ 1u, 1u ^ 1u))), uint(uvec3((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x))))) ^ 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), (uint(uvec2(0u, 0u))) >> 0u)))))) << (_GLF_IDENTITY((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | 0u), min(1u ^ 1u, 1u ^ 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x))))) ^ 0u))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), (uint(uvec2(0u, 0u))) >> 0u)))))) << (_GLF_IDENTITY((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(uvec3((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x))))) ^ 0u))), (uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) / 1u)))), _GLF_IDENTITY(uint(uvec2(0u, 0u)), (uint(uvec2(0u, 0u))) >> 0u)))))) << _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(uvec3((_GLF_IDENTITY(1u ^ 1u, min(_GLF_IDENTITY(1u ^ 1u, ~ (~ (1u ^ 1u))), 1u ^ 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)))), 1u, 0u, 1u)), clamp(uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)))), 1u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)))), 1u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)))), 1u, 0u, 1u)))))))) ^ 0u), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))), uint(uvec3((_GLF_IDENTITY(1u ^ 1u, min(_GLF_IDENTITY(1u ^ 1u, ~ (~ (1u ^ 1u))), 1u ^ 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)))), 1u, 0u, 1u)), clamp(uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)))), 1u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)))), 1u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), float(mat2x4((injectionSwitch[1]), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))) * 1.0))).x)))), 1u, 0u, 1u)))))))) ^ 0u))))))) - 0u))))) >> 0u) : _GLF_FUZZED(subgroup_local_id)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << ((_GLF_IDENTITY(_GLF_IDENTITY(1u ^ 1u, (_GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, 1u ^ 1u))) ^ 0u), (1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u)) | (1u ^ 1u))) ^ 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u))) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u) << ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u))) ^ 0u), ((0u) << ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u))) ^ 0u)) << 0u)))), (_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(((_GLF_IDENTITY(1u ^ 1u, _GLF_IDENTITY((1u ^ 1u) | (1u ^ 1u), ((1u ^ 1u) | (1u ^ 1u)) / 1u))) ^ 0u), min(_GLF_IDENTITY(((_GLF_IDENTITY(1u ^ 1u, _GLF_IDENTITY((1u ^ 1u) | (1u ^ 1u), ((1u ^ 1u) | (1u ^ 1u)) / 1u))) ^ 0u), ~ (~ (((_GLF_IDENTITY(1u ^ 1u, _GLF_IDENTITY((1u ^ 1u) | (1u ^ 1u), ((1u ^ 1u) | (1u ^ 1u)) / 1u))) ^ 0u)))), ((_GLF_IDENTITY(1u ^ 1u, _GLF_IDENTITY((1u ^ 1u) | (1u ^ 1u), ((1u ^ 1u) | (1u ^ 1u)) / 1u))) ^ 0u))))) * 1u), _GLF_IDENTITY(0u, (0u) << ((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u))) ^ 0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) ^ 0u), 0u))), uint(_GLF_IDENTITY(0u, (0u) << ((1u ^ 1u) ^ 0u))))))) >> 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(uint(0u)))), (_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id)), (~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id))) | (~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id)))), clamp(_GLF_IDENTITY(~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id)), (~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id))) | (~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id)), (~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id))) | (~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id)), (~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id))) | (~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id))))) << 0u), _GLF_IDENTITY(~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id)), (~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id))) | (~ (true ? uint(_GLF_IDENTITY(0u, uint(uint(0u)))) : _GLF_FUZZED(subgroup_id)))))))))), uint(0u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), bool(bvec2(true, true)))) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.1)), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)))))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u)) | ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))), (false ? _GLF_FUZZED(uvec4(178744u, 8188u, 185722u, 146159u).r) : ((subgroup_local_id + 1)))) | ((subgroup_local_id + 1))) << 0u)) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / (1u & 1u)))), (true ? uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) / (1u & 1u)))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) + 0u)), (uint(virtual_gid)) / 1u)))) + 0u)))))) << 0u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / (1u & 1u)))), (true ? uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) / (1u & 1u)))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) + 0u)), (uint(virtual_gid)) / 1u)))) + 0u)))))) << 0u))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u)) | ((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(178744u, (_GLF_IDENTITY(178744u, ~ (~ (_GLF_IDENTITY(178744u, ~ (~ (_GLF_IDENTITY(178744u, clamp(178744u, 178744u, 178744u))))))))) << 0u), _GLF_IDENTITY(8188u, uint(uvec3(8188u, 0u, 1u))), 185722u, 146159u).r) : ((subgroup_local_id + 1)))) | ((subgroup_local_id + 1))) << 0u)) % subgroup_size), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, true), bvec3(bvec3(bvec3(! (true), false, true)))))))) ? (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1), ((subgroup_local_id + 1)) * 1u)) | ((subgroup_local_id + 1)), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(178744u, max(178744u, _GLF_IDENTITY(178744u, uint(uvec3(_GLF_IDENTITY(178744u, clamp(178744u, 178744u, 178744u)), 1u, 0u))))), 8188u, 185722u, 146159u).r) : ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(float(false))), bool(false))))), ~ (~ ((subgroup_local_id + 1) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) | ((subgroup_local_id + 1))) << 0u)) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) + 0u), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0)))) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) << 0u, ~ (_GLF_IDENTITY(~ (((subgroup_local_id + 1) % subgroup_size) << 0u), min(~ (((subgroup_local_id + 1) % subgroup_size) << 0u), ~ (((subgroup_local_id + 1) % subgroup_size) << 0u))))))), uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))))) << 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), _GLF_IDENTITY(max(4, 4), _GLF_IDENTITY((max(4, 4)) | (_GLF_IDENTITY(max(4, 4), int(_GLF_IDENTITY(int(max(4, 4)), 0 + (int(max(4, 4))))))), (false ? _GLF_FUZZED(-3590) : (max(4, 4)) | (_GLF_IDENTITY(max(4, 4), int(_GLF_IDENTITY(int(max(4, 4)), 0 + (int(max(4, 4))))))))))), 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)) < subgroup_size)
  {
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || (! (bool(_GLF_DEAD(false))))))), false || (bool((! (bool(_GLF_DEAD(false)))))))))))) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) | (read)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))) || (bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)) : _GLF_FUZZED(atan(0.1, 2646.3739)))))))))), _GLF_IDENTITY(true, (true) || false), true)))), (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
