#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (0u & 148426u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))))), ~ (~ (((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), clamp(subgroup_id, subgroup_id, subgroup_id))))))))) * 1u)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (0u & 148426u) ^ (_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))), (true ? (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) : _GLF_FUZZED(workgroup_size)))) | 0u)), uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) / 1u)))), (((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) ^ 0u)))) * 1u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (0u & 148426u) ^ (_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id)), min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))))))) * 1u, (true ? _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))))) * 1u, ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), subgroup_id)))))) * _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))))))) : _GLF_FUZZED(subgroup_local_id))))) >> 0u)) * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) + _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))) >> 0u)) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) << 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) << 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))))) | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) << 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))))))), (true ? _GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), ((uint(1))) << 0u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])).x)), clamp(_GLF_IDENTITY((uint(1)), ((uint(1))) << 0u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])).x)), _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])).x)), _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])).x)))))) << 0u, _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) >> 0u, ~ (~ ((uint(1)) >> 0u)))), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) - 0)), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))), clamp(_GLF_IDENTITY(~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), clamp((uint(1)), (uint(1)), (uint(1)))), (uint(1))))) << 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ ((uint(1))), clamp(~ ((uint(1))), ~ ((uint(1))), ~ ((uint(1))))))) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), _GLF_IDENTITY(0u, (0u) | 0u)))), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))), (~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)), (true ? ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)) * 1u)) : _GLF_FUZZED(subgroup_local_id))))))) * 1u), ~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY((uint(1)), ((uint(1))) | ((uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))))), ~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY((uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (~ ((uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, max(0u, 0u))))), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))))))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) - 0)), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))), clamp(_GLF_IDENTITY(~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), clamp((uint(1)), (uint(1)), (uint(1)))), (uint(1))))) << 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ ((uint(1))), clamp(~ ((uint(1))), ~ ((uint(1))), ~ ((uint(1))))))) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), _GLF_IDENTITY(0u, (0u) | 0u)))), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))), (~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)), (true ? ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)) * 1u)) : _GLF_FUZZED(subgroup_local_id))))))) * 1u), ~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY((uint(1)), ((uint(1))) | ((uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))))), ~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY((uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (~ ((uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, max(0u, 0u))))), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))))))), (true ? (_GLF_IDENTITY(~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) - 0)), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))), clamp(_GLF_IDENTITY(~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), clamp((uint(1)), (uint(1)), (uint(1)))), (uint(1))))) << 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ ((uint(1))), clamp(~ ((uint(1))), ~ ((uint(1))), ~ ((uint(1))))))) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), _GLF_IDENTITY(0u, (0u) | 0u)))), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))), (~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)), (true ? ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)) * 1u)) : _GLF_FUZZED(subgroup_local_id))))))) * 1u), ~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY((uint(1)), ((uint(1))) | ((uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))))), ~ (max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY((uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (~ ((uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, max(0u, 0u))))), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) >> 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))))))) : _GLF_FUZZED(workgroup_base))), 0u, 0u)))))) : _GLF_FUZZED(((mat3x4(-114.494, -843.012, -0.3, 4.2, -9.4, -9.1, -6.9, 2468.9869, 8073.8616, 6428.7202, -7613.4576, -120.661) == mat3x4(715.577, -2311.5899, 5.5, 4.8, -2632.5330, -296.229, -8.8, 5.1, -7911.1347, -9.0, -41.67, 7.9)) ? packSnorm2x16(injectionSwitch) : subgroup_size)))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), 4))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec2(4, 0))), 4)))), (4) >> 0), 4))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(4, (4) >> 0), 4), (false ? _GLF_FUZZED(37343) : max(_GLF_IDENTITY(4, (4) >> 0), 4))))), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(4, (4) >> 0), 4), (false ? _GLF_FUZZED(37343) : max(_GLF_IDENTITY(4, (4) >> 0), 4)))))) << 0)) << 0)) | 0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true))))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), (false) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true))))) || false)))), (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), true)))), _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), ((false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! ((_GLF_IDENTITY((false), ((false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))) && _GLF_IDENTITY(true, ! (! (true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), (_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid))) | 0u)], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) | 0)), _GLF_IDENTITY((~ (~ (0))), 0 ^ ((~ (~ (0))))) >> 0)), (true ? _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) >> 0)) : _GLF_FUZZED(14435))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asinh(vec2(vec3(7.9, -2755.4644, -8132.2676)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y, (injectionSwitch.y) * 1.0)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, bool(bvec2(true, true))), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8501.9787), _GLF_FUZZED(-4245.7233)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8501.9787), _GLF_FUZZED(-4245.7233)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8501.9787), _GLF_FUZZED(-4245.7233)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)), false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), false))))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.2) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(380.585)), bool(false))))) < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), int(ivec4(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(62948) : (0))), (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0), 1, (0 | 0)))) * 1, (true ? _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0)), int(ivec4(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(62948) : (0))), (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0), 1, (0 | 0)))) * 1 : _GLF_FUZZED(-29338))));
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) + 0), min((4), (4))) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(284.143)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(80.25)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1765.3445)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(88.18)))) + 0.0))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)))))) || false))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)))))) || false))), (! ((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)))))) || false)))) && true), false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))))) + 0.0) - _GLF_ZERO(0.0, injectionSwitch.x))))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0))) && true)))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)))))) || false))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0))))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0), false, false)))))))) || false))), (! ((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)))))) || false)))) && true), false, true)))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))))) + 0.0) - _GLF_ZERO(0.0, injectionSwitch.x))))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0))) && true)))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)))))) || false))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0))))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0), false, false)))))))) || false))), (! ((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(88.18)))) + 0.0)))))) || false)))) && true), false, true))))))) || false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, abs(cos(0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.0))), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), abs(0.0), 1.0, 1.0, log(1.0), 1.0))), injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), float(_GLF_FUZZED(2.7)), bool(false)))))).y))))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), false))))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false)))) || false)) || false)) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false))), false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && true), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), false))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false)))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false)))), false)), false, true))))))) || false)) || false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
