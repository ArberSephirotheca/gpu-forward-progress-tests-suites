#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) / 1.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) / 1.0), 0.0, abs(1.0), 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), 1.0, 0.0, tan(0.0), abs(1.0), 0.0))) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.0)), vec2(_GLF_FUZZED(3.2), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-151.074) : injectionSwitch.y)))), false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, true, true))))))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(cos(vec2(0.0, 0.0)))).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, true, true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(cos(vec2(0.0, 0.0)))).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, true, true))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(cos(vec2(0.0, 0.0)))).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, true, true))))))), true))))))))))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))[1], gl_WorkGroupID[2]), (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)) * (uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))[1], gl_WorkGroupID[2])))).x, min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, gl_WorkGroupID.x)), gl_WorkGroupID.x));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, true))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(69.72)), vec2(_GLF_FUZZED((-12.27 * -2886.6165)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))), false), true, false))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))), false), true, false))), true), true))))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))), false), true, false))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))), false), true, false))), true), true))))), false)), true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false)))), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))), (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))), (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, ((true) || false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false)))))))), bool(bvec4(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))), false, true))))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false))))))), false, true))))))))), true, false, true))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), max(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))) >> 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), max(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), max(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))) >> 0u)), max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), max(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))) >> 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), max(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))) >> 0u))))))))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)) | (subgroup_id * subgroup_size)), 0u, 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 0u), (uvec3(subgroup_id * subgroup_size, 0u, 0u)) << uvec3(0u, 0u, 0u)))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(845.978) : injectionSwitch.x)) < injectionSwitch.y, false))))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) + 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))))), min(uvec4(subgroup_id * subgroup_size, 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(198108u))), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))))), uvec4(subgroup_id * subgroup_size, 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u)))))))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))))), min(uvec4(subgroup_id * subgroup_size, 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), max(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))))))), uvec4(subgroup_id * subgroup_size, 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 1u * (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | (3u))))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))))))))) - 0u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), max(uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), uint(_GLF_IDENTITY(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(0u, 0u, 0u, 0u)) * (uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))) >> 0u))))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 0u), (uvec3(subgroup_id * subgroup_size, 0u, 0u)) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 0u), (uvec3(subgroup_id * subgroup_size, 0u, 0u)) << uvec3(0u, 0u, 0u)))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))))), min(uvec4(subgroup_id * subgroup_size, 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), 0u)), max(uint(uvec2(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), 0u)), uint(uvec2(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), 0u))))))), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) - 0u)))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))))), uvec4(subgroup_id * subgroup_size, 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u)))))))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))))), min(uvec4(subgroup_id * subgroup_size, 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), min((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))) >> 0u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))))), uvec4(subgroup_id * subgroup_size, 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))))))))) - 0u))))) << 0u) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) * 1u))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (true ? subgroup_id : _GLF_FUZZED(workgroup_size))))) * subgroup_size) << 0u) + subgroup_local_id) - 0u);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + 1, _GLF_IDENTITY(0u, (0u) - 0u) ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) + 0u)) % subgroup_size) : _GLF_FUZZED(subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && _GLF_IDENTITY(true, true && (true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) - ivec2(0, 0))), max(int(_GLF_IDENTITY(ivec2(4, 0), (ivec2(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)), 0)) - ivec2(0, 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, 0 | (4)), 0)) | ivec2(0, 0), ivec2(ivec2((ivec2(_GLF_IDENTITY(4, 0 | (4)), 0)) | ivec2(0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(_GLF_IDENTITY(4, (4) | (4)), 0), ivec2(4, _GLF_IDENTITY(0, max(0, 0))), ivec2(4, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, _GLF_IDENTITY(0, 0 ^ (0))), ivec2(4, 0), ivec2(4, 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), ~ (~ (_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))))), (0) >> 0)))), clamp(ivec2(4, 0), ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) / 1), 0), ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-54133, -52440)))), _GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY(_GLF_IDENTITY(clamp(ivec2(4, 0), ivec2(4, _GLF_IDENTITY(0, (0) ^ 0)), ivec2(4, 0)), ivec2(0, 0) | (clamp(ivec2(4, 0), ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (0) ^ _GLF_IDENTITY(0, (0) ^ 0))), ivec2(4, 0)))), min(_GLF_IDENTITY(clamp(ivec2(4, 0), ivec2(4, _GLF_IDENTITY(0, (0) ^ 0)), ivec2(4, 0)), ivec2(0, 0) | (clamp(ivec2(4, 0), ivec2(4, _GLF_IDENTITY(0, (0) ^ 0)), ivec2(4, 0)))), _GLF_IDENTITY(clamp(ivec2(4, 0), ivec2(4, _GLF_IDENTITY(0, (0) ^ 0)), ivec2(4, 0)), ivec2(0, 0) | (clamp(ivec2(4, 0), ivec2(4, _GLF_IDENTITY(0, (0) ^ 0)), ivec2(4, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-19399) : 4))) + 0, ((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-19399) : 4))) + 0) | 0)), 0), ivec2(4, 0), ivec2(4, 0))), (_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-19399) : 4))) + 0, ((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-19399) : 4))) + 0) | 0)), 0), ivec2(4, 0), ivec2(4, 0)))) | ivec2(0, 0)), _GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)))))))) - ivec2(0, 0)))))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), bool(bvec4(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (_GLF_IDENTITY(! ((subgroup_local_id + 1 < subgroup_size)), bool(bvec4(! ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))) < subgroup_size)), false, false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0)) / 1.0) < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (_GLF_IDENTITY((subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + 1 < subgroup_size))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1))))) < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0)))))) - 0.0) < injectionSwitch.y))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))) || false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))) || (subgroup_local_id + 1 < subgroup_size)))))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))) || (subgroup_local_id + 1 < subgroup_size)))))), true), bvec2(bvec4(bvec2(true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))) || (subgroup_local_id + 1 < subgroup_size)))))), true), false, false)))))))
  {
   int i = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0), ~ (~ ((0)))), (_GLF_IDENTITY((0), ~ (~ ((0))))) * 1), 0 ^ ((0))) << 0, max(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0), _GLF_IDENTITY(0 | (_GLF_IDENTITY((0), int(int((0))))), max(0 | (_GLF_IDENTITY((0), int(int((0))))), 0 | (_GLF_IDENTITY((0), int(int((0)))))))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY((0), (_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), (_GLF_IDENTITY((0), min((0), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), 1 * ((_GLF_IDENTITY(0, clamp(0, 0, 0)))))))) / 1)))) - 0)), int(_GLF_IDENTITY(ivec3(0 ^ ((0)), (0 ^ 0), 0), (false ? _GLF_FUZZED((ivec3(-35054, -67209, -5944) << 43119)) : ivec3(0 ^ ((0)), (0 ^ 0), 0)))))) << 0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ (_GLF_IDENTITY((0), int(ivec3(_GLF_IDENTITY((0), int(ivec3((0), 1, 0))), 0, 0))))) << 0, _GLF_IDENTITY(int(int(_GLF_IDENTITY((0), 0 ^ (_GLF_IDENTITY((0), int(ivec3(_GLF_IDENTITY((0), int(ivec3((0), 1, 0))), 0, 0))))) << 0)), (int(int(_GLF_IDENTITY((0), 0 ^ (_GLF_IDENTITY((0), int(ivec3(_GLF_IDENTITY((0), int(ivec3((0), 1, 0))), 0, 0))))) << 0))) ^ 0)), clamp(_GLF_IDENTITY((0), 0 ^ ((0))) << _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) << 0)))) ^ 0), _GLF_IDENTITY((0), _GLF_IDENTITY(0, 0 | (0)) ^ ((0))) << 0, _GLF_IDENTITY((0), 0 ^ ((0))) << 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1), (ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1)) + ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1), (ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1)) + ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))), min(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1), (ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1)) + ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1), (ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1)) + ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1), (ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1)) + ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1), (ivec4(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, 1, 1, 1)) + ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0)))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, (_GLF_IDENTITY((0), 0 ^ ((0))) << 0) - 0), 0), _GLF_IDENTITY(ivec2(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, (_GLF_IDENTITY((0), 0 ^ ((0))) << 0) - 0), 0), 1, 0)), (ivec2(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))) << 0, (_GLF_IDENTITY((0), 0 ^ (_GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) * 1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0) - 0), 0), 1, 0))) - ivec2(0, 0)))))))))) >> 0))) | (_GLF_IDENTITY(0, max(0, 0))));
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
