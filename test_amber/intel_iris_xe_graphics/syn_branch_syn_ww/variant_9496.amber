#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat2(0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat2(0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat2(0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))))), true)), (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2(_GLF_FUZZED(-35.17), _GLF_FUZZED(-54.85)), vec2((vec2(vec2(injectionSwitch)))[0], (vec2(vec2(injectionSwitch)))[1]), bvec2(true, true))))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0), 1.0), transpose(transpose(mat4x2(_GLF_FUZZED(injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0), 1.0))))), max(vec2(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0), 1.0), transpose(transpose(mat4x2(_GLF_FUZZED(injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0), 1.0))))), vec2(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0), 1.0), transpose(transpose(mat4x2(_GLF_FUZZED(injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0), 1.0)))))))))).y)) || false))))), true, true))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat2(0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat2(0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat2(0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))))), true)), (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2(_GLF_FUZZED(-35.17), _GLF_FUZZED(-54.85)), vec2((vec2(vec2(injectionSwitch)))[0], (vec2(vec2(injectionSwitch)))[1]), bvec2(true, true))))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0), 1.0), transpose(transpose(mat4x2(_GLF_FUZZED(injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0), 1.0))))), max(vec2(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0), 1.0), transpose(transpose(mat4x2(_GLF_FUZZED(injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0), 1.0))))), vec2(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0), 1.0), transpose(transpose(mat4x2(_GLF_FUZZED(injectionSwitch), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0), 1.0)))))))))).y)) || false))))), true, true))) && true)), true, true, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))))[0], _GLF_FUZZED(-27.78)), vec2(_GLF_FUZZED((-9.5 - 1.6)), (injectionSwitch)[1]), bvec2(false, true))).y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.5)), bvec2(true, false))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.5)), bvec2(true, false))).x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.5)), bvec2(true, false))).x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.8), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(38.75) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(8.5)), bvec2(true, false))).x > injectionSwitch.y))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))), false, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))), false, true)))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))), false, true)))), bool(bvec4(bool(bool(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))))), false, true)))), false, true, false))))))), (bool(bvec4(false, false, false, true))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))) && true))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))), false, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))), false, true)))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))), false, true)))), bool(bvec4(bool(bool(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))))), false, true)))), false, true, false))))))), (bool(bvec4(false, false, false, true))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))) && true))), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))), false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (! (false))), false, true))), ! (_GLF_IDENTITY(! ((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (! (false))), false, true)))), bool(bvec2(! ((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (! (false))), false, true)))), true))))) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, _GLF_IDENTITY(true, false || (true))))) || false))) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), true))), _GLF_IDENTITY(((bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4((false), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4((false), false, false, true)), bool(bool(bool(bvec4((false), false, false, true))))))))))) && true), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)), true)))), true && (((bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4((false), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4((false), false, false, true)), bool(bool(bool(bvec4((false), false, false, true))))))))))) && true), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)), true)))))) && true) || false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), true))), _GLF_IDENTITY(((bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4((false), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4((false), false, false, true)), bool(bool(bool(bvec4((false), false, false, true))))))))))) && true), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)), true)))), true && (((bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4((false), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4((false), false, false, true)), bool(bool(bool(bvec4((false), false, false, true))))))))))) && true), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)), true)))))) && true) || false))), bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), true))), _GLF_IDENTITY(((bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4((false), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4((false), false, false, true)), bool(bool(bool(bvec4((false), false, false, true))))))))))) && true), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)), true)))), true && (((bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4((false), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4((false), false, false, true)), bool(bool(bool(bvec4((false), false, false, true))))))))))) && true), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)), true)))))) && true) || false)))))))) && true))) && true)), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))))))), bool(bvec4(bool((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))))), false, false, false)))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))))), bool(bvec4(bool((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))))), false, false, false)))))))) && true))), ! (! (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && _GLF_IDENTITY(true, (true) || false))))))), (bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(false, false, false, true))) || false, _GLF_IDENTITY(bool(bvec4((bool(bvec4(false, false, false, true))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false || (_GLF_IDENTITY(bool(bvec4((bool(bvec4(false, false, false, true))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bool(bool(bvec4((bool(bvec4(false, false, false, true))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))), ! (! ((bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), false || (bool(bvec4(true, true, false, true)))))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(false, false, false, true))) || false, _GLF_IDENTITY(bool(bvec4((bool(bvec4(false, false, false, true))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false || (_GLF_IDENTITY(bool(bvec4((bool(bvec4(false, false, false, true))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bool(bool(bvec4((bool(bvec4(false, false, false, true))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))), ! (! ((bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), false || (bool(bvec4(true, true, false, true)))))))) || false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(false, false, false, true))) || false, _GLF_IDENTITY(bool(bvec4((bool(bvec4(false, false, false, true))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false || (_GLF_IDENTITY(bool(bvec4((bool(bvec4(false, false, false, true))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bool(bool(bvec4((bool(bvec4(false, false, false, true))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))), ! (! ((bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), false || (bool(bvec4(true, true, false, true)))))))) || false)))), true, true)))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY((bool(bvec4(false, false, false, true))) || false, ! (! (_GLF_IDENTITY((bool(bvec4(false, false, false, true))) || false, bool(bvec3((bool(bvec4(false, false, false, true))) || false, true, true))))))), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, true)), _GLF_IDENTITY((bool(bvec4(false, false, false, true))), false || ((bool(bvec4(false, false, false, true))))) || false)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY((bool(bvec4(false, false, false, true))) || false, ! (! (_GLF_IDENTITY((bool(bvec4(false, false, false, true))) || false, bool(bvec3((bool(bvec4(false, false, false, true))) || false, true, true))))))), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, true)), _GLF_IDENTITY((bool(bvec4(false, false, false, true))), false || ((bool(bvec4(false, false, false, true))))) || false)))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY((bool(bvec4(false, false, false, true))) || false, ! (! (_GLF_IDENTITY((bool(bvec4(false, false, false, true))) || false, bool(bvec3((bool(bvec4(false, false, false, true))) || false, true, true))))))), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, true)), _GLF_IDENTITY((bool(bvec4(false, false, false, true))), false || ((bool(bvec4(false, false, false, true))))) || false)))))))), true, true))))) && true))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(false))))), false, true)), (bool(bvec4(false, false, false, true))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(false))))), false, true)), (bool(bvec4(false, false, false, true))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false)) && (_GLF_IDENTITY(false, bool(bool(false))))), false, true)), (bool(bvec4(false, false, false, true))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))) && true)))))))), true))) && true)))), (bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))) || false) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (! ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))), false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(false, bool(bvec2(false, false))), true))) || false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(386.228) : _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (true ? float(mat3x4(injectionSwitch.y, 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-786.331)))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))) && true))), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true) && (_GLF_IDENTITY(false, bool(bool(false))))), false, true)), (bool(bvec4(false, false, false, _GLF_IDENTITY(true, true && (true))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)))).y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), false, true)), (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))) && true))), (bool(bvec4(false, false, false, true))) || false))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (true))) && true))), (bool(bvec4(false, false, false, true))) || false)))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false))), false, true)), (bool(bvec4(false, false, false, true))) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), false, false, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))) || false))) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))) || false)))) || false))) && true))) || false)), true))) && true))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, false))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), false, true)), _GLF_IDENTITY((bool(bvec4(false, false, false, true))) || false, ((bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, true))) || false) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY((bool(bvec4(false, false, false, true))), ! (! ((bool(bvec4(false, false, false, true)))))) || false))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY((bool(bvec4(false, false, false, true))) || false, ((bool(bvec4(false, false, false, true))) || false) || false)))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! _GLF_IDENTITY((! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! ((! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(false))))), false, true)), (bool(bvec4(false, false, false, true))) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY((bool(bvec4(false, false, false, true))) || false, bool(_GLF_IDENTITY(bvec3((bool(bvec4(false, false, false, true))) || false, false, true), bvec3(bvec3(bvec3((bool(bvec4(false, false, false, true))) || false, false, true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), true && (bool(bvec4(false, false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))) || false)) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, true && (true)))), (bool(bvec4(false, false, false, true))) || false))) && true))), true))))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(false))))), false, true)), (bool(bvec4(false, false, false, true))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY((bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec3((bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true))) && true)))), (bool(bvec4(false, false, false, true))) || false))) && true))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true && (true)) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)), ! (! (bool(bvec4(false, true, true, false)))))), true)), (bool(bvec4(false, false, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, true))))))) || (true))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, cos(0.0), 1.0, tan(0.0), 0.0, 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, cos(0.0), 1.0, tan(0.0), 0.0, 0.0)))))).y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))))))) && true))), true))) && true)))), (bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(false))))), false, true)), (bool(bvec4(false, false, false, true))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, _GLF_IDENTITY(true, (true) && true)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, _GLF_IDENTITY(true, (true) && true)))) || false), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) && true)))) || false)) || false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(false, false, false, true))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), false, _GLF_IDENTITY(true, (true) && true)))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true)), (bool(bvec4(false, false, false, true))) || false))) && true)))) || false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(false))))), false, true)), (bool(bvec4(false, false, false, true))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, true))), (! (bool(bvec4(false, false, false, true)))) && true)))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))) || false))) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))) || false))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))) || false))) && true, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))) || false))) && true))) || false), true)), true && (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))) || false))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))) || false))) && true, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))) || false))) && true))) || false), true)))))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true))))) && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(false, (false) && true), true)), (bool(bvec4(false, false, false, true))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(false))))), false, true)), (bool(bvec4(false, false, false, _GLF_IDENTITY(true, true && (true))))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))) && (_GLF_IDENTITY(false, bool(bool(false))))), false, true)), (bool(bvec4(false, false, false, true))) || false))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bool(false))))), false, true)), (bool(bvec4(false, false, false, true))) || false))))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec4(bool(bvec4(false, false, false, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (bool(bvec4(false, false, false, true))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)))) || false) && true))), true))) && true))))) || false))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED((- 6.6))), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED((+ 0.1))), float(mix(float(_GLF_FUZZED((- 6.6))), float(injectionSwitch.y), bool(true))), bool(true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- 6.6))), float(injectionSwitch.y), bool(true)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, true))) || false)))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(-6.9)), bool(false))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, -3593.0405)))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(523.531)), float((injectionSwitch.x)), bool(true))))) * 1.0)), float(_GLF_FUZZED(-6.9)), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, -3593.0405)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, -3593.0405))))) + vec2(0.0, 0.0)).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x) + 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.9)), bool(false))), (false ? _GLF_FUZZED(53.56) : _GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, length(0.0), 0.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u)))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.7)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), false, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), false, true))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((+ -904.065)))))), false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-37.60), _GLF_FUZZED((-12.77 / -624.378))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0)))))), 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(60.22)), vec2(_GLF_FUZZED(-5.8), (vec2(0.0, 0.0))[1]), bvec2(false, true)))).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))) - vec2(0.0, 0.0)))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) / sqrt(1.0))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))) - vec2(0.0, 0.0)).y) || false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0)))) / vec2(1.0, 1.0)).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true))) || false, true && ((bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true))) || false)))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) >> 0)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) || false)), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))), ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! (false)), bool(bool((! (false))))) || false)))))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
