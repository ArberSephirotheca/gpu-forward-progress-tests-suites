#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 ivec4 _f0;
 mat2x3 _f1;
 int i;
 uvec2 _f2;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 mat4x3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 bvec2 _f1;
 ivec4 _f2;
 mat4 _f3;
 mat4x3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_11 {
 vec2 _f0;
 mat2 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 mat3x2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_5 {
 float _f0;
 bvec3 _f1;
 vec3 _f2;
 vec4 _f3;
 float _f4;
 float _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 bool _f2;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_12 {
 vec4 _f0;
 bool _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_7 _f3;
 uint workgroup_id;
 ivec4 _f4;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat4x2 _f1;
 ivec3 _f2;
 ivec3 _f3;
 mat3 _f4;
 int _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uint virtual_gid;
 uvec3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), log(1.0), 0.0, 0.0, 1.0, 0.0), mat2x3(_GLF_IDENTITY(mat2x3(mat2x3(injectionSwitch.x, log(1.0), 0.0, 0.0, 1.0, 0.0)), (mat2x3(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), log(1.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(16.89))), 1.0, 0.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(44.01)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(392.838) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), abs(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(cos(0.0), mix(float(cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-78.84)), float(0.0), bool(true))), 0.0)))), float(_GLF_FUZZED(-7.7)), bool(false)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY((vec2(vec3(injectionSwitch, 0.0))) * mat2(1.0), mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(-8.4)), vec2(((vec2(vec3(injectionSwitch, 0.0))) * mat2(1.0))[0], ((vec2(vec3(injectionSwitch, 0.0))) * mat2(1.0))[1]), bvec2(true, true))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), mix(vec4(_GLF_FUZZED(1129.5939), (vec4(injectionSwitch.x, 0.0, 0.0, 0.0))[1], (vec4(injectionSwitch.x, 0.0, 0.0, 0.0))[2], _GLF_FUZZED(43.01)), vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.6)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (true ? mat3(0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-4734.4454, -6.1, 31.79, 0.3, 8.5, 57.79, -5.6, -4.3, -6827.6170)))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0), (mat2x4(0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0))[0], _GLF_FUZZED(-3.0), _GLF_FUZZED(7464.6395), (vec4(injectionSwitch.x, 0.0, 0.0, 0.0))[_GLF_IDENTITY(3, (false ? _GLF_FUZZED((-15461 << 98944)) : 3))]), bvec4(true, false, false, true))))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u + (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), max(~ (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u + (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), ~ (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u + (1u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))) >> _GLF_IDENTITY(uint(0u), uint(0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_IDENTITY(vec4(1.0), vec4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(_GLF_IDENTITY(1.0, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1291.0492)))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(6.1), (vec4(1.0))[1], _GLF_FUZZED(-4.2), _GLF_FUZZED(-337.470)), vec4((vec4(1.0))[0], _GLF_FUZZED(vec3(79.81, 53.64, 905.304).t), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[2], (vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)))), 1.0), float(float(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)))), 1.0), (false ? _GLF_FUZZED(81.20) : min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)))), 1.0)))))))))[3]), bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec4(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(_GLF_IDENTITY(1.0, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) || false)) ? 1.0 : _GLF_FUZZED(1291.0492)))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(6.1), (vec4(1.0))[1], _GLF_FUZZED(-4.2), _GLF_FUZZED(-337.470)), vec4((vec4(1.0))[0], _GLF_FUZZED(vec3(79.81, 53.64, 905.304).t), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[2], _GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), (true ? (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) : _GLF_FUZZED(vec4(451.383, 4.1, -3720.4357, -3.1))))[3]), bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec4(1.0))), max(_GLF_IDENTITY(vec4(1.0), clamp(vec4(_GLF_IDENTITY(1.0, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false))))))))))))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1291.0492)))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(6.1), (vec4(1.0))[1], _GLF_FUZZED(-4.2), _GLF_FUZZED(-337.470)), vec4((vec4(1.0))[0], _GLF_FUZZED(vec3(79.81, 53.64, 905.304).t), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[2], (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[3]), bvec4(true, false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), vec4(1.0))), _GLF_IDENTITY(vec4(1.0), clamp(vec4(_GLF_IDENTITY(1.0, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1291.0492)))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(6.1), _GLF_IDENTITY((vec4(1.0))[1], ((vec4(1.0))[1]) - 0.0), _GLF_FUZZED(-4.2), _GLF_FUZZED(-337.470)), vec4((vec4(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(vec3(79.81, 53.64, 905.304).t, (vec3(79.81, 53.64, 905.304).t) / 1.0)), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[2], (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[3]), bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec4(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1291.0492)), min(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1291.0492)), ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1291.0492))) / 1.0), (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1291.0492)))))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(6.1), _GLF_IDENTITY((vec4(1.0))[1], mix(float((vec4(1.0))[1]), float(_GLF_FUZZED(8.5)), bool(_GLF_IDENTITY(false, true && (false))))), _GLF_FUZZED(-4.2), _GLF_IDENTITY(_GLF_FUZZED(-337.470), float(vec4(_GLF_FUZZED(-337.470), 1.0, 0.0, abs(0.0))))), vec4((vec4(1.0))[0], _GLF_FUZZED(vec3(79.81, 53.64, 905.304).t), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[2], (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[3]), bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec4(1.0))), clamp(_GLF_IDENTITY(vec4(1.0), clamp(vec4(_GLF_IDENTITY(1.0, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), true && (bool(true)))) && true))), (true) && true)))))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1291.0492)))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(6.1), (vec4(1.0))[1], _GLF_FUZZED(-4.2), _GLF_FUZZED(-337.470)), vec4((vec4(1.0))[0], _GLF_FUZZED(vec3(79.81, 53.64, 905.304).t), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[2], (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[3]), bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec4(1.0))), _GLF_IDENTITY(vec4(1.0), clamp(vec4(_GLF_IDENTITY(1.0, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1291.0492)))), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(6.1), (vec4(1.0))[1], _GLF_FUZZED(-4.2), _GLF_FUZZED(-337.470)), vec4((vec4(1.0))[0], _GLF_FUZZED(vec3(79.81, 53.64, 905.304).t), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(clamp(vec4(1.0), vec4(1.0), vec4(1.0)), vec4(mat2x3(clamp(vec4(1.0), vec4(1.0), vec4(1.0)), 1.0, 0.0)))), clamp(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(clamp(vec4(1.0), vec4(1.0), vec4(1.0)), mat4(1.0) * (clamp(vec4(1.0), vec4(1.0), vec4(1.0))))), _GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))), _GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))))))[2], (vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(min(1.0, 1.0)), float(_GLF_IDENTITY(mat3x4(float(min(1.0, 1.0)), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat3x4(float(min(1.0, 1.0)), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), min(float(_GLF_IDENTITY(float(min(1.0, 1.0)), float(_GLF_IDENTITY(mat3x4(float(min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0)), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0), (mat3x4(float(min(1.0, 1.0)), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) - mat3x4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2124.8132) : _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(float(min(1.0, 1.0)), float(_GLF_IDENTITY(mat3x4(float(min(1.0, 1.0)), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat3x4(float(min(_GLF_IDENTITY(1.0, exp(0.0) * (1.0)), 1.0)), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))[3]), bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec4(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), clamp(vec4(_GLF_IDENTITY(1.0, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), bool(bvec4((_GLF_IDENTITY(true, (true) && true)), false, true, true))))))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1291.0492)))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (true ? float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(1.1))))), mix(vec4(_GLF_FUZZED(6.1), (vec4(1.0))[1], _GLF_IDENTITY(_GLF_FUZZED(-4.2), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_FUZZED(-4.2))), _GLF_FUZZED(-337.470)), vec4((vec4(1.0))[0], _GLF_FUZZED(vec3(79.81, 53.64, _GLF_IDENTITY(905.304, mix(float(905.304), float(_GLF_FUZZED(-9.2)), bool(false)))).t), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[2], (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[3]), bvec4(true, _GLF_IDENTITY(false, bool(bool(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec4(1.0)))))))))), true, _GLF_struct_4(_GLF_struct_3(mat3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-439.868) : 1.0))), uvec3(1u))), _GLF_struct_7(_GLF_struct_5(1.0, bvec3(true), vec3(1.0), vec4(1.0), 1.0, 1.0, ivec3(1)), _GLF_struct_6(mat4x2(1.0), mat3x2(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, determinant(mat3(1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (1.0))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-4310.4457)), bool(false)))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(uintBitsToFloat(atomicAdd(subgroup_id, subgroup_size))))), min(1.0, 1.0))) - 0.0, (true ? (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0 : _GLF_FUZZED(9025.5487)))))))) : _GLF_FUZZED((5.4 - mat4(9467.1502, 5010.2117, -981.177, 11.47, _GLF_IDENTITY(-826.826, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(9804.9872), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0))) : -826.826), mix(float(_GLF_IDENTITY(_GLF_FUZZED(983.823), (_GLF_IDENTITY(_GLF_FUZZED(983.823), clamp(_GLF_FUZZED(983.823), _GLF_FUZZED(983.823), _GLF_FUZZED(983.823)))) + 0.0)), float((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9804.9872, (9804.9872) - 0.0)), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0))) : -826.826, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9804.9872, (9804.9872) - 0.0)), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0))) : -826.826) - 0.0))), bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), -734.207, 946.878, -1.8, 3182.1000, -0.7, 456.730, -220.574, 5008.5729, 4.2, -1.3, -3705.4829))), transpose(transpose(_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-4310.4457)), bool(false)))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-69.01)), float(1.0), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0))) - 0.0))))) : _GLF_FUZZED((5.4 - mat4(_GLF_IDENTITY(9467.1502, mix(float(9467.1502), float(_GLF_FUZZED((30.81 * -701.127))), bool(false))), 5010.2117, -981.177, 11.47, _GLF_IDENTITY(-826.826, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0)), min(max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0)), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0))))) : -826.826), mix(float(_GLF_IDENTITY(_GLF_FUZZED(983.823), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(983.823), (_GLF_FUZZED(983.823)) - 0.0), clamp(_GLF_FUZZED(983.823), _GLF_FUZZED(983.823), _GLF_FUZZED(983.823)))) + 0.0)), float((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9804.9872), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(9804.9872), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0)))) - 0.0, (true ? (_GLF_IDENTITY(_GLF_FUZZED(9804.9872), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0)))) - 0.0 : _GLF_FUZZED(8774.6150))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(9804.9872), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0)))) - 0.0, (true ? (_GLF_IDENTITY(_GLF_FUZZED(9804.9872), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0)))) - 0.0 : _GLF_FUZZED(8774.6150))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(9804.9872), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0)))) - 0.0, _GLF_IDENTITY((true ? (_GLF_IDENTITY(_GLF_FUZZED(9804.9872), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0)))) - 0.0 : _GLF_FUZZED(8774.6150)), max((true ? (_GLF_IDENTITY(_GLF_FUZZED(9804.9872), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0)))) - 0.0 : _GLF_FUZZED(8774.6150)), (true ? (_GLF_IDENTITY(_GLF_FUZZED(9804.9872), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0)))) - 0.0 : _GLF_FUZZED(8774.6150))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(9804.9872), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0)))) - 0.0, (true ? (_GLF_IDENTITY(_GLF_FUZZED(9804.9872), max(_GLF_FUZZED(9804.9872), _GLF_IDENTITY(_GLF_FUZZED(9804.9872), (_GLF_FUZZED(9804.9872)) - 0.0)))) - 0.0 : _GLF_FUZZED(8774.6150)))))) : _GLF_IDENTITY(-826.826, float(mat2x4(-826.826, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0))))), bool(true)))), -734.207, 946.878, -1.8, 3182.1000, -0.7, 456.730, -220.574, 5008.5729, 4.2, -1.3, -3705.4829))))))))), true), gl_WorkGroupID.x, ivec4(1), _GLF_struct_11(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0)))), vec2(mat2x4(_GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-52.73)))), vec2(1.0)))), max((_GLF_IDENTITY(vec2(1.0), clamp(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((84.46))), bool(false))))), 1.0))), vec2(1.0), vec2(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * vec2(1.0, 1.0)), clamp(vec2(1.0), vec2(1.0), vec2(1.0)))))), 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0))) / vec2(1.0, 1.0)), mat2(1.0), _GLF_struct_8(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bvec2(true), ivec4(1), mat4(1.0), mat4x3(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(true), false))), true)))), _GLF_struct_9(mat4x2(1.0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(int(6), int(6)))), clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(2453) : 1)), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - 0))), int(ivec4(1, 0, 1, 1))))))), _GLF_struct_10(bvec4(true), mat4x3(1.0), mat3x4(1.0)), uvec2(1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_12.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(1, mat4x2(1.0), ivec3(1), ivec3(1), mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0 ^ (1), (0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), (~ (1)) | (~ (1))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), (~ (1)) | (~ (1)))))) | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), (~ (1)) | (~ (1))))))))) - 0)), ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (workgroup_base) >> 0u) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (workgroup_base) >> 0u) + subgroup_id * subgroup_size + subgroup_local_id))), uvec3(1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u * (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))), (_GLF_IDENTITY(1u * (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))), 0u ^ (1u * (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1)))))) >> 0u)), 0u + (~ (_GLF_IDENTITY(1u * (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))), (_GLF_IDENTITY(1u * (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))), 0u ^ (1u * (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1)))))) >> 0u)))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), _GLF_IDENTITY(bool(bool(! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), true))))))), false || (bool(bool(! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0)))))[0], injectionSwitch[1])), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0))) / vec2(1.0, 1.0))), injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, abs(0.0), 1.0)), (float(vec4(1.0, 1.0, abs(0.0), 1.0))) * cos(0.0))), 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0))) / vec2(1.0, 1.0))), injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec3((true), false, false)))) || false)), true && (! (! (true)))))), true))), true, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))))))), true, true)))), true, false)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.5)), float(injectionSwitch.y), bool(true))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(0.0), 1.0, 1.0))), 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), 1.0)), min(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-43.90) : injectionSwitch.x)), 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, determinant(mat2(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0), (mat4(1.0, 0.0, determinant(mat2(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), 1.0)), mix(float(_GLF_FUZZED(4.1)), _GLF_IDENTITY(float(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(mat4((1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, length(vec2(0.0, 0.0)), 0.0, sqrt(0.0), 0.0, 0.0, tan(length(0.0))))) / 1.0), 1.0)))), 1.0))), clamp(_GLF_IDENTITY(float(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), 1.0))), float(mat4(float(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, sin(0.0), 1.0, 1.0))), float(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), 1.0))), float(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), 1.0))))), bool(true))), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), 1.0)))))), 0.0, 1.0, 0.0, 0.0, 0.0), mat3(1.0) * (mat2x3(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0)))))), 1.0)))), 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat2x3(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0), round(length(normalize(vec4(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, sqrt(0.0)))), 1.0, 1.0, 1.0)))), 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-942.516)))), mat3(1.0) * (mat2x3(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(sin(0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0))))) - 0.0))) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))) && true, ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false, true, true))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), (bool(bool((_GLF_DEAD(false))))) && true))) || _GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(0.0))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-18.57, -6970.2054)) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(log(vec2(-12.27, -75.84))))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! (! (! (_GLF_DEAD(false)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(9652.8774)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(9652.8774)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) && true))) && true), false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_2.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_2.virtual_gid, ~ (~ (_GLF_struct_replacement_2.virtual_gid)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1))))) | (1))) | (1), max((_GLF_IDENTITY(1, (1) | (1))) | (1), (_GLF_IDENTITY(1, (1) | (1))) | (1)))))))), uint(uvec2(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? _GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), max(_GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y))))) << _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), 0 ^ ((0 >> _GLF_IDENTITY(int(3), int(3)))))) | 0), min(_GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y))))) | 0)) << (0 >> _GLF_IDENTITY(int(3), int(3))), ((int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y))))) << (0 >> _GLF_IDENTITY(int(3), int(3)))) / 1), (int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y))))) << (0 >> _GLF_IDENTITY(int(3), int(3)))))), int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(33368))))), 0u))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))) - (0 << _GLF_IDENTITY(int(4), int(4)))), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1))) | (1), max((_GLF_IDENTITY(1, (1) | (1))) | (1), (_GLF_IDENTITY(1, (1) | (1))) | (1)))))))), uint(uvec2(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-4.0)), float(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), bool(true))), _GLF_ONE(1.0, injectionSwitch.y)))), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), max(_GLF_IDENTITY(int(ivec2(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), (int(ivec2(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (_GLF_IDENTITY(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), (~ (int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1)))))) << (0 >> _GLF_IDENTITY(int(3), int(3)))), int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(33368))))), 0u))), 0u), (true ? uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(0, 0 | (0)), 1))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1))))) | _GLF_IDENTITY((1), 1 * ((1))))), min((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | 0), _GLF_IDENTITY(0, 0 | (0)), 1))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) - 0)))) | _GLF_IDENTITY((1), 1 * ((1))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(0, 0 | (0)), 1))), (_GLF_IDENTITY(1, 0 ^ (1))) | _GLF_IDENTITY((1), 1 * ((1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0 | 0) ^ (0)), 0 | (0)), 1))), (_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), max(_GLF_IDENTITY(0 ^ (1), (0 ^ (1)) | (_GLF_IDENTITY(0 ^ (1), clamp(0 ^ (1), 0 ^ (1), 0 ^ (1))))), _GLF_IDENTITY(0 ^ (1), 0 ^ (0 ^ (1))))))) | _GLF_IDENTITY((1), 1 * ((1)))))) - (0 >> _GLF_IDENTITY(int(2), int(2)))))) | _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1))))), max((_GLF_IDENTITY(1, (1) | (1))) | (1), (_GLF_IDENTITY(1, (1) | (1))) | (1)))))))), uint(uvec2(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))) | (ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), max(_GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec2(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.4, 3.6)) : injectionSwitch)).y))))) << (0 >> _GLF_IDENTITY(int(3), int(3)))), int(_GLF_IDENTITY(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))) | (ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))) : _GLF_FUZZED(33368))))), 0u))), 0u) : _GLF_FUZZED((num_workgroup ^ uvec2(_GLF_IDENTITY(41543u, (41543u) ^ 0u), 190450u)))))) | uvec2(0u, 0u)), (false ? _GLF_FUZZED(uvec2(48705u, _GLF_IDENTITY(169187u, (169187u) >> 0u))) : uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(int(1)))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(true ? int(ivec2(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(86.74)), bool(false))), _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), mix(float(1.0), float(_GLF_FUZZED(86.74)), bool(false))), _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(77.33)), bool(false)))))), float(_GLF_FUZZED(86.74)), bool(false))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, 1.0 * ((1.0) / 1.0)))), min(min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(86.74)), bool(false))), _GLF_IDENTITY(1.0, (1.0) / 1.0)), min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(86.74)), bool(false))), _GLF_IDENTITY(1.0, (1.0) / 1.0))))))), injectionSwitch.y)))) : _GLF_FUZZED(33368), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (true ? int(ivec2(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(33368))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(((-83223) + -38761)), (_GLF_FUZZED(((-83223) + -38761))) | 0) : _GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_IDENTITY(_GLF_FUZZED(33368), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_FUZZED(33368))))))))), 0u ^ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? int(ivec2(1, int(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(33368))))))), 0u))), 0u))), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(uint(1), 0u), clamp(_GLF_IDENTITY(uvec2(uint(1), 0u), uvec2(uvec2(uvec2(uint(1), 0u)))), uvec2(uint(1), 0u), uvec2(uint(1), 0u))))), 0u)), uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (1.0) - 0.0), 1.0, 1.0)), (false ? _GLF_FUZZED(-3.7) : 1.0)))), injectionSwitch.y)) * ((uvec2(_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 0u))), 0u)))) - uvec2(_GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) | 0u) < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), false, true, true)), false || (bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), false, true, true))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(ivec4(1), mat2x3(1.0), 0, uvec2(1u));
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, int(ivec4(4, 1, _GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(85835)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(24195))), 1, 1), (ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(24195))), 1, 1)) >> ivec3(0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(24195))), 1, 1), (ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(24195))), 1, 1)) >> ivec3(0, 0, 0))))))), 1)), 1 * (1)) : _GLF_FUZZED(85835)), (true ? 1 : _GLF_FUZZED(85835)), (true ? 1 : _GLF_FUZZED(85835))))), 1))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (true && (_GLF_IDENTITY(false, (false) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(3.6)), float((injectionSwitch)[1]), bool(true)))))), vec2(_GLF_FUZZED(-2347.3115), _GLF_FUZZED(29.79)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))) && true))), false))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2347.3115), _GLF_FUZZED(29.79)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2347.3115), _GLF_FUZZED(29.79)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2347.3115), _GLF_FUZZED(29.79)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (! (! ((! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2347.3115), _GLF_FUZZED(29.79)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))) && true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false)), false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), bool(bool(! (bool(bool(false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), bool(bool(! (bool(bool(false))))))), true && ((_GLF_IDENTITY(! (bool(bool(false))), bool(bool(! (bool(bool(false)))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), ~ (~ (2)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
