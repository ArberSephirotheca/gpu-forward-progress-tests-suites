#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 uvec4 GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base;
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.xy = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size;
 GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.z = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x;
 GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.xy.y = GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.z;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.xy.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base;
 GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.w = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y;
 uint virtual_gid = GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.w + subgroup_id * GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.xy.y + GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.xy.x;
 uint next_virtual_gid = GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.w + subgroup_id * GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.xy.y + ((GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.xy.x + 1) % GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.xy.y);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.xy.x + 1 < GLF_merged3_0_2_55_2_1_13_3_1_14GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_sizeworkgroup_base.xy.y)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
