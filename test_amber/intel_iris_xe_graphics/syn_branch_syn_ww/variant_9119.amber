#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 uvec4 _f0;
 mat2x3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 mat3x4 _f1;
 mat3 _f2;
 mat2 _f3;
 vec2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 _GLF_struct_4 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 mat4x2 _f1;
 float _f2;
 bvec3 _f3;
 mat4x2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 int i;
 uvec2 _f1;
 mat2x4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 vec3 _f1;
 bvec4 _f2;
 bvec2 _f3;
 bvec2 _f4;
 uint _f5;
 vec3 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec2 _f2;
 mat4 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 int _f1;
 _GLF_struct_7 _f2;
 ivec2 _f3;
 vec4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_IDENTITY(bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), bool(bvec3(bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), false, false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))), true && (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), true && (! (false)))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), true && (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), true && (! (false)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(! (false), true && (! (false)))))), ! (! ((! (bool(_GLF_IDENTITY(! (false), true && (! (false))))))))))), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), true && (! (false)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(! (false), true && (! (false)))))), ! (! ((! (bool(_GLF_IDENTITY(! (false), true && (! (false))))))))))))) && true)))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(! (false), true && (! (false)))))) || false, _GLF_IDENTITY(bool(bvec4((bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (false)))))) || false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), true, false, true)))))), false, true)), bool(bool(bool(bvec4((bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), true && (! (false)))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4695.0518), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4695.0518), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), injectionSwitch)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4695.0518), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(9.2)), vec2(_GLF_FUZZED((false ? float(true) : 7.3)), ((injectionSwitch))[1]), bvec2(false, true)))[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), injectionSwitch)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(mat4x2(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4695.0518), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), injectionSwitch)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(4695.0518), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(4695.0518), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(4695.0518), (injectionSwitch)[1])) * mat2(1.0)), vec2(_GLF_FUZZED(4695.0518), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), injectionSwitch)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-8.3 * 763.586))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-909.397))), 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, ! (! (false))), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))) && true)), ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))) && true))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false))))))))))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) << 0u), 0u) ^ (gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(1.0)))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(roundEven(vec2(9188.9425, 3.1)))))) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) && true), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))), true, false)), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, false))) && true, ! (! ((bool(bvec3(_GLF_DEAD(false), true, false))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))))), true, false)), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, false))) && true, ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(false), true, false))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, false))) && true), false, true), bvec3(bvec3(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, false))) && true), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, false))) && true), false, true), bvec3(bvec3(bvec3(! ((bool(bvec3(_GLF_DEAD(false), true, false))) && true), false, true))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (uint(uvec4(workgroup_base, 0u, (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + subgroup_id * subgroup_size), ~ (~ ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (uint(uvec4(workgroup_base, 0u, (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + subgroup_id * subgroup_size)))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), workgroup_base + subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) && true))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id))) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)) + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id))) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)) + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(mix(workgroup_base, 147249u, false)))), 1u)))) * 1u), (true ? subgroup_id * subgroup_size : _GLF_FUZZED(atomicXor(subgroup_local_id, 196715u)))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1))) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1))) % subgroup_size)))) >> 0u), _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size, 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec4(bool(bvec3(_GLF_DEAD(false), true, false)), false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uaddCarry(uvec4(40525u, 26725u, 103897u, 59788u)[2], subgroup_local_id, workgroup_id)) : uint(1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_3(_GLF_struct_0(mat4x3(1.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.9)), float(1.0), bool(true))), 1.0))), bvec4(true), bvec2(true), bvec2(true), 1u, vec3(1.0)), _GLF_struct_1(uvec4(1u), 0, uvec2(1u), mat2x4(1.0), mat3x2(1.0)), ivec2(1), mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_struct_2(bvec3(true), mat4x2(1.0), 1.0, bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) && true)) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), (_GLF_IDENTITY(! (true), (! (true)) && true)) && true))), bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) && true)) && true))), false, false, true))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) && true)) && true))), bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) && true)) && true))), false, _GLF_IDENTITY(false, false || (false)), true))), false, true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec2((true), false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY((true), bool(bvec2((true), false)))))), bool(bvec4(! (! (! (_GLF_IDENTITY((true), bool(bvec2((true), false)))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false)))))), (! (true)) && true))))), (true) && _GLF_IDENTITY(true, false || (true)))), mat4x2(1.0), bvec2(true))), 1, _GLF_struct_7(uvec4(1u), _GLF_struct_4(ivec4(_GLF_IDENTITY(1, (1) >> 0)), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(5.2) : 1.0), 0.0 + ((false ? _GLF_FUZZED(5.2) : 1.0))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(5.2) : 1.0), 0.0 + ((false ? _GLF_FUZZED(5.2) : 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(5.2) : 1.0), ((false ? _GLF_FUZZED(5.2) : 1.0)) + sin(0.0)), 0.0 + ((false ? _GLF_FUZZED(5.2) : 1.0))) : _GLF_FUZZED(7.3))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6763.6381)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-486.115)), float(1.0), bool(true))), 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)), (float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(5.2) : 1.0), 0.0 + ((false ? _GLF_FUZZED(5.2) : 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(5.2, (5.2) / 1.0)) : 1.0), ((false ? _GLF_FUZZED(5.2) : 1.0)) + sin(0.0)), 0.0 + ((false ? _GLF_FUZZED(5.2) : 1.0))) : _GLF_FUZZED(7.3))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1842.4232)), float(1.0), bool(true)))))))) + 0.0))))), mat4x2(1.0), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec3(bvec2(bvec2(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), false, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, false)))))))))))), true, false)))), _GLF_struct_5(_GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(770.961, 940.591, -7565.9573, _GLF_IDENTITY(7362.7651, mix(float(_GLF_FUZZED(-41.17)), float(_GLF_IDENTITY(7362.7651, (false ? _GLF_FUZZED(-5.6) : 7362.7651))), bool(true))), -9.0, 0.3, -2925.3110, -109.808, 2.2, -6.5, -9.8, -35.83, -4367.8831, 5.3, -57.63, 0.3)))), mat3x4(1.0), mat3(1.0), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-868.263)), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), max(mix(float(1.0), float(_GLF_FUZZED(-868.263)), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), mix(float(1.0), float(_GLF_FUZZED(-868.263)), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-868.263)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, true))))), max(mix(float(1.0), float(_GLF_FUZZED(-868.263)), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), mix(float(1.0), float(_GLF_FUZZED(-868.263)), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))) + 0.0))), vec2(1.0), mat2x3(1.0)), _GLF_struct_6(uvec4(1u), mat2x3(1.0), _GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), ivec3(1))))), ivec2(1), _GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], _GLF_FUZZED(1.8), _GLF_FUZZED(79.55), (vec4(1.0))[3]), vec4(_GLF_FUZZED(vec2(545.628, -5.8).y), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(334.381)), bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), int(int(2))), _GLF_IDENTITY(2, (2) | (2)))) : _GLF_FUZZED(bitCount(99476))))), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), true && ((! (false)))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))))), false || (! (false))), ! (! (! (false))))), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))))), false || (! (false))), ! (! (! (false))))), false)), false || (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))))), false || (! (false))), ! (! (! (false))))), false))))) && true)), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) || false)), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (false)) || false))))))))), bool(bvec4(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), false || (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), false || (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(! (false), (! (false)) || false))), false, false, false)), false || (bool(bvec4((! (_GLF_IDENTITY(! (false), (! (false)) || false))), false, false, false)))))), true))))), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), false || (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(! (false), (! (false)) || false))), false, false, false)), false || (bool(bvec4((! (_GLF_IDENTITY(! (false), (! (false)) || false))), false, false, false)))))), true)))))) || false)))), true, true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))))))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-130.990, min(-130.990, _GLF_IDENTITY(-130.990, clamp(-130.990, -130.990, -130.990)))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(-130.990), float(mat3x2(float(-130.990), sin(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0)))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(float(-130.990), clamp(float(-130.990), float(-130.990), _GLF_IDENTITY(float(-130.990), (float(-130.990)) + 0.0))), (_GLF_IDENTITY(float(-130.990), max(float(-130.990), float(-130.990)))) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), mix(float(_GLF_FUZZED(-7004.6557)), float(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-130.990, min(-130.990, _GLF_IDENTITY(-130.990, clamp(-130.990, -130.990, -130.990)))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(-130.990), float(mat3x2(float(-130.990), sin(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0)))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(float(-130.990), clamp(float(-130.990), float(-130.990), _GLF_IDENTITY(float(-130.990), (float(-130.990)) + 0.0))), (_GLF_IDENTITY(float(-130.990), max(float(-130.990), float(-130.990)))) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), (float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-130.990, min(-130.990, _GLF_IDENTITY(-130.990, clamp(-130.990, -130.990, -130.990)))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(-130.990), float(mat3x2(float(-130.990), sin(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0)))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(float(-130.990), clamp(float(-130.990), float(-130.990), _GLF_IDENTITY(float(-130.990), (float(-130.990)) + 0.0))), (_GLF_IDENTITY(float(-130.990), max(float(-130.990), float(-130.990)))) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))) + 0.0)), bool(true))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(5.4)))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-5189.4555, -7.3).y)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
