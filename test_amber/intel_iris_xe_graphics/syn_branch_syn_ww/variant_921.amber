#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 | 1) ^ 0), ~ (~ (((1 | 1) ^ 0))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) - sin(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)) : _GLF_FUZZED(1654.8463)))) * (injectionSwitch), clamp(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)) : _GLF_FUZZED(1654.8463)))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)) : _GLF_FUZZED(1654.8463)))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)) : _GLF_FUZZED(1654.8463)))) * (injectionSwitch))), min(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)) : _GLF_FUZZED(1654.8463)))) * (injectionSwitch), clamp(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)) : _GLF_FUZZED(1654.8463)))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)) : _GLF_FUZZED(1654.8463)))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)) : _GLF_FUZZED(1654.8463)))) * (injectionSwitch))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)) : _GLF_FUZZED(1654.8463)))) * (injectionSwitch), clamp(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)) : _GLF_FUZZED(1654.8463)))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)) : _GLF_FUZZED(1654.8463)))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)) : _GLF_FUZZED(1654.8463)))) * (injectionSwitch))))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((true ? 811.083 : (_GLF_IDENTITY(-2671.8651 - 829.043, max(-2671.8651 - 829.043, -2671.8651 - 829.043)))))), float(1.0), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.0)), bool(false)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(max(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((true ? 811.083 : (-2671.8651 - 829.043)))), float(1.0), bool(true)))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(max(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((true ? 811.083 : (-2671.8651 - 829.043)))), float(1.0), bool(true)))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(max(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((true ? 811.083 : (-2671.8651 - 829.043)))), float(1.0), bool(true)))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((true ? 811.083 : (-2671.8651 - 829.043)))), float(1.0), bool(true)))) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.0)), bool(false)))), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2274.8097) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? 811.083 : (-2671.8651 - 829.043)))), float(1.0), bool(true)))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.0)), bool(false))))) || false)))))))
      continue;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 | (0 | 0), clamp(_GLF_IDENTITY(0 | (0 | 0), ~ (~ (_GLF_IDENTITY(0 | (0 | 0), (0 | (0 | 0)) >> 0)))), 0 | (0 | 0), 0 | (0 | 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(bool(bvec2(true, true)), (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))), bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bvec2(true, true)), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bool(bvec2(true, true)), false), true)), true, false))))))) ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))) + (workgroup_base)) : _GLF_FUZZED(subgroup_size)), _GLF_IDENTITY(((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), false), bvec2(bvec3(bvec2(bool(bvec2(true, true)), false), true)))))) ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)) + _GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))) | (_GLF_FUZZED(subgroup_size))))), min(((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), (bool(bvec2(true, true))) && true), bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), false), bvec2(bvec3(bvec2(bool(bvec2(true, true)), false), true)))))) ? _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) : _GLF_FUZZED(subgroup_size))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true), bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), false), bvec2(bvec3(bvec2(bool(bvec2(true, true)), false), true)))))) ? _GLF_IDENTITY(workgroup_base, 0u + _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base)))) : _GLF_FUZZED(subgroup_size))))) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), max((~ (0u)), (~ (0u))))))))) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ (subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ (subgroup_local_id), (0u ^ (subgroup_local_id)) | (_GLF_IDENTITY(0u ^ (subgroup_local_id), _GLF_IDENTITY(uint(uint(0u ^ (subgroup_local_id))), max(uint(uint(0u ^ (subgroup_local_id))), uint(uint(0u ^ (subgroup_local_id)))))))), 0u, 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED((uvec2(188893u, 47412u) , uvec3(5988u, 194178u, 95401u))) : uvec3(_GLF_IDENTITY(0u ^ (subgroup_local_id), (0u ^ (subgroup_local_id)) | (_GLF_IDENTITY(0u ^ _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id))), uint(uint(0u ^ (subgroup_local_id)))))), 0u, 1u), (false ? _GLF_FUZZED((uvec2(188893u, 47412u) , uvec3(5988u, 194178u, 95401u))) : uvec3(_GLF_IDENTITY(0u ^ (subgroup_local_id), (0u ^ (subgroup_local_id)) | (_GLF_IDENTITY(0u ^ _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id))), uint(uint(0u ^ (subgroup_local_id)))))), 0u, 1u)) + uvec3(0u, 0u, 0u))))), min(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)) ^ (subgroup_local_id), (0u ^ (subgroup_local_id)) | (_GLF_IDENTITY(0u ^ (subgroup_local_id), uint(uint(0u ^ (subgroup_local_id)))))), 0u, 1u), (false ? _GLF_FUZZED((uvec2(188893u, 47412u) , uvec3(5988u, 194178u, 95401u))) : uvec3(_GLF_IDENTITY(0u ^ (subgroup_local_id), (0u ^ (subgroup_local_id)) | (_GLF_IDENTITY(0u ^ (subgroup_local_id), uint(uint(0u ^ (subgroup_local_id)))))), 0u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ (subgroup_local_id), (0u ^ (subgroup_local_id)) | (_GLF_IDENTITY(0u ^ (subgroup_local_id), uint(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) ^ 0u)) >> 0u)) ^ (subgroup_local_id)))))), 0u, 1u), (false ? _GLF_FUZZED((uvec2(188893u, 47412u) , uvec3(5988u, 194178u, 95401u))) : uvec3(_GLF_IDENTITY(0u ^ (subgroup_local_id), _GLF_IDENTITY((0u ^ (subgroup_local_id)) | (_GLF_IDENTITY(0u ^ (subgroup_local_id), uint(uint(0u ^ (subgroup_local_id))))), (_GLF_IDENTITY((0u ^ (subgroup_local_id)) | (_GLF_IDENTITY(0u ^ (subgroup_local_id), uint(uint(0u ^ (subgroup_local_id))))), uint(_GLF_IDENTITY(uint((0u ^ (subgroup_local_id)) | (_GLF_IDENTITY(0u ^ (subgroup_local_id), uint(uint(0u ^ (subgroup_local_id)))))), (false ? _GLF_FUZZED(subgroup_local_id) : uint((0u ^ (subgroup_local_id)) | (_GLF_IDENTITY(0u ^ (subgroup_local_id), uint(uint(0u ^ (subgroup_local_id))))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, 1u))))))))))) * _GLF_IDENTITY(1u, (1u) << 0u))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size)))) ^ 0u), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), min((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), clamp((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1))))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1))))))) % subgroup_size), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : subgroup_size, 0u + (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) : subgroup_size))) | _GLF_IDENTITY(0u, 0u ^ (0u)))))) ^ 0u), (_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) / 1u))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))) * subgroup_size) >> 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)))), 0u ^ ((subgroup_local_id + 1))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)))), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)))), 0u ^ ((subgroup_local_id + 1))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)))), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size) | 0u)), max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))))))), ((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))))))) | 0u))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) >> 0u)) | (subgroup_size)), (subgroup_id * subgroup_size) >> 0u))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))) / 1u)), max((subgroup_id * subgroup_size), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size))) >> 0u) + ((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % subgroup_size))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ (~ ((subgroup_id * subgroup_size) >> 0u)))) | ((subgroup_id * subgroup_size) >> 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | 0u, (false ? _GLF_FUZZED(atomicExchange(subgroup_size, num_workgroup)) : (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size))) | 0u)))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) >> 0u) + ((subgroup_local_id + 1) % subgroup_size)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), (32077u & uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << (63139u & 0u))) ^ 0u)) >> 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))) >> 0u)) ^ 0u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), 1u * ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))) % subgroup_size), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ 0u)) >> 0u), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) * subgroup_size) ^ 0u)) >> 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))))) >> 0u)) ^ _GLF_IDENTITY(0u, min(0u, 0u))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), 1u * ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u)) ^ 0u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), 1u * ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))) % subgroup_size), 0u | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u)) ^ 0u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), 1u * ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))) % subgroup_size))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u)) ^ 0u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), 1u * ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))) % subgroup_size), 0u | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u)) ^ 0u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), 1u * ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))) % subgroup_size))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u), uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) >> 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size))) ^ 0u)) >> 0u)) ^ 0u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id)) + 1)), max(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id)) + 1)), ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id)) + 1))))) % subgroup_size))))))))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   do
    {
     atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), true && (bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))))))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) / 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, exp(0.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false))))))))) && true))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (false) && true))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))))))), false, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))))))), false, false)))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(-629.100)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), true, false), false))))), false), true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))))))), false, false)))), false)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && _GLF_IDENTITY(true, (true) && true))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), true, true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), true, true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), true, true)))), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), true, true)))), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), true, true)))), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), true, true)))), true))))))))))))))))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && _GLF_IDENTITY(true, (true) && true))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), true, true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), true, true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), true, true)))), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), true, true)))), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), true, true)))), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false), true, true)), _GLF_IDENTITY(false, (false) || false)))), true)), true, true)))), true)))))))))))))))))) || false) && true)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(log(vec2(1.6, -52.72))))).y)), true)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(log(vec2(1.6, -52.72))))).y)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))))).x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / exp(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))).y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(8.0, -1.5)))), injectionSwitch)), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) * mat2(1.0)))).x, mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x) * 1.0)), bool(true))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) / exp(vec2(0.0, 0.0)), vec2(vec4((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0)), 0.0, log(1.0))))).y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) / vec2(1.0, 1.0)))).x), bool(true))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / exp(vec2(0.0, 0.0)), vec2(vec4((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.4, -37.38)) : injectionSwitch)), injectionSwitch))) / exp(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(log(1.0), _GLF_IDENTITY((log(1.0)) + 0.0, clamp((log(1.0)) + 0.0, (log(1.0)) + 0.0, (log(1.0)) + 0.0))))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / exp(vec2(0.0, 0.0)), vec2(vec4((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.4, -37.38)) : injectionSwitch)), injectionSwitch))) / exp(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(log(1.0), _GLF_IDENTITY((log(1.0)) + 0.0, clamp((log(1.0)) + 0.0, (log(1.0)) + 0.0, (log(1.0)) + 0.0))))))).y), float(_GLF_FUZZED(-9683.0218)), bool(false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) && (true)), ! (! (((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) && (true))))), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) && (true)), ! (! (((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) && (true))))), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) && (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) && (true)), ! (! (((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) && (true))))), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) && (true)), ! (! (((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) && (true))))), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))), true && ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))))) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))), true && ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))), true && ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))), true && ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))))) || false))) || false), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))), true && ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))), true && ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))), true && ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))))) || false))) || false), true, false))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, true)))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((65.28))), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), bvec2(false, true))).y), true, true)), (bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, true))) && true)), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, true))), false)))))))) && true))))))
    return;
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))).y, mix(float(_GLF_FUZZED(904.354)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))).y, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))).y : _GLF_FUZZED(-7.4)))), bool(true)))))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), (subgroup_size) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)), max(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)), uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))), uint(0u)))), subgroup_size)), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) * 1u)) + 0u), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u)) + 0u), true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))))), _GLF_IDENTITY((false ? _GLF_FUZZED(packSnorm2x16(vec2(_GLF_IDENTITY(6.6, float(_GLF_IDENTITY(mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-479.794, 7832.7124, 3150.6097, 1.6, 5.2, 123.566, -62.38, -3.9, -6209.0940)) : mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0))))), -6.3))) : (subgroup_size)), max((false ? _GLF_FUZZED(packSnorm2x16(vec2(_GLF_IDENTITY(6.6, float(_GLF_IDENTITY(mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-479.794, 7832.7124, 3150.6097, 1.6, 5.2, 123.566, -62.38, -3.9, -6209.0940)) : mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0))))), -6.3))) : (subgroup_size)), (false ? _GLF_FUZZED(packSnorm2x16(vec2(_GLF_IDENTITY(6.6, float(_GLF_IDENTITY(mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-479.794, 7832.7124, 3150.6097, 1.6, 5.2, 123.566, -62.38, -3.9, -6209.0940)) : mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0))))), -6.3))) : (subgroup_size))))) * 1u), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u)), (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u)), (max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u))) | (max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u))))) / 1u))) + 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u)) + 0u), true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))))), _GLF_IDENTITY((false ? _GLF_FUZZED(packSnorm2x16(vec2(_GLF_IDENTITY(6.6, float(_GLF_IDENTITY(mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-479.794, 7832.7124, 3150.6097, 1.6, 5.2, 123.566, -62.38, -3.9, -6209.0940)) : mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0))))), -6.3))) : (subgroup_size)), max((false ? _GLF_FUZZED(packSnorm2x16(vec2(_GLF_IDENTITY(6.6, float(_GLF_IDENTITY(mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-479.794, 7832.7124, 3150.6097, 1.6, 5.2, 123.566, -62.38, -3.9, -6209.0940)) : mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0))))), -6.3))) : (subgroup_size)), (false ? _GLF_FUZZED(packSnorm2x16(vec2(_GLF_IDENTITY(6.6, float(_GLF_IDENTITY(mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-479.794, 7832.7124, 3150.6097, 1.6, 5.2, 123.566, -62.38, -3.9, -6209.0940)) : mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0))))), -6.3))) : (subgroup_size))))) * 1u), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u)), (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u)), (max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u))) | (max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u))))) / 1u))) + 0u))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u)) + 0u), true && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), max((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), (subgroup_size))))), _GLF_IDENTITY((false ? _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(vec2(_GLF_IDENTITY(6.6, float(_GLF_IDENTITY(mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-479.794, 7832.7124, 3150.6097, 1.6, 5.2, 123.566, -62.38, -3.9, -6209.0940)) : mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) / vec2(1.0, 1.0)))), cos(0.0), 0.0))))), -6.3), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY(6.6, float(_GLF_IDENTITY(mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-479.794, 7832.7124, 3150.6097, 1.6, 5.2, 123.566, -62.38, -3.9, -6209.0940)) : mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) / vec2(1.0, 1.0)))), cos(0.0), 0.0))))), -6.3), (true ? vec2(_GLF_IDENTITY(6.6, float(_GLF_IDENTITY(mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-479.794, 7832.7124, 3150.6097, 1.6, 5.2, 123.566, -62.38, -3.9, -6209.0940)) : mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) / vec2(1.0, 1.0)))), cos(0.0), 0.0))))), -6.3) : _GLF_FUZZED(vec2(4.3, 5.8)))))))) : (subgroup_size)), max((false ? _GLF_FUZZED(packSnorm2x16(vec2(_GLF_IDENTITY(6.6, float(_GLF_IDENTITY(mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(21.67, 66.45).r)), float(injectionSwitch.y), bool(true))))) ? _GLF_FUZZED(mat3(-479.794, 7832.7124, 3150.6097, 1.6, 5.2, 123.566, -62.38, -3.9, -6209.0940)) : mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0))))), -6.3))) : (subgroup_size)), (false ? _GLF_FUZZED(packSnorm2x16(vec2(_GLF_IDENTITY(6.6, float(_GLF_IDENTITY(mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-479.794, 7832.7124, 3150.6097, 1.6, 5.2, 123.566, -62.38, -3.9, -6209.0940)) : mat3(6.6, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(977.628) : 0.0)), 0.0))), 0.0))))), -6.3))) : (subgroup_size))))) * 1u), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u)), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true) ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u)), (max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u))) | (max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6.6, -6.3))) : (subgroup_size))) * 1u))))) / 1u))) + 0u))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))))))))) && true)))
            return;
          }
         else
          {
          }
        }
       else
        {
        }
       int i = 0;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) | (2))), 4, 64, 4);
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
               if(_GLF_DEAD(false))
                break;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)) : injectionSwitch, min(false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)) : injectionSwitch, max(false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)))) : injectionSwitch, min(false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)), min((_GLF_FUZZED(injectionSwitch)), (_GLF_FUZZED(injectionSwitch)))) * mat2(1.0)) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)) : _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), max((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)))) : injectionSwitch), mix(vec2(((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), max((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)))) : injectionSwitch))[0], _GLF_FUZZED((+ -472.594))), vec2(_GLF_FUZZED((-5.0 / -49.73)), ((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), max((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)))) : injectionSwitch))[1]), bvec2(false, true)))).x > injectionSwitch.y), false, false)), false || (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), max((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)))) : injectionSwitch), mix(vec2(((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), max((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)))) : injectionSwitch))[0], _GLF_FUZZED((+ -472.594))), vec2(_GLF_FUZZED((-5.0 / -49.73)), ((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), max((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)))) : injectionSwitch))[1]), bvec2(false, true)))).x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), max((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)))) : injectionSwitch), mix(vec2(((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), max((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)))) : injectionSwitch))[0], _GLF_FUZZED((+ -472.594))), vec2(_GLF_FUZZED((-5.0 / -49.73)), ((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), max((_GLF_FUZZED(injectionSwitch)) * mat2(1.0), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)))) : injectionSwitch))[1]), bvec2(false, true)))).x > injectionSwitch.y), false, false)))))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
     else
      {
       do
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY(0, int(ivec3(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) / 1)) << 0), int(ivec3(int(3), 1, (1 & 1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-64.60)), vec2(_GLF_FUZZED((true ? -7.2 : 9.1)), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) && true))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, true))))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 return;
                }
              }
             return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 32989)); _injected_loop_counter --)
              {
               return;
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) || false))) || false))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
