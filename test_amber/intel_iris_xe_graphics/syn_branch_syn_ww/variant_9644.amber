#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_37 {
 mat3x4 _f0;
} ;

struct _GLF_struct_36 {
 uvec2 _f0;
 float _f1;
 mat2x3 _f2;
 vec2 _f3;
 bvec4 _f4;
 mat2x3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_35 {
 mat3x4 _f0;
 float _f1;
} ;

struct _GLF_struct_38 {
 _GLF_struct_35 _f0;
 ivec3 _f1;
 _GLF_struct_36 _f2;
 mat4x2 _f3;
 uint _f4;
 _GLF_struct_37 _f5;
} ;

struct _GLF_struct_33 {
 vec2 _f0;
 uint _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_34 {
 mat4x3 _f0;
 mat3x2 _f1;
 _GLF_struct_33 _f2;
} ;

struct _GLF_struct_39 {
 _GLF_struct_34 _f0;
 uint virtual_gid;
 _GLF_struct_38 _f1;
} ;

struct _GLF_struct_30 {
 mat2x4 _f0;
 ivec4 _f1;
 uvec2 _f2;
 mat3x4 _f3;
 uvec4 _f4;
 int _f5;
} ;

struct _GLF_struct_31 {
 _GLF_struct_30 _f0;
 ivec3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_28 {
 vec4 _f0;
 ivec4 _f1;
 float _f2;
 ivec3 _f3;
 mat2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_27 {
 mat2x4 _f0;
 vec4 _f1;
 vec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_26 {
 bvec3 _f0;
 ivec4 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 int _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_29 {
 bvec3 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_27 _f2;
 _GLF_struct_28 _f3;
} ;

struct _GLF_struct_24 {
 bool _f0;
 bvec4 _f1;
 ivec2 _f2;
 bvec2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_23 {
 ivec2 _f0;
 mat3x2 _f1;
 float _f2;
} ;

struct _GLF_struct_22 {
 ivec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_25 {
 _GLF_struct_22 _f0;
 vec3 _f1;
 bool _f2;
 _GLF_struct_23 _f3;
 mat4x2 _f4;
 uint workgroup_size;
 _GLF_struct_24 _f5;
} ;

struct _GLF_struct_20 {
 mat4x3 _f0;
 uvec3 _f1;
 uint _f2;
 mat2x3 _f3;
 vec2 _f4;
 ivec2 _f5;
 int _f6;
} ;

struct _GLF_struct_19 {
 mat4 _f0;
 mat3x2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_18 {
 mat3x2 _f0;
 mat2 _f1;
 uint _f2;
} ;

struct _GLF_struct_17 {
 uint _f0;
 mat4x3 _f1;
 bool _f2;
 mat2 _f3;
} ;

struct _GLF_struct_21 {
 uvec2 _f0;
 uvec4 _f1;
 _GLF_struct_17 _f2;
 vec4 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_19 _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_32 {
 _GLF_struct_21 _f0;
 uvec3 _f1;
 mat4 _f2;
 _GLF_struct_25 _f3;
 mat4 _f4;
 _GLF_struct_29 _f5;
 _GLF_struct_31 _f6;
} ;

struct _GLF_struct_16 {
 uint subgroup_id;
 mat2x3 _f0;
 bool _f1;
 mat3 _f2;
} ;

struct _GLF_struct_14 {
 uint _f0;
 vec3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_12 {
 bool _f0;
 uint workgroup_id;
 ivec3 _f1;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
 mat4x2 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 bvec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 mat2x4 _f2;
 _GLF_struct_12 _f3;
} ;

struct _GLF_struct_15 {
 float _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_7 {
 int _f0;
 ivec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
 bvec2 _f1;
 ivec4 _f2;
 bvec2 _f3;
 mat3x4 _f4;
 vec3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 int _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 ivec4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 float _f1;
 uvec2 _f2;
 bool _f3;
 mat4x2 _f4;
 ivec3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 vec2 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 bool _f4;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
 float _f1;
 _GLF_struct_3 _f2;
 uint subgroup_size;
 _GLF_struct_5 _f3;
 vec3 _f4;
 _GLF_struct_8 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(gl_SubgroupID, mat2x3(1.0), true, mat3(1.0));
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(mat2(1.0), 1.0, _GLF_struct_3(_GLF_struct_0(mat3x4(1.0), 1.0, uvec2(1u), true, mat4x2(1.0), ivec3(1), mat3x2(1.0)), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), clamp(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, _GLF_IDENTITY(1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (1.0)), 1.0)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(_GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - length(0.0)), sqrt(1.0)))) * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, abs(_GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - length(0.0)), sqrt(1.0)))) * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(_GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - length(0.0)), sqrt(1.0)))) * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, abs(_GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - length(0.0)), sqrt(1.0)))) * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(length(vec3(-7.5, 5005.4635, 4.0))))))), 1.0, 1.0)))))), _GLF_struct_1(bvec4(true), ivec4(1), mat4x2(1.0)), _GLF_struct_2(uvec2(1u), 1, bvec3(true)), true), gl_SubgroupSize, _GLF_struct_5(_GLF_struct_4(mat2x4(1.0)), mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_struct_8(_GLF_struct_6(vec2(1.0), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (true))), ivec4(1), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))), true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true))), false)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true))), false))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true))), false))))))), false, true))))))), true && (bool(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false), false)))))))))))))))))) || false), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec2(bool((false)), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))))), true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false)))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.7))))), true), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false)), bool(bool(bool(bvec3(! (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false))))))))), false))))), true))), false)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y))))), false))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true))), false))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true))), false))))))), false, true))))))), true && (bool(bvec2((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.2)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), false))))) || false)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! (_GLF_IDENTITY((true) && true, false || ((true) && true))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false), false)))))))))))))))))) || false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (injectionSwitch.x > injectionSwitch.y)), true), false, false))))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8503.8724)), bool(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(68.04)), float(injectionSwitch.x), bool(true)))) - tan(0.0)) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), true), false, true))), false, false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), true))))))), false, false))))))) || false, bool(bvec4((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), true))))))), false, false))))))) || false, true, false, true))))), false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true), false, false))))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0))).y)))))))))))), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))) || false))))))), true), false, true))), false, false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9250.3080)), bool(false)))), float(_GLF_FUZZED((false ? -6.2 : (true ? -9643.2941 : 2.5)))), bool(false))) > injectionSwitch.y)), true), false, false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), true)))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true), false, false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), true))), true))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true), false, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, _GLF_IDENTITY(false, ! (! (false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true), false, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), true))))))), false, false))))))) || false)), false, false)))))))), true, false, true))))), false))), mat3x4(1.0), vec3(1.0), mat4x3(1.0)), _GLF_struct_7(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, ~ (~ (1))), 1))))) | (1))) - 0), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1)))) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-89111) : 1)))), (_GLF_IDENTITY(1, 0 ^ (1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), 1)), mat4x2(1.0))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(_GLF_struct_21(uvec2(1u), uvec4(1u), _GLF_struct_17(1u, mat4x3(1.0), true, _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))), vec4(1.0), _GLF_struct_18(mat3x2(1.0), mat2(1.0), 1u), _GLF_struct_19(_GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - determinant(mat2(0.0, 1.0, 0.0, tan(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-47.37)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), (0.0 + (0.0)) / 1.0)), injectionSwitch.x), float(vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), 0.0 + (0.0 + (0.0)))), injectionSwitch.x), 0.0, exp(0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)))), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.4) : 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) + 0.0), cos(0.0) * (injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)))), clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), vec2(_GLF_FUZZED(vec4(1057.1115, -9.3, -0.7, -930.674).x), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * mat2(1.0)).x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 0.0))), injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - sqrt(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-347.826) : _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_FUZZED(5.4)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))), mat3x2(1.0), ivec4(1)), _GLF_struct_20(mat4x3(1.0), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << uvec3(0u, 0u, 0u)), 1u, mat2x3(1.0), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9981.8929)), float(1.0), bool(true)))), ivec2(1), 1)), uvec3(1u), mat4(1.0), _GLF_struct_25(_GLF_struct_22(ivec2(1), bvec4(_GLF_IDENTITY(true, false || (true)))), vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))), true, _GLF_struct_23(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))), mat3x2(1.0), 1.0), mat4x2(1.0), gl_WorkGroupSize.x, _GLF_struct_24(true, bvec4(true), ivec2(1), bvec2(true), ivec4(1))), mat4(1.0), _GLF_struct_29(bvec3(true), _GLF_struct_26(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 1.0)), mix(float(float(vec3(injectionSwitch.x, 1.0, 1.0))), float(_GLF_FUZZED(6641.5969)), bool(false)))), (false ? _GLF_FUZZED(-72.49) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 1.0)), mix(float(float(vec3(injectionSwitch.x, 1.0, 1.0))), float(_GLF_FUZZED(6641.5969)), bool(false)))), (false ? _GLF_FUZZED(-72.49) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 1.0)), mix(float(float(vec3(injectionSwitch.x, 1.0, 1.0))), float(_GLF_FUZZED(6641.5969)), bool(false)))), (false ? _GLF_FUZZED(-72.49) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), true)), true))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))))), ivec4(1), mat3x2(1.0), mat3x4(1.0), 1, _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), ivec3(1))), clamp(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) ^ ivec3(_GLF_IDENTITY(0, (0) << 0), 0, 0), (_GLF_IDENTITY((ivec3(1)) ^ ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (0) << 0), 0, 0), ((ivec3(1)) ^ ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, (true ? (0) << 0 : _GLF_FUZZED(((9625 * -73435) >> -58943))))), 0, 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) ^ ivec3(0, 0, 0)), (ivec3(0, 0, 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))), _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))), 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))), _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))), 0), (ivec3(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))), _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))), 0)) + ivec3(0, 0, 0))) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))), _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))), 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))), _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))), 0), (ivec3(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))), _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))), 0)) | ivec3(0, 0, 0))))))), ivec3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(0, 0, 0), ivec3(0, 0, 0) + (ivec3(0, 0, 0))), 1), (false ? _GLF_FUZZED(ivec4(58934, -45952, -46903, 57371)) : ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(0, 0, 0), max(ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(6), ivec3(6))) >> _GLF_IDENTITY(ivec3(6), ivec3(6))) * (ivec3(0, 0, 0))))), ivec3(0, 0, 0) + (ivec3(0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(0, 0, 0), max(ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(6), ivec3(6))) >> _GLF_IDENTITY(ivec3(6), ivec3(6))) * (ivec3(0, 0, 0))))), ivec3(0, 0, 0) + (ivec3(0, 0, 0)))) << ivec3(0, 0, 0)), 1))))))))) - ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(1), (true ? ivec3(1) : _GLF_FUZZED(ivec3(39645, 27444, -56559)))), ivec3(1)))), _GLF_struct_27(mat2x4(1.0), vec4(1.0), vec3(1.0), mat4x2(1.0)), _GLF_struct_28(vec4(1.0), ivec4(1), 1.0, ivec3(1), mat2(1.0), ivec3(1))), _GLF_struct_31(_GLF_struct_30(mat2x4(1.0), ivec4(1), uvec2(1u), mat3x4(1.0), uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(-40699))))), 1))))) / 1)), ivec3(1), uvec4(1u)));
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(1.0, _GLF_struct_13(_GLF_struct_10(mat3x4(1.0), bvec2(true), 1u), _GLF_struct_11(ivec3(_GLF_IDENTITY(1, (1) * 1)), mat4x2(1.0), mat2x3(1.0)), mat2x4(1.0), _GLF_struct_12(true, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), ivec3(1))), (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(1), ivec3(1))) + (ivec3(1))))), _GLF_struct_14(1u, vec3(1.0), bvec4(true)));
 uint workgroup_base = _GLF_struct_replacement_32._f3.workgroup_size * _GLF_struct_replacement_15._f1._f3.workgroup_id;
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_34(mat4x3(1.0), mat3x2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(4354.0553)))), _GLF_struct_33(vec2(1.0), _GLF_IDENTITY(1u, (1u) | 0u), ivec2(1))), workgroup_base + _GLF_struct_replacement_16.subgroup_id * _GLF_struct_replacement_9.subgroup_size + subgroup_local_id, _GLF_struct_38(_GLF_struct_35(mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(106.109) : 1.0))), 1.0), ivec3(1), _GLF_struct_36(uvec2(1u), 1.0, mat2x3(1.0), vec2(1.0), bvec4(true), mat2x3(1.0), mat2x4(1.0)), mat4x2(1.0), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u))))))), _GLF_struct_37(mat3x4(1.0))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, 1u), uvec2(uvec3(uvec2(workgroup_base, 1u), 0u))))) + _GLF_struct_replacement_16.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, min(_GLF_struct_replacement_9.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, 0u ^ (_GLF_struct_replacement_9.subgroup_size)), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)) ^ (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, clamp(_GLF_struct_replacement_9.subgroup_size, _GLF_struct_replacement_9.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, uint(uvec4(_GLF_struct_replacement_9.subgroup_size, 1u, 0u, 1u))))))) : _GLF_FUZZED(num_workgroup))))) + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))))))), ((_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2))))))))) - 0)), int(ivec4(~ ((_GLF_IDENTITY(1, (1) - 0))), 0, 0, 0))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) + 0)))) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2))))))), (true ? _GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2))))))) : _GLF_FUZZED(-43665))))) - 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) + 0)))) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2))))))), (true ? _GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2))))))) : _GLF_FUZZED(-43665))))) - 0)))), _GLF_IDENTITY(int(ivec4(~ ((_GLF_IDENTITY(1, (1) - 0))), 0, 0, 0)), 1 * (int(ivec4(~ ((_GLF_IDENTITY(1, (1) - 0))), 0, 0, 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2))))))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))))))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))))))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))), (1) - _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(2), int(2))))))))) - 0)), int(ivec4(~ ((_GLF_IDENTITY(1, (1) - 0))), 0, 0, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1))))))))) | (~ ((_GLF_IDENTITY(1, (1) - 0))))))))) % _GLF_struct_replacement_9.subgroup_size);
 atomicStore(buf[_GLF_struct_replacement_39.virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size)
  {
   int i = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-74615, (_GLF_IDENTITY(-74615, (false ? _GLF_FUZZED(-55381) : -74615))) * 1)) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(19874)))));
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(min(uint(2), uint(2)), 0u ^ (min(uint(2), uint(2)))))) | (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))))))))), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
