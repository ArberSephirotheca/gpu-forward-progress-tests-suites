#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), (false ? _GLF_FUZZED(uvec3(51714u, 188945u, 51666u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 1u * (gl_NumWorkGroups[2])))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 1u * (gl_NumWorkGroups[2]))))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 1u * (gl_NumWorkGroups[2]))))))[2], (gl_NumWorkGroups[2]) * 1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, 1u), (uvec3(gl_WorkGroupSize.x, 0u, 1u)) - uvec3(0u, 0u, 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x3(injectionSwitch[0], 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(-2824.0393, 52.54, 51.46, -5.4, -7.2, 279.367, -51.25, -0.3, 53.64, 4.9, -4.8, 860.385)) : mat4x3(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat4x3(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(-2824.0393, 52.54, 51.46, -5.4, -7.2, 279.367, -51.25, -0.3, 53.64, 4.9, -4.8, 860.385)) : mat4x3(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.4)), bool(false))), 0.0, tan(0.0), 1.0, 1.0)))), float(_GLF_IDENTITY(mat4x3(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(-2824.0393, 52.54, 51.46, -5.4, -7.2, 279.367, -51.25, -0.3, 53.64, 4.9, -4.8, 860.385)) : mat4x3(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)))), float(_GLF_IDENTITY(mat4x3(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(-2824.0393, 52.54, 51.46, -5.4, -7.2, 279.367, -51.25, -0.3, 53.64, 4.9, -4.8, 860.385)) : mat4x3(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec4(3.8, -9.3, -7.8, -0.7), max(vec4(3.8, -9.3, -7.8, -0.7), vec4(3.8, -9.3, -7.8, -0.7))).q) : injectionSwitch.x)) > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)), max(float(mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)), float(mat3(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), abs(0.0) + (float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), (float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))) / 1.0))))), max(_GLF_ZERO(_GLF_IDENTITY(0.0, length(vec3(0.0, 0.0, 0.0)) + (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, tan(0.0), 0.0, 1.0, abs(1.0), 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, cos(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))).x, mix(float(_GLF_FUZZED(-699.794)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-161.856))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.8)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-161.856))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.8)), bool(false))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-161.856))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.8)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-161.856))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.8)), bool(false)))))))) - 0.0)), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))))))))), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1889.4493) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) | 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))))), 1u, 1u)))) - 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))))), 1u, 1u)))) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))))), 1u, 1u)))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))))), 1u, 1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))))), 1u, 1u)))) - 0u), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))))), 1u, 1u)))) - 0u)))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))), 0u + ((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (0u ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))))), 1u, 1u)))) - 0u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((true ? vec2(2.3, -0.2) : vec2(-4.1, -3761.3828))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((true ? vec2(2.3, -0.2) : vec2(-4.1, -3761.3828))))).x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), uint(uint(_GLF_IDENTITY((0u), ((0u)) ^ 0u)))))), 0u | (~ (0u))))) ^ (subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1832.9155, _GLF_IDENTITY(-9.6, sqrt(1.0) * (-9.6)))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-59.16, -2.1)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-59.16, -2.1)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))).y) - 0.0)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, abs(0.0)), vec4(mat2x3(vec4(injectionSwitch, 0.0, abs(0.0)), 1.0, 0.0))))).x > injectionSwitch.y)), true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), ((false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0))).y), max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), ((false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0))).y), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), ((false ? _GLF_FUZZED(vec2(-1832.9155, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0))).y)))))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), ~ (~ (int(ivec2(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(4528) : 4))))), 0)))))), 64, 4);
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0), max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) || false)))))
    barrier();
   int i = _GLF_IDENTITY(0, max(0, 0));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) - 0u), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(55403) : 4)))), (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), ~ (~ (4))))), _GLF_IDENTITY(4, (4) >> 0)))) + 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-71648, _GLF_IDENTITY(-30827, _GLF_IDENTITY((0 & 32024), ((0 & 32024)) + (0 | 0)) | (_GLF_IDENTITY(-30827, ~ (~ (-30827)))))))))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (((! (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y)))), ! (! (! (((! (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y))))))))) || false))) && _GLF_IDENTITY(true, ! (! (true)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y)), ((! (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y))) || false))) && _GLF_IDENTITY(true, ! (! (true)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-454.927)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-51.58)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-51.58), float(mat3x2(_GLF_FUZZED(-51.58), determinant(mat2(1.0, 1.0, 0.0, 1.0)), length(0.0), 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)), float(mat3x4(mix(float(_GLF_FUZZED(-51.58)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))) - 0.0)), min(injectionSwitch.y, injectionSwitch.y)))))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true), _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), (! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))) && true)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))))))) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(intBitsToFloat(-67545))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(intBitsToFloat(-67545))), 0.0 + ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(intBitsToFloat(-67545)))))) * 1.0)) > injectionSwitch.y)), false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(82.06, -790.308)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))), (injectionSwitch) * vec2(1.0, 1.0)).y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-298.801))) + 0.0, (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-298.801))) + 0.0) + 0.0)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mat2(1.0) * (max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).y)) && true), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY(true ? (injectionSwitch.x) : _GLF_FUZZED(-298.801), clamp(true ? (injectionSwitch.x) : _GLF_FUZZED(-298.801), true ? (injectionSwitch.x) : _GLF_FUZZED(-298.801), true ? (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) : _GLF_FUZZED(-298.801))))) + 0.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0)) * (max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).y)) && true)))))))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5955.6670), _GLF_FUZZED(47.05)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5955.6670), _GLF_FUZZED(47.05)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5955.6670), _GLF_FUZZED(47.05)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5955.6670), _GLF_FUZZED(47.05)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5955.6670), _GLF_FUZZED(47.05)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5955.6670), _GLF_FUZZED(47.05)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x))), float(_GLF_FUZZED(4532.9002)), bool(false))), (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) > injectionSwitch.y)) ? _GLF_FUZZED(-73.32) : 1.0), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_FUZZED(-73.32) : 1.0)) * 1.0)) * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0)), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2((false) && true, false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false) && true, true && ((false) && true)), false), true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2((false) && true, false), true), bvec3(bvec3(bvec3(bvec2((false) && true, false), true))))))), (bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2((false) && true, false), true), bvec3(bvec3(bvec3(bvec2((false) && true, false), true)))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-2486.6920, 195.964)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-2486.6920, 195.964)), (true ? _GLF_FUZZED(vec2(-2486.6920, 195.964)) : _GLF_FUZZED(vec2(620.344, -2.9))))) / vec2(1.0, 1.0)) : injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(1.0))))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, 0.0 + (0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(25.77) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))), ! (! (((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))), true && (_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y))), bool(bvec2(((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(round(roundEven(470.937))))), 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), float(mat4x2(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), mix(float(_GLF_FUZZED(-35.33)), float(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.0) : 0.0))) - 0.0)))), bool(true))), 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)), 1.0, length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(length(0.0), mix(float(length(0.0)), float(_GLF_FUZZED(vec3(53.39, -6.3, 593.704).s)), bool(false))))))))))), dot(vec3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(594.654)), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true))), 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0))), 1.0, 0.0)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(round(roundEven(470.937))))), 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), float(mat4x2(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), mix(float(_GLF_FUZZED(-35.33)), float(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.0) : 0.0))) - 0.0)))), bool(true))), 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)), 1.0, length(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(length(0.0), mix(float(length(0.0)), float(_GLF_FUZZED(vec3(53.39, -6.3, 593.704).s)), bool(false))))))))))), dot(vec3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(594.654)), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true))), 1.0), vec2(0.0, 1.0))), 0.0, 1.0), vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0))), 1.0, 0.0)))) > injectionSwitch.y)) && true))), false))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(891.323)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(2.8)))))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (injectionSwitch.x) + 0.0) > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (injectionSwitch.x) + 0.0) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(1.0) : _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(4.8, (false ? _GLF_FUZZED(-8.7) : 4.8)))), float((injectionSwitch.x)), bool(true)))))) / 1.0) + 0.0) > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).y), true, false)))))))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), true && (_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-220.841)), bool(false))) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))).y))), bool(bvec2(((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), false))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-39919 , injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), true)))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (injectionSwitch.x) + 0.0) > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (injectionSwitch.x) + 0.0) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(1.0) : _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(4.8, (false ? _GLF_FUZZED(-8.7) : 4.8)))), float((injectionSwitch.x)), bool(true)))))) / 1.0) + 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(1.0) : _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(4.8, (false ? _GLF_FUZZED(-8.7) : 4.8)))), float((injectionSwitch.x)), bool(true)))))) / 1.0) + 0.0) > injectionSwitch.y))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(1.0) : _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(4.8, (false ? _GLF_FUZZED(-8.7) : 4.8)))), float((injectionSwitch.x)), bool(true)))))) / 1.0) + 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(1.0) : _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(4.8, (false ? _GLF_FUZZED(-8.7) : 4.8)))), float((injectionSwitch.x)), bool(true)))))) / 1.0) + 0.0) > injectionSwitch.y))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).y), true, false)))))))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), true && (_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-220.841)), bool(false))) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(abs(-9.4)))), injectionSwitch.x), 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))).y))), bool(bvec2(((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), false))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-39919 , injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), true)))) && true)) || false))) && true)))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, log(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-49.17)), bool(false))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(vec2(mat4x2(vec2(mat4(injectionSwitch, 0.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-256.885)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), min(vec2(mat4x2(vec2(mat4(injectionSwitch, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat4x2(vec2(mat4(injectionSwitch, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 1.0)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), mix(float(_GLF_FUZZED(41.05)), float(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y)), bool(true)))) / 1.0)) / 1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-809.180)), bvec2(true, false)), clamp(_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), mix(float(_GLF_FUZZED(41.05)), float(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y)), bool(true)))) / 1.0)) / 1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-809.180)), bvec2(true, false)), (true ? _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), mix(float(_GLF_FUZZED(41.05)), float(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y)), bool(true)))) / 1.0), (false ? _GLF_FUZZED(8725.0184) : _GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), mix(float(_GLF_FUZZED(41.05)), float(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y)), bool(true)))) / 1.0)))) / 1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-809.180)), bvec2(true, false)), (mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), mix(float(_GLF_FUZZED(41.05)), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), min(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), _GLF_FUZZED(vec3(23.94, 41.92, 973.121).y)))), bool(true)))) / 1.0)) / 1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-809.180)), bvec2(true, false))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), mix(float(_GLF_FUZZED(41.05)), float(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y)), bool(true)))) / 1.0)) / 1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-809.180)), bvec2(true, false)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), mix(float(_GLF_FUZZED(41.05)), float(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y)), bool(true)))) / 1.0)) / 1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-809.180)), bvec2(true, false))))).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.6)), float(0.0), bool(true))), 0.0))), 1.0))).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y), (_GLF_IDENTITY(_GLF_FUZZED(vec3(23.94, 41.92, _GLF_IDENTITY(973.121, min(_GLF_IDENTITY(973.121, (false ? _GLF_FUZZED(-411.083) : 973.121)), 973.121))).y), mix(float(_GLF_FUZZED(41.05)), float(_GLF_FUZZED(vec3(23.94, 41.92, 973.121).y)), bool(true)))) / 1.0)) / 1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-809.180)), bvec2(true, false))).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true)) && true)))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true, true))), true, false, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))) || _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) || false)))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), false || (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
