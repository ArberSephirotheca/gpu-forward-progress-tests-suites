#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(false))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bool(false))))), (! (bool(false))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false))))))), (! (bool(false))) || false))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bool(false))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), ! (! (false)))))) || false))), true && (! ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false))))), (! (bool(false))) || false)))))) && true))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (bool(false))), ((! (bool(false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false))))))))), false)), _GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (bool(false))), ((! (bool(false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false))))))))), false)), _GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (bool(false))), ((! (bool(false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false))))))))), false)), _GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (bool(false))), ((! (bool(false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false))))))))), false)), _GLF_IDENTITY(false, true && (false)))))))))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (bool(false))), ((! (bool(false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false))))))))), false)), _GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (bool(false))), ((! (bool(false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false))))))))), false)), _GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (bool(false))), ((! (bool(false)))) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool((! (bool(false)))), ! (! (bool((! (bool(false))))))))))), false, false))))))))), false)), _GLF_IDENTITY(false, true && (false)))))))))) || false), false, true, true))) || false)), false, false)))))), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (! ((_GLF_IDENTITY(! (false), true && (! (false))))))))))), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), true, true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)))))) : 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), 1u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) : uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1)))) << 0u), 1u), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1)))) << 0u), 1u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u))) : _GLF_FUZZED(subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1)))) >> 0u)) << 0u), 1u))) : _GLF_FUZZED(uvec2(21013u, 98979u)))))))) - _GLF_IDENTITY(0u, 0u | (0u)))), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_id) : (subgroup_local_id + 1))))), (subgroup_local_id + 1))), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)))))) : 1u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)))))) : 1u))) << 0u))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), 1u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) : uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicMax(num_workgroup, num_workgroup), (atomicMax(num_workgroup, num_workgroup)) >> 0u)) : (subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (false ? _GLF_FUZZED(atomicMax(num_workgroup, _GLF_IDENTITY(num_workgroup, (num_workgroup) + 0u))) : (subgroup_local_id + 1)))) << 0u), 1u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1)))) << 0u), 1u), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1)))) << 0u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1)))) << 0u), 1u)))))), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) << 0u))) : _GLF_FUZZED(subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1)))), ((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))))) - 0u) >> 0u)) << 0u), 1u))) : _GLF_FUZZED(uvec2(21013u, 98979u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1)))) << 0u), 1u), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1)))) << 0u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1)))) << 0u), 1u)))))), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) << 0u))) : _GLF_FUZZED(subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1)))), ((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(atomicMax(num_workgroup, num_workgroup)) : (subgroup_local_id + 1))))) - 0u) >> 0u)) << 0u), 1u))) : _GLF_FUZZED(uvec2(21013u, 98979u))) ^ uvec2(0u, 0u)))))))) - _GLF_IDENTITY(0u, 0u | (0u))))) / 1u) % subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))))), max(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))))), max(uint(uint(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))))), uint(uint(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))))))), uint(uint(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), min(uvec4(0u, 0u, 1u, 1u), uvec4(0u, 0u, 1u, 1u)))))))))) + ((subgroup_local_id + 1) % subgroup_size)));
 _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) | ((0u ^ 0u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(381.263)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, (false) || false)) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(_GLF_IDENTITY(bool(! (bool(false))), bool(bvec4(bool(! (bool(false))), false, false, false)))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((false)), false || (((false))))) || false), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), false || ((! (_GLF_IDENTITY(false, (false) || false))))))))) || false) || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false)))), false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(638.899)), bool(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, injectionSwitch.x)), float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, sin(0.0), 1.0, cos(0.0), 1.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, 0.0, sin(0.0), 1.0, cos(0.0), 1.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, exp(0.0), 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, determinant(mat4(round(length(normalize(1.0))), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)), length(0.0), 0.0, 0.0, 1.0))) < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), false || (_GLF_IDENTITY(false, true && (false))))), true && (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 buf[next_virtual_gid] = 2;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))))))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true)) || false, true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, mix(float(_GLF_FUZZED(7.7)), float(injectionSwitch.y), bool(true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
