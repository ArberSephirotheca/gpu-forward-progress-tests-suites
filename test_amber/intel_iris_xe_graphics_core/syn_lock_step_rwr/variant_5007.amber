#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_37 {
 uint _f0;
 uint _f1;
 vec2 _f2;
 float _f3;
 float _f4;
} ;

struct _GLF_struct_36 {
 ivec2 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_38 {
 _GLF_struct_36 _f0;
 mat3x2 _f1;
 _GLF_struct_37 _f2;
 uvec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_34 {
 bvec2 _f0;
 mat4x2 _f1;
 ivec3 _f2;
 ivec4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_33 {
 mat2x4 _f0;
} ;

struct _GLF_struct_32 {
 ivec3 _f0;
 bool _f1;
 ivec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_35 {
 _GLF_struct_32 _f0;
 _GLF_struct_33 _f1;
 mat3x4 _f2;
 _GLF_struct_34 _f3;
} ;

struct _GLF_struct_30 {
 mat3x4 _f0;
 uvec4 _f1;
 bool _f2;
 uvec4 _f3;
 mat4x3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_31 {
 _GLF_struct_30 _f0;
 int _f1;
 vec4 _f2;
} ;

struct _GLF_struct_39 {
 _GLF_struct_31 _f0;
 ivec2 _f1;
 uint workgroup_base;
 _GLF_struct_35 _f2;
 mat4 _f3;
 _GLF_struct_38 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_27 {
 bvec4 _f0;
 vec4 _f1;
 bool _f2;
 vec3 _f3;
 float _f4;
 mat3x2 _f5;
 float _f6;
} ;

struct _GLF_struct_26 {
 uvec3 _f0;
 uvec2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_28 {
 _GLF_struct_26 _f0;
 uint virtual_gid;
 mat2x3 _f1;
 _GLF_struct_27 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_29 {
 ivec4 _f0;
 _GLF_struct_28 _f1;
 bool _f2;
 ivec3 _f3;
 float _f4;
} ;

struct _GLF_struct_23 {
 uvec4 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 mat2x4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_22 {
 int _f0;
 uvec2 _f1;
 float _f2;
 vec4 _f3;
} ;

struct _GLF_struct_21 {
 bvec3 _f0;
 ivec2 _f1;
 mat4 _f2;
 float _f3;
} ;

struct _GLF_struct_20 {
 vec2 _f0;
} ;

struct _GLF_struct_24 {
 vec3 _f0;
 _GLF_struct_20 _f1;
 vec2 _f2;
 ivec2 _f3;
 _GLF_struct_21 _f4;
 _GLF_struct_22 _f5;
 _GLF_struct_23 _f6;
} ;

struct _GLF_struct_18 {
 int _f0;
 mat2x3 _f1;
 uvec3 _f2;
 mat2x3 _f3;
 bvec3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_17 {
 vec3 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 vec3 _f3;
 bvec3 _f4;
 ivec4 _f5;
 bool _f6;
} ;

struct _GLF_struct_16 {
 uvec2 _f0;
 uvec2 _f1;
 mat2x3 _f2;
 mat2x4 _f3;
 mat4x2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_14 {
 vec3 _f0;
 vec3 _f1;
 int _f2;
 bvec4 _f3;
 vec2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_13 {
 mat3x2 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
} ;

struct _GLF_struct_11 {
 uvec4 _f0;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 mat4 _f1;
 _GLF_struct_11 _f2;
 mat4x3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_25 {
 ivec3 _f0;
 _GLF_struct_12 _f1;
 mat3x4 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_19 _f4;
 uint subgroup_size;
 _GLF_struct_24 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 mat2x4 _f1;
 bvec4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 bvec3 _f1;
 mat3 _f2;
 ivec2 _f3;
 mat3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 bool _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_4 {
 float _f0;
 mat3 _f1;
 mat4x3 _f2;
 ivec3 _f3;
 int _f4;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 mat3x2 _f1;
 uvec4 _f2;
 bvec2 _f3;
 mat3x2 _f4;
 uint _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 vec4 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 mat3x4 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_1 {
 float _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat2x3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_0 _f0;
 uint workgroup_size;
 _GLF_struct_1 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_9 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_2subgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_2subgroup_id.w = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(ivec3(1), _GLF_struct_12(ivec3(1), mat4(1.0), _GLF_struct_11(uvec4(1u)), mat4x3(1.0), mat4x2(1.0)), mat3x4(1.0), _GLF_struct_15(_GLF_struct_13(mat3x2(1.0), uvec3(1u)), _GLF_struct_14(vec3(1.0), vec3(1.0), 1, bvec4(true), vec2(1.0), bvec4(true))), _GLF_struct_19(_GLF_struct_16(uvec2(1u), uvec2(1u), mat2x3(1.0), mat2x4(1.0), mat4x2(1.0), uvec2(1u)), _GLF_struct_17(vec3(1.0), uvec3(1u), mat4x3(1.0), vec3(1.0), bvec3(true), ivec4(1), true), _GLF_struct_18(1, mat2x3(1.0), uvec3(1u), mat2x3(1.0), bvec3(true), ivec2(1)), bvec3(true)), gl_SubgroupSize, _GLF_struct_24(vec3(1.0), _GLF_struct_20(vec2(1.0)), vec2(1.0), ivec2(1), _GLF_struct_21(bvec3(true), ivec2(1), mat4(1.0), 1.0), _GLF_struct_22(1, uvec2(1u), 1.0, vec4(1.0)), _GLF_struct_23(uvec4(1u), mat3x4(1.0), ivec3(1), mat2x4(1.0), mat3x2(1.0))), bvec3(true));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_2subgroup_id.y = num_workgroup;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_0(1, mat2x3(1.0), mat4x3(1.0)), gl_WorkGroupSize.x, _GLF_struct_1(1.0, ivec3(1)), _GLF_struct_7(_GLF_struct_2(mat3x4(1.0), mat3x2(1.0), uvec4(1u), bvec2(true), mat3x2(1.0), 1u, ivec2(1)), _GLF_struct_3(uvec4(1u), mat2x4(1.0)), vec4(1.0), _GLF_struct_4(1.0, mat3(1.0), mat4x3(1.0), ivec3(1), 1), _GLF_struct_5(mat4x3(1.0), true, bvec4(true)), mat3x4(1.0), _GLF_struct_6(uvec4(1u), bvec3(true), mat3(1.0), ivec2(1), mat3(1.0), ivec3(1))), _GLF_struct_9(_GLF_struct_8(mat2x3(1.0), mat2x4(1.0), bvec4(true), vec4(1.0))));
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_31(_GLF_struct_30(mat3x4(1.0), uvec4(1u), true, uvec4(1u), mat4x3(1.0), uvec4(1u)), 1, vec4(1.0)), ivec2(1), _GLF_struct_replacement_10.workgroup_size * workgroup_id, _GLF_struct_35(_GLF_struct_32(ivec3(1), true, ivec3(1), vec4(1.0)), _GLF_struct_33(mat2x4(1.0)), mat3x4(1.0), _GLF_struct_34(bvec2(true), mat4x2(1.0), ivec3(1), ivec4(1), vec2(1.0))), mat4(1.0), _GLF_struct_38(_GLF_struct_36(ivec2(1), mat2x4(1.0)), mat3x2(1.0), _GLF_struct_37(1u, 1u, vec2(1.0), 1.0, 1.0), uvec2(1u), 1u), mat2(1.0));
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(ivec4(1), _GLF_struct_28(_GLF_struct_26(uvec3(1u), uvec2(1u), ivec4(1)), _GLF_struct_replacement_39.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_2subgroup_id.w * _GLF_struct_replacement_25.subgroup_size + subgroup_local_id, mat2x3(1.0), _GLF_struct_27(bvec4(true), vec4(1.0), true, vec3(1.0), 1.0, mat3x2(1.0), 1.0), mat3x2(1.0)), true, ivec3(1), 1.0);
 uint next_virtual_gid = _GLF_struct_replacement_39.workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_2subgroup_id.w * _GLF_struct_replacement_25.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_25.subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_2subgroup_id.x = next_virtual_gid;
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_29._f1.virtual_gid], 4, 64, 0);
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_2subgroup_id.x], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_29._f1.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_2subgroup_id.z = read_2;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_2subgroup_id.x], uint(read_1 + 1 == GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_2subgroup_id.z) + 1, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
