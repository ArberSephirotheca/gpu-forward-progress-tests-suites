#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_2 {
 uint _f0;
 bool _f1;
 ivec3 _f2;
 ivec4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_4 {
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_14read_1subgroup_idworkgroup_base;
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 uint num_workgroup;
 uint _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 ivec3 _f1;
 ivec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_4 _GLF_struct_replacement_4;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_replacement_4.GLF_merged3_0_1_6_1_1_11_2_1_14read_1subgroup_idworkgroup_base.y = subgroup_id;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(mat2x3(1.0), gl_NumWorkGroups.x, 1u), ivec3(1), ivec4(1));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_replacement_4.GLF_merged3_0_1_6_1_1_11_2_1_14read_1subgroup_idworkgroup_base.z = workgroup_base;
 uint virtual_gid = _GLF_struct_replacement_4.GLF_merged3_0_1_6_1_1_11_2_1_14read_1subgroup_idworkgroup_base.z + _GLF_struct_replacement_4.GLF_merged3_0_1_6_1_1_11_2_1_14read_1subgroup_idworkgroup_base.y * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_4.GLF_merged3_0_1_6_1_1_11_2_1_14read_1subgroup_idworkgroup_base.z + _GLF_struct_replacement_4.GLF_merged3_0_1_6_1_1_11_2_1_14read_1subgroup_idworkgroup_base.y * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 _GLF_struct_replacement_4.GLF_merged3_0_1_6_1_1_11_2_1_14read_1subgroup_idworkgroup_base.x = read_1;
 atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_4.GLF_merged3_0_1_6_1_1_11_2_1_14read_1subgroup_idworkgroup_base.x + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_4.GLF_merged3_0_1_6_1_1_11_2_1_14read_1subgroup_idworkgroup_base.x + 1 == read_2) + 1, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
