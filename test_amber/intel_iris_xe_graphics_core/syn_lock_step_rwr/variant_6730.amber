#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, true && (((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(64.52) : injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(64.52), mix(float(_GLF_FUZZED(-7567.7478)), float(_GLF_IDENTITY(_GLF_FUZZED(64.52), max(_GLF_FUZZED(64.52), _GLF_FUZZED(64.52)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : injectionSwitch.y)), injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
          continue;
         barrier();
        }
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(reflect(-1828.7455, -7.9)) : injectionSwitch.x)) > injectionSwitch.y))))
          break;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)), _GLF_IDENTITY(length(0.0), (_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(65.47) : length(0.0)))) - log(1.0)), 0.0), (false ? _GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307)) : mat2(injectionSwitch.x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(901.522)), float(0.0), bool(true))), 0.0, 0.0)), length(0.0), 0.0))), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(8246u)) : 0.0)), 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)), length(0.0), 0.0), (false ? _GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307)) : mat2(injectionSwitch.x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)), length(0.0), 0.0)))))))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)), length(0.0), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307)), _GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (false ? _GLF_FUZZED(mat2(7.8, 26.38, -66.70, 7.9)) : _GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (_GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (true ? (_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0) : _GLF_FUZZED(mat2(6358.6157, 4.2, 2.0, 52.51))))) * mat2(1.0))))) : mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(459.734)), float(1.0), bool(true))), (1.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), length(0.0), 0.0))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)), length(0.0), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307)), _GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (false ? _GLF_FUZZED(mat2(7.8, 26.38, -66.70, 7.9)) : _GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (_GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (true ? (_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0) : _GLF_FUZZED(mat2(6358.6157, 4.2, 2.0, 52.51))))) * mat2(1.0))))) : mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(459.734)), float(1.0), bool(true))), (1.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), length(0.0), 0.0))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)), length(0.0), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307)), _GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (false ? _GLF_FUZZED(mat2(7.8, 26.38, -66.70, 7.9)) : _GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (_GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (true ? (_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0) : _GLF_FUZZED(mat2(6358.6157, 4.2, 2.0, 52.51))))) * mat2(1.0))))) : mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(459.734)), float(1.0), bool(true))), (1.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), length(0.0), 0.0))))) > injectionSwitch.y))))), true && (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)), length(0.0), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307)), _GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (false ? _GLF_FUZZED(mat2(7.8, 26.38, -66.70, 7.9)) : _GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (_GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (true ? (_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0) : _GLF_FUZZED(mat2(6358.6157, 4.2, 2.0, 52.51))))) * mat2(1.0))))) : mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(459.734)), float(1.0), bool(true))), (1.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), length(0.0), 0.0))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)), length(0.0), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307)), _GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (false ? _GLF_FUZZED(mat2(7.8, 26.38, -66.70, 7.9)) : _GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (_GLF_IDENTITY((_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0), (true ? (_GLF_FUZZED(mat2(-88.82, -1264.8689, -754.810, -858.307))) * mat2(1.0) : _GLF_FUZZED(mat2(6358.6157, 4.2, 2.0, 52.51))))) * mat2(1.0))))) : mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(459.734)), float(1.0), bool(true))), (1.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), length(0.0), 0.0))))) > injectionSwitch.y)))))))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, _GLF_IDENTITY(3204.3737, max(3204.3737, _GLF_IDENTITY(3204.3737, (3204.3737) / 1.0))), vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(_GLF_IDENTITY(-63.61, max(-63.61, -63.61)), 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch, vec2(vec4(false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, _GLF_IDENTITY(3204.3737, _GLF_IDENTITY(max(3204.3737, _GLF_IDENTITY(3204.3737, (3204.3737) / 1.0)), (_GLF_IDENTITY(max(3204.3737, _GLF_IDENTITY(3204.3737, (3204.3737) / 1.0)), (true ? max(3204.3737, _GLF_IDENTITY(3204.3737, (3204.3737) / 1.0)) : _GLF_FUZZED(-3.7)))) * 1.0)), vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, _GLF_IDENTITY(-76.76, mix(float(-76.76), float(_GLF_FUZZED(334.202)), bool(false))))), smoothstep(-63.61, _GLF_IDENTITY(3204.3737, mix(float(3204.3737), float(_GLF_FUZZED(0.5)), bool(false))), vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch, 1.0, 0.0)))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, _GLF_IDENTITY(_GLF_IDENTITY(3204.3737, float(mat4x3(_GLF_IDENTITY(3204.3737, clamp(3204.3737, 3204.3737, 3204.3737)), 1.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), max(3204.3737, _GLF_IDENTITY(3204.3737, (3204.3737) / 1.0))), vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch, vec2(vec4(false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, _GLF_IDENTITY(3204.3737, max(3204.3737, _GLF_IDENTITY(3204.3737, (3204.3737) / 1.0))), vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, _GLF_IDENTITY(vec2(8.5, -76.76), mix(vec2(_GLF_FUZZED((404.954 * -312.655)), _GLF_IDENTITY((vec2(8.5, -76.76))[1], (true ? (vec2(8.5, -76.76))[1] : _GLF_FUZZED(-2.1)))), vec2((vec2(8.5, -76.76))[0], _GLF_FUZZED((true ? -7.5 : 17.53))), bvec2(true, false)))), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch, 1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, _GLF_IDENTITY(3204.3737, max(3204.3737, _GLF_IDENTITY(3204.3737, (3204.3737) / 1.0))), vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch, vec2(vec4(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, _GLF_IDENTITY(3204.3737, max(3204.3737, _GLF_IDENTITY(3204.3737, (3204.3737) / 1.0))), vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch))))), min(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, _GLF_IDENTITY(3204.3737, max(3204.3737, _GLF_IDENTITY(3204.3737, (3204.3737) / 1.0))), vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, _GLF_IDENTITY(3204.3737, max(3204.3737, _GLF_IDENTITY(3204.3737, (3204.3737) / 1.0))), vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch))))), mix(vec2((_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, _GLF_IDENTITY(3204.3737, max(3204.3737, _GLF_IDENTITY(3204.3737, (3204.3737) / 1.0))), vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch))))))[0], (_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, _GLF_IDENTITY(3204.3737, max(3204.3737, _GLF_IDENTITY(3204.3737, (3204.3737) / 1.0))), vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch))))))[1]), vec2(_GLF_FUZZED(-6.5), _GLF_FUZZED(28.24)), bvec2(false, false)))))) : injectionSwitch, 1.0, 0.0)))))), max((false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(_GLF_IDENTITY(-63.61, mix(float(-63.61), float(_GLF_FUZZED(79.94)), bool(false))), 3204.3737, vec2(8.5, -76.76)) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)), min(vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0)))))))))) : injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, _GLF_IDENTITY(-76.76, clamp(-76.76, -76.76, -76.76)))), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, _GLF_IDENTITY(vec2(_GLF_IDENTITY(8.5, _GLF_IDENTITY(float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), -76.76), min(vec2(_GLF_IDENTITY(8.5, _GLF_IDENTITY(float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), -76.76), _GLF_IDENTITY(vec2(_GLF_IDENTITY(8.5, _GLF_IDENTITY(float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), -76.76), clamp(vec2(_GLF_IDENTITY(8.5, _GLF_IDENTITY(float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), -76.76), vec2(_GLF_IDENTITY(8.5, _GLF_IDENTITY(float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), -76.76), vec2(_GLF_IDENTITY(8.5, _GLF_IDENTITY(float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat4x2(8.5, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), -76.76)))))), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, _GLF_IDENTITY(-76.76, clamp(-76.76, -76.76, -76.76)))) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch, min(false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, _GLF_IDENTITY(3204.3737, mix(float(_GLF_FUZZED(62.01)), float(3204.3737), bool(true))), vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) - 0.0), 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(length(vec3(0.0, 0.0, 0.0))), 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, _GLF_IDENTITY(vec2(8.5, -76.76), (vec2(8.5, -76.76)) - vec2(0.0, 0.0))), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), vec2(mat4(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, sin(0.0), sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))))), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch, min(false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, _GLF_IDENTITY(-76.76, float(_GLF_IDENTITY(vec2(-76.76, 1.0), (true ? vec2(-76.76, 1.0) : _GLF_FUZZED(injectionSwitch))))))), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (_GLF_IDENTITY(true, (true) && true) ? smoothstep(-63.61, 3204.3737, vec2(8.5, _GLF_IDENTITY(-76.76, mix(float(-76.76), float(_GLF_FUZZED(-8.5)), bool(false))))) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, _GLF_IDENTITY(-76.76, (true ? _GLF_IDENTITY(-76.76, max(_GLF_IDENTITY(-76.76, (-76.76) * 1.0), -76.76)) : _GLF_FUZZED(3.5))))), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, _GLF_IDENTITY(-76.76, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -76.76 : _GLF_FUZZED(distance(injectionSwitch, injectionSwitch)))))), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch)))))) : injectionSwitch, mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x3(1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-436.233)), float(float(mat4x3(1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0))), bool(true))), _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0)), (true ? float(mat4x3(1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(7.8))), float(mat4x3(1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0)))))) * (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch))))), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(_GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), max(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)))), _GLF_IDENTITY(smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)), (true ? smoothstep(-63.61, 3204.3737, vec2(8.5, -76.76)) : _GLF_FUZZED(injectionSwitch)))))))) - vec2(0.0, 0.0))) : injectionSwitch)))), 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(9778.3849)), vec2(_GLF_FUZZED(-7.4), (vec2(0.0, 1.0))[1]), bvec2(false, true))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-746.067)), bool(false))) < injectionSwitch.y)), bool(bool((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-746.067)), bool(false))) < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y) || false), false, false, false))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-746.067)), bool(false))) < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) || false), false, false, false))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-746.067)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-746.067)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-746.067)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-746.067)), bool(false))))) < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) || false), false, false, false))))))), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))), injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true && (_GLF_IDENTITY(! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))))))), _GLF_IDENTITY(true, true && (true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), _GLF_IDENTITY(true, true && (true)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), _GLF_IDENTITY(true, true && (true)))), false))))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && true)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), _GLF_IDENTITY(true, true && (true)))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && true)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), _GLF_IDENTITY(true, true && (true)))), false)))), false, true)))), true)), true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter)) < 1), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), true)))), false), false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(bvec2(_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), true)))), false), false))))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false))))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        continue;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.0), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-4628.2731)), bvec2(true, false))))).y, injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1459.5282), _GLF_FUZZED(vec2(-69.66, 3.9).s)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1459.5282), _GLF_FUZZED(vec2(-69.66, 3.9).s)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), ! (! (! (! (! (_GLF_DEAD(false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), (abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))) + 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat4x3(injectionSwitch, 0.0, 1.0, cos(0.0), abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-257.124)), bool(false))))))), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)), false, false))) && true), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))) || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)), false, _GLF_IDENTITY(false, ! (! (false))))))), true && (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), max(uint(uint(subgroup_local_id + 1)), uint(uint(subgroup_local_id + 1)))))), uint(uvec2((subgroup_local_id + 1), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), max(uint(uint(subgroup_local_id + 1)), uint(uint(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1)))))), uint(uvec2((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(intBitsToFloat(8034))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(-4.8)), vec2(_GLF_FUZZED(7517.8157), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), min(_GLF_IDENTITY(read_1, (read_1) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u))), (0u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), ~ (~ (_GLF_IDENTITY(read_1, (read_1) ^ _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uvec2(uint(4u), 1u), uvec2(0u, 0u) ^ (uvec2(uint(4u), 1u)))))) ^ 0u), uint(4u)))))))), 0u ^ (_GLF_IDENTITY(read_1, (read_1) ^ _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))) + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1))), (uint(read_1 + 1)) >> 0u)) | (uint(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0))), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 0.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0))), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 0.0, 0.0)))))), (injectionSwitch.x > injectionSwitch.y) || false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), bool(bool(! (! (bool(bool(false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))) && (false)), false), false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (1))), (read_1 + _GLF_IDENTITY(1, ~ (~ (1)))) | 0u) == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_2), (~ (read_2)) ^ (0u | _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) / 1u), 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(0u, (0u) / 1u), 1u, 0u, 1u))))) : _GLF_FUZZED(workgroup_size))))), (_GLF_IDENTITY(~ (read_2), (~ (read_2)) ^ (0u | 0u))) - 0u))), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (1))), (read_1 + _GLF_IDENTITY(1, ~ (~ (1)))) | 0u) == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_2), (~ (read_2)) ^ (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size))), (0u | _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))) | (0u | _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size))))))), (_GLF_IDENTITY(~ (read_2), (~ (read_2)) ^ (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size))), (0u | _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))) | (0u | _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(workgroup_size)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_2), min(~ (read_2), ~ (read_2))), (~ _GLF_IDENTITY((read_2), 0u + ((read_2)))) ^ (0u | 0u))) - 0u)))) || false)) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true, bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), false || (false))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * sqrt(vec2(1.0, 1.0)))).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-41.15), (_GLF_IDENTITY(true, false || (true)) ? _GLF_FUZZED(-41.15) : _GLF_FUZZED(3.9))) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false), true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat4x3(injectionSwitch, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).x < injectionSwitch.y))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), true)))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)) + 0.0) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x) * 1.0) / 1.0, mix(float(_GLF_IDENTITY(((injectionSwitch.x) * 1.0) / 1.0, (((injectionSwitch.x) * 1.0) / 1.0) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-703.492)), min(float(_GLF_FUZZED(-703.492)), float(_GLF_FUZZED(-703.492)))), bool(false))), float(mat4x3(_GLF_IDENTITY(((injectionSwitch.x) * 1.0) / 1.0, mix(float(_GLF_IDENTITY(((injectionSwitch.x) * 1.0) / 1.0, _GLF_IDENTITY((((injectionSwitch.x) * 1.0) / 1.0) / 1.0, (true ? (((injectionSwitch.x) * 1.0) / 1.0) / 1.0 : _GLF_FUZZED(abs(4353.8819)))))), float(_GLF_FUZZED(-703.492)), bool(false))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-139.629) : dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) - 0.0))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 0.0)), mix(float(float(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(2.1)), bool(false))))) + 0.0), 1.0))), 1.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
