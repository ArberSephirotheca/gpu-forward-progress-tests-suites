#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, round(length(normalize(1.0))))))))) || false))) || false)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))) || false)))), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), (! ((false) || false)) || false))))) && true, ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) || false), bool(bvec3(((false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (! ((false) || false)) || false))))) && true))))), true, true, false)), _GLF_IDENTITY(false, ! (! (false))), false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), (false) && true))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))), (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false))))) || false), bool(bvec4(! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))), true, true, true))))))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, (true) || false)))) || false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (false))))))), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true, false)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true, false))))), bool(bvec4(false || (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true, false))))), false, false, false))))) && (false)))), false, false)))))), true && ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), (false) && true))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))), (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false))))) || false), bool(bvec4(! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))), true, true, true))))))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, (true) || false)))) || false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (false))))))), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true, false)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true, false))))), bool(bvec4(false || (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true, false))))), false, false, false))))) && (false)))), false, false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, false))), false)), false, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! _GLF_IDENTITY((! ((false) || false)), true && (_GLF_IDENTITY((! ((false) || false)), ((! ((false) || false))) && true)))))), true, true, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false)))), true, _GLF_IDENTITY(false, true && (false)))), false, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, false)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, false))) && true), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bool((false) || false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool((false) || false)), (bool(bool((false) || false))) && true)), false || ((_GLF_IDENTITY(bool(bool((false) || false)), (bool(bool((false) || false))) && true)))) || false)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true, false)), false, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(! _GLF_IDENTITY((! ((false) || false)), true && (_GLF_IDENTITY((! ((false) || false)), ((! ((false) || false))) && true))), true && (! _GLF_IDENTITY((! _GLF_IDENTITY(((false) || false), true && (((false) || false)))), true && (_GLF_IDENTITY((! ((false) || false)), ((! ((false) || false))) && true))))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(! _GLF_IDENTITY((! ((false) || false)), true && (_GLF_IDENTITY((! ((false) || false)), ((! ((false) || false))) && true))), true && (! _GLF_IDENTITY((! _GLF_IDENTITY(((false) || false), true && (((false) || false)))), true && (_GLF_IDENTITY((! ((false) || false)), ((! ((false) || false))) && true))))))), true)))), true, true, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true) || false, bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) && true), true, _GLF_IDENTITY(false, true && (false)))), false, false)))))))) || false)) || false))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ 0)); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.7)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > injectionSwitch.y))) && true)) || false)), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-84.62, -6.6)) : injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))) && true))))) || false))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))) && true))))) || false))), true, true), bvec3(bvec4(bvec3((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))) && true))))) || false))), true, true), false)))))))), true)))));
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))))))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (min(gl_NumWorkGroups, gl_NumWorkGroups)))))) + uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), 1u)), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u), 1u), max(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u), 1u), uvec4((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u), 1u))))))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(~ (~ (0 << _GLF_IDENTITY(int(5), int(5)))), (~ (~ (0 << _GLF_IDENTITY(int(5), int(5))))) | (~ (~ (0 << _GLF_IDENTITY(int(5), int(5))))))))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id, ~ (~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id, ~ (~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id, ~ (~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id))))))), ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id, ~ (~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id))))))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id, ~ (~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id))))))), ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id, ~ (~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id))))))))))))))))) << 0u) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u), 0u, 0u, 0u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u), 0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u), 0u, 0u, 0u)), min(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u), 0u, 0u, 0u)), ~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u), 0u, 0u, 0u)))))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u), 0u, 0u, 0u)))), 0u ^ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u), 0u, 0u, 0u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u), 0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u), 0u, 0u, 0u)), min(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u), 0u, 0u, 0u)), ~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u), 0u, 0u, 0u)))))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u), 0u, 0u, 0u))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))))), false, true, false)))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), abs(0.0), 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), abs(0.0), 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))).y))))))))) || false))
  {
   do
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), true, true))))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), 0 ^ (64)))), 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (int(6)), max(~ (int(6)), ~ (int(6)))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (int(6)), max(~ (int(6)), ~ (int(6)))), (_GLF_IDENTITY(~ (int(6)), max(~ (int(6)), ~ (_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(-73436))))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(~ (int(6)), max(_GLF_IDENTITY(~ (int(6)), int(ivec3(_GLF_IDENTITY(~ (int(6)), 1 * (~ (int(6)))), 0, 0))), ~ (int(6)))), clamp(_GLF_IDENTITY(~ (int(6)), max(~ (int(6)), ~ (int(6)))), _GLF_IDENTITY(~ (int(6)), max(~ (int(6)), ~ (int(6)))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((int(6)), min((int(6)), (int(6)))), max(~ (int(6)), ~ _GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(-16722) : (int(6)))))), int(ivec2(_GLF_IDENTITY(~ (int(6)), max(~ _GLF_IDENTITY((int(6)), 1 * ((int(6)))), ~ (int(6)))), 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (int(6)), max(~ (int(6)), ~ (int(6)))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (int(6)), max(~ (int(6)), ~ (int(6)))), (_GLF_IDENTITY(~ (int(6)), max(~ (int(6)), ~ (_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(-73436))))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(~ (int(6)), max(_GLF_IDENTITY(~ (int(6)), int(ivec3(_GLF_IDENTITY(~ (int(6)), 1 * (~ (int(6)))), 0, 0))), ~ (int(6)))), clamp(_GLF_IDENTITY(~ (int(6)), max(~ (int(6)), ~ (int(6)))), _GLF_IDENTITY(~ (int(6)), max(~ (int(6)), ~ (int(6)))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((int(6)), min((int(6)), (int(6)))), max(~ (int(6)), ~ _GLF_IDENTITY((int(6)), (false ? _GLF_FUZZED(-16722) : (int(6)))))), int(ivec2(_GLF_IDENTITY(~ (int(6)), max(~ _GLF_IDENTITY((int(6)), 1 * ((int(6)))), ~ (int(6)))), 0))))))))) | 0)))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), (int(6)) + 0), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-33272) : int(6))))), max(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-89161))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), (_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(-72.18)), bool(false)))))) && true)); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.5, 54.33)))))).x < injectionSwitch.y) && true), _GLF_IDENTITY(false, (false) || false) || (injectionSwitch.x < injectionSwitch.y))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                }
              }
             else
              {
              }
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) : next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), (uint(read_1 + 1)) >> 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, _GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u), _GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1)))) << 0u)))))), _GLF_IDENTITY(0u + (uint(read_1 + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))) + (_GLF_IDENTITY(uint(read_1 + 1), clamp(uint(read_1 + 1), _GLF_IDENTITY(uint(read_1 + 1), (uint(read_1 + 1)) >> 0u), _GLF_IDENTITY(uint(read_1 + 1), (uint(read_1 + 1)) >> 0u)))), 0u | (_GLF_IDENTITY(0u + (uint(read_1 + 1)), min(0u + (uint(read_1 + 1)), 0u + (uint(read_1 + 1))))))) | 0u))) << 0u), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40612) : _GLF_IDENTITY(64, (64) * 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), (_GLF_IDENTITY(64, (64) * 1)) | (_GLF_IDENTITY(64, (64) * 1)))) + 0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), (_GLF_IDENTITY(64, (64) * 1)) | (_GLF_IDENTITY(64, (64) * 1)))) + 0, (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), (_GLF_IDENTITY(64, (64) * 1)) | (_GLF_IDENTITY(64, (64) * 1)))) + 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), (_GLF_IDENTITY(64, (64) * 1)) | (_GLF_IDENTITY(64, (64) * 1)))) + 0, ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), (_GLF_IDENTITY(64, (64) * 1)) | (_GLF_IDENTITY(64, (64) * 1)))) + 0) >> 0))))), max(_GLF_IDENTITY(max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, _GLF_IDENTITY((true ? _GLF_IDENTITY(64, (64) / 1) : _GLF_FUZZED(73776)), ~ (~ ((true ? _GLF_IDENTITY(64, (64) / 1) : _GLF_FUZZED(_GLF_IDENTITY(73776, (_GLF_IDENTITY(73776, ~ (~ (73776)))) / 1)))))))))) * 1)), (max(64, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) * 1, (false ? _GLF_FUZZED(sign(-92542)) : (64) * 1))), (_GLF_IDENTITY(64, (64) * 1)) ^ 0))) | (max(64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), (_GLF_IDENTITY(64, (64) * 1)) ^ 0)))), max(64, _GLF_IDENTITY(64, (64) * _GLF_IDENTITY(1, 0 ^ (1))))))), 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) * 1))) ^ 0));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED((5582)) : 1))) << _GLF_IDENTITY((0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1))), (_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1)))) / 1), _GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1)))))), ((0 ^ _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, 0 ^ (0)), 1, 0, 1))))) ^ 0)))))), 1)), int(ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), _GLF_IDENTITY((true ? min(1, 1) : _GLF_FUZZED(-58858)), (false ? _GLF_FUZZED(34315) : (true ? min(1, 1) : _GLF_FUZZED(-58858)))))))), 1)), 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(read_1, 1u, 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u))), (uvec4(read_1, 1u, 1u, 0u)) | uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))) + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))), max(_GLF_IDENTITY(((_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))), max(((_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))), ((_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))), clamp(((_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))), ((_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))), ((_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))))))), 1u * (((_GLF_IDENTITY(read_2, (read_2) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u), (read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) * 1u, ((read_2) * _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 0u))), 1u))) | ((read_2) * 1u)))), 0u + ((_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) * 1u, ((read_2) * _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))), 1u))) | ((read_2) * 1u)))))) ^ 0u)) || _GLF_IDENTITY(false, (false) || false))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(virtual_gid) : read_2))) << 0u))), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u), (read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u)) || false)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (76095 & 0)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u)) || false)), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) | (read_1 + 1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u)) || false))))) | (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), max(_GLF_IDENTITY((read_2), ((read_2)) | (158953u & 0u)), (read_2))) * 1u)) ^ 0u), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u)) || false)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec2(read_1 + 1, 1u))) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ _GLF_IDENTITY(0u, (0u) + 0u)), ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ _GLF_IDENTITY(0u, (0u) + 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), max((_GLF_IDENTITY(read_2, (read_2) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), min((read_2), _GLF_IDENTITY((read_2), uint(uint((read_2)))))) * 1u), _GLF_IDENTITY(max(_GLF_IDENTITY(read_2, (read_2) * 1u), _GLF_IDENTITY(read_2, (read_2) * 1u)), min(max(_GLF_IDENTITY(read_2, (read_2) * 1u), _GLF_IDENTITY(read_2, (read_2) * 1u)), max(_GLF_IDENTITY(read_2, (read_2) * 1u), _GLF_IDENTITY(read_2, (read_2) * 1u))))))) | ((_GLF_IDENTITY(read_2, (read_2) * 1u)))))) ^ _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), ((0u)) >> 0u), (0u)))))), _GLF_IDENTITY(true && ((read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), max((_GLF_IDENTITY(read_2, (read_2) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) * 1u), max(_GLF_IDENTITY(read_2, (read_2) * 1u), _GLF_IDENTITY(read_2, (read_2) * 1u))))) | ((_GLF_IDENTITY(read_2, (read_2) * 1u)))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u))))), false || (true && ((read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), max(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), clamp((_GLF_IDENTITY(read_2, (read_2) * 1u)), (_GLF_IDENTITY(read_2, (read_2) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), ((_GLF_IDENTITY(read_2, (read_2) * 1u))) >> 0u)))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), min((read_2), (read_2))) * 1u), max(_GLF_IDENTITY(read_2, (read_2) * 1u), _GLF_IDENTITY(read_2, (read_2) * 1u))))) | ((_GLF_IDENTITY(read_2, (read_2) * 1u)))))) ^ _GLF_IDENTITY(0u, 0u ^ (0u)))))))) || false, ! (! ((read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) | 0))), 1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) * 1u), max(_GLF_IDENTITY(read_2, (read_2) * 1u), _GLF_IDENTITY(read_2, (read_2) * 1u)))), max((_GLF_IDENTITY(read_2, (read_2) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), ((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) / 1u)) * 1u))) | ((_GLF_IDENTITY(read_2, (read_2) * 1u)))))) ^ 0u)) || false))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)) | (_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))) ^ 0u)) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_size) : read_2)))), (read_2) * 1u)) ^ 0u) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), max((read_2), (read_2)))) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), max((read_2), (read_2)))) / 1u), ~ (~ (_GLF_IDENTITY((read_2), _GLF_IDENTITY((_GLF_IDENTITY((read_2), max((read_2), (read_2)))), min((_GLF_IDENTITY((read_2), max((read_2), (read_2)))), (_GLF_IDENTITY((read_2), max((read_2), (read_2)))))) / 1u)))))) * 1u)) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY(read_2, uint(uint(read_2))))), _GLF_IDENTITY((read_2) * 1u, (true ? (read_2) * 1u : _GLF_FUZZED((workgroup_id ^ read_1)))))) ^ 0u))), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) >> 0u))), (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), max(_GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY(read_2, (read_2) ^ 0u))), read_2))) * 1u)) ^ 0u)) || false)), (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (read_2) - 0u), _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_size) : read_2)))), _GLF_IDENTITY((read_2) * 1u, ((read_2) * 1u) / 1u))) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), max((read_2), (read_2)))) / 1u) * 1u)) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY(read_2, uint(uint(read_2))))), _GLF_IDENTITY((read_2) * 1u, (true ? (read_2) * 1u : _GLF_FUZZED((workgroup_id ^ read_1)))))) ^ 0u))), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) ^ 0u), read_2))) * 1u)) ^ 0u)) || false))) / 1u), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) : uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) >> 0u)) * _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(next_virtual_gid) : 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(read_2, (read_2) * 1u))), min(((_GLF_IDENTITY(read_2, (read_2) * 1u))), ((_GLF_IDENTITY(read_2, (read_2) * 1u))))) ^ 0u) ^ 0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ _GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), ((_GLF_IDENTITY(read_2, (read_2) * 1u))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), ((_GLF_IDENTITY(read_2, (read_2) * 1u))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) * 1u) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u), max(clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) + 0u), ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) >> 0u)))) << 0u), (read_2) * 1u)) ^ 0u)) | (clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) + 0u) * 1u)), ((_GLF_IDENTITY(read_2, (read_2) * 1u))) >> 0u) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u)))) ^ 0u))), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) * 1u)) ^ 0u)) || false)), max(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) : uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) >> 0u)) * _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(next_virtual_gid) : 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(read_2, (read_2) * 1u))), min(((_GLF_IDENTITY(read_2, (read_2) * 1u))), ((_GLF_IDENTITY(read_2, (read_2) * 1u))))) ^ 0u) ^ 0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ _GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), ((_GLF_IDENTITY(read_2, (read_2) * 1u))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), ((_GLF_IDENTITY(read_2, (read_2) * 1u))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) * 1u) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u), max(clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) + 0u), ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) >> 0u)))) << 0u), (read_2) * 1u)) ^ 0u)) | (clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) + 0u) * 1u)), ((_GLF_IDENTITY(read_2, (read_2) * 1u))) >> 0u) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u)))) ^ 0u))), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) * 1u)) ^ 0u)) || false)), false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) : uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) >> 0u)) * _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(next_virtual_gid) : 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(read_2, (read_2) * 1u))), min(((_GLF_IDENTITY(read_2, (read_2) * 1u))), ((_GLF_IDENTITY(read_2, (read_2) * 1u))))) ^ 0u) ^ 0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ _GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), ((_GLF_IDENTITY(read_2, (read_2) * 1u))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)), ((_GLF_IDENTITY(read_2, (read_2) * 1u))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) * 1u) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u), max(clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) + 0u), ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) >> 0u)))) << 0u), (read_2) * 1u)) ^ 0u)) | (clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u, ((_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) + 0u) * 1u)), ((_GLF_IDENTITY(read_2, (read_2) * 1u))) >> 0u) ^ 0u, (_GLF_IDENTITY(read_2, (read_2) * 1u)) ^ 0u)))) ^ 0u))), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) * 1u)) ^ 0u)) || false))))))))))) + 1, 4, _GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0), (4) | (_GLF_IDENTITY(4, (4) | (4)))));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (false), bool(_GLF_IDENTITY(bvec2(true && (false), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(true && (false), true), true)))))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
