#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((true ? -465.652 : 3.7))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))), false, false, false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-36.07) : injectionSwitch.y))), float(_GLF_FUZZED(-7696.6397)), bool(false)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) / 1u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, 0 | (0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))))
          return;
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), ((_GLF_IDENTITY(0, 0 | (0)))) >> 0)) / 1))), (1 & 1) * ((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 0 | (0))))))) + (0 | (_GLF_IDENTITY(0 & -73028, (_GLF_IDENTITY(0 & -73028, _GLF_IDENTITY(clamp(0 & -73028, 0 & -73028, 0 & -73028), (clamp(0 & -73028, 0 & -73028, 0 & -73028)) | (clamp(0 & _GLF_IDENTITY(-73028, ~ (~ (-73028))), 0 & -73028, 0 & -73028))))) + 0)))));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, 0u ^ (0u)))))) == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (~ (0u)))))), uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))) - 0u)) >> 0u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))) - 0u)) >> 0u)) : _GLF_FUZZED(subgroup_id))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1))) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (1)), 1))))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(_GLF_IDENTITY(0u, ~ (~ (0u))))))) - 0u)) >> 0u)) : _GLF_FUZZED(subgroup_id))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))) - 0u)) >> 0u)) : _GLF_FUZZED(subgroup_id)), ((true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))) - 0u)) >> 0u)) : _GLF_FUZZED(subgroup_id))) | ((true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))) - 0u)) >> 0u)) : _GLF_FUZZED(subgroup_id))))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (true ? _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, 0u, 1u)))))) - 0u)) >> _GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))) : _GLF_FUZZED(subgroup_id))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))) << 0u)) == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) - 0u), read_2, read_2))), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) == read_2), false, false, true))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), min(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << 0u)))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), (false ? _GLF_FUZZED(uint(31116)) : _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), uint(uvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), 0u, 1u, 0u))), _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) | (read_1 + 1), clamp((read_1 + 1) | (read_1 + 1), _GLF_IDENTITY((read_1 + 1) | (read_1 + 1), max((read_1 + 1) | (read_1 + 1), (read_1 + 1) | (read_1 + 1))), (read_1 + 1) | (read_1 + 1)))))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))))))) : _GLF_FUZZED(subgroup_id))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) == read_2), false, false, true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), min(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << 0u)))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), (false ? _GLF_FUZZED(uint(31116)) : _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), uint(uvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), 0u, 1u, 0u))), _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) | (read_1 + 1), clamp((read_1 + 1) | (read_1 + 1), _GLF_IDENTITY((read_1 + 1) | (read_1 + 1), max((read_1 + 1) | (read_1 + 1), (read_1 + 1) | (read_1 + 1))), (read_1 + 1) | (read_1 + 1)))))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))))))) : _GLF_FUZZED(subgroup_id))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) == read_2), false, false, true))))))), true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), min(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << 0u)))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), (false ? _GLF_FUZZED(uint(31116)) : _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), uint(uvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), 0u, 1u, 0u))), _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) | (read_1 + 1), clamp((read_1 + 1) | (read_1 + 1), _GLF_IDENTITY((read_1 + 1) | (read_1 + 1), max((read_1 + 1) | (read_1 + 1), (read_1 + 1) | (read_1 + 1))), (read_1 + 1) | (read_1 + 1)))))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))))))) : _GLF_FUZZED(subgroup_id))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) == read_2), false, false, true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), min(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << 0u)))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), (false ? _GLF_FUZZED(uint(31116)) : _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), uint(uvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), 0u, 1u, 0u))), _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) | (read_1 + 1), clamp((read_1 + 1) | (read_1 + 1), _GLF_IDENTITY((read_1 + 1) | (read_1 + 1), max((read_1 + 1) | (read_1 + 1), (read_1 + 1) | (read_1 + 1))), (read_1 + 1) | (read_1 + 1)))))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))))))) : _GLF_FUZZED(subgroup_id))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) == read_2), false, false, true))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), min(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << 0u)))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), (false ? _GLF_FUZZED(uint(31116)) : _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), uint(uvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), 0u, 1u, 0u))), _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) | (read_1 + 1), clamp((read_1 + 1) | (read_1 + 1), _GLF_IDENTITY((read_1 + 1) | (read_1 + 1), max((read_1 + 1) | (read_1 + 1), (read_1 + 1) | (read_1 + 1))), (read_1 + 1) | (read_1 + 1)))))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))))))) : _GLF_FUZZED(subgroup_id))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) == read_2), false, false, true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), min(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << 0u)))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), (false ? _GLF_FUZZED(uint(31116)) : _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), uint(uvec4(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))), 0u, 1u, 0u))), _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), min((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1) | (read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) | (read_1 + 1), clamp((read_1 + 1) | (read_1 + 1), _GLF_IDENTITY((read_1 + 1) | (read_1 + 1), max((read_1 + 1) | (read_1 + 1), (read_1 + 1) | (read_1 + 1))), (read_1 + 1) | (read_1 + 1)))))))) - 0u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u)))))))) : _GLF_FUZZED(subgroup_id))) == read_2), bool(bvec4(! (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) == read_2), false, false, true)))))))))))))))) + 1, 4, 64, _GLF_IDENTITY(4, (4) | (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
