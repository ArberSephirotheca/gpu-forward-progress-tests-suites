#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true)), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), bool(bool(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), injectionSwitch.y)), false, false, true))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), max(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (! (false))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (! (false)))))))))) || false)))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(bool(_GLF_DEAD(false)), false, false), false)))))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-896.770)), vec2(_GLF_FUZZED(6744.5865), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, exp(0.0), sqrt(0.0), determinant(mat2(1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0, determinant(mat3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, exp(0.0), sqrt(0.0), determinant(mat2(1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0, determinant(mat3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, exp(0.0), sqrt(0.0), determinant(mat2(1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0, determinant(mat3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, exp(0.0), sqrt(0.0), determinant(mat2(1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0, determinant(mat3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), 0.0, 0.0)))))) + sqrt(vec2(0.0, 0.0)))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, exp(0.0), sqrt(0.0), determinant(mat2(1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0, determinant(mat3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, exp(0.0), sqrt(0.0), determinant(mat2(1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0, determinant(mat3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, exp(0.0), sqrt(0.0), determinant(mat2(1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0, determinant(mat3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, exp(0.0), sqrt(0.0), determinant(mat2(1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 1.0, determinant(mat3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), 0.0, 0.0)))))) + sqrt(vec2(0.0, 0.0)))).x > injectionSwitch.y))))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0))))))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8568.3280)), bool(false))), 1.0, 1.0, 0.0))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(423.749) : _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)))))), ((0.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, log(1.0), _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(-0.6)), float(tan(0.0)), bool(true))), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3(float(mat4x3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), log(1.0), tan(0.0), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), max(determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, 1.0)), (determinant(mat2(1.0, 0.0, 1.0, 1.0))) / 1.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3(float(mat4x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.2))), 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9118.1946)), float(1.0), bool(true)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat4x3(1.0, 1.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) - sin(0.0)))), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))), (false ? _GLF_FUZZED(vec4(-5347.1825, -930.565, 318.184, -31.02)) : vec4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0)))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat4x3(1.0, 1.0, log(1.0), tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))) + 0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-77.74) : 0.0)), 0.0)), tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7747.7671)), float(1.0), bool(true))), 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-79.58) : dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-716.995) : 0.0)), 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0))))))) - 0.0)))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8568.3280)), _GLF_IDENTITY(bool(false), false || (bool(false))))), 1.0, 1.0, 0.0))).y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(mix(vec2((vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, abs(1.0) * (0.0)), 0.0)), 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch[0], injectionSwitch[1]))))))[1]), vec2(_GLF_FUZZED(float(126747u)), _GLF_FUZZED(807.544)), bvec2(false, false)), (mix(vec2((vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, abs(1.0) * (0.0)), 0.0)), 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch[0], injectionSwitch[1]))))))[1]), vec2(_GLF_FUZZED(float(126747u)), _GLF_FUZZED(807.544)), bvec2(false, false))) + vec2(0.0, 0.0)))).y))))))) ? workgroup_base : _GLF_FUZZED(workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y, injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))))), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))))))))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))))) / 1u)))))) + 1), _GLF_IDENTITY(uint(uvec2((subgroup_local_id + 1), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY((uint(uvec2((subgroup_local_id + 1), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 1u * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 1u * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * 1u))))))), ((uint(uvec2((subgroup_local_id + 1), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 1u * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 1u * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * 1u)))))))) | ((uint(uvec2((subgroup_local_id + 1), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 1u * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), 1u * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * 1u))))))))) >> 0u)) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(vec2(-490.284, -189.144), vec2(354.023, 6.6))))), 0.0, 0.0), _GLF_IDENTITY(min(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(vec2(-490.284, -189.144), vec2(354.023, 6.6))))), 0.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(vec2(-490.284, -189.144), vec2(354.023, 6.6))))), 0.0, 0.0)), max(min(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(vec2(-490.284, -189.144), vec2(354.023, 6.6))))), 0.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(vec2(-490.284, -189.144), vec2(354.023, 6.6))))), 0.0, 0.0)), min(vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(vec2(-490.284, -189.144), vec2(354.023, 6.6))))), 0.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(vec2(-490.284, -189.144), vec2(354.023, 6.6))))), 0.0, 0.0))))))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), true, false))))) || false), false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((17.80 * -4.3))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8609.2362, _GLF_IDENTITY(476.131, max(476.131, 476.131)))) : injectionSwitch)))), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(round(vec2(-38.30, -5.6)))))), vec2(1.0, 1.0) * (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(round(vec2(-38.30, -5.6)))))))))).x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((17.80 * -4.3))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8609.2362, 476.131)) : injectionSwitch)))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(610.432)), vec2(_GLF_FUZZED(-6608.9448), (injectionSwitch)[1]), bvec2(false, true))))).x, mix(float(_GLF_FUZZED((17.80 * -4.3))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x), max(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x), mix(float(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x)), float(_GLF_FUZZED(vec4(7.7, 1.6, -6.3, -26.72).y)), bool(false))), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x))), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((17.80 * -4.3))), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false), bool(bvec3(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(610.432)), vec2(_GLF_FUZZED(-6608.9448), (injectionSwitch)[1]), bvec2(false, true))))).x, mix(float(_GLF_FUZZED((17.80 * -4.3))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x), max(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x), mix(float(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x)), float(_GLF_FUZZED(vec4(7.7, 1.6, -6.3, -26.72).y)), bool(false))), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x))), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((17.80 * -4.3))), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false), false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), 4)), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-10565)))))), _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, 1 * (64))))))), int(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (true ? 64 : _GLF_FUZZED(-10565)))))), _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, 1 * (64))))))), 0, 0, 1))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, false)))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2((false), false), false), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec2((false), false), false), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec2((false), false), false), false))), false))))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false), false), bvec3(bvec4(bvec3(bvec2((false), false), false), false)))))), true, true)))))), ! (_GLF_IDENTITY(! (! (! (! (false)))), bool(bool(_GLF_IDENTITY(! (! (! (! (false)))), (_GLF_IDENTITY(! (! (! (! (false)))), bool(bvec2(! (! (! (! (false)))), false)))) || false))))))), ! (! (bool(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2((false), false), false), bvec3(bvec4(bvec3(bvec2((false), false), false), false))), bvec3(bvec4(bvec3(bvec2((false), false), false), false)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2((false), false), false), bvec3(bvec4(bvec3(bvec2((false), false), false), false)))))), true, _GLF_IDENTITY(true, false || (true)))))))), ! (! (! (! (! (false))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! _GLF_IDENTITY((false), true && ((false))))))))))), true && (! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))), true && (! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))))))), (bool(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))), true && (! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))))) || _GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! _GLF_IDENTITY((false), true && ((false))))))))))), true && (! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))), true && (! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))))))), (bool(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))), true && (! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))))) || _GLF_IDENTITY(false, ! (! (false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), ((false)) && true))), ! (! (_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! (! (! (false))))), bool(bvec4(! (! (! (! (! (false))))), true, false, false))))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))))))), true && _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false))))))))))))), _GLF_IDENTITY(((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true)))))))))))))), (_GLF_IDENTITY(((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), ((false)) && true))), ! (! (_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! (! (! (false))))), bool(bvec4(! (! (! (! (! (false))))), true, false, false))))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))))))), true && _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false))))))))))))), _GLF_IDENTITY(((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true)))))))))))))), (_GLF_IDENTITY(((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), ((false)) && true))), ! (! (_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))), bool(bvec4(! (! (! (! (! (false))))), true, false, false))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))), (! (! _GLF_IDENTITY((! (! (false))), true && ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))) && true)))))) && true)))))))), false || ((bool(bool(_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))), (! (! _GLF_IDENTITY((! (! (false))), true && ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))) && true)))))) && true)))))))))), true && _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false)))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false))))))))))) || false)))))))), _GLF_IDENTITY(((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), true && (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, false))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true)))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))), (_GLF_IDENTITY(((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) && true)), ! (! (! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true))))), ! (! (! (! _GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))))))), true, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))), ((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false)))))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))), ((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false)))))) && true)), bool(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))), ((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false)))))) && true)))))))))))), true, true), true)))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) && (((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! _GLF_IDENTITY((false), bool(bvec3((false), false, true)))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))), true))), true)))))))))))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))) || false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), ((false)) && true))), ! (! (_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))), bool(bvec4(! (! (! (! (! (false))))), true, false, false))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))), (! (! _GLF_IDENTITY((! (! (false))), true && ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))) && true)))))) && true)))))))), false || ((bool(bool(_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))), (! (! _GLF_IDENTITY((! (! (false))), true && ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))) && true)))))) && true)))))))))), true && _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false)))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false))))))))))) || false)))))))), _GLF_IDENTITY(((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), true && (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, false))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true)))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))), (_GLF_IDENTITY(((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) && true)), ! (! (! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true))))), ! (! (! (! _GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))))))), true, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))), ((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false)))))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))), ((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false)))))) && true)), bool(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))), ((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false)))))) && true)))))))))))), true, true), true)))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) && (((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! _GLF_IDENTITY((false), bool(bvec3((false), false, true)))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))), true))), true)))))))))))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))) || false))))))), ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), ((false)) && true))), ! (! (_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))), bool(bvec4(! (! (! (! (! (false))))), true, false, false))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))), (! (! _GLF_IDENTITY((! (! (false))), true && ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))) && true)))))) && true)))))))), false || ((bool(bool(_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), false || (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))), (! (! _GLF_IDENTITY((! (! (false))), true && ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))) && true)))))) && true)))))))))), true && _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false)))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false))))))) || false)), ! (! (! (! (! (! (false))))))))))) || false)))))))), _GLF_IDENTITY(((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), true && (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, false))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true)))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))), (_GLF_IDENTITY(((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) && true)), ! (! (! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true))))), ! (! (! (! _GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))))))), true, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))), ((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false)))))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))), ((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false)))))) && true)), bool(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))), ((! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false)))))) && true)))))))))))), true, true), true)))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) && (((! (bool(bool(_GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! _GLF_IDENTITY((false), bool(bvec3((false), false, true)))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), true, true), true))))), true))), true)))))))))))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))) || false)))))))) && true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), true && (_GLF_IDENTITY(false, true && (false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, true))))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) && true))))), true, false), false))), true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), (_GLF_IDENTITY(~ _GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) >> 0u)) - (0u ^ 0u)), (~ _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1), uint(uvec4((read_1 + 1), 0u, 0u, 0u))), 0u + ((read_1 + 1)))) ^ 0u)) / 1u)))), 4, 64, _GLF_IDENTITY(4, (4) | (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (false) || false), false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, bool(bvec2(true, false))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))))) || false), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))), true, false))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false)), bool(bool(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).y)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch - 6.4)))).y))))))) || false))))))), _GLF_IDENTITY(true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), true, false, true))))))), ! (! (true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), true, false, true))))))))))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))))), (true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))))))))))), false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(-8359.7838), (true ? _GLF_FUZZED(-8359.7838) : _GLF_FUZZED(2525.9899)))), bool(false))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-518.509, -258.248)))).x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), true && (! (true)))))))), bool(bvec2(true, false))), bool(bvec2((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)))) || false), (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, bool(bvec2(true, false))), false))))) || false), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))), true, false), false)))))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))))) || false)), bool(bool(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1.5 + 127.470)), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), false))), (injectionSwitch.x > injectionSwitch.y))))))) || false))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), false)))))), false, false, false))), (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false, false)), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false, false)), ! (! (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false, false)))))) && true)), (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! _GLF_IDENTITY(((bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (((bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))), true, false), false)))))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))))) || false)), bool(bool(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1.5 + 127.470)), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), false))), (injectionSwitch.x > injectionSwitch.y))))))) || false))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), false)))))), false, false, false))), (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false, false)), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false, false)), ! (! (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false, false)))))) && true)), (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! _GLF_IDENTITY(((bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (((bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))), true, false), false)))))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))))) || false)), bool(bool(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1.5 + 127.470)), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), false))), (injectionSwitch.x > injectionSwitch.y))))))) || false))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), false)))))), false, false, false))), (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false, false)), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false, false)), ! (! (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false, false)))))) && true)), (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! _GLF_IDENTITY(((bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (((bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))) && true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false, true))))), false)))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, (1) + 0) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)), max(read_1, read_1)) + _GLF_IDENTITY(1, (1) + 0) == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, (1) + 0) == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, (1) + 0) == read_2, false || (_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, (1) + 0) == read_2)))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), (true ? _GLF_IDENTITY(max(read_1, read_1), (max(read_1, read_1)) - 0u) : _GLF_FUZZED(subgroup_id)))) + _GLF_IDENTITY(1, (1) + 0)) << (_GLF_IDENTITY(0u, min(0u, 0u)) >> _GLF_IDENTITY(uint(2u), uint(2u)))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), max(read_1, read_1)) + _GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, (1) + 0)) << (_GLF_IDENTITY(0u, 0u ^ (0u)) >> _GLF_IDENTITY(uint(2u), uint(2u)))) == read_2) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
