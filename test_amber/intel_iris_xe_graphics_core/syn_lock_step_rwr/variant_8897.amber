#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(42.49), _GLF_FUZZED(49.24)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), min(ivec3(1, 1, 0), ivec3(1, 1, 0)))))]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, _GLF_IDENTITY(false, true && (false))))), true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1]))) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) / exp(0.0)), 0.0), max(vec2(_GLF_IDENTITY(0.0, (0.0) / exp(0.0)), 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) / exp(0.0)), 0.0))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1)))), 1 * (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.y = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)), 0u), (uvec2(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)), 0u)) >> uvec2(0u, 0u)))), (true ? subgroup_id : _GLF_FUZZED(125135u)));
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (bool(_GLF_DEAD(false)))))))
      break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false))) && true))))), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(-304.258)), vec2(((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[0], ((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(true, true)))).y))))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))), true)))))))), bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false), false, true), false))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false), false, true), false)))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, false)))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) ^ (1 ^ 1)) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false))))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.y), bool(true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z = _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(uint(8258.5378)) : subgroup_local_id));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.x), bool(true))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) || false), false || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) || _GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) || false)))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) || false))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))), (! (_GLF_WRAPPED_IF_TRUE(true))) || false)))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) || false))))) && true))) && true)))
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
          break;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.y * subgroup_size + _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z, (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z) / 1u);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) << 0u), uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u)), clamp(uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))), 0u)), uint(uvec4(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u)), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (workgroup_base) << 0u))) | 0u)), 0u)), (uint(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (workgroup_base) << 0u))) | 0u)), 0u))) | (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (workgroup_base) << 0u))) | 0u)), 0u)), (uint(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (workgroup_base) << 0u))) | 0u)), 0u))) | (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (workgroup_base) << 0u))) | 0u)), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (workgroup_base) << 0u))) | 0u)), 0u))))))))), uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u)))), 0u, 1u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 0u))))), uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) << 0u, uint(uint((workgroup_base) << 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((workgroup_base) << 0u, uint(uint((workgroup_base) << 0u))) : _GLF_FUZZED(119371u)))), ((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) << 0u, uint(uint((workgroup_base) << 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((workgroup_base) << 0u, uint(uint((workgroup_base) << 0u))) : _GLF_FUZZED(119371u))))) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) >> 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), 0u ^ (~ (workgroup_base))))), (workgroup_base) << 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), 0u ^ (~ (workgroup_base))))), (workgroup_base) << 0u), 0u))) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(uint(uint(~ (workgroup_base))), (uint(uint(~ (workgroup_base)))) << 0u)))), max(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(uint(uint(~ (workgroup_base))), (uint(uint(~ (workgroup_base)))) << 0u)))), _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(uint(uint(~ (workgroup_base))), (uint(uint(~ (workgroup_base)))) << 0u)))))), (workgroup_base) << 0u), uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, clamp(_GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) >> 0u), (workgroup_base) << 0u, (workgroup_base) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))) - 0u)), _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) + GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.y * subgroup_size + _GLF_IDENTITY(((GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1) ^ 0u) : _GLF_FUZZED(subgroup_size)))), max((_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1) ^ 0u) : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1) ^ 0u) : _GLF_FUZZED(subgroup_size)))))) % _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) ? ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z, 1u * (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z)) + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0))).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1) ^ 0u) : _GLF_FUZZED(subgroup_size)))) % subgroup_size) : _GLF_FUZZED(subgroup_id))), ((GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1) % subgroup_size), ((GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1) % subgroup_size)));
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_size))), buf[virtual_gid])), 0u | (_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_size))), buf[virtual_gid])))), buf[virtual_gid])), _GLF_IDENTITY(clamp(buf[virtual_gid], buf[virtual_gid], buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), uint(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), 1u)))) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))]), (clamp(buf[virtual_gid], buf[virtual_gid], buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) >> 0u), (virtual_gid) | (virtual_gid))])) * 1u)), 4, 64, _GLF_IDENTITY(0, int(ivec2(0, 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))))) > injectionSwitch.y))) && true)) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + _GLF_IDENTITY(1, (1) >> 0))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), max(~ (read_1 + 1), _GLF_IDENTITY(~ (read_1 + 1), uint(uvec3(~ (read_1 + 1), 1u, 0u))))), (~ (read_1 + 1)) / 1u), _GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY((~ (read_1 + 1)), max((_GLF_IDENTITY(~ (read_1 + 1), (_GLF_IDENTITY(~ (read_1 + 1), uint(uvec2(~ (read_1 + 1), 0u)))) / 1u)), _GLF_IDENTITY((~ (read_1 + 1)), ((~ (read_1 + 1))) + 0u))) / 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + _GLF_IDENTITY(1, (1) >> 0))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), max(~ (read_1 + 1), _GLF_IDENTITY(~ (read_1 + 1), uint(uvec3(~ (read_1 + 1), 1u, 0u))))), (~ (read_1 + 1)) / 1u), _GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY((~ (read_1 + 1)), max((_GLF_IDENTITY(~ (read_1 + 1), (_GLF_IDENTITY(~ (read_1 + 1), uint(uvec2(~ (read_1 + 1), 0u)))) / 1u)), _GLF_IDENTITY((~ (read_1 + 1)), ((~ (read_1 + 1))) + 0u))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + _GLF_IDENTITY(1, (1) >> 0))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), max(~ (read_1 + 1), _GLF_IDENTITY(~ (read_1 + 1), uint(uvec3(~ (read_1 + 1), 1u, 0u))))), (~ (read_1 + 1)) / 1u), _GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY((~ (read_1 + 1)), max((_GLF_IDENTITY(~ (read_1 + 1), (_GLF_IDENTITY(~ (read_1 + 1), uint(uvec2(~ (read_1 + 1), 0u)))) / 1u)), _GLF_IDENTITY((~ (read_1 + 1)), ((~ (read_1 + 1))) + 0u))) / 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + _GLF_IDENTITY(1, (1) >> 0))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), max(~ (read_1 + 1), _GLF_IDENTITY(~ (read_1 + 1), uint(uvec3(~ (read_1 + 1), 1u, 0u))))), (~ (read_1 + 1)) / 1u), _GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY((~ (read_1 + 1)), max((_GLF_IDENTITY(~ (read_1 + 1), (_GLF_IDENTITY(~ (read_1 + 1), uint(uvec2(~ (read_1 + 1), 0u)))) / 1u)), _GLF_IDENTITY((~ (read_1 + 1)), ((~ (read_1 + 1))) + 0u))) / 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + _GLF_IDENTITY(1, (1) >> 0))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), max(~ (read_1 + 1), _GLF_IDENTITY(~ (read_1 + 1), uint(uvec3(~ (read_1 + 1), 1u, 0u))))), (~ (read_1 + 1)) / 1u), _GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY((~ (read_1 + 1)), max((_GLF_IDENTITY(~ (read_1 + 1), (_GLF_IDENTITY(~ (read_1 + 1), uint(uvec2(~ (read_1 + 1), 0u)))) / 1u)), _GLF_IDENTITY((~ (read_1 + 1)), ((~ (read_1 + 1))) + 0u))) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + _GLF_IDENTITY(1, (1) >> 0))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), max(~ (read_1 + 1), _GLF_IDENTITY(~ (read_1 + 1), uint(uvec3(~ (read_1 + 1), 1u, 0u))))), (~ (read_1 + 1)) / 1u), _GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY((~ (read_1 + 1)), max((_GLF_IDENTITY(~ (read_1 + 1), (_GLF_IDENTITY(~ (read_1 + 1), uint(uvec2(~ (read_1 + 1), 0u)))) / 1u)), _GLF_IDENTITY((~ (read_1 + 1)), ((~ (read_1 + 1))) + 0u))) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + _GLF_IDENTITY(1, (1) >> 0))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), max(~ (read_1 + 1), _GLF_IDENTITY(~ (read_1 + 1), uint(uvec3(~ (read_1 + 1), 1u, 0u))))), (~ (read_1 + 1)) / 1u), _GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY((~ (read_1 + 1)), max((_GLF_IDENTITY(~ (read_1 + 1), (_GLF_IDENTITY(~ (read_1 + 1), uint(uvec2(~ (read_1 + 1), 0u)))) / 1u)), _GLF_IDENTITY((~ (read_1 + 1)), ((~ (read_1 + 1))) + 0u))) / 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + _GLF_IDENTITY(1, (1) >> 0))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), max(~ (read_1 + 1), _GLF_IDENTITY(~ (read_1 + 1), uint(uvec3(~ (read_1 + 1), 1u, 0u))))), (~ (read_1 + 1)) / 1u), _GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY((~ (read_1 + 1)), max((_GLF_IDENTITY(~ (read_1 + 1), (_GLF_IDENTITY(~ (read_1 + 1), uint(uvec2(~ (read_1 + 1), 0u)))) / 1u)), _GLF_IDENTITY((~ (read_1 + 1)), ((~ (read_1 + 1))) + 0u))) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + _GLF_IDENTITY(1, (1) >> 0))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), max(~ (read_1 + 1), _GLF_IDENTITY(~ (read_1 + 1), uint(uvec3(~ (read_1 + 1), 1u, 0u))))), (~ (read_1 + 1)) / 1u), _GLF_IDENTITY(~ (read_1 + 1), _GLF_IDENTITY((~ (read_1 + 1)), max((_GLF_IDENTITY(~ (read_1 + 1), (_GLF_IDENTITY(~ (read_1 + 1), uint(uvec2(~ (read_1 + 1), 0u)))) / 1u)), _GLF_IDENTITY((~ (read_1 + 1)), ((~ (read_1 + 1))) + 0u))) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((read_1 + 1), clamp((read_1 + 1), (read_1 + 1), _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) ^ 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1, _GLF_IDENTITY(max(_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1, _GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1), uint(uvec3(max(_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1, _GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / _GLF_IDENTITY(1u, 0u ^ (1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1 + 1), 0u | (_GLF_IDENTITY(~ (read_1 + 1), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))), clamp(read_1, read_1, read_1)), (false ? _GLF_FUZZED((workgroup_id & next_virtual_gid)) : read_1)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0)), ~ (_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, 1u * (read_1 + 1)), read_1 + 1))))))), (~ (read_1 + 1)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u)), min(~ (read_1 + _GLF_IDENTITY(1, (1) | (1))), ~ (read_1 + 1))), (~ (read_1 + 1)) / 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, (read_1) * (1u & 1u)) + 1), (~ (read_1 + 1)) / 1u), max(_GLF_IDENTITY(~ (read_1 + _GLF_IDENTITY(1, (1) * 1)), (~ _GLF_IDENTITY((read_1 + 1), min((read_1 + 1), (read_1 + 1)))) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u), uint(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u))))), (~ (read_1 + 1)) / 1u))))))), read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))))), _GLF_IDENTITY((read_1 + 1) ^ 0u, (_GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) | 0u) ^ 0u) ^ 0u))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) | (64), ((64) | (64)) | ((64) | (64))), int(int(_GLF_IDENTITY(_GLF_IDENTITY((64) | (64), ((64) | (64)) | ((64) | (_GLF_IDENTITY(64, (64) | (0 >> _GLF_IDENTITY(int(6), int(6))))))), (_GLF_IDENTITY((64) | (64), ((64) | (_GLF_IDENTITY(64, (64) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (int(_GLF_ONE(1.0, injectionSwitch.y))))))) | ((64) | (64)))) | 0))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (max(64, 64))))) << 0)) | 0), (64) | _GLF_IDENTITY((64), ((64)) ^ 0)) : _GLF_FUZZED(-11364)), ~ (~ _GLF_IDENTITY(((true ? _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY((_GLF_IDENTITY(64, max(64, 64))) << 0, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (_GLF_IDENTITY(64, max(64, 64))) >> 0)) / 1)) << 0 : _GLF_FUZZED(92658))))), int(ivec4((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0)), ((_GLF_IDENTITY(0, 0 | (0)) ^ 1) & 1), (1 | _GLF_IDENTITY(1, ~ (~ (1)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0), (64) | _GLF_IDENTITY((64), ((64)) ^ 0)) : _GLF_FUZZED(-11364))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) * 1))), (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0)), int(ivec4((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0)), ((0 ^ 1) & 1), (1 | 1), int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(163.694) : 0.0)), injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | 0), (64) | _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) >> 0), ((64)) ^ 0)) : _GLF_FUZZED(-11364)), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) * 1))), (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0)), int(ivec4((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0)), ((0 ^ 1) & 1), (1 | 1), int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(163.694) : 0.0)), injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | 0), (64) | _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) >> 0), ((64)) ^ 0)) : _GLF_FUZZED(-11364)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) * 1))), (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0)), int(ivec4((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0)), ((0 ^ 1) & 1), (1 | 1), int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(163.694) : 0.0)), injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | 0), (64) | _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) >> 0), ((64)) ^ 0)) : _GLF_FUZZED(-11364))) | ((true ? _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) * 1))), (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0)), int(ivec4((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0)), ((0 ^ 1) & 1), (1 | 1), int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(163.694) : 0.0)), injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | 0), (64) | _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) >> 0), ((64)) ^ 0)) : _GLF_FUZZED(-11364)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) * 1))), (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0)), int(ivec4((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0)), ((0 ^ 1) & 1), (1 | 1), int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(163.694) : 0.0)), injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | 0), (64) | _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) >> 0), ((64)) ^ 0)) : _GLF_FUZZED(-11364))))), 0 | (((true ? _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0))), (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0)))) | 0)) << 0)), int(ivec4((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << _GLF_IDENTITY(0, ~ (~ (0))))), ((0 ^ 1) & 1), (1 | 1), int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0), (64) | _GLF_IDENTITY((64), ((64)) ^ 0)) : _GLF_FUZZED(-11364))))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0)), int(ivec4((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0)), ((0 ^ 1) & 1), (1 | 1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x))))) | 0), (64) | _GLF_IDENTITY((64), ((64)) ^ 0)) : _GLF_FUZZED(-11364))), ((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0)), int(ivec4((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), int(ivec2(_GLF_IDENTITY(max(64, 64), (max(64, 64)) ^ 0), (1 & 1)))))) << 0)), ((0 ^ 1) & 1), (1 | _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0), (64) | _GLF_IDENTITY((64), _GLF_IDENTITY(((64)), (false ? _GLF_FUZZED(-27199) : _GLF_IDENTITY(((64)), int(ivec2(((64)), 0))))) ^ 0)) : _GLF_FUZZED(-11364), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0)), int(ivec4((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), int(ivec2(_GLF_IDENTITY(max(64, 64), (max(64, 64)) ^ 0), (1 & 1)))))) << 0)), ((0 ^ 1) & 1), (1 | _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0), (64) | _GLF_IDENTITY((64), _GLF_IDENTITY(((64)), (false ? _GLF_FUZZED(-27199) : _GLF_IDENTITY(((64)), int(ivec2(((64)), 0))))) ^ 0)) : _GLF_FUZZED(-11364)) - 0)))))))), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(82652) : _GLF_IDENTITY(4, min(4, 4)))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(70318, 29650, -38181)) : ivec3(4, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (false ? _GLF_FUZZED(ivec3(70318, 29650, -38181)) : ivec3(4, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), 0)) : _GLF_FUZZED(ivec3(62426, 16346, 37285))))))))), 64, 0);
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.x = read_2, 1u * (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.x = _GLF_IDENTITY(read_2, min(read_2, read_2)))), (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.x = read_2, 1u * (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.x = read_2))) >> 0u);
  }
 do
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.x, ! (! (read_1 + 1 == GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.x)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + _GLF_IDENTITY((1), int(int((1)))), ~ (_GLF_IDENTITY(~ (0 + (1)), (~ (_GLF_IDENTITY(0 + (1), int(ivec2(0 + (1), 0))))) / 1)))), 1))) | (1), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(0 + (1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0 + (1)), (~ (_GLF_IDENTITY(0 + (1), int(ivec2(0 + (1), 0))))) / 1)), int(ivec3((_GLF_IDENTITY(~ (0 + (1)), (~ (_GLF_IDENTITY(0 + (1), int(ivec2(0 + (1), 0))))) / 1)), 1, (1 | 1)))))), 1))) | (1), ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), ~ (_GLF_IDENTITY(~ (0 + (1)), (~ (_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(ivec2(0 + (1), 0), (true ? ivec2(0 + (1), 0) : _GLF_FUZZED(ivec2(29878, 50367)))))))) / 1)))), 1))) | (1)) >> 0), 1, 1), ivec3(ivec4(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(0 + (1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0 + (1)), (~ (_GLF_IDENTITY(0 + (1), int(ivec2(0 + (1), 0))))) / 1)), int(ivec3((_GLF_IDENTITY(~ (0 + (1)), (~ (_GLF_IDENTITY(0 + (1), int(ivec2(0 + (1), 0))))) / 1)), 1, (1 | 1)))))), 1))) | (1), ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), ~ (_GLF_IDENTITY(~ (0 + (1)), (~ (_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, 0 | (1))), int(_GLF_IDENTITY(ivec2(0 + (1), 0), (true ? ivec2(0 + (1), 0) : _GLF_FUZZED(ivec2(29878, 50367)))))))) / 1)))), 1))) | (1)) >> 0), 1, 1), 1))), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0 + (1)), (~ (_GLF_IDENTITY(0 + (1), int(ivec2(0 + (1), 0))))) / 1), (0 | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0 + (1)), (~ (_GLF_IDENTITY(0 + (1), int(ivec2(0 + (1), 0))))) / 1), (_GLF_IDENTITY(~ (0 + (1)), (~ (_GLF_IDENTITY(0 + (1), int(ivec2(0 + (1), 0))))) / 1)) - 0)))))), 1))) | (1), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), ~ (_GLF_IDENTITY(~ (0 + (1)), (~ (_GLF_IDENTITY(0 + (1), int(ivec2(0 + (1), 0))))) / 1)))), 1))) | (1)) >> 0), 1, 1)) << ivec3(0, 0, 0))))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (64)) / (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), int(6))) >> _GLF_IDENTITY(int(6), int(6))) | 1))), 4);
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
