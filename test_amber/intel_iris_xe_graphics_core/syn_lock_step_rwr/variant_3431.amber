#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), false, true)), (bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), false, true))) && true)))))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))))))))) || _GLF_IDENTITY(false, true && (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.6, -74.96)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), (true ? _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])) : _GLF_FUZZED(-9.8))), injectionSwitch[1])))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], float(mat3x4((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], 0.0, 0.0, 0.0, exp(0.0), exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(-91.78))), _GLF_FUZZED(-1.7)), vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-227.827, 68.46).x), _GLF_IDENTITY(float(mat2(_GLF_FUZZED(vec2(-227.827, 68.46).x), 1.0, determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), sqrt(1.0))), 0.0 + (float(_GLF_IDENTITY(mat2(_GLF_FUZZED(vec2(-227.827, 68.46).x), 1.0, determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), sqrt(1.0)), (_GLF_IDENTITY(mat2(_GLF_FUZZED(vec2(-227.827, 68.46).x), 1.0, determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), sqrt(1.0)), (mat2(_GLF_FUZZED(vec2(-227.827, 68.46).x), 1.0, determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), sqrt(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])))[1]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true)))))), bool(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true)))))), false)))))))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3(! (_GLF_IDENTITY(true, ! (! (true)))), false, true))))), true)))))))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))) || false)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true)))))), bool(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true)))))), false)))))))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3(! (_GLF_IDENTITY(true, ! (! (true)))), false, true))))), true)))))))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))) || false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true)))))), bool(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true)))))), false)))))))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3(! (_GLF_IDENTITY(true, ! (! (true)))), false, true))))), true)))))))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))) || false)), true))))))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(643.211) : injectionSwitch.y)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), cos(0.0), 1.0, 0.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), true), true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), true), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), true), true)), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), true), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), true), true)), false)))))), true)))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), false, true, true)))) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))))))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))))))))) || false))))) || false))) && true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (false)))), ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (bool(bool(false)))))))))))), ! (! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))) || _GLF_IDENTITY(false, (false) || false))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! _GLF_IDENTITY((! (false)), ((! (false))) && true))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! ((! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true)))))), bool(bvec4(! (false), true, true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), true, true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true)))))), bool(bvec4(! (false), true, true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), true, true)))))))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true)))))), bool(bvec4(! (false), true, true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), true, true))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), bool(bool(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), bool(bool(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false)))) && true)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, false), false))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), false), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), false), true)))), true, false))))), bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), true, true, true))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false)))) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0)))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(592.840) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.5) : injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))), true))), false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))), true))), false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, (false) && true)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(94.86))))), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.4)), max(_GLF_IDENTITY(float(_GLF_FUZZED(3.4)), mix(float(_GLF_FUZZED(0.1)), float(float(_GLF_FUZZED(3.4))), bool(true))), _GLF_IDENTITY(float(_GLF_FUZZED(3.4)), mix(float(float(_GLF_FUZZED(3.4))), float(_GLF_IDENTITY(_GLF_FUZZED(vec4(62.10, _GLF_IDENTITY(-79.59, clamp(-79.59, _GLF_IDENTITY(-79.59, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1561.8445, mix(float(-1561.8445), float(_GLF_FUZZED(6016.7587)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : -79.59)), -79.59)), 1051.3277, -2221.9546).x), max(_GLF_FUZZED(vec4(62.10, _GLF_IDENTITY(-79.59, clamp(-79.59, _GLF_IDENTITY(-79.59, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1561.8445, mix(float(-1561.8445), float(_GLF_FUZZED(6016.7587)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : -79.59)), -79.59)), 1051.3277, -2221.9546).x), _GLF_FUZZED(vec4(62.10, _GLF_IDENTITY(-79.59, clamp(-79.59, _GLF_IDENTITY(-79.59, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1561.8445, mix(float(-1561.8445), float(_GLF_FUZZED(6016.7587)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : -79.59)), -79.59)), 1051.3277, -2221.9546).x)))), bool(false))))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(7281.0763)), bool(false)))))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.6, -3.7)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))))) + log(vec2(1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))), (1) ^ 0)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) ^ (0), min(0 ^ (0), 0 ^ (0))), 0 ^ (0), 0 ^ (0))), (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) ^ (0), min(0 ^ (0), 0 ^ (0))), 0 ^ (0), 0 ^ (0))), (_GLF_IDENTITY(0 ^ (0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) ^ (0), min(0 ^ (0), 0 ^ (0))), 0 ^ (0), 0 ^ (0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0 ^ (0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) ^ (0), min(0 ^ (0), 0 ^ (0))), 0 ^ (0), 0 ^ (0))))))))) / (0u ^ (1u & 1u))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), _GLF_IDENTITY(false, false || (false)), false))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-32.19)), float(injectionSwitch.y), bool(true))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-3174.8769), clamp(_GLF_FUZZED(-3174.8769), _GLF_IDENTITY(_GLF_FUZZED(-3174.8769), mix(float(_GLF_FUZZED(161.400)), float(_GLF_FUZZED(-3174.8769)), bool(true))), _GLF_FUZZED(-3174.8769))) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-32.19)), float(injectionSwitch.y), bool(true))))), bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false))))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, false)))) && true)) || false), false))), _GLF_IDENTITY(false, bool(bool(false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_FUZZED(9702.6065) : injectionSwitch.x)) < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), false))), _GLF_IDENTITY(false, bool(bool(false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_FUZZED(9702.6065) : injectionSwitch.x)) < injectionSwitch.y))))) || false)) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) * 1u)) << 0u, ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) * 1u)) << 0u) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(~ (~ (buf[virtual_gid])), (_GLF_IDENTITY(~ (~ (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(~ (~ (buf[virtual_gid])), max(~ (~ (buf[virtual_gid])), ~ (~ (buf[virtual_gid])))))))) >> 0u))) / 1u, min((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) / 1u, (_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (buf[virtual_gid]), 0u | (~ (buf[virtual_gid]))), 0u ^ (~ (buf[virtual_gid])))))) / 1u))), 4, 64, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, 0 + ((0) << 0))), (_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, 0 + ((0) << 0)))) * 1), 0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(true, (true) && true)))), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(true, (true) && true)))), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2)), ! (! (read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) | (read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec2(-220.998, 7873.1076))) : injectionSwitch.x)))) | (read_2)), max(_GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2)), _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec2(-220.998, 7873.1076))) : injectionSwitch.x))), 1.0 * (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(length(vec2(-220.998, 7873.1076))) : injectionSwitch.x)))))) | (read_2)), max(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2)), (_GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (read_2) / 1u)) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))))))) - 0u))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1, ~ (~ (uint(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))) + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1), clamp(clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1), clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1), clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)))) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))) + 1, ~ (~ (uint(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), int(ivec3(_GLF_IDENTITY(max(1, 1), int(int(max(1, 1)))), 0, (0 >> _GLF_IDENTITY(int(5), int(5))))))), 1)) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))) | (read_2))) + 1))))), clamp(uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, 1u * (read_1)))) + 1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), max((_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, (1) - 0)))) / 1), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), injectionSwitch.x)))) | (_GLF_IDENTITY(read_2, (read_2) | 0u)))) + 1, _GLF_IDENTITY(1u, 0u | (1u)) * (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + 0u), clamp(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED((_GLF_IDENTITY(read_1 << subgroup_size, (_GLF_IDENTITY(read_1 << subgroup_size, min(read_1 << subgroup_size, read_1 << subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 << subgroup_size, (true ? read_1 << subgroup_size : _GLF_FUZZED(workgroup_base))), 0u ^ (read_1 << subgroup_size)))))))) + 1, read_1 + 1, read_1 + 1)) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ (42390u & 0u)) + 1, (read_1 + 1) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u), (true ? read_1 : _GLF_FUZZED((_GLF_IDENTITY(read_1 << subgroup_size, (_GLF_IDENTITY(read_1 << subgroup_size, min(read_1 << subgroup_size, read_1 << subgroup_size))) | _GLF_IDENTITY((_GLF_IDENTITY(read_1 << subgroup_size, 0u ^ (read_1 << subgroup_size))), uint(uvec2((_GLF_IDENTITY(read_1 << subgroup_size, 0u ^ (read_1 << subgroup_size))), 1u)))))))) + 1, read_1 + 1, read_1 + 1)) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u + (read_1)), (read_1) | (read_1))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u + (read_1)), (read_1) | (read_1))))) - 0u), (true ? read_1 : _GLF_FUZZED((_GLF_IDENTITY(read_1 << subgroup_size, (_GLF_IDENTITY(read_1 << subgroup_size, min(_GLF_IDENTITY(read_1 << subgroup_size, (read_1 << subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))), read_1 << subgroup_size))) | (_GLF_IDENTITY(read_1 << subgroup_size, 0u ^ (read_1 << subgroup_size)))))))) + _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))), read_1 + 1, read_1 + 1)) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED((_GLF_IDENTITY(read_1 << subgroup_size, (_GLF_IDENTITY(read_1 << subgroup_size, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_id))) << subgroup_size, read_1 << subgroup_size))) | (_GLF_IDENTITY(read_1 << subgroup_size, 0u ^ (read_1 << subgroup_size)))))))), max(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED((_GLF_IDENTITY(read_1 << subgroup_size, (_GLF_IDENTITY(read_1 << subgroup_size, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_id))) << subgroup_size, read_1 << subgroup_size))) | (_GLF_IDENTITY(read_1 << subgroup_size, 0u ^ (read_1 << subgroup_size)))))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED((_GLF_IDENTITY(read_1 << subgroup_size, (_GLF_IDENTITY(read_1 << subgroup_size, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_id))) << subgroup_size, read_1 << subgroup_size))) | (_GLF_IDENTITY(read_1 << subgroup_size, 0u ^ (read_1 << subgroup_size)))))))), min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED((_GLF_IDENTITY(read_1 << subgroup_size, (_GLF_IDENTITY(read_1 << subgroup_size, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_id))) << subgroup_size, read_1 << subgroup_size))) | (_GLF_IDENTITY(read_1 << subgroup_size, 0u ^ (read_1 << subgroup_size)))))))), _GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED((_GLF_IDENTITY(read_1 << subgroup_size, (_GLF_IDENTITY(read_1 << subgroup_size, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_id))) << subgroup_size, read_1 << subgroup_size))) | (_GLF_IDENTITY(read_1 << subgroup_size, 0u ^ (read_1 << subgroup_size)))))))))))) + 1, _GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), read_1 + 1)) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))), read_1 + 1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (read_2))))) + 1)), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))) + 1))) | 0u), (uint(_GLF_IDENTITY(read_1, 0u ^ (_GLF_IDENTITY(read_1, _GLF_IDENTITY((true ? read_1 : _GLF_FUZZED(_GLF_IDENTITY(uvec3(158131u, _GLF_IDENTITY(52950u, _GLF_IDENTITY((52950u) / 1u, clamp((52950u) / 1u, _GLF_IDENTITY((52950u), ~ (~ ((52950u)))) / 1u, (52950u) / 1u))), 10138u).s, (_GLF_IDENTITY(uvec3(158131u, _GLF_IDENTITY(52950u, _GLF_IDENTITY((52950u) / 1u, clamp((52950u) / 1u, _GLF_IDENTITY((52950u), ~ (~ ((52950u)))) / 1u, (52950u) / 1u))), 10138u).s, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec3(158131u, _GLF_IDENTITY(52950u, _GLF_IDENTITY((52950u) / 1u, clamp((52950u) / 1u, _GLF_IDENTITY((52950u), _GLF_IDENTITY(~ (~ ((52950u))), (true ? ~ (~ ((52950u))) : _GLF_FUZZED(read_2)))) / 1u, (52950u) / 1u))), 10138u).s), ~ (~ (uint(uvec3(158131u, _GLF_IDENTITY(52950u, _GLF_IDENTITY((52950u) / 1u, clamp(_GLF_IDENTITY((52950u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (52950u) : _GLF_FUZZED(subgroup_size))) / 1u, _GLF_IDENTITY((52950u), ~ (~ ((52950u)))) / 1u, (52950u) / 1u))), 10138u).s))))), uint(uvec3(uint(_GLF_IDENTITY(uint(uvec3(158131u, _GLF_IDENTITY(52950u, _GLF_IDENTITY((52950u) / 1u, clamp((52950u) / 1u, _GLF_IDENTITY((52950u), ~ _GLF_IDENTITY((~ ((52950u))), min((~ ((52950u))), (~ ((52950u)))))) / 1u, (52950u) / 1u))), 10138u).s), ~ (~ (uint(uvec3(_GLF_IDENTITY(158131u, (158131u) * 1u), _GLF_IDENTITY(52950u, _GLF_IDENTITY((52950u) / 1u, clamp((52950u) / 1u, _GLF_IDENTITY((52950u), ~ (~ ((52950u)))) / 1u, (52950u) / 1u))), 10138u).s))))), 0u, 0u))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec3(158131u, _GLF_IDENTITY(52950u, _GLF_IDENTITY((52950u) / 1u, clamp((52950u) / 1u, _GLF_IDENTITY((52950u), _GLF_IDENTITY(~ (~ ((52950u))), (true ? ~ (~ ((52950u))) : _GLF_FUZZED(read_2)))) / 1u, (52950u) / 1u))), 10138u).s), ~ (~ (uint(uvec3(158131u, _GLF_IDENTITY(52950u, _GLF_IDENTITY((52950u) / 1u, clamp(_GLF_IDENTITY((52950u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (52950u) : _GLF_FUZZED(subgroup_size))) / 1u, _GLF_IDENTITY((52950u), ~ (~ ((52950u)))) / 1u, (52950u) / 1u))), 10138u).s))))), uint(uvec3(uint(_GLF_IDENTITY(uint(uvec3(158131u, _GLF_IDENTITY(52950u, _GLF_IDENTITY((52950u) / 1u, clamp((52950u) / 1u, _GLF_IDENTITY((52950u), ~ _GLF_IDENTITY((~ ((52950u))), min((~ ((52950u))), (~ ((52950u)))))) / 1u, (52950u) / 1u))), 10138u).s), ~ (~ (uint(uvec3(_GLF_IDENTITY(158131u, (158131u) * 1u), _GLF_IDENTITY(52950u, _GLF_IDENTITY((52950u) / 1u, clamp((52950u) / 1u, _GLF_IDENTITY((52950u), ~ (~ ((52950u)))) / 1u, (52950u) / 1u))), 10138u).s))))), 0u, 0u))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u + ((true ? read_1 : _GLF_IDENTITY(_GLF_FUZZED(uvec3(158131u, 52950u, 10138u).s), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(158131u, 52950u, 10138u).s), (_GLF_FUZZED(uvec3(158131u, 52950u, 10138u).s)) / (1u | 1u))) - 0u))))))) + _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY((-71090 & 0), ((-71090 & 0)) / 1)) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), clamp(1, 1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))))) / 1, 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))))) / 1)))) << 0)) ^ 0u), _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | 0), 4))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)) / 1, (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)) / 1, (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)) / 1, (true ? (_GLF_IDENTITY(64, (64) >> 0)) / 1 : _GLF_FUZZED(19652)))) * 1)) - 0))) | (64)), _GLF_IDENTITY(4, (4) << 0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4957.4233) : 1.0)), 1.0, log(1.0), abs(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))) || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
