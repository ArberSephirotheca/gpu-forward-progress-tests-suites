#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, true && (true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.y = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z = GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false))))))) || false)))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(min(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.86)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6736.6285)), bool(false))), 1.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))) / exp(0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0))), min(min(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.86)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6736.6285)), bool(false))), 1.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))) / exp(0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0))), min(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.86)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6736.6285)), bool(false))), 1.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))) / exp(0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true))) / 1.0)), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.86)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6736.6285)), bool(false))), 1.0, 1.0, 1.0)), max(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true))) / 1.0)), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.86)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6736.6285)), bool(false))), 1.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true))) / 1.0)), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.86)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6736.6285)), bool(false))), 1.0, 1.0, 1.0)))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / exp(0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), min(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.86)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6736.6285)), bool(false))), 1.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(0.6)), bool(false))) / exp(0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), min(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.86)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6736.6285)), bool(false))), 1.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.6)), bool(false))) / exp(0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (true ? float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 0.0, sqrt(0.0), 1.0, 0.0, 1.0, cos(sin(0.0)), exp(0.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(0.0, 0.0, exp(tan(0.0)), 0.0)), (true ? float(vec4(0.0, 0.0, exp(tan(0.0)), 0.0)) : _GLF_FUZZED(95.91))), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(float(vec4(0.0, 0.0, exp(tan(0.0)), 0.0)), (true ? float(vec4(0.0, 0.0, exp(tan(0.0)), 0.0)) : _GLF_FUZZED(95.91)))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))) : _GLF_FUZZED(9.8)))))) > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))))))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.y), bool(true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.y), bool(true))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.7)), bool(false))), (injectionSwitch.y) + 0.0), mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (true)), true, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.y), bool(true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.y), bool(true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.y), bool(true))), true, true, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(217.856), _GLF_FUZZED(vec3(-6.3, -402.646, 16.31).b)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(tan(0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 0.0, 0.0, sqrt(tan(0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))).y, float(float(injectionSwitch.y))), false || (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0))) : _GLF_FUZZED(2435.7273))) > injectionSwitch.y)), true))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))) / vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch), vec2(mat3(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))).y)), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)), true))), _GLF_IDENTITY(false, true && (false)) || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))))), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bool(false))), true))))), (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch), vec2(mat3(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch), vec2(mat3(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch), vec2(mat3(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))).y))) && true))), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0))))))), injectionSwitch, injectionSwitch)).y)), true))), _GLF_IDENTITY(false, true && (false)) || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y)), true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true)))))))))), false)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1519.0247), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1519.0247), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1519.0247), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1519.0247), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1519.0247), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(true, false || (true)), true))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1519.0247), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))) || false)), true)))))))), true, false))), true, false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) && true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), true, true)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  return;
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.x = GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(false))), bool(bvec4(! ((_GLF_DEAD(false))), true, true, false))), false || (_GLF_IDENTITY(! ((_GLF_DEAD(false))), bool(bvec4(! ((_GLF_DEAD(false))), true, true, false))))), false || (! ((_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)))))
  return;
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.w, (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size : _GLF_FUZZED(uvec4(188321u, subgroup_size, 136866u, atomicAnd(subgroup_id, num_workgroup))))).w) - (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(3u), uint(3u))))))) | _GLF_IDENTITY(0u, (0u) | (0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y, (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y) / (1u & _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), 0u))))), (uvec4((1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) * uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(uvec4((1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4((1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) * uvec4(1u, 1u, 1u, 1u))) / uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4((1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4((1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) * uvec4(1u, 1u, 1u, 1u)))) / 1u))))) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, true))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-65.99)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w, (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w) / 1u) + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w) / _GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w) / 1u, max(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w) / 1u, ~ (~ ((GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w) / 1u))), (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w) / 1u))) | ((GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w) / _GLF_IDENTITY(1u, 0u | (1u))))) + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size) | 0u), GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) + GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z = _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)));
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, 1u, 0u, 0u)))), clamp(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size), (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - uvec4(0u, 0u, 0u, 0u)).w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size)) >> 0u))), 1u, 0u, 0u), uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, 1u, 0u, 0u), uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED((num_workgroup --)), (true ? 1u : _GLF_FUZZED((num_workgroup --))) / 1u))), 1u, 1u, 1u) * (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (true ? uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base))) | (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[0], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[1], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[2], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[3])), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[0], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[1], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[2], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[3]))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[0], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[1], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[2], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[3])), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[0], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[1], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[2], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[3]))) | uvec4(0u, 0u, 0u, 0u)))))).z, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z, clamp(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z, GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z, GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z)))) * subgroup_size, (true ? GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED((num_workgroup --)), (true ? 1u : _GLF_FUZZED((num_workgroup --))) / 1u))), 1u, 1u, 1u) * (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (true ? uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base))) | (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[0], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[1], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[2], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[3])), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[0], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[1], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[2], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[3]))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[0], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[1], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[2], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[3])), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[0], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[1], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[2], GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base[3]))) | uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)))))).z, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z, clamp(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z, GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z, GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z)))) * subgroup_size : _GLF_FUZZED(subgroup_size))), 1u, 0u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, 1u, 0u, 0u), clamp(uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z)), 1u), ~ (~ (uvec2(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z)), 1u)))))) * subgroup_size, 1u, 0u, 0u), uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size) << 0u), clamp(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size) | (GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size)), GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size)), 1u, 0u, 0u), _GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, 1u, 0u, 0u), (uvec4(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.z * subgroup_size, 1u, 0u, 0u)) + _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))))))))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1), clamp((GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1), (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1), (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1))), (false ? _GLF_FUZZED(subgroup_local_id) : (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1))), (_GLF_IDENTITY((GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, _GLF_IDENTITY(uint(uvec2(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(uvec2(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec2(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) + 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1), clamp((GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1), (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1), (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1))), (false ? _GLF_FUZZED(subgroup_local_id) : (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1))), (_GLF_IDENTITY((GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, _GLF_IDENTITY(uint(uvec2(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(uvec2(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec2(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) + 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1), clamp((GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1), (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1), (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1))), (false ? _GLF_FUZZED(subgroup_local_id) : (GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1))), (_GLF_IDENTITY((GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, _GLF_IDENTITY(uint(uvec2(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(uvec2(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec2(GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.z + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) + 0u))))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.x = next_virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.1) : injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z, (false ? _GLF_FUZZED(packSnorm2x16(injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u)).z), clamp(~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z), _GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z), (~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z)) | (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[0], GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[2], uint(_GLF_IDENTITY(uint(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[2]), min(uint(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[2]), uint(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[2]))))), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[3])).z))), ~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z))))), (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u)).z), clamp(~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z), _GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z), (~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z)) | (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[0], GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[2], uint(_GLF_IDENTITY(uint(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[2]), min(uint(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[2]), uint(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[2]))))), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size[3])).z))), ~ (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z))))), (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z) - 0u)) << 0u)))) - 0u)], _GLF_IDENTITY(4, max(4, 4)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.y = read_1;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.y, uint(uvec2(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.y, ((1u ^ 1u) ^ 0u)))), max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.y, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.y)) + 1), clamp(uint(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.y + 1), uint(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.y + 1), uint(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.y + 1))), _GLF_IDENTITY(4, (4) / 1), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.z], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, sqrt(1.0)), transpose(transpose(mat2(injectionSwitch, 0.0, sqrt(1.0))))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (false))) || false))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))), true && (! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))), true && (! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))))))), false, false), false))))), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))), true && (! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))), true && (! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))))))), false, false), false))))), true))))), bool(bvec4((! (_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))), true && (! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))), true && (! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))))))), false, false), false))))), true))))), false, true, true)))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))), true && (! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))), true && (! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))))))), false, false), false))))), true))))), bool(bvec4((! (_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))), true && (! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))), true && (! (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((6.9 * 4.8))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)))))))), true, false))))))), false, false), false))))), true))))), false, true, true)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))) && true)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.x = read_2;
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.y = GLF_merged3_0_1_6_1_1_11_2_1_17read_2subgroup_idsubgroup_local_id.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.x, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.x, uint(uvec3(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.x, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), min(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.x, GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.x))) * 1u)], uint(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_14num_workgroupread_1virtual_gidworkgroup_size.y + 1 == GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_2subgroup_idworkgroup_base.y) + 1, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
