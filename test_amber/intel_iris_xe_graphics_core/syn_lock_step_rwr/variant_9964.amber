#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_20 {
 mat2x4 _f0;
 bvec4 _f1;
 uint _f2;
 bvec3 _f3;
 uvec2 _f4;
 uvec3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
 uint read_1;
} ;

struct _GLF_struct_18 {
 uvec2 _f0;
} ;

struct _GLF_struct_17 {
 uint _f0;
} ;

struct _GLF_struct_16 {
 mat4x2 _f0;
 mat3x4 _f1;
 bvec3 _f2;
 uvec3 _f3;
 uvec2 _f4;
 mat2 _f5;
 float _f6;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 mat2x4 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 vec3 _f1;
 uint _f2;
 vec4 _f3;
} ;

struct _GLF_struct_15 {
 ivec3 _f0;
 _GLF_struct_14 _f1;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 int _f1;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 mat4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_22 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 ivec3 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_19 _f4;
 ivec3 _f5;
 _GLF_struct_21 _f6;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 bvec3 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 bool _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 mat4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 bvec4 _f1;
 uvec3 _f2;
 int _f3;
 _GLF_struct_8 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 vec4 _f1;
 bvec3 _f2;
 mat2x3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat2 _f1;
 uint workgroup_size;
 ivec2 _f2;
 mat4x2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(vec2(1.0), vec4(1.0), bvec3(true), mat2x3(1.0), mat4(1.0)), _GLF_struct_1(mat2x4(1.0)), mat4x3(1.0)), mat2(1.0), gl_WorkGroupSize.x, ivec2(1), mat4x2(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(mat3x2(1.0), bvec4(true), uvec3(1u), 1, _GLF_struct_8(_GLF_struct_4(vec3(1.0), bvec3(true), mat4x2(1.0), mat3x2(1.0), true, mat3x4(1.0)), mat4(1.0), _GLF_struct_5(vec4(1.0)), _GLF_struct_6(vec2(1.0)), _GLF_struct_7(mat4(1.0), _GLF_struct_replacement_3.workgroup_size * workgroup_id)), mat3(1.0));
 uint virtual_gid = _GLF_struct_replacement_9._f4._f4.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_9._f4._f4.workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_12(uvec3(1u), _GLF_struct_10(bvec3(true)), _GLF_struct_11(mat4(1.0), 1), mat4(1.0), bvec2(true)), _GLF_struct_13(bvec2(true), mat4x2(1.0)), ivec3(1), _GLF_struct_15(ivec3(1), _GLF_struct_14(bvec4(true), vec3(1.0), 1u, vec4(1.0))), _GLF_struct_19(_GLF_struct_16(mat4x2(1.0), mat3x4(1.0), bvec3(true), uvec3(1u), uvec2(1u), mat2(1.0), 1.0), mat2x4(1.0), _GLF_struct_17(1u), _GLF_struct_18(uvec2(1u))), ivec3(1), _GLF_struct_21(_GLF_struct_20(mat2x4(1.0), bvec4(true), 1u, bvec3(true), uvec2(1u), uvec3(1u), mat2x3(1.0)), atomicLoad(buf[virtual_gid], 4, 64, 0)));
 atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_22._f6.read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_22._f6.read_1 + 1 == read_2) + 1, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
