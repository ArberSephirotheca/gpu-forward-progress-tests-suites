#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), _GLF_IDENTITY(false, (false) || false), false)), bvec3(bvec4(bvec3(bvec3(! (false), false, false)), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), _GLF_IDENTITY(false, (false) || false), false)), bvec3(bvec4(bvec3(bvec3(! (false), false, false)), false))))))))))), true)))), (bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), false, false)), bvec3(bvec4(bvec3(bvec3(! (false), false, false)), false)))))))), true))))) && true)))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))) || false), false, false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || false) && true, (((false) || false) && true) || false))), false)), bvec3(bvec4(bvec3(bvec3(! (false), false, false)), false)))))))), true)))), (bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(! (false), false, false)), bvec3(bvec4(bvec3(bvec3(! (false), false, false)), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(! (false), false, false)), bvec3(bvec4(bvec3(bvec3(! (false), false, false)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (false), false, false)), bvec3(bvec4(bvec3(bvec3(! (false), false, false)), false))), true))))))))))), true))))) && true))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (true), (_GLF_IDENTITY(false || (true), ! (! (false || (true))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), (bool(_GLF_IDENTITY(true, false || (true)))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) || false))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || (true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || (true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || (true))) && true), true))))) || false))), ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) || false))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || (true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || (true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || (true))) && true), true))))) || false)))) && true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), false || (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))))), max(injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x > injectionSwitch.y))) || false))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), true), bvec2(bvec2(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false)))) || false) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || ((_GLF_IDENTITY(false, bool(bool(false)))))) || false), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), false))), bool(bvec3(! (bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, (false) || false)), false))), true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, _GLF_IDENTITY(false, bool(bool(false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x3(injectionSwitch[0], 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch[1])))).x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-373.321)), bool(_GLF_IDENTITY(false, false || (false))))) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6528.0841)), bool(false))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), true, false, true)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0)))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), 1.0)), (true ? float(vec4(injectionSwitch.y, 0.0, length(vec2(0.0, 0.0)), 1.0)) : _GLF_FUZZED(7.9))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), false)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), true, false))) && true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), false)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), true, false))) && true)), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), false)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), true, false))) && true)), false))), true)))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(0.0))))), true, _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), true, _GLF_IDENTITY(false, false || (false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, false || (false))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))), true, _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, false || (false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, false || (false))))))))))), false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, (1u) - 0u) * (workgroup_base)), workgroup_base)), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size) >> 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(1, 1)))), (subgroup_local_id + 1) * 1u)) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))) && true))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(190.090, float(mat3(_GLF_IDENTITY(190.090, (190.090) / 1.0), 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, abs(0.0)))))), vec2(_GLF_FUZZED(-824.567), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(190.090)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-824.567), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-824.567), (injectionSwitch)[1])) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), bvec2(false, true))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec4(-9.0, -6.6, -5181.4778, -0.6), (true ? vec4(-9.0, -6.6, -5181.4778, -0.6) : _GLF_FUZZED(vec4(-4.7, -3.2, -4007.3785, -6414.7481)))).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, _GLF_IDENTITY(-1233.8721, (_GLF_IDENTITY(-1233.8721, mix(float(-1233.8721), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0)) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)), clamp(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY(false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), max(false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0))), false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)))))), bvec2(false, true)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, _GLF_IDENTITY(2.2, mix(float(_GLF_IDENTITY(2.2, (2.2) / 1.0)), float(_GLF_FUZZED(-27.02)), bool(false))), 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true)), vec2(mat2x3(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, _GLF_IDENTITY(1072.8327, clamp(1072.8327, 1072.8327, 1072.8327)), -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)), 0.0, 0.0, 1.0, 1.0))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, _GLF_IDENTITY(-70.96, clamp(-70.96, -70.96, -70.96)), 1072.8327, -85.97, 32.03, 9.2, _GLF_IDENTITY(7.8, 0.0 + (7.8)), 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), false))))))))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec4(-9.0, -6.6, -5181.4778, -0.6), (true ? vec4(-9.0, -6.6, -5181.4778, -0.6) : _GLF_FUZZED(vec4(-4.7, -3.2, -4007.3785, -6414.7481)))).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, _GLF_IDENTITY(-1233.8721, (_GLF_IDENTITY(-1233.8721, mix(float(-1233.8721), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0)) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)), clamp(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY(false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), max(false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0))), false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)))))), bvec2(false, true)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, _GLF_IDENTITY(2.2, mix(float(_GLF_IDENTITY(2.2, (2.2) / 1.0)), float(_GLF_FUZZED(-27.02)), bool(false))), 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true)), vec2(mat2x3(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, _GLF_IDENTITY(1072.8327, clamp(1072.8327, 1072.8327, 1072.8327)), -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)), 0.0, 0.0, 1.0, 1.0))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, _GLF_IDENTITY(-70.96, clamp(-70.96, -70.96, -70.96)), 1072.8327, -85.97, 32.03, 9.2, _GLF_IDENTITY(7.8, 0.0 + (7.8)), 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), false)))))))))), mix(vec2(_GLF_FUZZED(2.8), _GLF_FUZZED(-8.5)), vec2((_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec4(-9.0, -6.6, -5181.4778, -0.6), (true ? vec4(-9.0, -6.6, -5181.4778, -0.6) : _GLF_FUZZED(vec4(-4.7, -3.2, -4007.3785, -6414.7481)))).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, _GLF_IDENTITY(-1233.8721, (_GLF_IDENTITY(-1233.8721, mix(float(-1233.8721), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0)) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)), clamp(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY(false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), max(false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0))), false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)))))), bvec2(false, true)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, _GLF_IDENTITY(2.2, mix(float(_GLF_IDENTITY(2.2, (2.2) / 1.0)), float(_GLF_FUZZED(-27.02)), bool(false))), 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true)), vec2(mat2x3(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, _GLF_IDENTITY(1072.8327, clamp(1072.8327, 1072.8327, 1072.8327)), -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)), 0.0, 0.0, 1.0, 1.0))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, _GLF_IDENTITY(-70.96, clamp(-70.96, -70.96, -70.96)), 1072.8327, -85.97, 32.03, 9.2, _GLF_IDENTITY(7.8, 0.0 + (7.8)), 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), false)))))))))))[0], (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec4(-9.0, -6.6, -5181.4778, -0.6), (true ? vec4(-9.0, -6.6, -5181.4778, -0.6) : _GLF_FUZZED(vec4(-4.7, -3.2, -4007.3785, -6414.7481)))).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, _GLF_IDENTITY(-1233.8721, (_GLF_IDENTITY(-1233.8721, mix(float(-1233.8721), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0)) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)), clamp(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY(false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), max(false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0))), false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), false ? _GLF_FUZZED(2651.5315) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)))))), bvec2(false, true)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, _GLF_IDENTITY(2.2, mix(float(_GLF_IDENTITY(2.2, (2.2) / 1.0)), float(_GLF_FUZZED(-27.02)), bool(false))), 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true)), vec2(mat2x3(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, _GLF_IDENTITY(1072.8327, clamp(1072.8327, 1072.8327, 1072.8327)), -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)), 0.0, 0.0, 1.0, 1.0))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, 7.8, 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), bvec2(false, true)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, 2.2, 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, _GLF_IDENTITY(-70.96, clamp(-70.96, -70.96, -70.96)), 1072.8327, -85.97, 32.03, 9.2, _GLF_IDENTITY(7.8, 0.0 + (7.8)), 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), false)))))))))))[1]), bvec2(true, true)))).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9.0, -6.6, -5181.4778, -0.6).q)), vec2(_GLF_FUZZED(((mat3x4(-1464.1583, -70.62, 0.2, 6.7, 2438.6160, -5.5, 29.04, _GLF_IDENTITY(2.2, max(2.2, 2.2)), 524.729, 97.89, 2588.8405, -1233.8721) == mat3x4(-7932.2739, -0.2, 85.62, -70.96, 1072.8327, -85.97, 32.03, 9.2, _GLF_IDENTITY(7.8, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-50.68) : _GLF_IDENTITY(7.8, clamp(7.8, 7.8, 7.8)))), 9.2, 746.750, -399.315)) ? 54.33 : 9293.8696)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (true ? transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(mat2(3.3, 501.376, -1.8, 5.7))))))))[1]), bvec2(false, true))).x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(~ (~ (read_2)), ~ (~ (~ (_GLF_IDENTITY(~ (read_2), clamp(~ (read_2), ~ (read_2), ~ (read_2))))))))) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-45042) : 0)))) | (1)), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
