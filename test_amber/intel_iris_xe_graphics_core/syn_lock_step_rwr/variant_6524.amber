#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! (_GLF_IDENTITY((false), false || ((false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).y)))), false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, (_GLF_IDENTITY((bool(false)), false || (_GLF_IDENTITY((bool(false)), false || ((bool(false)))))) && true) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_local_id)))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))))), gl_NumWorkGroups.x)), (_GLF_IDENTITY(0u, ~ (~ (0u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), max(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u)), ~ (~ ((uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u))))) ^ uvec4(0u, 0u, 0u, 0u))))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ _GLF_IDENTITY((uint(2u)), clamp((uint(2u)), _GLF_IDENTITY((uint(2u)), (_GLF_IDENTITY((uint(2u)), ((uint(2u))) << 0u)) - 0u), (uint(2u)))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), clamp(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u)))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), clamp(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u)))) >> 0u, max((_GLF_IDENTITY(uint(2u), clamp(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u)))) >> 0u, (_GLF_IDENTITY(uint(2u), clamp(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u)))) >> 0u))) - 0u)), ~ (~ (uint(2u)))), 0u, 0u, 1u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u)), min((uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u)), (uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED((uvec4(87842u, 183238u, 65418u, 20685u) + subgroup_local_id)) : (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u)), min((uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u)), (uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u))))), (false ? _GLF_FUZZED((uvec4(87842u, 183238u, 65418u, 20685u) + subgroup_local_id)) : (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u)), min((uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u)), (uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u)))))) | (false ? _GLF_FUZZED((uvec4(87842u, 183238u, 65418u, 20685u) + subgroup_local_id)) : (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u)), min((uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u)), (uvec4(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), 0u, 0u, 1u))))))))))) ^ uvec4(0u, 0u, 0u, 0u))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ _GLF_IDENTITY((uint(2u)), min((uint(2u)), (uint(2u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(2u), ~ (_GLF_IDENTITY(~ (uint(2u)), min(~ (uint(2u)), ~ (uint(2u)))))), 0u, 0u, 1u), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(uint(2u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(2u)), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2u)), uint(uvec4(~ (uint(2u)), 1u, 1u, 0u))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (uint(2u)), uint(uvec4(~ (uint(2u)), 1u, 1u, 0u))))), _GLF_IDENTITY(~ (uint(2u)), (_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) ^ 0u)) << 0u)))), ((_GLF_IDENTITY(~ (uint(2u)), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2u)), uint(uvec4(~ (uint(2u)), 1u, 1u, 0u))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (uint(2u)), uint(uvec4(~ (uint(2u)), 1u, 1u, 0u))))), _GLF_IDENTITY(~ (uint(2u)), (_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) ^ 0u)) << 0u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, 0u, 1u)), min((uvec4(_GLF_IDENTITY(uint(2u), ~ (_GLF_IDENTITY(~ (uint(2u)), max(_GLF_IDENTITY(~ (uint(2u)), uint(uvec4(_GLF_IDENTITY(~ (uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec3((_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))))), 1u, 1u, 0u))), _GLF_IDENTITY(~ (uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) ^ 0u)), clamp((_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) ^ 0u)), (_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) ^ 0u)), (_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) ^ 0u))))) - 0u)) / 1u) << 0u))))), 0u, _GLF_IDENTITY(0u, (0u) - 0u), 1u)), (uvec4(_GLF_IDENTITY(uint(2u), ~ (_GLF_IDENTITY(~ (uint(2u)), max(_GLF_IDENTITY(~ (uint(2u)), uint(uvec4(~ (_GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u, 0u)))), 1u, 1u, 0u))), _GLF_IDENTITY(~ (uint(2u)), (_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) ^ 0u)) << 0u))))), 0u, 0u, 1u)))) ^ uvec4(0u, 0u, 0u, 0u))))) - 0u))))) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED((uvec3(114077u, 92389u, 1889u) | uvec3(2423u, 149821u, 100864u))) : gl_NumWorkGroups)))))) | (gl_NumWorkGroups)).x)))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 1u, 1u), (uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 1u, 1u)) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), (true ? (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(169061u, 153707u, 181943u)))))).x)), gl_NumWorkGroups.x))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5411.5821)), bool(false)))), 0.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-66.60, 71.77, 36.35, -53.37, 64.54, -60.14, 25.30, -2.0, 3.8, -2.7, 6.3, -7.1)) : mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6961.5638) : injectionSwitch.x)), injectionSwitch.x)), sqrt(0.0), 0.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), sin(0.0) + (_GLF_IDENTITY(dot(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, 0.0, 0.0)))))) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-56.71)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (bool(true))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441), _GLF_IDENTITY(clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441)), clamp(clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441)), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441)), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-56.71)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(9283.2441))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.5)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))))), gl_WorkGroupID)).x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))), gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(61856u))), 0u))), 0u + (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_IDENTITY(_GLF_FUZZED(61856u), max(_GLF_FUZZED(61856u), _GLF_FUZZED(61856u))))), 0u)))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))))))), min(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) >> 0u, ((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)) >> 0u)) >> 0u) * 1u))) - 0u, uint(uvec2((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) - 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u)) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u)))) | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) >> 0u)) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))) / 1u)) | ((gl_WorkGroupID.x))) >> 0u)) - 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, (gl_WorkGroupID.x) >> 0u)) - 0u))), gl_WorkGroupID.x)), uint(uvec2(gl_WorkGroupID.x, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))))), min(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(true ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(169724u) : subgroup_id))), 0u | (_GLF_IDENTITY(true ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(169724u) : subgroup_id))), (true ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(169724u) : subgroup_id)))) / 1u))))), (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_id)))))) << 0u)) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))) : _GLF_FUZZED(uvec3(113632u, 157835u, 123928u)))).x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(127049u, _GLF_IDENTITY(((0u ^ 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)) | (uint(0u)), ((uint(0u)) | (uint(0u))) | 0u)), uint(0u))) + (127049u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((0u ^ 0u) << _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ (((0u ^ 0u) << _GLF_IDENTITY(uint(0u), uint(0u)))))) + (127049u) : _GLF_FUZZED(51515u)))), 21094u, 480u)) : gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))))).x, _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))))), 1u, 1u))))), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u)), _GLF_IDENTITY(((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) | (max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u))), uint(uint(((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) | (max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u))))))))))))))), (clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x) >> 0u, ((gl_WorkGroupID.x) >> 0u) | ((gl_WorkGroupID.x) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)) >> 0u)) >> 0u) * 1u))) - 0u, uint(uvec2((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) - 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u)) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u)))) | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) >> 0u)) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))), ((_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x))))) | (_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))), min((_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))), uint(uvec2((_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))), 1u))))))) / 1u)) | ((gl_WorkGroupID.x))) >> 0u)) - 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, (gl_WorkGroupID.x) >> 0u)) - 0u))), gl_WorkGroupID.x)), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), 0u)))), (false ? _GLF_FUZZED(uvec3(93036u, 63726u, 162390u).b) : (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x) >> 0u, ((gl_WorkGroupID.x) >> 0u) | ((gl_WorkGroupID.x) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)) >> 0u)) >> 0u) * 1u))) - 0u, uint(uvec2((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) - 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u)) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ 0u)))) | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) >> 0u)) ^ 0u)), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))), ((_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x))))) | (_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))), min((_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))), uint(uvec2((_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))), 1u))))))) / 1u)) | ((gl_WorkGroupID.x))) >> 0u)) - 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, (gl_WorkGroupID.x) >> 0u)) - 0u))), gl_WorkGroupID.x)), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))))), min(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(true ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(169724u) : subgroup_id))), 0u | (_GLF_IDENTITY(true ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(169724u) : subgroup_id))), (true ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(169724u) : subgroup_id)))) / 1u))))), (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_id)), ~ (~ (_GLF_IDENTITY((true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_id)), clamp((true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_id)), (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_id)), (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_id))))))))))) << 0u)) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))) : _GLF_FUZZED(uvec3(113632u, 157835u, 123928u)))).x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(127049u, _GLF_IDENTITY(((0u ^ 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)) | (uint(0u)), ((uint(0u)) | (_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))) >> 0u))) | 0u)), uint(0u))) + (127049u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((0u ^ 0u) << _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ ((_GLF_IDENTITY((0u ^ 0u), (true ? (0u ^ 0u) : _GLF_FUZZED((workgroup_size % num_workgroup)))) << _GLF_IDENTITY(uint(0u), uint(0u)))))) + (127049u) : _GLF_FUZZED(51515u)))), 21094u, 480u)) : gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))))).x, _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))))), 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u)), _GLF_IDENTITY(((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) | (max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u))), uint(uint(((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) | (max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u)))))))), max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u)), _GLF_IDENTITY(((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) | (max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u))), uint(uint(((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) | (max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u)), _GLF_IDENTITY(((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) | (max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u))), uint(uint(((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) | (max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u)), _GLF_IDENTITY(((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) | (max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u))), uint(uint(((0u | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) | (max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))) << 0u))))))))) + 0u))))))))))) / 1u), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))))))))), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))))), 0u, 1u, 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))))), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))) / 1u))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 1u, 1u))))))), _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))), (true ? _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) << 0u), 1u))) : _GLF_FUZZED(subgroup_id)))))))))), min(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) - 0u, clamp((_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x), ((gl_WorkGroupID.x)) | (_GLF_IDENTITY((gl_WorkGroupID.x), 0u ^ ((gl_WorkGroupID.x))))) >> 0u)) - 0u, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) - 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | ((gl_WorkGroupID.x))) >> 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)))))) - 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))))), uint(uvec2(gl_WorkGroupID.x, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))), (_GLF_IDENTITY((gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))), ((gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))).x, 0u, 1u, 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, 1u * (gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, _GLF_IDENTITY(1u, (1u) - 0u)))))), max(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(127049u, 21094u, _GLF_IDENTITY(480u, max(480u, _GLF_IDENTITY(480u, clamp(480u, 480u, 480u)))))) : gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))) | (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))))))))).x, 0u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))))))), _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, uint(uvec4(gl_WorkGroupID.x, 0u, 1u, 1u)))))))))))), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(106601u, 113784u, 176404u)) : gl_WorkGroupID)), gl_WorkGroupID)), ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))))).x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uint(9.4), (0u | (0u & 102155u)) ^ (_GLF_IDENTITY(uint(9.4), min(uint(9.4), uint(9.4)))))) : gl_WorkGroupID.x)))), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), uint(uvec2(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), 1u)))) << (0u ^ 0u))), (false ? _GLF_FUZZED(163250u) : _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))) : _GLF_FUZZED((subgroup_local_id / workgroup_size)))), max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) | (min(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), ~ (~ (min(0u, 0u)))))), ((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), ~ (~ (min(0u, 0u))))))) | 0u))) | (_GLF_IDENTITY(0u, min(0u, 0u)))))), 1u, 1u))))))))))) << 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (false)), ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (false)), ! (! (false))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))) && true) && (false), ! (! (true && (false))))), ! (! (false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(asinh(-7.1)) : injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u), (workgroup_base) / 1u) + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)), (_GLF_IDENTITY(103951u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(103951u, (103951u) / 1u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(103951u, (103951u) / 1u), max(_GLF_IDENTITY(103951u, (103951u) / 1u), _GLF_IDENTITY(103951u, (103951u) / 1u))))), ~ (~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(103951u, (103951u) / 1u), max(_GLF_IDENTITY(103951u, (103951u) / 1u), _GLF_IDENTITY(103951u, (103951u) / 1u)))))))))), (126159u & 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(103951u, (103951u) / 1u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(103951u, (103951u) / 1u), max(_GLF_IDENTITY(103951u, (103951u) / 1u), _GLF_IDENTITY(103951u, (103951u) / 1u))))), ~ (~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(103951u, (103951u) / 1u), max(_GLF_IDENTITY(103951u, (103951u) / 1u), _GLF_IDENTITY(103951u, (103951u) / 1u)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), 1u * (1u << _GLF_IDENTITY(uint(6u), uint(6u))))) + (0u & 161272u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) & 0u) + (((subgroup_local_id + 1) % subgroup_size)))) - 0u);
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))))), min(next_virtual_gid, next_virtual_gid))], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), false)), bvec2(bvec2(bvec2(bvec2(! (false), false)))))))), true && (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), false)), bvec2(bvec2(bvec2(bvec2(! (false), false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! (false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), bool(bvec2(! (false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true)))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), true), false))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), true), false))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), true), false))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))))), false, false, false)))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), false)))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) || _GLF_IDENTITY(false, false || (false))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))), true && ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), false, true)))))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), ! (! ((! _GLF_IDENTITY((false), ((false)) || false)))))) && true) || false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), ! (! ((! _GLF_IDENTITY((false), ((false)) || false)))))) && true) || false)))), ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), ! (! ((! _GLF_IDENTITY((false), ((false)) || false)))))) && true) || false))))) || false), true, false, true))))))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, false), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, false), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, false), false)))))))))))) && true))))) && true)))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false)))))))), bool(bvec2(false, true)))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), true && (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))), ((! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), false, true))))), false, false)))))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))) || false), true && (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))), ((! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))) || false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) && _GLF_IDENTITY(true, ! (! (true)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))))))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), false)))))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)), false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), false)))))), false))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), bool(bvec2(false, true))))))))))))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! _GLF_IDENTITY((! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true)))))))))))), ((! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))))))))))) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! _GLF_IDENTITY((! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true)))))))))))), ((! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))))))))))) && true)))))), false), bvec2(bvec2(bvec2((! (bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! _GLF_IDENTITY((! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true)))))))))))), ((! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))))))))))) && true)))))), false))))), ! (! (bool(_GLF_IDENTITY(bvec2((! (bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! _GLF_IDENTITY((! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true)))))))))))), ((! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))))))))))) && true)))))), false), bvec2(bvec2(bvec2((! (bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! _GLF_IDENTITY((! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true)))))))))))), ((! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))))))))))) && true)))))), false))))))))))))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), bool(bvec2(false, true)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(false, false || (false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true))))))))))))))), false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), false, false))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))), true, false))))))), false, false)))))), true, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (false) && true)))), true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true))))))))), (false) && true)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true))))))))), (false) && true)))), true)))))))))))))))), _GLF_IDENTITY(bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) || (false)), bool(bvec2(false, true)))))))))), ! (_GLF_IDENTITY(! (bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))))), _GLF_IDENTITY(! (! (true)), true && (! (! (true)))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))))), _GLF_IDENTITY(! (! (true)), true && (! (! (true)))))), _GLF_IDENTITY(true, ! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true))))))))))), true && _GLF_IDENTITY((! (bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))), true)))))))))))), (_GLF_IDENTITY((! (bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))), true)))))))))))), (_GLF_IDENTITY((! (bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))), true)))))))))))), ! (! ((! (bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))), true)))))))))))))))) && true)) && true))))))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false))))))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), false, false))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-750.037), _GLF_FUZZED(947.706)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), true)))))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), false, false)))))), true, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), _GLF_IDENTITY((false), true && ((false))) && true)))), true))))))))))), _GLF_IDENTITY(bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))))))))), ! (_GLF_IDENTITY(! (bool(bool(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true))))))), _GLF_IDENTITY(true, (true) && true), false, true)), false || (bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true))))))), _GLF_IDENTITY(true, (true) && true), false, true))))))))), true && (! (bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))))))))))))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), false, false))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))), false))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), false, false)))))), true, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (false) && true)))), true))))))))))), _GLF_IDENTITY(bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false))), true)), true, true, true)), true && (bool(bvec4(bool(bvec2(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false))), true)), true, true, true)))))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true))))) || false))))))), ! (_GLF_IDENTITY(! (bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (false)), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))), true, true), true)))))), true))))))))))), true && (! (bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))))))), bool(_GLF_IDENTITY(bvec3(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))))))), false, false), bvec3(bvec3(bvec3(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))))))), false, false)))))))))))))))), false, false), false))), true))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || false) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false)))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))))))) && true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, true))))), bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, true))))), bool(bvec2(false, true)))) || false))))))))))), ! (! (bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true))))))))))))))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, false))), false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), true, true)))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))))) || false)), bool(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), false, true)))))), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), false, true)))))))), _GLF_IDENTITY(false, ! (! (false)))))))))))), false, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true))))), ! (_GLF_IDENTITY(! (false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true)))))), bool(bvec3(! (false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true)))))), false, false))))))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false))))))))))), false, false), false))))) && true), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))))))) && true), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))))), (_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))))), (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), true && (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, true))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))), bool(bvec4((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))), true, false, true))), (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), true)), bvec2(bvec3(bvec2(bvec2(false, true)), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), true)), bvec2(bvec3(bvec2(bvec2(false, true)), true)))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (bool((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (bool((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false))))))) || false)))))))))), bool(bvec4((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY(true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), (true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, true)))) || false)) && true)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false), true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false), true)))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false)))), false))), true))))))))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(false, true)))), false))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))), (false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || false), true)))))), bool(_GLF_IDENTITY(bool(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), false || (bool(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))))), false, false), false))))))))), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))) + log(vec2(1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, _GLF_IDENTITY((0), int(ivec4((0), (1 | 1), 1, 1))) >> 0)), clamp(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)))))), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
