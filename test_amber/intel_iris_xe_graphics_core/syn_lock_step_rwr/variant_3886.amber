#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 bvec3 _f0;
 mat2x3 _f1;
 int _f2;
 mat3x4 _f3;
 uvec2 _f4;
 uvec2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 ivec3 _f1;
 mat2 _f2;
 bvec4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 mat4 _f1;
 vec3 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 uvec4 _f1;
 int _f2;
 mat2 _f3;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 int _f1;
 vec3 _f2;
 mat2 _f3;
 bool _f4;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 int _f1;
 vec4 _f2;
 mat3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 vec3 _f1;
 uint _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 int _f2;
 _GLF_struct_5 _f3;
 vec4 _f4;
 _GLF_struct_6 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_1 {
 float _f0;
 mat2x4 _f1;
 uvec2 _f2;
 uvec3 _f3;
 mat2x3 _f4;
 mat3x2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_0 {
 float _f0;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 uvec2 _f1;
 _GLF_struct_0 _f2;
 int _f3;
 vec4 _f4;
 _GLF_struct_1 _f5;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_8 _f2;
 uint num_workgroup;
 vec4 _f3;
 _GLF_struct_9 _f4;
 uint _f5;
 _GLF_struct_12 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))), _GLF_IDENTITY(bool(bvec4(true && (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))), false, true, true)), (bool(bvec4(true && (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))), false, true, true))) && true)))))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))))))) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false, false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (false ? _GLF_FUZZED(-7.7) : injectionSwitch.y)), 0.0), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-3.5, -4318.8232, -7.9).x)), bool(false))), (false ? _GLF_FUZZED(-7.7) : injectionSwitch.y)), 0.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.7) : injectionSwitch.y)), 0.0))[1]), vec2(_GLF_FUZZED(614.295), _GLF_FUZZED(-9024.6575)), bvec2(false, false)))))) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(ivec4(1), _GLF_struct_2(bvec2(true), uvec2(1u), _GLF_struct_0(1.0), 1, vec4(1.0), _GLF_struct_1(1.0, mat2x4(_GLF_IDENTITY(1.0, tan(0.0) + (_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, (1u) / 1u))) << uvec2(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), uvec3(1u), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.5)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * 1.0)), mat3x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(16.82))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)))), mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 5089.9651))), float(1.0), bool(true)))))), _GLF_struct_8(_GLF_struct_3(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.6))), min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.6))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.6)))))), vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (1.0) / abs(1.0)), 1.0, 1.0))), 1u), _GLF_struct_4(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(step(-0.5, 2.8)) : 1.0)), (1.0) / round(length(_GLF_IDENTITY(normalize(abs(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (normalize(abs(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))))))), 1, vec4(1.0), mat3(1.0), mat4x2(1.0)), 1, _GLF_struct_5(uvec2(1u), 1, vec3(1.0), mat2(1.0), true), vec4(1.0), _GLF_struct_6(mat3(1.0), uvec4(1u), 1, mat2(1.0)), _GLF_struct_7(_GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (uvec3(1u)), (_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), ~ (~ (uint(uvec3(1u, 0u, 0u))))))))), (uvec3(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), ~ (~ (uint(uvec3(1u, 0u, 0u)))))))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(~ (uvec3(1u)), ~ (uvec3(1u))))))) | (~ (uvec3(1u)))))), mat2x3(1.0))), gl_NumWorkGroups.x, vec4(1.0), _GLF_struct_9(ivec3(1)), 1u, _GLF_struct_12(bvec3(true), mat4(1.0), vec3(1.0), _GLF_struct_10(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) / ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(2u), uvec4(2u))) >> _GLF_IDENTITY(uvec4(2u), _GLF_IDENTITY(uvec4(2u), min(uvec4(2u), uvec4(2u)))))), ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) + 0)))), mat2(1.0), bvec4(true), mat3x4(1.0)), _GLF_struct_11(bvec3(true), mat2x3(1.0), 1, mat3x4(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0))), uvec2(1u), uvec2(1u), bvec4(true)), mat2x3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)))) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true)))))), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) && true)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), clamp(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))) << uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (uvec3(0u, 0u, 1u)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))), 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u), 1u))))).x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(subgroup_id)) : ~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(153705u, 33943u, 55576u)))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_WorkGroupSize)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))))), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(143080u) : 0u))) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))), uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u)))))) + uvec3(0u, 0u, 0u)) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))).x, (1u ^ 1u)), _GLF_IDENTITY(min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))), uvec2(0u, 0u) ^ (min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | 0u)))) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)))), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), clamp(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))) << uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (uvec3(0u, 0u, 1u)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))), 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u), 1u))))).x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(subgroup_id)) : ~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(153705u, 33943u, 55576u)))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_WorkGroupSize)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))))), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(143080u) : 0u))) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))), uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u)))))) + uvec3(0u, 0u, 0u)) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))).x, (1u ^ 1u)), _GLF_IDENTITY(min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))), uvec2(0u, 0u) ^ (min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | 0u)))) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)))), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), clamp(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))) << uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (uvec3(0u, 0u, 1u)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))), 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u), 1u))))).x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(subgroup_id)) : ~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(153705u, 33943u, 55576u)))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)))))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_WorkGroupSize)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))))), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(143080u) : 0u))) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))), uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u)))))) + uvec3(0u, 0u, 0u)) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))).x, (1u ^ 1u)), _GLF_IDENTITY(min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))), uvec2(0u, 0u) ^ (min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | 0u)))) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)))), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x, (1u ^ 1u))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-41.97) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0), (mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)) - mat3x2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))))), (injectionSwitch.y) * 1.0)))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size))) + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, (false ? _GLF_FUZZED(39321u) : subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, (false ? _GLF_FUZZED(39321u) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, (false ? _GLF_FUZZED(39321u) : subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, (false ? _GLF_FUZZED(39321u) : subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, (false ? _GLF_FUZZED(39321u) : subgroup_id * subgroup_size)), 1u, 0u, 1u))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))))) << 0u)) >> 0u) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) + 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(_GLF_IDENTITY(true && (true), ! (! (true && (true)))))))) && (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) && true))), ((bool(_GLF_IDENTITY(false, (false) && true)))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) && true))), ((bool(_GLF_IDENTITY(false, (false) && true)))) && true)), ! (! (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) && true))), ((bool(_GLF_IDENTITY(false, (false) && true)))) && true))))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) && true))), ((bool(_GLF_IDENTITY(false, (false) && true)))) && true)), ! (! (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) && true))), ((bool(_GLF_IDENTITY(false, (false) && true)))) && true))))), false)), false, false))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)), true, true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) << 0u), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), ~ (~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) / 1u), ~ (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id))))))) + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, tan(0.0), 1.0, 0.0)), max(float(vec4(injectionSwitch.x, tan(0.0), 1.0, 0.0)), float(vec4(injectionSwitch.x, tan(0.0), 1.0, 0.0))))) > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))))) || false)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)) && true), false, false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true), false, _GLF_IDENTITY(false, (false) || false)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))), (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), _GLF_IDENTITY(true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))), bool(_GLF_IDENTITY(bvec3(true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))), true, true), bvec3(bvec3(bvec3(true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))), true, true)))))))) && true))) || false)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec4(bool(bvec4(false, true, true, true)), true, false, false)))) || (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec4(bool(bvec4(false, true, true, true)), true, false, false)))) || (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec4(bool(bvec4(false, true, true, true)), true, false, false)))) || (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)) && true), false, false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), true && (bool(bvec3(true, true, true)))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) || false)))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)], 4, _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, (0) | 0)))))), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | (0))) - (0 >> _GLF_IDENTITY(int(0), int(0)))), ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) | 0))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, (0) | 0)))))), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | (0))) - (0 >> _GLF_IDENTITY(int(0), int(0)))), ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) | 0)))))))))) | (0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1) / 1u, ((read_1 + 1) / 1u) >> (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) << 0u)))))), (uint(read_1 + 1)) ^ 0u), 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), _GLF_IDENTITY(_GLF_IDENTITY((1 * (64)), ((1 * (64))) << 0), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY((1 * (64)), ((1 * (64))) << 0))) | (1 * (64))))) / 1), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(1 * (64), 1 * (1 * _GLF_IDENTITY((64), max(_GLF_IDENTITY((64), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(21779)))), ((64)) - 0), 0)), max(int(ivec2(_GLF_IDENTITY((64), ((64)) - 0), 0)), int(ivec2(_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), int(ivec3(((64)), 0, 1))) - 0), 0))))), _GLF_IDENTITY((64), ((64)) ^ 0))))), (1 * (64)) | (1 * (64))))) / 1)) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-72048) : 64)))) | (_GLF_IDENTITY(1 * (64), (_GLF_IDENTITY(1 * (64), int(_GLF_IDENTITY(ivec4(1 * (64), 1, 1, 0), ~ (~ (ivec4(1 * (64), 1, 1, 0))))))) | (1 * (64))))))) / 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (64)) | (1 * (64))))) / 1), (true ? _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (64)) | (1 * (64))))) / 1) : _GLF_FUZZED(_GLF_IDENTITY(76729, 0 ^ (_GLF_IDENTITY(76729, 0 + (76729))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 * (64), (1 * (64)) >> 0), (false ? _GLF_FUZZED(-2116) : _GLF_IDENTITY(1 * (64), (1 * (64)) >> _GLF_IDENTITY(0, (0) - 0)))), _GLF_IDENTITY((1 * (64)) | (1 * (64)), 1 * ((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(95785) : 0))) * (64)) | (1 * _GLF_IDENTITY((64), ((64)) * 1))))))) / 1, ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(1 * (64), (1 * _GLF_IDENTITY((64), ((64)) | 0)) >> 0), _GLF_IDENTITY((1 * (64)) | (1 * (64)), 1 * ((1 * (64)) | (1 * _GLF_IDENTITY((64), ((64)) * 1))))))) / 1) ^ 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), _GLF_IDENTITY(_GLF_IDENTITY((1 * (64)), ((1 * (64))) << 0), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY((1 * (64)), ((1 * (64))) << 0))) | (1 * (64))))) / 1), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(1 * (64), 1 * (1 * _GLF_IDENTITY((64), max(_GLF_IDENTITY((64), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(21779)))), ((64)) - 0), 0)), max(int(ivec2(_GLF_IDENTITY((64), ((64)) - 0), 0)), int(ivec2(_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), int(ivec3(((64)), 0, 1))) - 0), 0))))), _GLF_IDENTITY((64), ((64)) ^ 0))))), (1 * (64)) | (1 * (64))))) / 1)) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-72048) : 64)))) | (_GLF_IDENTITY(1 * (64), (_GLF_IDENTITY(1 * (64), int(_GLF_IDENTITY(ivec4(1 * (64), 1, 1, 0), ~ (~ (ivec4(1 * (64), 1, 1, 0))))))) | (1 * (64))))))) / 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (64)) | (1 * (64))))) / 1), (true ? _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (64)) | (1 * (64))))) / 1) : _GLF_FUZZED(_GLF_IDENTITY(76729, 0 ^ (_GLF_IDENTITY(76729, 0 + (76729))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 * (64), (1 * (64)) >> 0), (false ? _GLF_FUZZED(-2116) : _GLF_IDENTITY(1 * (64), (1 * (64)) >> _GLF_IDENTITY(0, (0) - 0)))), _GLF_IDENTITY((1 * (64)) | (1 * (64)), 1 * ((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(95785) : 0))) * (64)) | (1 * _GLF_IDENTITY((64), ((64)) * 1))))))) / 1, ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(1 * (64), (1 * _GLF_IDENTITY((64), ((64)) | 0)) >> 0), _GLF_IDENTITY((1 * (64)) | (1 * (64)), 1 * ((1 * (64)) | (1 * _GLF_IDENTITY((64), ((64)) * 1))))))) / 1) ^ 0))))), int(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), _GLF_IDENTITY(_GLF_IDENTITY((1 * (64)), ((1 * (64))) << 0), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY((1 * (64)), ((1 * (64))) << 0))) | (1 * (64))))) / 1), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(1 * (64), 1 * (1 * _GLF_IDENTITY((64), max(_GLF_IDENTITY((64), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(21779)))), ((64)) - 0), 0)), max(int(ivec2(_GLF_IDENTITY((64), ((64)) - 0), 0)), int(ivec2(_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), int(ivec3(((64)), 0, 1))) - 0), 0))))), _GLF_IDENTITY((64), ((64)) ^ 0))))), (1 * (64)) | (1 * (64))))) / 1)) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-72048) : 64)))) | (_GLF_IDENTITY(1 * (64), (_GLF_IDENTITY(1 * (64), int(_GLF_IDENTITY(ivec4(1 * (64), 1, 1, 0), ~ (~ (ivec4(1 * (64), 1, 1, 0))))))) | (1 * (64))))))) / 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (64)) | (1 * (64))))) / 1), (true ? _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (64)) | (1 * (64))))) / 1) : _GLF_FUZZED(_GLF_IDENTITY(76729, 0 ^ (_GLF_IDENTITY(76729, 0 + (76729))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 * (64), (1 * (64)) >> 0), (false ? _GLF_FUZZED(-2116) : _GLF_IDENTITY(1 * (64), (1 * (64)) >> _GLF_IDENTITY(0, (0) - 0)))), _GLF_IDENTITY((1 * (64)) | (1 * (64)), 1 * ((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(95785) : 0))) * (64)) | (1 * _GLF_IDENTITY((64), ((64)) * 1))))))) / 1, ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(1 * (64), (1 * _GLF_IDENTITY((64), ((64)) | 0)) >> 0), _GLF_IDENTITY((1 * (64)) | (1 * (64)), 1 * ((1 * (64)) | (1 * _GLF_IDENTITY((64), ((64)) * 1))))))) / 1) ^ 0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), _GLF_IDENTITY(_GLF_IDENTITY((1 * (64)), ((1 * (64))) << 0), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY((1 * (64)), ((1 * (64))) << 0))) | (1 * (64))))) / 1), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(1 * (64), 1 * (1 * _GLF_IDENTITY((64), max(_GLF_IDENTITY((64), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(21779)))), ((64)) - 0), 0)), max(int(ivec2(_GLF_IDENTITY((64), ((64)) - 0), 0)), int(ivec2(_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), int(ivec3(((64)), 0, 1))) - 0), 0))))), _GLF_IDENTITY((64), ((64)) ^ 0))))), (1 * (64)) | (1 * (64))))) / 1)) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-72048) : 64)))) | (_GLF_IDENTITY(1 * (64), (_GLF_IDENTITY(1 * (64), int(_GLF_IDENTITY(ivec4(1 * (64), 1, 1, 0), ~ (~ (ivec4(1 * (64), 1, 1, 0))))))) | (1 * (64))))))) / 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (64)) | (1 * (64))))) / 1), (true ? _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (64)) | (1 * (64))))) / 1) : _GLF_FUZZED(_GLF_IDENTITY(76729, 0 ^ (_GLF_IDENTITY(76729, 0 + (76729))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 * (64), (1 * (64)) >> 0), (false ? _GLF_FUZZED(-2116) : _GLF_IDENTITY(1 * (64), (1 * (64)) >> _GLF_IDENTITY(0, (0) - 0)))), _GLF_IDENTITY((1 * (64)) | (1 * (64)), 1 * ((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(95785) : 0))) * (64)) | (1 * _GLF_IDENTITY((64), ((64)) * 1))))))) / 1, ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(1 * (64), (1 * _GLF_IDENTITY((64), ((64)) | 0)) >> 0), _GLF_IDENTITY((1 * (64)) | (1 * (64)), 1 * ((1 * (64)) | (1 * _GLF_IDENTITY((64), ((64)) * 1))))))) / 1) ^ 0)))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), _GLF_IDENTITY(_GLF_IDENTITY((1 * (64)), ((1 * (64))) << 0), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY((1 * (64)), ((1 * (64))) << 0))) | (1 * (64))))) / 1), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(1 * (64), 1 * (1 * _GLF_IDENTITY((64), max(_GLF_IDENTITY((64), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(21779)))), ((64)) - 0), 0)), max(int(ivec2(_GLF_IDENTITY((64), ((64)) - 0), 0)), int(ivec2(_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), int(ivec3(((64)), 0, 1))) - 0), 0))))), _GLF_IDENTITY((64), ((64)) ^ 0))))), (1 * (64)) | (1 * (64))))) / 1)) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-72048) : 64)))) | (_GLF_IDENTITY(1 * (64), (_GLF_IDENTITY(1 * (64), int(_GLF_IDENTITY(ivec4(1 * (64), 1, 1, 0), ~ (~ (ivec4(1 * (64), 1, 1, 0))))))) | (1 * (64))))))) / 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (64)) | (1 * (64))))) / 1), (true ? _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (1 * (64)) | (1 * (64))))) / 1) : _GLF_FUZZED(_GLF_IDENTITY(76729, 0 ^ (_GLF_IDENTITY(76729, 0 + (76729))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 * (64), (1 * (64)) >> 0), (false ? _GLF_FUZZED(-2116) : _GLF_IDENTITY(1 * (64), (1 * (64)) >> _GLF_IDENTITY(0, (0) - 0)))), _GLF_IDENTITY((1 * (64)) | (1 * (64)), 1 * ((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(95785) : 0))) * (64)) | (1 * _GLF_IDENTITY((64), ((64)) * 1))))))) / 1, ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(1 * (64), (1 * _GLF_IDENTITY((64), ((64)) | 0)) >> 0), _GLF_IDENTITY((1 * (64)) | (1 * (64)), 1 * ((1 * (64)) | (1 * _GLF_IDENTITY((64), ((64)) * 1))))))) / 1) ^ 0))))))), 0, 0, 1))))), 64)), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(ivec3(77202, _GLF_IDENTITY(-9294, (-9294) + 0), 8442).p))) == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1)))))) - 0)) | (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) << 0)))), (uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(ivec3(77202, _GLF_IDENTITY(-9294, (-9294) + 0), 8442).p, 0 ^ (_GLF_IDENTITY(ivec3(77202, _GLF_IDENTITY(-9294, (-9294) + 0), 8442), min(ivec3(77202, _GLF_IDENTITY(-9294, (-9294) + 0), 8442), ivec3(77202, _GLF_IDENTITY(-9294, (-9294) + 0), 8442))).p))), ~ (~ (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(ivec3(77202, _GLF_IDENTITY(-9294, (-9294) + 0), 8442).p), 0 ^ (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(ivec3(77202, _GLF_IDENTITY(-9294, (-9294) + 0), 8442).p, max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(77202, (false ? _GLF_FUZZED(-31803) : _GLF_IDENTITY(77202, 0 | (77202)))), _GLF_IDENTITY(-9294, (-9294) + 0), 8442), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(77202, (false ? _GLF_FUZZED(-31803) : _GLF_IDENTITY(77202, 0 | (77202)))), _GLF_IDENTITY(-9294, (-9294) + 0), 8442), ivec3(ivec4(ivec3(_GLF_IDENTITY(77202, (false ? _GLF_FUZZED(-31803) : _GLF_IDENTITY(77202, 0 | (77202)))), _GLF_IDENTITY(-9294, (-9294) + 0), 8442), 0)))) / ivec3(1, 1, 1)).p, _GLF_IDENTITY(ivec3(77202, _GLF_IDENTITY(-9294, (-9294) + 0), 8442).p, _GLF_IDENTITY((ivec3(77202, _GLF_IDENTITY(-9294, (-9294) + 0), 8442).p), 0 | ((ivec3(77202, _GLF_IDENTITY(-9294, (-9294) + 0), 8442).p))) | 0))))))))))) == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), 1 * ((1))))), (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), 1 * ((1)))))) >> (0 >> _GLF_IDENTITY(int(3), int(3))))))) - 0)), 0 + ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), (false ? _GLF_FUZZED(64802) : _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), (false ? _GLF_FUZZED(65993) : _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1)))))))))))) - 0)))) | (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) << 0))))) >> _GLF_IDENTITY(0u, (0u) | 0u)), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
