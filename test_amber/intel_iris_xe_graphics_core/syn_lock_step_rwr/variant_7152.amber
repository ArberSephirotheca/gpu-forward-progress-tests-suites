#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_28 {
 ivec3 _f0;
} ;

struct _GLF_struct_27 {
 mat3x2 _f0;
 uint _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_26 {
 vec3 _f0;
 uvec2 _f1;
 bvec2 _f2;
 mat4x2 _f3;
 bool _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_29 {
 _GLF_struct_26 _f0;
 _GLF_struct_27 _f1;
 _GLF_struct_28 _f2;
 uvec4 _f3;
 int _injected_loop_counter;
 mat4x3 _f4;
} ;

struct _GLF_struct_24 {
 uvec2 _f0;
 mat4 _f1;
 ivec4 _f2;
 mat2x4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_25 {
 mat3x4 _f0;
 _GLF_struct_24 _f1;
} ;

struct _GLF_struct_30 {
 _GLF_struct_25 _f0;
 mat4x3 _f1;
 bvec2 _f2;
 _GLF_struct_29 _f3;
} ;

struct _GLF_struct_21 {
 float _f0;
 bvec4 _f1;
 ivec4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_20 {
 mat3x4 _f0;
 uvec3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_22 {
 uvec4 _f0;
 _GLF_struct_20 _f1;
 ivec2 _f2;
 _GLF_struct_21 _f3;
 bool _f4;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
 uint read_1;
 uvec4 _f1;
 uint _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_17 {
 int _f0;
 mat2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
} ;

struct _GLF_struct_15 {
 mat2 _f0;
 uint num_workgroup;
 mat3x2 _f1;
 int _f2;
 mat4x3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_15 _f0;
 mat3x2 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
} ;

struct _GLF_struct_19 {
 int _f0;
 _GLF_struct_18 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
} ;

struct _GLF_struct_11 {
 uvec4 _f0;
 mat4x2 _f1;
 int _f2;
 bool _f3;
 bvec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_10 {
 float _f0;
 int _f1;
 mat2 _f2;
 bvec2 _f3;
 vec4 _f4;
 mat3x4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_9 {
 mat4x3 _f0;
} ;

struct _GLF_struct_13 {
 mat3x2 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_7 {
 uint _f0;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 uvec2 _f1;
 ivec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 mat2x4 _f2;
 uint next_virtual_gid;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 mat3x4 _f1;
 bvec2 _f2;
 ivec2 _f3;
 uvec4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_1 {
 bool _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 vec3 _f3;
 _GLF_struct_3 _f4;
 int _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_5 _f0;
 _GLF_struct_8 _f1;
 ivec2 _f2;
 _GLF_struct_13 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(95.33)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y)), 0.0 + _GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y))))))))
    barrier();
   for(_GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(_GLF_struct_25(mat3x4(1.0), _GLF_struct_24(uvec2(1u), mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ivec4(1), mat2x4(1.0), ivec4(1))), mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), bvec2(true), _GLF_struct_29(_GLF_struct_26(vec3(1.0), _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(uvec2(uvec2(1u)), (_GLF_IDENTITY(uvec2(uvec2(1u)), uvec2(0u, 0u) | (uvec2(uvec2(1u))))) | uvec2(0u, 0u)))), bvec2(true), mat4x2(1.0), true, ivec3(1)), _GLF_struct_27(mat3x2(1.0), _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | ((1u)))), uvec2(1u)), _GLF_struct_28(ivec3(1)), uvec4(1u), 0, mat4x3(1.0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_struct_replacement_30._f3._injected_loop_counter != 1), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_struct_replacement_30._f3._injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_30._f3._injected_loop_counter != 1))), _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_struct_replacement_30._f3._injected_loop_counter != _GLF_IDENTITY(1, (1) >> 0)), false || (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_30._f3._injected_loop_counter != 1))), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_struct_replacement_30._f3._injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_struct_replacement_30._f3._injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec3(_GLF_struct_replacement_30._f3._injected_loop_counter != 1, false, false)), true && (bool(bvec3(_GLF_struct_replacement_30._f3._injected_loop_counter != 1, false, false)))))))), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_struct_replacement_30._f3._injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_30._f3._injected_loop_counter != 1))), false, false))) || false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))); _GLF_IDENTITY(_GLF_struct_replacement_30._f3._injected_loop_counter ++, (_GLF_struct_replacement_30._f3._injected_loop_counter ++) - 0))
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))))).x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), false, true, true))))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), clamp(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(5.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(-925.517)), float(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), bool(true))), clamp(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), bool(true))), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))) * (0 | 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), clamp(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(5.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(-925.517)), float(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), bool(true))), clamp(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), bool(true))), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))) * (0 | 1)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), clamp(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(5.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(-925.517)), float(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), bool(true))), clamp(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), bool(true))), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))) * (0 | 1))))))) / 1)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), clamp(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(5.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(-925.517)), float(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), bool(true))), clamp(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), bool(true))), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))) * (0 | 1)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))), bool(bvec4(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), min(int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), 0 ^ (int(2)))))), int(2))))))), false, false, false)))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_IDENTITY(_GLF_FUZZED((+ _injected_loop_counter)), clamp(_GLF_FUZZED((+ _injected_loop_counter)), _GLF_FUZZED((+ _injected_loop_counter)), _GLF_IDENTITY(_GLF_FUZZED((+ _injected_loop_counter)), (_GLF_IDENTITY(_GLF_FUZZED((+ _injected_loop_counter)), (_GLF_FUZZED((+ _injected_loop_counter))) ^ 0)) / 1))))), (_GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_IDENTITY(_GLF_FUZZED((+ _injected_loop_counter)), clamp(_GLF_FUZZED((+ _injected_loop_counter)), _GLF_FUZZED((+ _injected_loop_counter)), _GLF_IDENTITY(_GLF_FUZZED((+ _injected_loop_counter)), (_GLF_IDENTITY(_GLF_FUZZED((+ _injected_loop_counter)), (_GLF_FUZZED((+ _injected_loop_counter))) ^ 0)) / 1)))))) ^ 0))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), true && (bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(false), true && (bool(false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), false || (_GLF_IDENTITY(bool(false), true && (bool(false)))))))))))))), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))) && (bool(false))))))) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false))))))), _GLF_IDENTITY(false, false || (false)))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(1, _GLF_struct_18(_GLF_struct_15(mat2(1.0), gl_NumWorkGroups.x, mat3x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))), 1, mat4x3(1.0), bvec4(true)), mat3x2(1.0), _GLF_struct_16(mat2x3(1.0)), _GLF_struct_17(1, mat2(1.0), vec4(1.0))), mat4x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(500.877) : 1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)))))))))) && true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))), false, false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x < injectionSwitch.y)))))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize), _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize)) | (uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize)), ((uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.8)), float(injectionSwitch.x), bool(true)))) / 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.8)), float(injectionSwitch.x), bool(true)))) / 1.0), 0.0, 0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize)) | _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize), clamp(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize)))))), max((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize))))))) / uvec3(1u, 1u, 1u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec4(false || (! (_GLF_IDENTITY(false, (false) && true))), false, false, false)))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec4(false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false))) && true))), false, false, _GLF_IDENTITY(false, ! (! (false))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), ((0 << _GLF_IDENTITY(int(1), int(1)))) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), true, false))), (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bool(bool(bvec3(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (! (bool(bool(bvec3(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(ivec3(_GLF_IDENTITY(int(4), (int(4)) ^ 0), 1, 1))), 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(ivec3(_GLF_IDENTITY(int(4), (int(4)) ^ 0), 1, 1))), 0))))) << (0 | 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) ^ 0)), int(ivec3((_GLF_IDENTITY(int(4), (int(4)) ^ 0)), _GLF_IDENTITY(1, (1) << 0), 0))))))), int(4)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), sqrt(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-22.89) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, exp(0.0), 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), sqrt(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-22.89) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, exp(0.0), 1.0)))), clamp(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), sqrt(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-22.89) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, exp(0.0), 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), sqrt(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-22.89) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, exp(0.0), 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), sqrt(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-22.89) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, exp(0.0), 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), sqrt(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-22.89) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, exp(0.0), 1.0)))), max(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), sqrt(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-22.89) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, exp(0.0), 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), sqrt(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-22.89) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, exp(0.0), 1.0)))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), sqrt(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-22.89) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, exp(0.0), 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), sqrt(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-22.89) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, exp(0.0), 1.0)))))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), sqrt(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-22.89) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, exp(0.0), 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true))), sqrt(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-22.89) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, exp(0.0), 1.0))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
     for(int _injected_loop_counter = (0 | ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(3, _GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) * 1)) << 0), _GLF_IDENTITY(3, min(3, 3))))), int(3)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_DEAD(false)), true, false)), true && (bool(bvec3(bool(_GLF_DEAD(false)), true, false)))))), ! (! (bool(bool(_GLF_DEAD(false))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))))))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, clamp((subgroup_size) / 1u, (subgroup_size) / 1u, (subgroup_size) / 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)))), _GLF_IDENTITY((subgroup_size) / 1u, clamp((subgroup_size) / 1u, (subgroup_size) / 1u, _GLF_IDENTITY((subgroup_size) / 1u, (true ? (subgroup_size) / 1u : _GLF_FUZZED(workgroup_id)))))))), 1u, 0u, 1u))))), workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_5(_GLF_struct_0(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, uint(uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec4(uvec2(1u), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sin(2635.2937)) : injectionSwitch.x)))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uint(7u)))), uint(7u)))))) + 0u)), 0u)), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(0u, 0u)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u), max(uvec4(uvec2(1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u), uvec4(uvec2(1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) * 1u)), uint(7u))), 0u)))), _GLF_IDENTITY(max(uvec2(uvec4(uvec2(1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, ~ (_GLF_IDENTITY(~ (7u), min(~ (7u), ~ _GLF_IDENTITY((7u), ((7u)) | ((7u)))))))))), 0u)), uvec2(uvec4(uvec2(1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))), (max(uvec2(uvec4(uvec2(1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u)), uvec2(uvec4(uvec2(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) * 1u))), 0u)))) >> uvec2(0u, 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(111278u, 166948u)), min(_GLF_IDENTITY(_GLF_FUZZED(uvec2(111278u, 166948u)), (_GLF_FUZZED(uvec2(111278u, 166948u))) | (_GLF_FUZZED(uvec2(111278u, 166948u)))), _GLF_FUZZED(uvec2(111278u, 166948u)))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_FUZZED(uvec2(111278u, 166948u)) : _GLF_FUZZED(uvec2(virtual_gid)))))), _GLF_IDENTITY(uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(0u, 0u)), ((uvec2(0u, 0u))) + uvec2(0u, 0u)), clamp((uvec2(0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))), (_GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u))))), (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) - uvec2(0u, 0u)))))))))) ^ uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(sqrt(vec2(1.0, 1.0))) + (injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, log(sqrt(vec2(1.0, 1.0))) + (injectionSwitch)).y)))) ? 0u : _GLF_FUZZED(uvec4(41645u, 97132u, 90922u, 141884u).w))), 0u), clamp(uvec2(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(uvec4(41645u, 97132u, 90922u, 141884u).w))), 0u), uvec2(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? 0u : _GLF_FUZZED(uvec4(41645u, 97132u, 90922u, 141884u).w))), 0u), uvec2(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(uvec4(41645u, 97132u, 90922u, 141884u).w))), 0u))) ^ _GLF_IDENTITY((uvec2(0u, 0u)), ((uvec2(0u, 0u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0))))) - uvec2(0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(uvec4(uvec2(1u), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u)))))) >> 0u), 0u)), _GLF_IDENTITY((uvec2(uvec4(uvec2(1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))), ((uvec2(uvec4(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))))))) ^ 0u), 0u)))) | ((uvec2(uvec4(uvec2(1u), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)))))) | ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))))), 0u))))) | uvec2(0u, 0u))), uvec2(1u, 1u) * ((_GLF_IDENTITY(uvec2(uvec4(uvec2(1u), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u)))))) >> 0u), 0u)), _GLF_IDENTITY((uvec2(uvec4(uvec2(1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))), ((uvec2(uvec4(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))))))) ^ 0u), 0u)))) | ((uvec2(uvec4(uvec2(1u), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)))))) | ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))))), 0u))))) | uvec2(0u, 0u))))) + uvec2(0u, 0u))), uvec4(1u)), _GLF_struct_1(true, _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_struct_2(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.7), _GLF_FUZZED((388.371 - -4.0))), bvec2(false, false))).y)) ? _GLF_FUZZED(vec2(-5.4, 376.291)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * _GLF_IDENTITY((injectionSwitch[1]), sqrt(1.0) * ((injectionSwitch[1]))))), mix(vec2(_GLF_FUZZED(6.5), _GLF_FUZZED(vec4(-5.9).t)), vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * _GLF_IDENTITY((injectionSwitch[1]), sqrt(1.0) * ((injectionSwitch[1]))))))[0], (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * _GLF_IDENTITY((injectionSwitch[1]), sqrt(1.0) * ((injectionSwitch[1]))))))[1]), bvec2(true, true)))))).x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))), mat2(mat4(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))), mat2(mat4(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0)))))), vec2(1.0)), vec3(1.0), _GLF_struct_3(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false) || false, false || (_GLF_IDENTITY((true), ((true)) || false) || false))) || false)))), 1, _GLF_struct_4(mat4(1.0), mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), clamp(float(1.0), _GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(3.1) : float(1.0))), float(1.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), max(_GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))), float(1.0))), clamp(float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))), (false ? _GLF_FUZZED(3.1) : float(1.0))), float(1.0)))), float(vec4(float(_GLF_IDENTITY(float(1.0), clamp(float(1.0), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(3.1) : float(1.0))), float(1.0)))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), clamp(float(1.0), _GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(3.1) : float(1.0))), float(1.0)))), (false ? _GLF_FUZZED(-5.6) : float(_GLF_IDENTITY(float(1.0), clamp(float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(3.1) : float(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (true ? _GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))) : _GLF_FUZZED(7.4))), (false ? _GLF_FUZZED(3.1) : float(1.0)))) + abs(sqrt(0.0))), float(1.0)))))), float(_GLF_IDENTITY(float(1.0), clamp(float(1.0), _GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(3.1) : float(1.0))), float(1.0)))))))), bvec2(true), _GLF_IDENTITY(ivec2(1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))), 0))), uvec4(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(_GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u), 1u * (_GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), max(~ ((1u)), ~ ((1u)))))), (1u))))), _GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((1u), 1u), max(uvec2((1u), 1u), uvec2((1u), 1u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((1u), 1u), max(uvec2((1u), 1u), uvec2((1u), 1u)))), (uint(_GLF_IDENTITY(uvec2((1u), 1u), max(uvec2((1u), 1u), uvec2((1u), 1u))))) | 0u), uint(_GLF_IDENTITY(uvec2((1u), 1u), max(uvec2((1u), 1u), uvec2((1u), 1u))))))), (1u), _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (1u)))) | ((1u)))))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((1u), 1u), max(uvec2((1u), 1u), uvec2((1u), 1u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((1u), 1u), max(uvec2((1u), 1u), uvec2((1u), 1u)))), (uint(_GLF_IDENTITY(uvec2((1u), 1u), max(uvec2((1u), 1u), uvec2((1u), 1u))))) | 0u), uint(_GLF_IDENTITY(uvec2((1u), 1u), max(uvec2((1u), 1u), uvec2((1u), 1u))))))), (1u), _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (1u)))) | ((1u)))))) ^ 0u))) / 1u))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), (uint(3u)) | (_GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))))), 0u ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) ^ 0u)))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) * 1u)), (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u)))) ^ 0u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))))), 0u ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) ^ 0u)))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) * 1u)), (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u)))) ^ 0u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))))), 0u ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) ^ 0u)))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) * 1u)), (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u)))) ^ 0u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u)))))))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))))), 0u ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) ^ 0u)))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) * 1u)), (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u)))) ^ 0u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u))))))))))) - 0u)) << 0u)), min((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))))), 0u ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) ^ 0u)))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) * 1u)), (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u)))) ^ 0u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))))), 0u ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) ^ 0u)))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) * 1u)), (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u)))) ^ 0u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))))), 0u ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) ^ 0u)))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) * 1u)), (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u)))) ^ 0u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u)))))))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))))), 0u ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) ^ 0u)))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) * 1u)), (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u)))) ^ 0u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u))))))))))) - 0u)) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))))), 0u ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) ^ 0u)))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) * 1u)), (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u)))) ^ 0u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))))), 0u ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) ^ 0u)))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) * 1u)), (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u)))) ^ 0u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))))), 0u ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) ^ 0u)))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) * 1u)), (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u)))) ^ 0u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u)))))))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u))), ((_GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), (1u), (1u)), (clamp((1u), (1u), (1u))) ^ 0u)))) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (1u))))), 0u ^ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) / 1u, ((~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) ^ 0u)))) / 1u) * 1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) * 1u)), (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((1u)))) ^ 0u)) | (~ (1u))), _GLF_IDENTITY(~ (1u), (~ (1u)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (3u) | 0u))))))))))) - 0u)) << 0u)))) >> 0u))), mat4x3(1.0))), _GLF_struct_8(_GLF_struct_6(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), max(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), clamp(0u | _GLF_IDENTITY((1u), 0u + (_GLF_IDENTITY((1u), uint(uvec2((1u), 0u))))), 0u | (1u), _GLF_IDENTITY(0u | (1u), (0u | (1u)) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), ~ (~ (_GLF_IDENTITY(1u, 0u | (1u))))))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), ~ (~ (1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), (uint(uvec2(1u, 1u))) | (uint(uvec2(1u, 1u))))), 0u))), 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, (1u) >> 0u)))), ((1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, (1u) >> 0u)))), ((1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, (1u) >> 0u)))), ((1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)) << 0u) ^ 0u)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, ~ (~ (0u))) | (1u)), max(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), clamp(0u | (1u), _GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(0u | (1u), (0u | (1u)) >> 0u)) << 0u), _GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, max((0u) << 0u, (0u) << 0u))) | (1u)) / 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), ~ (~ (~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))) | (1u)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) | ((1u)))))) | (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(1u), ivec3(1), true), _GLF_struct_7(1u), mat2x4(1.0), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3017.5050))), injectionSwitch.x))))), subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0))) >> 0u) >> 0u), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u) >> 0u), ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) >> 0u) >> 0u)) | ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) >> 0u) >> 0u)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u), (~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u)) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u), (~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u)) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) / 1u)), max(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0))) >> 0u) >> 0u), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u) >> 0u), ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) >> 0u) >> 0u)) | ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) >> 0u) >> 0u)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u), (~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u)) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u), (~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u)) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) / 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0))) >> 0u) >> 0u), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u) >> 0u), ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) >> 0u) >> 0u)) | ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) >> 0u) >> 0u)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u), (~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u)) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u), (~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u)) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) / 1u)), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0))) >> 0u) >> 0u), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u) >> 0u), ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) >> 0u) >> 0u)) | ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) >> 0u) >> 0u)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u), (~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u)) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u), (~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) >> 0u)) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) / 1u))) / 1u)))))) % subgroup_size)), ivec2(1), _GLF_struct_13(mat3x2(1.0), _GLF_struct_9(mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_struct_10(1.0, 1, _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) || false), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), ! (! (true && (_GLF_IDENTITY(true, ! (! (true)))))))))), false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), ! (! (true && (_GLF_IDENTITY(true, ! (! (true)))))))))), false))) || false, false || ((bool(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), ! (! (true && (_GLF_IDENTITY(true, ! (! (true)))))))))), false))) || false))))) ? _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-8.7, 7451.3083, 4.5, 72.36)) : mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-8.7, 7451.3083, 4.5, 72.36)) : mat2(1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(mat2(966.447, -774.627, 37.54, 62.26))))) - _GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(933.366)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (mat2(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(436.941)), float(0.0), bool(true))), 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(mat2(33.34, 6.3, -87.65, -4.9)), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * (_GLF_FUZZED(mat2(33.34, 6.3, -87.65, -4.9))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))))), vec4(1.0), mat3x4(1.0), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(true))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true))), false)), true)))), true))))), _GLF_struct_11(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(3u), (uint(3u)) * 1u)), uint(uvec2((uint(_GLF_IDENTITY(3u, (3u) >> _GLF_IDENTITY((0u & 63854u), ((0u & 63854u)) << 0u)))), 1u))), max(_GLF_IDENTITY(~ (uint(3u)), 0u + (~ (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))), ~ (uint(3u))))))))), (_GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(3u), max(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(_GLF_IDENTITY(3u, (3u) - 0u)))), uint(3u)))), 0u + (_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))))), ~ _GLF_IDENTITY((uint(3u)), max((uint(3u)), (uint(3u)))))))))))) + 0u)), mat4x2(1.0), 1, true, bvec2(true), mat3(1.0)), _GLF_struct_12(vec2(1.0)), mat4x3(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((_injected_loop_counter >> _injected_loop_counter)) : 7))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-85.09)), bool(false))), injectionSwitch[1])))).y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (_GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0) > injectionSwitch.y)) || (true))) || false))), false || (_GLF_DEAD(false))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.2) : injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.7))) > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) || false))))) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0) > injectionSwitch.y) || false)))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, log(1.0), log(1.0), exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) || false))))))))), bool(bool(_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), (injectionSwitch.x > injectionSwitch.y) || false)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), (injectionSwitch.x > injectionSwitch.y) || false)))))))))), false || _GLF_IDENTITY((true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))), bool(bvec2((true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))), true))))))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 0.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true)))) + 0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), 1.0, log(1.0), 1.0, 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y) || false)))), _GLF_IDENTITY(true, ! (! (true))) && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6846.3644)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, tan(0.0), 1.0, 0.0, 0.0, 0.0))), ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y) || false))))))))))) && true))))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), ((bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))) || false)))))))) || false)))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
            }
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (11559 & (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), (int(1)) >> 0), int(1))), int(1))) ^ 0, 0 ^ ((0 << _GLF_IDENTITY(int(1), int(1))) ^ 0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true, true))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y)), false))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7932.2050), _GLF_FUZZED(95.80)), bvec2(false, false))), injectionSwitch)).y))), ! (! (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7932.2050), _GLF_FUZZED(95.80)), bvec2(false, false))), injectionSwitch)).y))), bool(bvec2(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7932.2050), _GLF_FUZZED(95.80)), bvec2(false, false))), injectionSwitch)), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7932.2050), _GLF_FUZZED(95.80)), bvec2(false, false))), injectionSwitch)), 0.0, cos(0.0), 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7932.2050), _GLF_FUZZED(95.80)), bvec2(false, false))), injectionSwitch)), 0.0, cos(0.0), 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))).y))), false)))))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_22(uvec4(1u), _GLF_struct_20(mat3x4(1.0), _GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED((uvec3(53335u, 101146u, 136802u) % _GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, 1u))))) : uvec3(1u))), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), ivec2(1), _GLF_struct_21(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-34.98) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0))), bvec4(true), _GLF_IDENTITY(ivec4(1), min(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1)))), mat2x3(1.0)), true), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(1u))), 1u, _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) << uvec2(0u, 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_14._f1.next_virtual_gid], uint(_GLF_struct_replacement_23.read_1 + 1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) * 1), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), min(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, min(64, 64))))), int(ivec4(int(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) | (64)), 64)), 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, ~ (~ (64))) : _GLF_FUZZED(-66707))), min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-17802) : _GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-22974) : 64))))))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0), 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), (true ? int(_GLF_IDENTITY(64, min(64, 64))) : _GLF_FUZZED(-76564))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, max(64, 64))))), ~ (~ (int(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, max(64, 64)))))))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) | (64))))))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(ivec4(64, (1 ^ 1), 1, 1))), 64))))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) << 0)))), 0, 1, 1))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))))))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))))))), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(64, min(64, 64))), int(ivec4(int(_GLF_IDENTITY(64, min(64, 64))), 0, 1, 1)))))))))))))))) >> _GLF_IDENTITY((0 | 0), min((0 | 0), (0 | 0)))))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, true)))), bool(bool(false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, true))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_local_id)), uint(uvec2(_GLF_IDENTITY((true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_local_id)), ((true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_local_id))) << (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))) | 0u), (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       atomicStore(buf[_GLF_struct_replacement_14._f1.next_virtual_gid], uint(_GLF_IDENTITY(_GLF_struct_replacement_23.read_1, min(_GLF_struct_replacement_23.read_1, _GLF_struct_replacement_23.read_1)) + 1 == _GLF_IDENTITY(read_2, (read_2) << (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))))) + 1, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(37899))) << _GLF_IDENTITY(0, int(ivec3(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0))), min(_GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(37899))) << _GLF_IDENTITY(0, int(ivec3(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), max(vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), injectionSwitch.x)), 0))), _GLF_IDENTITY(_GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(37899))) << _GLF_IDENTITY(0, int(ivec3(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), (true ? _GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(37899))) << _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec3(0, 0, 0) | (ivec3(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))) : _GLF_FUZZED(94142)))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec2(0, 0))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-17552)))))), (0), (0)))) - 0))) | 0), min(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((0), (0), (0)))) - 0))) | 0), 1 * ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + (0 & 89372))), (_GLF_IDENTITY(_GLF_IDENTITY((0), clamp((0), (0), (0))), (_GLF_IDENTITY((0), clamp((0), (0), (0)))) >> 0)) - 0))) | 0))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((0), (0), (0)))) - 0))) | _GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(1), int(1))))), 0 | ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((0), (0), (0)))) - 0))) | 0))))) ^ _GLF_IDENTITY((64), ((64)) * 1)), 4);
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) ^ (0 | 0))) | (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(-89065) : int(_GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mat2(282.389, 515.172, -2.4, 93.10)[1]))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))))) && true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-191.921) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
