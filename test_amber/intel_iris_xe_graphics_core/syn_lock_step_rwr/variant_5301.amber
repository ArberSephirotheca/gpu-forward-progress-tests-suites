#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0))) > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), max(float(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), (false ? _GLF_FUZZED(1232.2109) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), injectionSwitch.x))) / _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)), mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0))), float(_GLF_FUZZED(179.462)), bool(false)))))))) > injectionSwitch.y))))))), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))))), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) && true), (_GLF_IDENTITY(true && (false), (true && (false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), false, true)))), false, false), bvec3(bvec3(bvec3(false, false, false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.3)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false)))))), ! (! (true))))))))))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), true && ((injectionSwitch.x < injectionSwitch.y)))), true))), true), _GLF_IDENTITY(false, true && (false))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true))), true), _GLF_IDENTITY(false, true && (false)))))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), vec2(mat2x4(vec2(injectionSwitch.x, 0.0), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)))), max(float(vec2(injectionSwitch.x, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), (true ? float(vec2(injectionSwitch.x, 0.0)) : _GLF_FUZZED(7808.1689)))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat4x2(mat4x2(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))) > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(1.0), 0.0, 0.0)), (vec2(mat2x4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(1.0), 0.0, 0.0))) - vec2(0.0, 0.0))).x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(sign(-1.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(-821.686))) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true), false))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(true))), _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false) || (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))), true && (bool(_GLF_IDENTITY(true, ! (! (true))))))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))))).x)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true), _GLF_IDENTITY(false, true && (false))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) : _GLF_FUZZED(uintBitsToFloat(uvec3(131741u, 149014u, 55468u).b)))) > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))), true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1609.4634)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), false))))))))))))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), (false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, (false) || false)) || false))))))))) || _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), true)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), ! (! (bool(bvec4(true, false, true, true)))))), true, false), bvec3(bvec3(bvec3(true, true, _GLF_IDENTITY(false, (false) || false)))))), true && (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))), false, false, false)))), bool(_GLF_IDENTITY(bvec3((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec4(bvec3(bvec3(true, true, false)), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec4(bvec3(bvec3(true, true, false)), false)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))) || false), true && (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))), false, false, false)))), false, false), bvec3(bvec4(bvec3((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), true)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), true))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), true)))))))))))))))), true && (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))), false, false, false)))), false, false), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.8)), _GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))), bool(_GLF_IDENTITY(true, true && (true))))), 0.0, 1.0, sqrt(1.0), 0.0))) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.8)), float(0.0), bool(_GLF_IDENTITY(true, true && (true))))), 0.0, 1.0, sqrt(1.0), 0.0))) > injectionSwitch.y))))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(-57.96)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), 0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u)), 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(194860u, (_GLF_IDENTITY(194860u, clamp(194860u, 194860u, 194860u))) ^ 0u), 57940u, 181940u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(_GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u)), 0u, 0u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(_GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u)), 0u, 0u), ((gl_WorkGroupSize) | uvec3(_GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u)), 0u, 0u)) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))))), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))))), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))) + uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(_GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u)), 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), uvec3(uvec4(~ ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), 0u)))))) | (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))))))))))))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED((uvec3(959u, 19239u, 107914u) % subgroup_local_id))))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED((uvec3(959u, 19239u, 107914u) % subgroup_local_id))))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED((uvec3(959u, 19239u, 107914u) % subgroup_local_id))))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED((uvec3(959u, 19239u, 107914u) % subgroup_local_id))))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))))))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED((uvec3(959u, 19239u, 107914u) % subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED((uvec3(959u, 19239u, 107914u) % subgroup_local_id))))) ^ uvec3(0u, 0u, 0u))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | _GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, (1u ^ 1u), 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(0u, (1u ^ 1u), 1u, 0u)), (true ? uint(uvec4(0u, (1u ^ 1u), 1u, 0u)) : _GLF_FUZZED(subgroup_local_id)))) + 0u)), 0u, 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)), (gl_WorkGroupSize))) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))))) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED((uvec3(959u, 19239u, 107914u) % subgroup_local_id))))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))))), max((_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(152390u) : 0u)) : _GLF_FUZZED(uvec4(68012u, 176214u, 192094u, 167700u)[3]))), 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), uvec3(uvec4((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_FUZZED((uvec3(959u, 19239u, 107914u) % subgroup_local_id))))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize))))) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED((uvec3(959u, 19239u, 107914u) % subgroup_local_id))))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), min((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))))))) >> uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))).x) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u)))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) + (max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(125211u, 132377u, 14690u)) : uvec3(0u, 0u, 0u))))))), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | _GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), ~ (~ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))))))))))) << uvec3(0u, 0u, 0u)))).x), ((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, uint(uint(0u))))) | (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(0u, (0u) ^ 0u)) << 0u), 0u))), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(0u))))))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))) ^ uvec3(0u, 0u, 0u)))), (uvec3(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))) ^ uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u)))))))).x) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((0u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((0u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), max((0u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), (0u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) << 0u)) - 0u))) | 0u), 0u)))), uvec3(uvec4((_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((0u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((0u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), max((0u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), (0u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) << 0u)) - 0u))) | 0u), 0u)))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) ^ uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))))))).x)) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))))))))).x), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))))))))).x), ((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), (true ? ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))))))))).x)) >> 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))) : _GLF_FUZZED(uvec3(2146u, 179837u, 133397u)))) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), min(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), clamp((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), (gl_WorkGroupSize) | uvec3(0u, 0u, 0u), (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), max((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(194860u, 57940u, 181940u)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))))))).x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u), gl_WorkGroupID.x));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_size, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), min(uvec3(workgroup_size, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), uvec3(workgroup_size, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), (uvec3(workgroup_size, 0u, 0u)) | uvec3(0u, 0u, 0u)))))) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) | (_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ 0u), 0u, 0u), (true ? uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ 0u), 0u, 0u) : _GLF_FUZZED(uvec4(42794u, 48740u, 158281u, 109034u))))), (false ? _GLF_FUZZED(packUnorm2x16(vec2(-45.16, 7.8))) : uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ 0u), 0u, 0u), (true ? uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ 0u), 0u, 0u) : _GLF_FUZZED(uvec4(42794u, 48740u, 158281u, 109034u)))))))) + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u));
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4)), 64, 0);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), int(ivec3(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) * 1))) - 0), ~ (~ (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(_GLF_IDENTITY(4, (4) * 1))), clamp((int(_GLF_IDENTITY(4, (4) * 1))), (int(_GLF_IDENTITY(4, (4) * 1))), (int(_GLF_IDENTITY(4, (4) * 1))))) - 0)))), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) * 1))) - 0), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) * 1))) - 0), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) * 1))) - 0), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) * 1))) - 0), int(4)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) * 1))) - 0), int(4)), 0, 1, 0)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-1.3)), _GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), max(float(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), mix(float(float(_GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(6646.9103)), bool(false))))), bool(true)))) * sqrt(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(faceforward(9.9, 7.6, 678.620))))))), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, max((4) << 0, (4) << 0))), int(ivec3(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) * 1))) - 0), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, ((4) * 1) ^ 0)))) - 0), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) * 1))) - 0), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) * 1))) - 0), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) * 1))) - 0), int(4))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, int(ivec2(1, 0)))))), max((int(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, int(ivec2(1, 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, int(ivec2(1, 0)))))), ((int(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, int(ivec2(1, 0))))))) * 1))) - 0), int(_GLF_IDENTITY(4, (4) / 1))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(_GLF_IDENTITY(4, (4) * 1))), ((int(_GLF_IDENTITY(4, (4) * 1)))) / 1) - 0), int(4)), 0, 1, 0)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-1.3)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) * sqrt(1.0))), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) ^ 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))) || false)) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))), true, false)))) && true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false)))))), true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + sin(tan(vec2(0.0, 0.0)))).y) - length(vec3(0.0, 0.0, 0.0)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))) || false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0) + 0.0)))))), false, true)), _GLF_IDENTITY(true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (true && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(virtual_gid)), (uint(uint(virtual_gid))) ^ 0u))], min(_GLF_IDENTITY(buf[virtual_gid], (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)) - 0u))))), buf[virtual_gid])), min(buf[virtual_gid], buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (uint(read_1 + 1 == read_2))))) + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) && true), true))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), true && (_GLF_IDENTITY(false, false || (false))))))
    return;
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
