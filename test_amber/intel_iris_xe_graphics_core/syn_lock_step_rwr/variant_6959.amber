#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), (! (bool(bvec2(false, true)))) || false))))))))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.2, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (_GLF_IDENTITY(-7.2, (_GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2))) + 0.0))))), float(1.0), bool(true))) : _GLF_FUZZED(_GLF_IDENTITY(-834.630, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)), min(mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)), mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)))))), min(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.2, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (_GLF_IDENTITY(-7.2, (_GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2))) + 0.0))))), float(1.0), bool(true))) : _GLF_FUZZED(_GLF_IDENTITY(-834.630, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)), min(mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)), mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)))))), true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.2, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (_GLF_IDENTITY(-7.2, (_GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2))) + 0.0))))), float(1.0), bool(true))) : _GLF_FUZZED(_GLF_IDENTITY(-834.630, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)), min(mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)), mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)))))))), 1.0 * (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.2, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (_GLF_IDENTITY(-7.2, (_GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2))) + 0.0))))), float(1.0), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.2, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (_GLF_IDENTITY(-7.2, (_GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2))) + 0.0))))), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.2, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (_GLF_IDENTITY(-7.2, (_GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2))) + 0.0))))), float(1.0), bool(true)))) * 1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.2, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (_GLF_IDENTITY(-7.2, (_GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2))) + 0.0))))), float(1.0), bool(true))))) : _GLF_FUZZED(_GLF_IDENTITY(-834.630, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-600.243)), _GLF_IDENTITY(float(-834.630), mix(float(_GLF_FUZZED(61.08)), float(_GLF_IDENTITY(float(-834.630), (float(-834.630)) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true)), min(mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)), mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)))))), min(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.2, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * cos(vec2(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (_GLF_IDENTITY(-7.2, (_GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2))) + 0.0))))), float(1.0), bool(true))) : _GLF_FUZZED(_GLF_IDENTITY(-834.630, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)), min(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-600.243)), clamp(float(_GLF_FUZZED(-600.243)), float(_GLF_FUZZED(-600.243)), _GLF_IDENTITY(float(_GLF_FUZZED(-600.243)), float(_GLF_IDENTITY(mat3x2(float(_GLF_FUZZED(-600.243)), 0.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat3x2(float(_GLF_FUZZED(-600.243)), 0.0, 1.0, 1.0, 0.0, 1.0))))))), float(-834.630), bool(true)), mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))))))), true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.2, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (_GLF_IDENTITY(-7.2, (_GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2))) + 0.0))))), float(1.0), bool(true))) : _GLF_FUZZED(_GLF_IDENTITY(-834.630, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-600.243), clamp(_GLF_FUZZED(-600.243), _GLF_FUZZED(-600.243), _GLF_FUZZED(-600.243)))), float(-834.630), bool(true)), min(mix(float(_GLF_FUZZED(-600.243)), float(-834.630), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-600.243, float(mat4x3(_GLF_IDENTITY(-600.243, min(-600.243, -600.243)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), float(-834.630), bool(true)))))))))))), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), false)))))))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])) : _GLF_FUZZED(vec2(-7.5, 8.9)))).y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-294.908)), bool(false))) > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(45.45)), float(injectionSwitch.y), bool(true)))) - _GLF_ZERO(0.0, injectionSwitch.x))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), false || ((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size, subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u), 0u ^ _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id))));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) / ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u))))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) | (0u))), subgroup_size, subgroup_size)), subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) | (0u))), subgroup_size, subgroup_size)), subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) | (0u))), subgroup_size, subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) | (0u))), subgroup_size, subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) | (0u))), subgroup_size, subgroup_size)), subgroup_size))))) - 0u)) | 0u)))), min(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size))), (uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.3)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x)) ^ (subgroup_size)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size))), max(uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size))), uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) ^ (subgroup_size))))))))), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), _GLF_IDENTITY((subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u)), ((subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))) / 1u)), subgroup_size, subgroup_size)), subgroup_size))) | 0u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_size, subgroup_size)), subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))), (_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size)))) << 0u))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 1u))), subgroup_size)))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_size, subgroup_size)), subgroup_size)))))) | 0u)))), max((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) * 1u), 0u))))), subgroup_size, subgroup_size)), subgroup_size))) | 0u)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_size, subgroup_size)), subgroup_size))) | 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_size, subgroup_size)), subgroup_size))) | 0u) : _GLF_FUZZED((+ workgroup_id))))))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_size, subgroup_size)), subgroup_size))) | 0u)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_size, subgroup_size)), subgroup_size))) | 0u)), (max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_size, subgroup_size)), subgroup_size))) | 0u))) ^ 0u)))), (clamp(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), _GLF_IDENTITY((subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY((subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u)), uint(uvec2((subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u)), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size))) | 0u)))), max((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), min(uvec4(subgroup_size, 0u, 1u, 1u), uvec4(subgroup_size, 0u, 1u, 1u)))) ^ uvec4(0u, 0u, 0u, 0u))))), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_size, subgroup_size)), subgroup_size))) | 0u)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) * 1u)))), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), subgroup_size))))) | 0u)))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_size, subgroup_size)), subgroup_size), (min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_size, subgroup_size)), subgroup_size)) | 0u))) | 0u)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.6))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))))), subgroup_size, subgroup_size)), subgroup_size))) | 0u)))))) | 0u)), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / (1u ^ 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_size, subgroup_size)), subgroup_size))) | 0u))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / (1u ^ 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), max(uint(subgroup_size), uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) << 0u)) + 0u))), (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_size, subgroup_size)), subgroup_size))) | 0u)))) ^ 0u)))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), min(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), (false ? _GLF_FUZZED(subgroup_local_id) : max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), ((0u)) ^ 0u), (0u)))))) | 0u), 0u)))), 0u ^ (~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), min(_GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size))))), ((subgroup_size)))) << (_GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), max(0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) - 0u)))) | (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)))), min(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) - 0u), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) ^ 0u), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u, 1u)))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), min(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), (false ? _GLF_FUZZED(subgroup_local_id) : max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), ((0u)) ^ 0u), (0u)))))) | 0u), 0u)))), 0u ^ (~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), min(_GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size))))), ((subgroup_size)))) << (_GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), max(0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) - 0u)))) | (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)))), min(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) - 0u), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) ^ 0u), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u, 1u))))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), min(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u ^ (~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u))), 1u, 1u)), min(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) | (((subgroup_size)))) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) | (((subgroup_size)))) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) | (((subgroup_size)))) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u), 1u)))) / uvec3(1u, 1u, 1u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u), 1u)))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))))), min(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), (false ? _GLF_FUZZED(uvec2(134356u, 11409u).t) : _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))) + 0u))))))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u, 1u))))))), clamp(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), min(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u ^ (~ (max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) - 0u), 0u))) | 0u), 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))))), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), 0u + ((0u))), (_GLF_IDENTITY((0u), 0u + ((0u)))) >> 0u) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (_GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) >> 0u))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), clamp(max(0u, 0u), max(0u, 0u), max(0u, 0u))))), 0u))), 1u, 1u), (uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (_GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) >> 0u))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), clamp(max(0u, 0u), max(0u, 0u), max(0u, 0u))))), 0u))), 1u, 1u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) * 1u)), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u, 1u))))))), _GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), min(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u ^ (~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)))), min(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u, 1u))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), min(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u ^ (~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)))), min(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u, 1u))))))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), min(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u ^ (~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)))), min(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u, 1u)))))))) ^ 0u) : _GLF_FUZZED(workgroup_base))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), min(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u ^ (~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))))))))), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), min(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u ^ (~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))))))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), min(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u ^ (~ (max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), ~ (~ ((0u))))))), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), _GLF_IDENTITY(min(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u))), min(min(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u))), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) | _GLF_IDENTITY(0u, max(0u, 0u))), 0u))), 1u, 1u)))))), min(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * uint(_GLF_ONE(1.0, injectionSwitch.y))) - 0u), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u, 1u))))))))))))))), uint(_GLF_IDENTITY(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | 0u))))), 1u, 0u, 1u), (false ? _GLF_FUZZED((+ _GLF_IDENTITY(uvec4(186020u, 45621u, 32133u, 176832u), (uvec4(186020u, 45621u, 32133u, 176832u)) - (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))) : uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)))), 0u ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))))) / 1u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | 0u))), 1u, 0u, 1u))))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) ^ 0u)) - 0u) + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))) << 0u)))) % subgroup_size) << 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))) << 0u)))) % subgroup_size) << 0u) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))) << 0u)))) % subgroup_size) << 0u, (true ? (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))) << 0u)))) % subgroup_size) << 0u : _GLF_FUZZED(subgroup_size)))))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_base) : (subgroup_local_id + 1)))))) % subgroup_size)));
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(virtual_gid))))), virtual_gid, virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) || false)), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, (false) || false)), false, true))))))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) || false)), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, (false) || false)), false, true))))))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))))
    continue;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
     barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), 1.0, 0.0, 0.0)), (transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), 1.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0))))))) || false)))));
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, _GLF_IDENTITY(4, (4) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), int(ivec4(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), _GLF_IDENTITY(0, (0) << 0), 0, 1))), int(3)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false), false)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_DEAD(false)))), false, true))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(40954) : 1), ((false ? _GLF_FUZZED(40954) : 1)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(40954) : 1), (true ? (false ? _GLF_FUZZED(40954) : 1) : _GLF_FUZZED(32572)))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(40954) : 1), _GLF_IDENTITY(((false ? _GLF_FUZZED(40954) : 1)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(40954) : 1), (true ? (false ? _GLF_FUZZED(40954) : 1) : _GLF_FUZZED(32572)))), (((false ? _GLF_FUZZED(40954) : 1)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(40954) : 1), (true ? (false ? _GLF_FUZZED(40954) : 1) : _GLF_FUZZED(32572))))) >> 0)))) / 1)) | 0) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     break;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
