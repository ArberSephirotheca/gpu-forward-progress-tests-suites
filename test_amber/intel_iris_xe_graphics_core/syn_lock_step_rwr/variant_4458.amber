#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 mat2 _f0;
 uvec4 _f1;
 uint workgroup_size;
 ivec4 _f2;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 mat3 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 bool _f1;
 mat2x3 _f2;
 uvec3 _f3;
 ivec3 _f4;
 uint _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 uvec3 _f1;
 _GLF_struct_0 _f2;
 int _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 bool _f1;
 uint next_virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2951.7681)), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(injectionSwitch))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(560.471), (false ? _GLF_FUZZED(trunc(log2(-29.58))) : _GLF_FUZZED(_GLF_IDENTITY(560.471, max(560.471, _GLF_IDENTITY(560.471, max(560.471, 560.471))))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(560.471), (false ? _GLF_FUZZED(trunc(log2(-29.58))) : _GLF_FUZZED(_GLF_IDENTITY(560.471, max(560.471, _GLF_IDENTITY(560.471, max(560.471, 560.471))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(560.471), (false ? _GLF_FUZZED(trunc(log2(-29.58))) : _GLF_FUZZED(_GLF_IDENTITY(560.471, max(560.471, _GLF_IDENTITY(560.471, max(560.471, 560.471))))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(560.471), (false ? _GLF_FUZZED(trunc(log2(-29.58))) : _GLF_FUZZED(_GLF_IDENTITY(560.471, max(560.471, _GLF_IDENTITY(560.471, max(560.471, 560.471))))))), _GLF_IDENTITY(_GLF_FUZZED(560.471), (false ? _GLF_FUZZED(trunc(log2(-29.58))) : _GLF_FUZZED(_GLF_IDENTITY(560.471, max(560.471, _GLF_IDENTITY(560.471, max(560.471, 560.471))))))), _GLF_IDENTITY(_GLF_FUZZED(560.471), (false ? _GLF_FUZZED(trunc(log2(-29.58))) : _GLF_FUZZED(_GLF_IDENTITY(560.471, max(560.471, _GLF_IDENTITY(560.471, max(560.471, 560.471))))))))), _GLF_IDENTITY(_GLF_FUZZED(560.471), (false ? _GLF_FUZZED(trunc(log2(-29.58))) : _GLF_FUZZED(_GLF_IDENTITY(560.471, max(560.471, _GLF_IDENTITY(560.471, max(560.471, 560.471)))))))))), vec2(_GLF_FUZZED(5.6), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))), vec2(vec4(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(560.471)), vec2(_GLF_FUZZED(5.6), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-19.73)), bool(false))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))))), 1.0, determinant(mat3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (determinant(mat2(1.0, 0.0, 0.0, 1.0))) / 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0)), (vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(injectionSwitch))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_IDENTITY(_GLF_FUZZED(560.471), (false ? _GLF_FUZZED(trunc(log2(-29.58))) : _GLF_FUZZED(_GLF_IDENTITY(560.471, max(560.471, _GLF_IDENTITY(560.471, max(560.471, 560.471)))))))), vec2(_GLF_FUZZED(5.6), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))), vec2(vec4(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(560.471)), vec2(_GLF_FUZZED(5.6), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-19.73)), bool(false))), 0.0))))), 1.0, determinant(mat3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), (determinant(mat2(1.0, 0.0, 0.0, 1.0))) / 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0))) / vec2(1.0, 1.0))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6611.8812)), vec2(_GLF_FUZZED(-218.450), (injectionSwitch)[1]), bvec2(false, true)))))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(560.471)), vec2(_GLF_FUZZED(5.6), (_GLF_FUZZED(injectionSwitch))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(64884) : 1))))]), bvec2(false, true))))), 1.0, determinant(mat3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))))) / 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(560.471)), vec2(_GLF_FUZZED(5.6), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))))), 1.0, determinant(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) * mat2(1.0)), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0)))))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(91.89, -4.8, -1.9, -5.3)) : _GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) * mat2(1.0))))), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))) / 1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-947.198)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0)), max(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(560.471)), vec2(_GLF_FUZZED(5.6), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), true))))), 1.0, determinant(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0)))))))), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(91.89, -4.8, -1.9, -5.3)) : _GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) * mat2(1.0))))), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))) / 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(560.471)), vec2(_GLF_FUZZED(5.6), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), true))))), 1.0, determinant(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0)))))))), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(91.89, -4.8, -1.9, -5.3)) : _GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) * mat2(1.0))))), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))) / 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3(-9649.5698, -6.7, 1124.9347, -419.937, 7.6, 905.067, 2.8, -358.418, -76.49))))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))))[0], _GLF_FUZZED(560.471)), _GLF_IDENTITY(vec2(_GLF_FUZZED(5.6), (_GLF_FUZZED(injectionSwitch))[1]), mat2(1.0) * (vec2(_GLF_FUZZED(5.6), (_GLF_FUZZED(injectionSwitch))[1]))), bvec2(false, true))))), 1.0, determinant(mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0)))))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (false ? _GLF_FUZZED(mat2(91.89, -4.8, -1.9, -5.3)) : _GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) * mat2(1.0))))), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))) / 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(560.471)), vec2(_GLF_FUZZED(5.6), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true))))), 1.0, determinant(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY((mat2(1.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY((mat2(1.0, 0.0, 0.0, 1.0)), mat2(1.0) * ((mat2(1.0, 0.0, 0.0, 1.0))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0)))))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(91.89, -4.8, -1.9, -5.3)) : _GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), (mat2(1.0, 0.0, 0.0, 1.0)) * mat2(1.0))))), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))) / 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0)), max(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(560.471)), vec2(_GLF_FUZZED(5.6), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), true))))), 1.0, determinant(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), mix(float(float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0)))))), float(_GLF_FUZZED((6.1 - -21.57))), bool(false)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(91.89, -4.8, -1.9, -5.3)) : _GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))))), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))) / 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))))[0], _GLF_FUZZED(560.471)), vec2(_GLF_FUZZED(5.6), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * ((_GLF_FUZZED(injectionSwitch))))[1]), bvec2(false, true))))), 1.0, determinant(mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0)))))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (false ? _GLF_FUZZED(mat2(91.89, _GLF_IDENTITY(-4.8, mix(float(-4.8), float(_GLF_FUZZED(2.3)), bool(false))), -1.9, -5.3)) : _GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) * mat2(1.0))))), (determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))) / 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0))))))).y)))) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))) && _GLF_IDENTITY(true, false || (true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.0)), bool(false))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), min(float(mat4x2(injectionSwitch.x, 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0)), float(mat4x2(injectionSwitch.x, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(248.287)), float(1.0), bool(true)))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2530.3161) : injectionSwitch.y)) : _GLF_FUZZED(0.2), clamp(true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2530.3161) : injectionSwitch.y)) : _GLF_FUZZED(0.2), true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2530.3161) : injectionSwitch.y)) : _GLF_FUZZED(0.2), true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2530.3161) : injectionSwitch.y)) : _GLF_FUZZED(0.2))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((true ? injectionSwitch[0] : _GLF_FUZZED(-51.65)), max((_GLF_IDENTITY(true ? injectionSwitch[0] : _GLF_FUZZED(-51.65), (true ? injectionSwitch[0] : _GLF_FUZZED(-51.65)) / round(length(normalize(vec2(1.0, 1.0)))))), (true ? injectionSwitch[0] : _GLF_FUZZED(-51.65))))), injectionSwitch[1])).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((true ? injectionSwitch[0] : _GLF_FUZZED(-51.65)), max((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])) : _GLF_FUZZED(-51.65), (true ? injectionSwitch[0] : _GLF_FUZZED(-51.65)) / round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(vec4(normalize(vec2(1.0, 1.0)), 0.0, 1.0))), normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))), normalize(vec2(1.0, 1.0)))))))), (true ? injectionSwitch[0] : _GLF_FUZZED(-51.65))))), 1.0 * (_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((true ? injectionSwitch[0] : _GLF_FUZZED(-51.65)), max((_GLF_IDENTITY(true ? injectionSwitch[0] : _GLF_FUZZED(-51.65), (true ? injectionSwitch[0] : _GLF_FUZZED(-51.65)) / round(length(normalize(vec2(1.0, 1.0)))))), (true ? injectionSwitch[0] : _GLF_FUZZED(-51.65))))))), injectionSwitch[1])).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) && (false), false || (true && (false))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), (uint(uvec2(gl_NumWorkGroups.x, 0u))) << 0u))) * 1u), clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(12.91)), bool(false)))), float(_GLF_FUZZED(7.7)), bool(false)))), 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ _GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ _GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ _GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))))).x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((uvec4(93306u, 31933u, 3897u, 48546u).sqp & uvec3(193253u, 88088u, 20535u))))).x)) : _GLF_FUZZED(subgroup_id))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> 0u))) | uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) << 0u), (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ _GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ _GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> 0u))) | uvec4(0u, 0u, 0u, 0u))), ((uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), min((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u + (0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(88279u, 59539u, 103985u)))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(140935u, 22893u, 144467u)))))))) << uvec3(0u, 0u, 0u))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(156006u) : 0u)), (true ? 0u : _GLF_FUZZED(2900u))), 0u, 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(158805u))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))))) >> 0u))) | uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))), 0u)) | (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(155134u) : _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (2u) / 1u)), uvec3(2u))) ^ (gl_NumWorkGroups))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), (false ? _GLF_FUZZED(max(uvec3(157565u, 161012u, 111110u), uvec3(54346u, 100150u, 126559u))) : uvec3(2u))))) ^ _GLF_IDENTITY((gl_NumWorkGroups), clamp(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))), (gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups))))))))) << uvec3(0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> 0u))) | uvec4(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))) : _GLF_FUZZED(uint(55491)))), 0u, 0u, 0u), ((uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(uint(49058)))), 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(subgroup_id) : 2u))), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> 0u))) | uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], uint(uint(gl_NumWorkGroups[1]))), gl_NumWorkGroups[2])))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)) / (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))))), uvec3(uvec3(_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)) / (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)) / (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u))))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-1.0)))), _GLF_IDENTITY(0u, (0u) >> 0u))) | uvec4(0u, 0u, 0u, 0u), ((_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), (_GLF_IDENTITY(uvec3(2u), uvec3(2u))) - uvec3(0u, 0u, 0u)))))) ^ (gl_NumWorkGroups))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), _GLF_IDENTITY(((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u), (_GLF_IDENTITY(((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u), clamp(((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u), uvec3(uvec3(((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u), clamp(((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u)))))) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) ^ ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))))) * uvec3(1u, 1u, 1u))))) << uvec3(0u, 0u, 0u))))), uvec3(uvec3(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))) << uvec3(0u, 0u, 0u))))))))) : _GLF_FUZZED(uvec3(163843u, 147627u, 41404u)))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> 0u)), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (2u) ^ (1u ^ 1u))), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), max((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))))), ((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), max(_GLF_IDENTITY(uvec3(2u), ~ (~ (uvec3(2u)))), _GLF_IDENTITY(uvec3(2u), uvec3(0u, 0u, 0u) ^ (uvec3(2u))))), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (_GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), _GLF_IDENTITY(((uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u), clamp(((uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u), ((uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u), (((uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)))))))), uvec3(uvec3(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), _GLF_IDENTITY(((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(uvec3(((_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))))) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(2u), uvec3(2u))))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u)), uvec3(1u, 1u, 1u) * (uvec3(((uvec3(1u, 1u, 1u) ^ uvec3(1u, _GLF_IDENTITY(1u, (1u) >> 0u), 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), min(uvec3(2u), uvec3(2u))))) ^ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u)))))))))))))) : _GLF_FUZZED(uvec3(163843u, 147627u, 41404u)))).x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> 0u))) + uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)) | ((uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups))), ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))))) << uvec3(0u, 0u, 0u))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) >> 0u))) | uvec4(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u, 0u))))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.8)), bool(false))) > injectionSwitch.y))), true), true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec4(bool(bvec4(false, true, false, false)), true, true, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat4x2(1.0), mat3(1.0), _GLF_struct_3(mat2(1.0), uvec4(1u), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, ivec4(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), ~ (_GLF_IDENTITY(~ (0u), 0u + (~ (0u))))))), uint(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))))), (uvec4(gl_WorkGroupID, 0u)) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), ~ (_GLF_IDENTITY(~ (0u), 0u + (~ (0u))))))), uint(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))))), (uvec4(gl_WorkGroupID, 0u)) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y))))), clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), ~ (_GLF_IDENTITY(~ (0u), 0u + (~ (0u))))))), uint(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))))), (uvec4(gl_WorkGroupID, 0u)) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), ~ (_GLF_IDENTITY(~ (0u), 0u + (~ (0u))))))), uint(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))))), (uvec4(gl_WorkGroupID, 0u)) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), ~ (_GLF_IDENTITY(~ (0u), 0u + (~ (0u))))))), uint(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))))), (uvec4(gl_WorkGroupID, 0u)) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y)))))))) / uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, true)))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, true)))), false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = _GLF_struct_replacement_4._f2.workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(761.953) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))), (bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))) && (bool(bvec4(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))) || false), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(-5978.5056))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8176.8002)), bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 1.0))), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)) + subgroup_local_id;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(vec4(1.0), uvec3(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), (_GLF_IDENTITY(1u, 0u + (1u))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.0)), bool(false)))))), 1u))), _GLF_struct_0(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(false || (! (bool(_GLF_IDENTITY(true, false || (true))))), (false || (! (bool(_GLF_IDENTITY(true, false || (true)))))) && true)))))), false, false, false)))))), mat2x3(1.0), _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))), ivec3(1), _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))), uvec4(1u)), 1), true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (subgroup_size))) * (1u | 1u)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), (subgroup_local_id + 1) % subgroup_size))), (0u ^ _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u))) + (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (subgroup_size))) * (1u | 1u)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), (subgroup_local_id + 1) % subgroup_size))), (0u ^ _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u))) + (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (subgroup_size))) * (1u | 1u)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), (subgroup_local_id + 1) % subgroup_size))), (0u ^ _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u))) + (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (subgroup_size))) * (1u | 1u)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), (subgroup_local_id + 1) % subgroup_size))), (0u ^ _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u))) + (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (subgroup_size))) * (1u | 1u)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), (subgroup_local_id + 1) % subgroup_size))), (0u ^ _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u))) + (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (subgroup_size))) * (1u | 1u)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), (subgroup_local_id + 1) % subgroup_size))), (0u ^ _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u))) + (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))))) ^ 0u));
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), _GLF_IDENTITY((~ (buf[virtual_gid])), ((~ (buf[virtual_gid]))) << 0u) - 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) - 0u)), _GLF_IDENTITY(0u ^ (~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) - 0u))), (0u ^ (~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) - 0u)))) >> (0u | 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) - 0u))), 0u | (_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) - 0u))))), _GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ _GLF_IDENTITY((buf[virtual_gid]), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | ((buf[virtual_gid])))) - 0u)))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u)))), (~ (buf[virtual_gid])) - 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) - 0u))), 0u | (_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) - 0u))))), _GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ _GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) << 0u)) << 0u)) - 0u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) | (virtual_gid))])) - 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) - 0u))), 0u | (_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) - 0u))))), _GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) - 0u)))))))))))), 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-70464, (-70464) - 0))))) / _GLF_IDENTITY(1, 0 + (1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_2.next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, (4) / 1), 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), (_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), min(int(int(4)), int(int(4)))))) ^ 0))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && (false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.1), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(5.2)), bool(false))), _GLF_FUZZED(13.67)), bvec2(true, false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_2.next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_2), ((read_2)) << 0u), 0u | (_GLF_IDENTITY((read_2), ((read_2)) << 0u))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), min(uvec3(0u, 1u, 0u), _GLF_IDENTITY(uvec3(0u, 1u, 0u), min(_GLF_IDENTITY(uvec3(0u, 1u, 0u), clamp(uvec3(0u, 1u, 0u), uvec3(0u, 1u, 0u), uvec3(0u, 1u, 0u))), uvec3(0u, 1u, 0u)))))), uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))) + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(52426))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91787)))) << (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), int(1)))) | 0), int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(1)))))), int(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91787)))) << (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), 0, 0, 1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
