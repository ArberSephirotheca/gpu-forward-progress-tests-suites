#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, true, true), bvec3(bvec3(bvec3((false) && true, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, true, true), bvec3(bvec3(bvec3((false) && true, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, true, true), bvec3(bvec3(bvec3((false) && true, true, true))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(9528u)), _GLF_FUZZED(-7224.5635)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-4118.2941) : (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(9528u)), _GLF_FUZZED(-7224.5635)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-4118.2941) : (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(9528u)), _GLF_FUZZED(-7224.5635)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-4118.2941) : (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0)), min(float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0)), float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0))))) > injectionSwitch.y))) || false)))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), bool(bool(! (false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), bool(bool(! (false)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bool(true)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.0), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))[0], _GLF_FUZZED(-3.1)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), false)), (bool(bvec2(false, false))) || false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, true && (false)))), false, true), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, true && (false)))), false, true), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, true && (false)))), false, true)))))))))), (injectionSwitch.x > injectionSwitch.y)))), true, false, true)), ! _GLF_IDENTITY((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), bool(bvec4((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), false)), (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, false), true)), false, false)))))) || false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(acos(-76.53))))), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, true && (false)))), false, true), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, true && (false)))), false, true), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, true && (false)))), false, true)))))))))), (injectionSwitch.x > injectionSwitch.y)))), true, false, true)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), bool(bvec4((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), bool(bvec4((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), bool(bvec4((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(44.12)), bool(false))))))), true, false, true)))), bool(bvec4((! (bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, true), bvec3(bvec3(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), true && (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true)))))))), true)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, (false ? _GLF_FUZZED(sqrt(48.03)) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(asin(vec2(9.7, 3243.5078))) : mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) - vec2(0.0, 0.0))).x))), float(_GLF_FUZZED(31.65)), bool(false))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), bool(bvec4(_GLF_DEAD(false), false, false, false)))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), (false) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, exp(0.0), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, exp(0.0), 1.0)))))), max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, exp(0.0), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, exp(0.0), 1.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, exp(0.0), 1.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, exp(0.0), 1.0)))))))), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)), true, true, false)))) || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), true)))))))))))), false || (! (_GLF_DEAD(false)))), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-29.45), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(1209.8317, 8.8)))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) / vec2(1.0, 1.0)), 1.0), clamp(vec3((injectionSwitch), 1.0), vec3((injectionSwitch), 1.0), vec3((injectionSwitch), 1.0)))))[0], _GLF_IDENTITY(_GLF_FUZZED(3.0), mix(float(_GLF_FUZZED(7.3)), float(_GLF_FUZZED(3.0)), bool(true)))), bvec2(true, false))))).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2854.6530))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.1, -0.8)) : injectionSwitch)).y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), true && (bool((false)))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))))), gl_WorkGroupID, gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u | (uint(5u)))) - 0u), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u | (uint(5u)))) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), 0u | (uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (5u))))))))) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), 0u | (uint(_GLF_IDENTITY(5u, clamp(5u, 5u, 5u)))))) - 0u) * 1u))), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, min(5u, 5u))))))), 0u | (uint(5u)))) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, min(0u, 0u)))))))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u | (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec4(0u | (subgroup_id * subgroup_size), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(workgroup_base) : uint(6u))))), 1u)), clamp(uint(uvec4(0u | (subgroup_id * subgroup_size), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(workgroup_base) : uint(6u))))), 1u)), _GLF_IDENTITY(uint(uvec4(0u | (subgroup_id * subgroup_size), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(workgroup_base) : uint(6u))))), 1u)), uint(uvec4(uint(uvec4(0u | (subgroup_id * subgroup_size), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(workgroup_base) : uint(6u))))), 1u)), 0u, 1u, 1u))), uint(uvec4(0u | (subgroup_id * subgroup_size), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(workgroup_base) : uint(6u))))), 1u)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), max(_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (min(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) | (min(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size))))) / 1u)))))))))))), ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), min(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(subgroup_id, 1u, 0u, 0u))))) * subgroup_size) / 1u), subgroup_id * subgroup_size))))) / 1u))))))))))))) - 0u), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), uint(uvec3((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), 0u, 0u))), (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))) | ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), (true ? ~ _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), uint(uvec3((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), 0u, 0u))), (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))) | ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))) : _GLF_FUZZED(min(workgroup_size, 57038u)))), ~ _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) + 0u), ~ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size)), 1u * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u)))))), 1u * (min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u)))))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), uint(uvec2(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), 1u)))) * 1u))), (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) >> 0u), (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) * 1u))), (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)), (min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) * 1u))), (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size) / 1u))) | 0u)) >> _GLF_IDENTITY(0u, (0u) / 1u)))))))))))), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u))), subgroup_id * subgroup_size)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / 1u))))))))), (_GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u))), subgroup_id * subgroup_size)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / 1u)))))))))) + (0u ^ 0u))))))), clamp(~ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u, 1u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u, 1u, 1u)))))) * subgroup_size)))), ~ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size)))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), max(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))) - 0u), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u, ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u) / 1u) : _GLF_FUZZED((-- workgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, max(0u, 0u))))))) / 1u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(_GLF_IDENTITY(6u, (6u) >> 0u)))))), 0u)))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) * 1u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), injectionSwitch.x)))))) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 0u))))))), max(~ (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 0u))))))), ~ (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 0u))))))))))))))))))))))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), min(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), (min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))))))) << 0u))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 1u)))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), min(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 0u)), (uint(uvec2(subgroup_id * subgroup_size, 0u))) | (uint(uvec2(subgroup_id * subgroup_size, 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))))))))), clamp(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (~ (~ (subgroup_id * subgroup_size))) >> 0u)), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size)))), ~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)) * subgroup_size, subgroup_id * subgroup_size)))))), ~ (~ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)) * subgroup_size, subgroup_id * subgroup_size)))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))), 0u)))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) * 1u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))))))))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))))))))), clamp(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))), 0u)))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) * 1u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))))))))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))))))))), clamp(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))))), min(((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))), 0u)))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) * 1u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))))))))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))))))))), clamp(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))), 0u)))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) * 1u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))))))))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))))))))), clamp(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))), 0u)))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) * 1u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))))))))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))))))))), clamp(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))), 0u)))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) * 1u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))))))))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))))))))), clamp(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))))), (((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))), 0u)))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) * 1u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))))))))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))))))))), clamp(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) / 1u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))), 0u)))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) * 1u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))))))))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))), 0u ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (0u | 0u) | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))), uint(uint(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) / 1u)))) >> 0u)))))))))))))))), clamp(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))))))) ^ 0u))))) - (0u & 70338u)))) - 0u))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size)), min(uint(uint(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), uint(uint(workgroup_base + subgroup_id * subgroup_size)))))), uint(uvec3(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (156247u & (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (1u ^ 1u) + (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(workgroup_base))), uint(_GLF_IDENTITY(2u, (2u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1u))))))), 1u, 1u)))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u)) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8317.3756)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8317.3756)), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8317.3756)), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8317.3756)), bool(false)), float(vec2(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8317.3756)), bool(false)), 1.0))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8317.3756)), bool(false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! (! (false)))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))) | (next_virtual_gid))], _GLF_IDENTITY(uint(read_1 + 1), max(uint(read_1 + 1), uint(read_1 + 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(33680)))))) | 0), 0 ^ (_GLF_IDENTITY(4, (4) | 0))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), true))) && true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) / 1)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) ^ 0u) >> 0u)], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (4))))), min(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) / 1), 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), 0 | (int(int(4))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), max(_GLF_IDENTITY(~ (~ (4)), int(int(~ (~ (4))))), ~ (~ (4))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (4) / 1))), int(int(~ (~ (4))))), ~ (~ (4)))))) | 0))), 0 + (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-89637) : 4))))))), 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
