#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_9 {
 uvec3 _f0;
} ;

struct _GLF_struct_8 {
 uint _f0;
 uvec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_7 {
 int _f0;
 bvec4 _f1;
 mat3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 ivec4 _f1;
 mat3 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 mat4x3 _f1;
 int _f2;
 mat4x3 _f3;
 mat4x3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 bvec3 _f1;
 bvec2 _f2;
 mat4x3 _f3;
 uvec4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 uvec2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_2 {
 uint virtual_gid;
 _GLF_struct_1 _f0;
} ;

struct _GLF_struct_11 {
 uint _f0;
 _GLF_struct_2 _f1;
 mat3x2 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_10 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 ivec2 _f1;
 uint num_workgroup;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(uvec3(1u), ivec2(1), gl_NumWorkGroups.x);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(1u, _GLF_struct_2(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_struct_1(mat3x2(1.0), uvec2(1u), bvec4(true))), mat3x2(1.0), _GLF_struct_6(_GLF_struct_3(uvec3(1u), bvec3(true), bvec2(true), mat4x3(1.0), uvec4(1u), mat4x2(1.0)), _GLF_struct_4(uvec4(1u), mat4x3(1.0), 1, mat4x3(1.0), mat4x3(1.0), uvec4(1u)), _GLF_struct_5(ivec2(1), ivec2(1))), _GLF_struct_10(ivec2(1), ivec4(1), mat3(1.0), _GLF_struct_7(1, bvec4(true), mat3(1.0), mat3x2(1.0)), _GLF_struct_8(1u, uvec4(1u), ivec2(1)), _GLF_struct_9(uvec3(1u))), ivec3(1));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_11._f1.virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_11._f1.virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
