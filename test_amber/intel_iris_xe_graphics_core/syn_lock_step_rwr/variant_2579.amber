#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_14 {
 uint num_workgroup;
 uvec2 _f0;
 mat3x4 _f1;
 bool _f2;
 mat2x3 _f3;
 mat2 _f4;
 bvec4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 mat3x4 _f1;
 uvec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 mat4x2 _f1;
 bvec2 _f2;
 bvec2 _f3;
 vec4 _f4;
 uvec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_15 {
 uint _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 mat4 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
} ;

struct _GLF_struct_9 {
 ivec4 _f0;
 bvec4 _f1;
 mat4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 vec2 _f1;
 bvec4 _f2;
 int _f3;
 mat2x3 _f4;
 float _f5;
} ;

struct _GLF_struct_6 {
 float _f0;
 float _f1;
 bvec3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 ivec4 _f1;
 mat3x4 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 _GLF_struct_5 _f1;
 ivec3 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 vec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 ivec4 _f1;
 ivec2 _f2;
 ivec3 _f3;
 bool _f4;
 uvec3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 uvec4 _f1;
 vec4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat4 _f1;
 ivec4 _f2;
 bool _f3;
 mat2 _f4;
 mat4x2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 uint _f3;
 mat2 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_8 _f2;
 uint virtual_gid;
 _GLF_struct_9 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.y = subgroup_local_id;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_15(1u, _GLF_struct_11(uvec3(1u), mat4x2(1.0), bvec2(true), bvec2(true), vec4(1.0), uvec2(1u), mat2(1.0)), _GLF_struct_12(bvec3(true), mat3x4(1.0), uvec2(1u), 1u), mat4(1.0), _GLF_struct_13(ivec2(1)), _GLF_struct_14(gl_NumWorkGroups.x, uvec2(1u), mat3x4(1.0), true, mat2x3(1.0), mat2(1.0), bvec4(true), mat4x2(1.0))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.z = workgroup_base;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_3(_GLF_struct_0(1, mat4(1.0), ivec4(1), true, mat2(1.0), mat4x2(1.0), bvec4(true)), _GLF_struct_1(mat3(1.0), uvec4(1u), vec4(1.0), mat4(1.0)), _GLF_struct_2(bvec2(true), ivec4(1), ivec2(1), ivec3(1), true, uvec3(1u), mat2x4(1.0)), 1u, mat2(1.0)), _GLF_struct_4(mat4x2(1.0), vec4(1.0), uvec3(1u)), _GLF_struct_8(ivec2(1), _GLF_struct_5(vec2(1.0), ivec4(1), mat3x4(1.0), uvec2(1u)), ivec3(1), _GLF_struct_6(1.0, 1.0, bvec3(true), mat3x4(1.0)), _GLF_struct_7(uvec3(1u), vec2(1.0), bvec4(true), 1, mat2x3(1.0), 1.0)), GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.z + subgroup_id * subgroup_size + GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.y, _GLF_struct_9(ivec4(1), bvec4(true), mat4(1.0), mat4(1.0)));
 uint next_virtual_gid = GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.z + subgroup_id * subgroup_size + ((GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.y + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_10.virtual_gid], 4, 64, 0);
 GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.x = read_1;
 atomicStore(buf[next_virtual_gid], uint(GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.x + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_10.virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(GLF_merged3_0_1_6_1_1_17_2_1_14read_1subgroup_local_idworkgroup_base.x + 1 == read_2) + 1, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
