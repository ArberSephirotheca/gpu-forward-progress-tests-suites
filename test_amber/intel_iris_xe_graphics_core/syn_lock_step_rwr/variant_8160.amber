#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 mat4x2 _f0;
 int _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 mat3 _f1;
 bvec3 _f2;
 bvec2 _f3;
 mat3x2 _f4;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 mat3x4 _f1;
 float _f2;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 bvec3 _f1;
 bool _f2;
 int _f3;
 uvec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_10 {
 mat4 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 float _f1;
 bvec2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 vec4 _f1;
 mat3x2 _f2;
 vec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 vec4 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 uvec2 _f1;
 mat3x2 _f2;
 ivec2 _f3;
 vec2 _f4;
 mat3 _f5;
 bool _f6;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 uint _f1;
 mat2 _f2;
 _GLF_struct_0 _f3;
} ;

struct _GLF_struct_13 {
 _GLF_struct_1 _f0;
 ivec3 _f1;
 vec2 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_10 _f4;
 uint subgroup_local_id;
 _GLF_struct_12 _f5;
 bvec2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-6055.7249) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-54.75, -476.925)) : injectionSwitch)).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_1(mat3x4(1.0), 1u, mat2(1.0), _GLF_struct_0(vec2(1.0), _GLF_IDENTITY(uvec2(1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | uvec2(0u, 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(12248u, 101191u)) : ~ (_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)) | uvec2(0u, 0u), clamp((uvec2(1u)) | uvec2(0u, 0u), _GLF_IDENTITY((uvec2(1u)) | uvec2(0u, 0u), clamp((uvec2(1u)) | uvec2(0u, 0u), (uvec2(1u)) | uvec2(0u, 0u), _GLF_IDENTITY((uvec2(1u)) | uvec2(0u, 0u), ((uvec2(1u)) | uvec2(0u, 0u)) ^ uvec2(0u, 0u)))), (uvec2(1u)) | uvec2(0u, 0u)))))))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | uvec2(0u, 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(12248u, 101191u)) : ~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u))), (uvec2(1u)) | _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (uvec2(0u, 0u)))))))))))), mat3x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.5))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-8.4)))))), ivec2(1), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / vec2(1.0, 1.0)), mat3(1.0), true)), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), min((1), (_GLF_IDENTITY(1, min(1, 1))))))) | (1), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(((1)) | (_GLF_IDENTITY((1), min((1), (1)))), min(_GLF_IDENTITY(((1)) | (_GLF_IDENTITY((1), min((1), (1)))), int(int(((1)) | (_GLF_IDENTITY((1), min((1), (1))))))), _GLF_IDENTITY(((1)) | (_GLF_IDENTITY((1), min((1), (1)))), (((1)) | (_GLF_IDENTITY((1), min((1), (1))))) >> 0)))) | (1), (_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? (1) : _GLF_FUZZED(65228))))))) | (1)) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), ((0 << _GLF_IDENTITY(int(3), int(3)))) / 1)), _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), min((_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))), (1))))) | (1))))), vec2(1.0), _GLF_struct_7(_GLF_struct_2(mat3x4(1.0), vec4(1.0), mat3x2(1.0), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-9.5), _GLF_FUZZED(-4441.0647), (vec4(1.0))[2], (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_IDENTITY((vec4(1.0))[1], max(_GLF_IDENTITY((vec4(1.0))[1], (true ? (vec4(1.0))[1] : _GLF_FUZZED(-2955.4567))), (vec4(1.0))[1])), _GLF_FUZZED(vec3(-30.57, 5.8, 7315.5166).g), _GLF_FUZZED(-20.03)), bvec4(true, true, false, false))), bvec2(true)), _GLF_struct_3(ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ~ (~ (ivec2(1, 1)))))))), vec4(1.0), _GLF_struct_4(mat3(1.0)), _GLF_struct_5(vec3(1.0)), _GLF_struct_6(mat3x4(1.0), 1.0, bvec2(true), uvec4(1u))), _GLF_struct_10(mat4(1.0), _GLF_struct_8(ivec3(1), bvec3(true), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false), true, false)))))) && true), 1, uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) | (1u))) + 0u)), ivec3(1)), _GLF_struct_9(mat4(1.0), mat3x4(1.0), 1.0)), gl_SubgroupInvocationID, _GLF_struct_12(mat4x3(1.0), mat3(1.0), bvec3(true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false, false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.8)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))) * (injectionSwitch)))).x > injectionSwitch.y)), true)))))), (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)).y))) && true, ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, sin(0.0), 1.0, 0.0)), _GLF_IDENTITY(float(vec2(float(mat2(1.0, sin(0.0), 1.0, 0.0)), abs(0.0))), clamp(float(vec2(float(mat2(1.0, sin(0.0), 1.0, 0.0)), abs(0.0))), float(vec2(float(mat2(1.0, sin(0.0), 1.0, 0.0)), abs(0.0))), float(vec2(float(mat2(1.0, sin(0.0), 1.0, 0.0)), abs(0.0))))))), 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)).y))) && true) && true))) || false), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-620.731)), bool(false))) > injectionSwitch.y)), true)))) && true), true)))) || false))))))), mat3x2(1.0), _GLF_struct_11(mat4x2(1.0), _GLF_IDENTITY(1, (1) >> 0), mat4x3(1.0))), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(bvec2(true))), false, false)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), min(int(0), int(0)))), (~ (int(0))) | 0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), 0 | (1 << _GLF_IDENTITY(int(0), int(0)))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(38926, 0 ^ (38926)), -95201).y)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))), int(0))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) | 0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(38926, 0 ^ (38926)), -95201).y)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))), int(0)), min((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) | 0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(38926, 0 ^ (38926)), -95201).y)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))), int(0)), _GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) | 0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(38926, 0 ^ (38926)), -95201).y)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))), int(0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) | 0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(38926, 0 ^ (38926)), -95201).y)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))), int(0))) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) | 0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(38926, 0 ^ (38926)), -95201).y)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))), int(0))))))), int(ivec3(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) | 0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 << _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(38926, 0 ^ (38926)), -95201).y)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0))))))), int(0))), 0, 1)))) >> 0)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))))) && true))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))))
      {
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) >> 0))); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         break;
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) * 1.0)), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u);
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))) << 0u)) - (0u | 0u));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)), clamp((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)))) : _GLF_FUZZED(subgroup_id))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_struct_replacement_13.subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | 0u)) | 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id, clamp(_GLF_struct_replacement_13.subgroup_local_id, _GLF_struct_replacement_13.subgroup_local_id, _GLF_struct_replacement_13.subgroup_local_id)))), max(_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id, clamp(_GLF_struct_replacement_13.subgroup_local_id, _GLF_struct_replacement_13.subgroup_local_id, _GLF_struct_replacement_13.subgroup_local_id)))), _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id, clamp(_GLF_struct_replacement_13.subgroup_local_id, _GLF_struct_replacement_13.subgroup_local_id, _GLF_struct_replacement_13.subgroup_local_id)))))) + 1), _GLF_IDENTITY(~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u)) : _GLF_struct_replacement_13.subgroup_local_id + 1))), (~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) >> 0u) | 0u)) : _GLF_struct_replacement_13.subgroup_local_id + 1)))) << 0u)))) % subgroup_size, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id, 0u ^ (_GLF_struct_replacement_13.subgroup_local_id)) + 1, min(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id, 0u ^ (_GLF_struct_replacement_13.subgroup_local_id)) + 1, false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id, 0u ^ (_GLF_struct_replacement_13.subgroup_local_id)) + 1))))) % subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) : _GLF_struct_replacement_13.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1)))))))) % subgroup_size), _GLF_IDENTITY(min(~ ((_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1)))))))) % subgroup_size), _GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1)))))))) % subgroup_size), 0u | (~ ((_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1)))))))) % subgroup_size)))), (true ? min(_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1)))))))) % subgroup_size), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1)))))))) % subgroup_size), (~ ((_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1)))))))) % subgroup_size)) | (~ ((_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1)))))))) % subgroup_size)))) ^ 0u), _GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1)))))))) % subgroup_size), 0u | (~ ((_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1)))))))) % subgroup_size)))) : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1) >> (140652u & 0u)))))))) % subgroup_size)) << 0u, ((~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1) >> (140652u & 0u)))), (true ? _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13.subgroup_local_id + 1) >> (140652u & 0u)))) : _GLF_FUZZED(workgroup_id))))))) % subgroup_size)) << 0u) >> 0u))))))));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), (injectionSwitch.x > injectionSwitch.y))) || false), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), (injectionSwitch.x > injectionSwitch.y))) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false)))) && true)) || false)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(false, false || (false)) || ((false) && true))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec3(bvec3(bvec3(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true))))))), true)))))))) || false))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), (injectionSwitch.x > injectionSwitch.y))) || false), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), (injectionSwitch.x > injectionSwitch.y))) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false)))) && true)) || false)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(false, false || (false)) || ((false) && true))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec3(bvec3(bvec3(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true))))))), true)))))))) || false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 0) || false), ! (! (_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 0) || false)))))))))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | _GLF_IDENTITY((7), ~ (~ ((7))))), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | _GLF_IDENTITY((7), ~ (_GLF_IDENTITY(~ ((7)), (~ ((7))) ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0 | (_GLF_IDENTITY(7, (7) | _GLF_IDENTITY((7), ~ (~ ((7)))))))) / 1)), min(int(_GLF_IDENTITY(7, (7) | (7))), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), (~ (7)) - 0)))) | (7))))))))) >> _GLF_IDENTITY(int(7), int(7))), int(int(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | _GLF_IDENTITY((7), ~ (~ ((7))))), (false ? _GLF_FUZZED((false ? 78034 : -5615)) : _GLF_IDENTITY(7, (7) | _GLF_IDENTITY((7), ~ (~ ((7))))))), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | _GLF_IDENTITY((7), ~ (~ ((7))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | _GLF_IDENTITY((7), ~ (~ ((7))))), (0 | 0) | (_GLF_IDENTITY(7, (7) | _GLF_IDENTITY((7), ~ (~ ((7)))))))))) / 1)), min(int(_GLF_IDENTITY(7, (7) | (7))), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), (~ (7)) - 0)))) | (7))), ~ (~ (int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), (~ (7)) - 0)))) | (7)))))))))))) >> _GLF_IDENTITY(int(7), int(7)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, 1))); _injected_loop_counter ++)
          {
           return;
          }
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))));
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(1.0, 1.0 * (1.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(atanh(-26.40)) : 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0), mat4(1.0) * (mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp(_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))), (0.0), (0.0))) / 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(842.688, -353.622, 4.6, 532.924).w)), float(0.0), bool(true)))) + _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(1.0, 1.0 * (1.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(atanh(-26.40)) : 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0), mat4(1.0) * (mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp(_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))), (0.0), (0.0))) / 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(842.688, -353.622, 4.6, 532.924).w)), float(0.0), bool(true)))) + _GLF_ZERO(0.0, injectionSwitch.x)))))) * mat2(1.0), ((vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(1.0, 1.0 * (1.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(atanh(-26.40)) : 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0), mat4(1.0) * (mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp(_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))), (0.0), (0.0))) / 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(842.688, -353.622, 4.6, 532.924).w)), float(0.0), bool(true)))) + _GLF_ZERO(0.0, injectionSwitch.x)))))) * mat2(1.0)) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-77.89, (true ? _GLF_IDENTITY(-77.89, min(-77.89, -77.89)) : _GLF_FUZZED(-5.1)))) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-77.89, (true ? _GLF_IDENTITY(-77.89, min(-77.89, -77.89)) : _GLF_FUZZED(-5.1)))) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-77.89, (true ? _GLF_IDENTITY(-77.89, min(-77.89, -77.89)) : _GLF_FUZZED(-5.1)))) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))).x, (false ? _GLF_FUZZED(cos(-1.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-77.89, (true ? _GLF_IDENTITY(-77.89, min(-77.89, -77.89)) : _GLF_FUZZED(-5.1)))) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-77.89, (true ? _GLF_IDENTITY(-77.89, min(-77.89, -77.89)) : _GLF_FUZZED(-5.1)))) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-77.89, (true ? _GLF_IDENTITY(-77.89, min(-77.89, -77.89)) : _GLF_FUZZED(-5.1)))) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)))).x)))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(4.8), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-513.048)), bvec2(true, false)))).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), max(1.0, 1.0))) / 1.0), 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0), log(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(538.135) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))), 1.0))), abs(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)), (mat3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8505.1542) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)), determinant(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)))))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)))))), mix(float(cos(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false))))))), float(_GLF_FUZZED(-631.627)), bool(false)))) / 1.0)), (false ? _GLF_FUZZED(mat4(72.62, 67.10, 597.462, -7628.1675, 4.9, 5.4, -243.377, 8295.2190, 2062.5672, -1.4, -24.70, 9078.6962, -1.0, 5.2, 3.9, 2.0)) : mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)))))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)))))), mix(float(cos(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false))))))), float(_GLF_FUZZED(-631.627)), bool(false)))) / 1.0))))), 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))))), ((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))))))) / 1.0), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))))))) / 1.0), 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0), log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(reflect(2.4, 6.7)))))), abs(0.0), 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY((mat3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8505.1542) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8505.1542) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8505.1542) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0, 1.0)), determinant(mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(90.44) : 0.0)), 0.0, cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)), (_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)), (mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false))) * 1.0)) / 1.0))), max(_GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)))), max(min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)))), min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)))))), min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)))))))))), 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)), ((mat3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8505.1542) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8505.1542) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8505.1542) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0, 1.0)), determinant(mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(90.44) : 0.0)), 0.0, cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)), (_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)), (mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false))) * 1.0)) / 1.0))), max(_GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)))), max(min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)))), min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)))))), min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6128.2764)), bool(false)))))))))), 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ((true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ((true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY((true), ((true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false))))))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-52881)), (_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-52881)), ~ (~ ((true ? 4 : _GLF_FUZZED(-52881)))))) | ((true ? 4 : _GLF_FUZZED(-52881))))), 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.0)), bool(false)))))))) && true))))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, max(injectionSwitch.y, injectionSwitch.y))) * exp(0.0)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) - 0.0), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), max(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), dot(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-53.66))), 1.0, 1.0), vec3(0.0, 0.0, 0.0))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.9) : injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0))), _GLF_FUZZED((true ? 6.8 : 164.950))), vec2(_GLF_FUZZED(5945.6024), (injectionSwitch)[1]), bvec2(false, true))).y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y))) * exp(0.0))), float(mat2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.9) : injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0))), _GLF_FUZZED((true ? 6.8 : 164.950))), vec2(_GLF_FUZZED(5945.6024), (injectionSwitch)[1]), bvec2(false, true))).y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y))) * exp(0.0))), 0.0, 1.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) - 0.0)) / 1.0))))))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), (_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, 0 ^ (1)), 0)))) / 1))) == _GLF_IDENTITY(read_2, 1u * (read_2))) + 1, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) | _GLF_IDENTITY(0, (0) | (0)))), clamp((_GLF_IDENTITY(64, (64) | _GLF_IDENTITY(0, (0) | (0)))), (_GLF_IDENTITY(64, (64) | _GLF_IDENTITY(0, (0) | (0)))), (_GLF_IDENTITY(64, (64) | _GLF_IDENTITY(0, (0) | (0)))))))) ^ 0), 4);
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
