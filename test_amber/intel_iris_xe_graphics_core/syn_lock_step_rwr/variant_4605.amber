#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 bvec3 _f0;
 bvec2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 mat2 _f1;
 mat3 _f2;
 mat3 _f3;
 uint _f4;
} ;

struct _GLF_struct_14 {
 uint read_1;
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 vec2 _f1;
 uvec2 _f2;
 uvec3 _f3;
 vec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 bvec2 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
} ;

struct _GLF_struct_17 {
 vec3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_16 _f4;
} ;

struct _GLF_struct_2 {
 int _f0;
 mat3x2 _f1;
 uvec2 _f2;
 int _f3;
 mat2 _f4;
 bvec2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 float _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 uint read_2;
 _GLF_struct_3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_13next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size;
 uvec4 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size;
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_13next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.y = GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_13next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.z = GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.y;
uint subgroup_size = 16;
 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_13next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w = GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_13next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.w;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_13next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z = subgroup_local_id;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.z = GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_13next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.z;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.w = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.w;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.z * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w + GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.z;
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.z * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w + ((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.w);
 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_13next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.x = next_virtual_gid;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(vec3(1.0), _GLF_struct_5(uvec3(1u)), _GLF_struct_11(_GLF_struct_6(mat4x2(1.0), vec2(1.0), uvec2(1u), uvec3(1u), vec2(1.0), mat3(1.0)), _GLF_struct_7(ivec3(1)), bvec2(true), _GLF_struct_8(mat4x2(1.0)), _GLF_struct_9(ivec3(1), mat3x4(1.0)), _GLF_struct_10(mat3x2(1.0), bvec2(true))), _GLF_struct_14(atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_12(uvec4(1u), mat2(1.0), mat3(1.0), mat3(1.0), 1u), _GLF_struct_13(vec3(1.0), mat2(1.0))), _GLF_struct_16(_GLF_struct_15(bvec3(true), bvec2(true), mat2x4(1.0)), mat2x3(1.0)));
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.x = _GLF_struct_replacement_17._f3.read_1;
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.y = GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_1subgroup_idsubgroup_local_idsubgroup_size.x;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_13next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.x], uint(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.y + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(_GLF_struct_0(1.0, ivec4(1))), atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_3(_GLF_struct_2(1, mat3x2(1.0), uvec2(1u), 1, mat2(1.0), bvec2(true), uvec4(1u))));
 atomicStore(buf[GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_13next_virtual_gidsubgroup_idsubgroup_local_idsubgroup_size.x], uint(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.y + 1 == _GLF_struct_replacement_4.read_2) + 1, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
