#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uvec4 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid;
 uvec4 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base;
 uvec3 GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy = GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id;
 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz = GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.z = subgroup_id;
 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.y = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 1.0, 1.0, abs(0.0))), dot(vec4(1.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 1.0, 1.0, abs(0.0))))) < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
    }
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  barrier();
 GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.z = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x = _GLF_IDENTITY(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.z, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.z), (0u ^ 0u) ^ (~ (GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.z)))));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.y = num_workgroup, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.y = num_workgroup)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.y = num_workgroup, (true ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.y = num_workgroup : _GLF_FUZZED(num_workgroup)))), 0u ^ (0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.y = num_workgroup, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.y = num_workgroup, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.y = num_workgroup))) : _GLF_FUZZED(num_workgroup)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.x = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.y;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], min(_GLF_IDENTITY(gl_WorkGroupSize[1], min(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[1])), (_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize[1], min(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[1]), 1u * (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize[1], min(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[1]), max(min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) << 0u))), min(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[1]), min(_GLF_IDENTITY(gl_WorkGroupSize[1], min(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[1]))))))) / 1u), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(2, (2) ^ 0)))) | (2))) >> 0)])).x, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), (~ (~ (gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (1))], gl_WorkGroupSize[2])).x, 1u, 0u)));
 GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.y = workgroup_size;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y = _GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.z = GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y;
 uint workgroup_base = GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.y * GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.z;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0)))))) * cos(0.0)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w + GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.y * GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base), clamp(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base), uvec4(0u, 0u, 0u, 0u) ^ ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base))), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base))) * uvec4(1u, 1u, 1u, 1u)).w + GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.y * GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, _GLF_IDENTITY(0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w + GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.y * _GLF_IDENTITY(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, max(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x))), min(0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w + _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.y * GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, 0u | (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.y * GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x))), 0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz) + uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u)).y, uint(uint(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz) + uvec3(0u, 0u, 0u)).y))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy, max(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy, GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy)).x, 0u | (_GLF_IDENTITY(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy, max(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy, GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy)).x))))))) * 1u), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)).y, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)).y), (~ (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)).y)) ^ 0u))) * _GLF_IDENTITY(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy, (GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy) | uvec2(0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base), clamp(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base), uvec4(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u) ^ ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base))), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base))) * uvec4(1u, 1u, 1u, 1u)).w + GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.y * GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, _GLF_IDENTITY(0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w + GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, max(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x)), (_GLF_IDENTITY(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, max(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x))) * 1u)), min(0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w + _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.y * GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, 0u | (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.y * GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x))), 0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w + _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.y * _GLF_IDENTITY(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy, max(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy, GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy)).x, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy, (GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy) - uvec2(0u, 0u)), max(GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy, GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy)).x) | (0u | 0u))))))) * 1u)) << _GLF_IDENTITY(0u, ~ (~ (0u)))) + subgroup_local_id;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, true, true))))))), true, false)))))
    barrier();
   barrier();
  }
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.x = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), min(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz, ~ (~ (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz))), (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz) << uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u)), 0u, 0u)).y * GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) + _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz) << uvec3(0u, 0u, 0u)).y * GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.w)) + _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.xyz) << uvec3(0u, 0u, 0u)).y * GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), ((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))) | ((1)))), ((~ _GLF_IDENTITY((1), ((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))) | ((1))))) ^ 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(subgroup_local_id)))))) | 0u)), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))))) << 0u))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(subgroup_local_id)))))) | 0u))) >> (0u & 90843u))) % GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.w = next_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x = GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.w, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x = GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.w, (false ? _GLF_FUZZED(128086u) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x = GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.w, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x = GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x = GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_idnext_virtual_gid.w) / 1u) : _GLF_FUZZED(workgroup_base)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.9) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0)))))))))))
  return;
 buf[GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.x] = 1;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, (_GLF_IDENTITY((subgroup_local_id) - 0u, clamp(_GLF_IDENTITY((subgroup_local_id) - 0u, 1u * ((subgroup_local_id) - 0u)), (subgroup_local_id) - 0u, (subgroup_local_id) - 0u))) ^ 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))), 0, 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))), 0, 1))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))), 0, 1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))), 0, 1)) | ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) < GLF_merged2_0_2_52_2_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizesubgroup_size.xy.x)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), true)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, abs(1.0), 1.0, 0.0, exp(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, cos(0.0), determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, cos(0.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, cos(0.0), 1.0))), 0.0, 0.0)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat2x4(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(88.62, 2.2)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false))), false, true)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) + vec2(0.0, 0.0)), (mat2(1.0) * ((injectionSwitch) + vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.1)), bool(false))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0))) - vec2(0.0, 0.0)), vec2(vec2(_GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0)), (mat2(1.0) * ((injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(unpackUnorm2x16(subgroup_local_id)) : (injectionSwitch))) + vec2(0.0, 0.0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(1.0, 1.0, sqrt(1.0), 0.0)), dot(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(1.0, 1.0, sqrt(1.0), 0.0))), length(cross(vec3(-66.75, 1496.3983, -0.4), vec3(-66.75, 1496.3983, -0.4))), 1.0, cos(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0)))), max((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, cos(0.0), 0.0, log(1.0))), (float(mat3x2(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, cos(0.0), 0.0, log(1.0)))) / 1.0)))), 0.0, 0.0, 1.0), vec4(1.0, 1.0, sqrt(1.0), 0.0)), dot(vec4(length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(1.0))), 0.0, 0.0, 1.0), vec4(1.0, 1.0, sqrt(1.0), 0.0))), length(cross(vec3(-66.75, 1496.3983, -0.4), vec3(-66.75, 1496.3983, -0.4))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(199.553))), _GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0), cos(0.0))), length(vec3(0.0, 0.0, 0.0)), 1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(1.0, 1.0, sqrt(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(1.0, 1.0, sqrt(1.0), 0.0)), (dot(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)) : _GLF_FUZZED(2.9))), 0.0, 1.0), vec4(1.0, 1.0, sqrt(1.0), 0.0))) - 0.0)), length(_GLF_IDENTITY(cross(vec3(-66.75, 1496.3983, -0.4), vec3(-66.75, 1496.3983, -0.4)), min(_GLF_IDENTITY(cross(vec3(-66.75, 1496.3983, -0.4), vec3(-66.75, 1496.3983, -0.4)), mix(vec3(_GLF_FUZZED(-6119.5304), _GLF_FUZZED(-8.8), _GLF_FUZZED(-26.66)), vec3((cross(vec3(-66.75, 1496.3983, -0.4), vec3(-66.75, 1496.3983, -0.4)))[0], (cross(vec3(-66.75, 1496.3983, -0.4), vec3(-66.75, 1496.3983, -0.4)))[1], (cross(vec3(-66.75, 1496.3983, -0.4), vec3(-66.75, 1496.3983, -0.4)))[2]), bvec3(true, true, true))), cross(vec3(-66.75, 1496.3983, -0.4), vec3(-66.75, 1496.3983, -0.4))))), 1.0, cos(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0)))))) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY((mat2(1.0) * ((injectionSwitch))) / vec2(1.0, 1.0), ((mat2(1.0) * ((injectionSwitch))) / vec2(1.0, 1.0)) * mat2(1.0)))) + vec2(0.0, 0.0))))))) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true, false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(91.26)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), bvec2(true, true))).x, 0.0, 1.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y))))))
    barrier();
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_base.x], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), int(int(_GLF_IDENTITY(4, max(4, 4))))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(719.133)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      return;
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))) && true))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true))) && true)))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-58.67, 1.2)) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-58.67, 1.2)) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
