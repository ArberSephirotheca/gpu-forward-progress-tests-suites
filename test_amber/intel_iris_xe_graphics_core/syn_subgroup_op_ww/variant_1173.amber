#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-636.738), _GLF_FUZZED(62.03)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))), false || (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1])))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, (0.0) / abs(1.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(exp2(-4.7))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((340.084)), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((340.084), mix(float(_GLF_FUZZED(33.16)), float(_GLF_IDENTITY((340.084), float(mat3x2((340.084), 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true)))), mix(float(_GLF_FUZZED((_GLF_IDENTITY(340.084, mix(float(_GLF_FUZZED(-2.9)), float(340.084), bool(true)))))), float(_GLF_FUZZED(30.92)), bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))), _GLF_FUZZED((340.084))))), max(float(_GLF_IDENTITY(_GLF_FUZZED((340.084)), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((340.084), mix(float(_GLF_FUZZED(33.16)), float(_GLF_IDENTITY((340.084), float(mat3x2((340.084), 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true)))), mix(float(_GLF_FUZZED((340.084))), float(_GLF_FUZZED(30.92)), bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))), _GLF_FUZZED((340.084))))), float(_GLF_IDENTITY(_GLF_FUZZED((340.084)), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((340.084), mix(float(_GLF_FUZZED(33.16)), float(_GLF_IDENTITY((340.084), float(mat3x2((340.084), 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(true)))), mix(float(_GLF_FUZZED((340.084))), float(_GLF_FUZZED(30.92)), bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))))), _GLF_FUZZED((340.084))))))), bool(false))), mix(float(_GLF_FUZZED(float(6146u))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0), max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(7.9) : float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(true))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch)).y)) * (injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))), (false ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(exp(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) * 1.0), mix(float(_GLF_FUZZED(float(6146u))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(7.9), min(_GLF_IDENTITY(_GLF_FUZZED(7.9), (_GLF_FUZZED(7.9)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(7.9), (_GLF_FUZZED(7.9)) - 0.0))) : float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(true), (bool(true)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(5.9, 707.442)))).x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) || (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-88.61))), (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-62.85)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), max(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), max(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))), 1.0, tan(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(4.7) : determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0 + (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), max(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, tan(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2010.0106)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(26.87)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0)), max(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), length(vec4(0.0, 0.0, 0.0, 0.0)) + (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))), 1.0, tan(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), max(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, tan(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (true ? _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) * 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (true ? _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-59.29)), bool(false))))) : _GLF_FUZZED(acos(9.0)))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) : _GLF_FUZZED(length(vec3(99.71, -1046.1517, -2.1))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-707.136), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1032.1351)), bvec2(true, false)))), clamp(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-707.136), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1032.1351)), bvec2(true, false)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-707.136), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1032.1351)), bvec2(true, false)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-707.136), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1032.1351)), bvec2(true, false))))))).y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-707.136), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1032.1351)), bvec2(true, false))))).y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-707.136), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1032.1351)), bvec2(true, false)), (true ? mix(vec2(_GLF_FUZZED(-707.136), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1032.1351)), bvec2(true, false)) : _GLF_FUZZED(injectionSwitch)))))).y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-707.136), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1032.1351)), bvec2(true, false))))).y))), clamp(clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((7719.0866 / injectionSwitch)))).y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), (exp(0.0) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(6146u))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) : _GLF_FUZZED(-938.729))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true), ! (! (false))) ? _GLF_FUZZED(7.9) : float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(10.73), _GLF_FUZZED(-0.1)), bvec2(false, false)))).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(10.73), _GLF_FUZZED(-0.1)), bvec2(false, false)))).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), mix(float(_GLF_FUZZED(962.511)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(10.73), _GLF_FUZZED(-0.1)), bvec2(false, false)))).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), bool(true)))) / 1.0)))), bool(true))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(sin(sqrt(0.0)), (false ? _GLF_FUZZED(-902.368) : _GLF_IDENTITY(sin(sqrt(0.0)), (false ? _GLF_FUZZED(-5762.9160) : sin(sqrt(0.0)))))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-0.5), clamp(true ? injectionSwitch.y : _GLF_FUZZED(-0.5), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y : _GLF_FUZZED(-0.5), (true ? true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-0.5) : _GLF_FUZZED(98.10))), true ? injectionSwitch.y : _GLF_FUZZED(-0.5))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) + 0.0) < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-6881.4202))), injectionSwitch.y)), min(clamp(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6756.3985)), bool(false)))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), float(_GLF_FUZZED(4.0)), bool(false))), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.5))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) * vec2(1.0, 1.0)), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.5))), injectionSwitch.y, injectionSwitch.y))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(6146u, uint(uvec3(6146u, 0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[1], float(mat4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(-938.729))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(7.9) : float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.2) : injectionSwitch.y))) + 0.0), injectionSwitch.y))))))), bool(true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-0.5, min(-0.5, -0.5))))), injectionSwitch.y, injectionSwitch.y)), min(clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.5))), injectionSwitch.y, injectionSwitch.y)), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), min(vec3(injectionSwitch.y, 1.0, 1.0), vec3(injectionSwitch.y, 1.0, 1.0))))), 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(59.45)), float(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), min(vec3(injectionSwitch.y, 1.0, 1.0), vec3(injectionSwitch.y, 1.0, 1.0))))), 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0))), bool(true))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-101.883), _GLF_FUZZED(-2.1)), bvec2(false, false))).y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(-0.5))), injectionSwitch.y, injectionSwitch.y))))))) : _GLF_FUZZED(77.67)))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (true ? (0.0) : _GLF_FUZZED(8863.3158))) - _GLF_ZERO(0.0, injectionSwitch.x))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.2)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-3313.5547, 64.39), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(-3313.5547, 64.39)))))).x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) : _GLF_FUZZED(-7732.0936))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-7732.0936, clamp(_GLF_IDENTITY(-7732.0936, (_GLF_IDENTITY(-7732.0936, float(vec2(-7732.0936, 1.0)))) + 0.0), -7732.0936, -7732.0936))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) && true))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), false))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), false)))))))))), (bool(false)) || false)), true, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), false))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), false)))))))))), (bool(false)) || false)), true, false, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), false))), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), false)))) && true))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), false)))))))))), (bool(false)) || false)), true, false, false)))) && true)))))))), ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) << 0)))) | ((1))))])).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0))))), injectionSwitch)))), injectionSwitch)).x, (false ? _GLF_FUZZED(272.457) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, tan(0.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0))))), injectionSwitch)))), injectionSwitch)).x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.0, -0.8)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.1), _GLF_FUZZED(7242.7458)), bvec2(false, false))), injectionSwitch)))).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.0, -0.8)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.1), _GLF_FUZZED(7242.7458)), bvec2(false, false))), injectionSwitch)))).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false)))), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.0, -0.8)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.1), _GLF_FUZZED(7242.7458)), bvec2(false, false))), injectionSwitch)))).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false)))), false, false), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), true)), true)))))))), ! (! (bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((922.984 * vec2(68.52, 505.522))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
