#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(23.33)), bool(false))), injectionSwitch.x)) > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y) || false), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0)), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))) / vec2(1.0, 1.0))).y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, true && (false)))), (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, true && (false)))), (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, true && (false)))), (false) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-5.4), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(483.765)), bvec2(true, false)))).x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false))) || false, ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-5.4), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_IDENTITY(_GLF_FUZZED(483.765), mix(float(_GLF_FUZZED(483.765)), float(_GLF_FUZZED(-5.0)), bool(false)))), bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), false)))).x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false))) || false)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false))))) && true), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false))))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false))))) && true))), false, true))) || false)), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))) || (_GLF_IDENTITY(false, (false) || false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true) || (_GLF_IDENTITY(false, (false) || false)))), true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), (! ((false) || false)) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))))) || (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch)).y))))))) || (_GLF_IDENTITY(false, (false) || false))))))) && true), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false))))) && true), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false))))) && true), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))) || false)), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))) || (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(7.8) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(56225)), _GLF_FUZZED((+ -76.11))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x < injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, abs(1.0), 1.0, 0.0, tan(0.0), 1.0), (mat3x2(injectionSwitch.y, abs(1.0), 1.0, 0.0, tan(0.0), 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch.y)))))))) || (_GLF_IDENTITY(false, (false) || false))))) && true), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false) || (_GLF_IDENTITY(false, (false) || false)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_IDENTITY(false, (false) || false))))) && true), false, true))) || false)), true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, false, false)), true, false, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), (! (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) && true)))), bool(bvec4(bool(bool(false)), false, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), 1u * (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), ((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) << 0u)) - 0u)))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | 0u))) | 0u))))) : _GLF_FUZZED(workgroup_id))))))), ~ (~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))) / 1u))) | (subgroup_local_id)), 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)))) - 0u), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))) / 1u))) | (subgroup_local_id)), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u | (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))) / 1u))) | (subgroup_local_id)), 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))))))))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (1u) | 0u), 0u, (1u & 1u), 1u))), ((subgroup_local_id) / 1u) | ((subgroup_local_id) / 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(workgroup_id) : uint(2u))))) ^ ((subgroup_local_id) * 1u)))) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))) << 0u))))) << 0u) | 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) : _GLF_FUZZED(workgroup_size)))) * 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (1u ^ 1u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) << 0u) | 0u), 1u, 1u)))), uint(uvec2(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(workgroup_id) : uint(2u))))) ^ ((subgroup_local_id) * 1u)))) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))) << 0u))))) << 0u) | 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) : _GLF_FUZZED(workgroup_size)))) * 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (1u ^ 1u)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) << 0u) | 0u), 1u, 1u)))), 1u))), (max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)), clamp((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))) / 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / 1u, max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / 1u, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / 1u))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / _GLF_IDENTITY(1u, (1u) << 0u)))), 0u, 1u, 0u))) | 0u)))) | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))) / 1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id)))))), (subgroup_local_id)), (_GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id)))))), (subgroup_local_id)), uint(uvec2(min(_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id)))))), (subgroup_local_id)), (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))) ^ 0u)) / 1u)))), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) << 0u) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id)))))), (subgroup_local_id)), (_GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id)))))), (subgroup_local_id)), uint(uvec2(min(_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id)))))), (subgroup_local_id)), (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))) ^ 0u)) / 1u)))), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) << 0u) | 0u) ^ 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))) ^ 0u)), min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | _GLF_IDENTITY(((subgroup_local_id)), min(((subgroup_local_id)), ((subgroup_local_id))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | _GLF_IDENTITY(((subgroup_local_id)), min(((subgroup_local_id)), ((subgroup_local_id))))) / 1u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | _GLF_IDENTITY(((subgroup_local_id)), min(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), ((subgroup_local_id))))) / 1u)) | 0u)) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) << 0u) | 0u), 1u, 1u)), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))) ^ 0u)), min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | _GLF_IDENTITY(((subgroup_local_id)), min(((subgroup_local_id)), ((subgroup_local_id))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | _GLF_IDENTITY(((subgroup_local_id)), min(_GLF_IDENTITY(((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) << 0u)) / (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u)), ((subgroup_local_id))))) / 1u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | _GLF_IDENTITY(((subgroup_local_id)), min(((subgroup_local_id)), ((subgroup_local_id))))) / 1u)) | 0u)) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (subgroup_local_id), ~ (~ (_GLF_IDENTITY(0u + (subgroup_local_id), (0u + (subgroup_local_id)) | (0u + (subgroup_local_id))))))), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) << 0u) | 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))) | 0u), subgroup_local_id)))) ^ 0u)), min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u | _GLF_IDENTITY(((subgroup_local_id)), min(((subgroup_local_id)), ((subgroup_local_id))))), uint(uvec3(_GLF_IDENTITY((subgroup_local_id), 0u | _GLF_IDENTITY(((subgroup_local_id)), min(((subgroup_local_id)), ((subgroup_local_id))))), 1u, 1u))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), min(((subgroup_local_id)), ((subgroup_local_id))))) / 1u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u | _GLF_IDENTITY(((subgroup_local_id)), min(((subgroup_local_id)), ((subgroup_local_id))))) / 1u, (_GLF_IDENTITY((subgroup_local_id), 0u | _GLF_IDENTITY(((subgroup_local_id)), min(((subgroup_local_id)), ((subgroup_local_id))))) / 1u) / ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) | 0u)) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) >> (122617u & 0u)))))) << 0u) | 0u), 1u, 1u))))))) - 0u))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u)), ((_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) >> 0u)), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | 0u), subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec3(min(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_id * subgroup_size), 1u, (0u | 0u))), (uint(_GLF_IDENTITY(uvec3(min(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size), 1u, (0u | 0u)), max(uvec3(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size), 1u, (0u | 0u)), _GLF_IDENTITY(uvec3(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size), 1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))) ^ (0u)) | 0u)), ~ (~ (_GLF_IDENTITY(uvec3(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size), 1u, (0u | 0u)), _GLF_IDENTITY(uvec3(uvec3(uvec3(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size), 1u, (0u | 0u)))), (true ? uvec3(uvec3(uvec3(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size), 1u, (0u | 0u)))) : _GLF_FUZZED(uvec3(72280u, 162858u, 138605u)))))))))))) ^ 0u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) | (subgroup_local_id + 1))) % subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, (true ? (0u) | 0u : _GLF_FUZZED(virtual_gid)))), 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) >> 0u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, ~ (~ (1))), (buf[virtual_gid] = 1) ^ 0u);
 if(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(int(1))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   switch(_GLF_SWITCH(0))
    {
     case 41:
     ;
     case 0:
     case 16:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))))).y, injectionSwitch.y))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(8.5, 41.92)), max(_GLF_FUZZED(vec2(8.5, 41.92)), _GLF_FUZZED(vec2(8.5, 41.92)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[1], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[1]) - 0.0)), vec2(_GLF_FUZZED(-4854.3190), _GLF_FUZZED(1.0)), bvec2(false, false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(vec2(8.5, 41.92)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(8.5, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-81.77) : _GLF_IDENTITY(8.5, clamp(8.5, 8.5, 8.5)))), 41.92)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(mat2(1.0) * (injectionSwitch), 1.0, _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(length(normalize(vec2(1.0, 1.0)))), float(_GLF_FUZZED(7.5)), bool(false)))))), float(mat2(round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))), 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), max(vec2(mat4x3(mat2(1.0) * (injectionSwitch), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat2(round(length(normalize(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(736.104) : 1.0)), 1.0)))), 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, exp(0.0), 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 1.0, 0.0, 1.0)), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat2(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))) + vec2(0.0, 0.0))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), max(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) + vec2(0.0, 0.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0)))) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) + vec2(0.0, 0.0))).x), float(_GLF_FUZZED(_GLF_IDENTITY(5.4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 5.4 : _GLF_FUZZED(95.14))))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), max(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) + vec2(0.0, 0.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0)))) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) + vec2(0.0, 0.0))).x), float(_GLF_FUZZED(_GLF_IDENTITY(5.4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 5.4 : _GLF_FUZZED(95.14))))), bool(false)))) * 1.0)) * 1.0) > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, bool(bool(true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, bool(bool(true))))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(true, bool(bool(true))))), false))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, bool(bool(true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, bool(bool(true))))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(true, bool(bool(true))))), false))))))), false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 94:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(26.65) : injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, 2))) >> 0), (2) | (2)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) | (2)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (2) | (2)))), 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), 1 * (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), 1 * (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))))), int(ivec2(~ (_GLF_IDENTITY(int(4), 1 * (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))))), 1)))) - 0))), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) | ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ _GLF_IDENTITY((~ (int(4))), ((~ (int(4)))) | ((~ (int(4)))))))))), 1), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) | (2)), 0 | (_GLF_IDENTITY(2, (2) | (2)))), 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) | ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))))), 1), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) | (2)), 0 | (_GLF_IDENTITY(2, (2) | (2)))), 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(_GLF_IDENTITY(4, min(4, 4))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ _GLF_IDENTITY((int(4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((int(4)), 1 * ((int(4)))) : _GLF_FUZZED(min(90916, ivec2(-92974, 90629)[1])))))))))), 1), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) | (2)), 0 | (_GLF_IDENTITY(2, (2) | (2)))), 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-5074.2818, -38.36)) : mat2(1.0) * (injectionSwitch)))).x)) | ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))), min(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))))))), 1))), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), _GLF_IDENTITY(0 | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) / 1) | (2))), max(0 | (_GLF_IDENTITY(2, (2) | (2))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(2, (2) | (2))), (0 | (_GLF_IDENTITY(2, (2) | (2)))) - 0)))), 0, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) * 1))))))), 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     case 61:
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], 0.0 + (injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.6), _GLF_FUZZED((9.0 / 94.01))), bvec2(false, false)))[1])).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])).x > injectionSwitch.y, true, false, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 2:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     case 70:
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec3(! (! (false)), true, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), false, true))), false || (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), true && (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), true && (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))) && true, ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))) && true) && true), true, true, false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))))))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false || (bool(bvec2(false, false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x2(vec2(0.0, 0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))), false, true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false), false, true))))))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), false), bvec2(bvec4(bvec2(! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(false)) || false))))), false), bvec2(bvec4(bvec2(! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), false), false, true)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     break;
     case 8:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      barrier();
     ivec3 _GLF_SWITCH_0_0v;
     if(_GLF_DEAD(false))
      barrier();
     case 23:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), true && ((! (false)))), true), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, true)), false, true, true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY((! (false)), true && ((! (false)))), true), false)))), true)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     ;
     default:
     if(_GLF_DEAD(false))
      barrier();
     1;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))) || false)))))) && true))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), true && ((false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((false), true && ((false))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((false), true && ((false))), true)), true, false)))))))))))))))), ! (! ((! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), true && ((false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((false), true && ((false))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((false), true && ((false))), true)), true, false))))))))))))))))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(bvec3(true && (false), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-7.5, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(faceforward(-6491.0949, 9.3, -5881.4616)) : -7.5))), min(_GLF_FUZZED(-7.5), _GLF_FUZZED(-7.5)))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.1, (false ? _GLF_FUZZED(-8.6) : -2.1))), _GLF_FUZZED(799.765)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))) && true)))), false))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), vec4(0.0, sqrt(0.0), 0.0, 1.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), vec4(0.0, sqrt(0.0), 0.0, 1.0))), 0.0, 0.0, abs(1.0), 1.0, tan(0.0), 1.0))))[1] : _GLF_IDENTITY(_GLF_FUZZED(-7.5), min(_GLF_FUZZED(-7.5), _GLF_FUZZED(-7.5)))))), vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(799.765)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false), true && (false || (false)))))))))
    barrier();
   switch(_GLF_SWITCH(0))
    {
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-80.91))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2624.2343)))))), vec4(1.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (vec4(1.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0, log(1.0), 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5609.8194) : 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0))), float(_GLF_FUZZED(-21.79)), bool(false))), dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0))) - 0.0)), 0.0, 1.0, round(length(normalize(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), transpose(transpose(mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5609.8194) : 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0))) - 0.0)), 0.0, 1.0, round(length(normalize(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))))))))))))))), abs(1.0))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false))))))), bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     case 84:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true, false)), (bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false))) || false)), false, true)))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(false, true && (false))))), true && (((! (_GLF_IDENTITY(false, true && (false))))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 85:
     atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)))), ~ (~ _GLF_IDENTITY((next_virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))], uint(2), _GLF_IDENTITY(4, (0 ^ 0) | (4)), 64, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(max(4, 4), (max(4, 4)) - 0)))));
     if(_GLF_DEAD(false))
      barrier();
     case 81:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && true)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && true)), true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 18:
     case 10:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 51:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     case 33:
     if(_GLF_DEAD(false))
      barrier();
     case 29:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, log(1.0), log(1.0), 0.0))), 1.0, 0.0, _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, exp(0.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0), (mat4x3(injectionSwitch.y, 1.0, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0), (mat4(0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), clamp(float(_GLF_IDENTITY(mat4(0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0), (mat4(0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat4(0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0), (mat4(0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0), (mat4(0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(mat2x4(float(_GLF_IDENTITY(mat4(0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0), (mat4(0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sqrt(0.0), 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-25.37)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(5.4)), float(injectionSwitch.y), bool(true))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), (bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))) && true))))), _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false), _GLF_IDENTITY(false, ! (! (false)))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false), _GLF_IDENTITY(false, ! (! (false)))))), true)))), true)))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false))))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true), false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-23.30) : injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-27.40)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))), true))), false))))))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false, false, _GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))), injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))) || false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)), false))))), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), abs(sqrt(1.0)) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-7.8)), float(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, injectionSwitch.y)))), bool(true)))))))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-10.06))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false, false, _GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false, false, _GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false, false, _GLF_IDENTITY(false, true && (false))))) || false)))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false, false, _GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false, false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))))), (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false, false, _GLF_IDENTITY(false, true && (false)))))) && true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     default:
     1;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
