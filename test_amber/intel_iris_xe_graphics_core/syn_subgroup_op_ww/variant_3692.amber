#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))))), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)))) + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   do
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       case 34:
       case 43:
       case 13:
       case 8:
       case 95:
       case 65:
       case 79:
       case 62:
       case 98:
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), (bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))) && true))); _injected_loop_counter ++)
        {
         switch(_GLF_SWITCH(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0))))))
          {
           case 86:
           uint _GLF_SWITCH_0_0v;
           case 79:
           while((_GLF_IDENTITY(true != (mat4x2(-6.7, 40.74, 7.6, 410.261, 24.59, 38.58, 89.76, 3.8) != mat4x2(0.3, -27.33, 2.0, _GLF_IDENTITY(-88.62, mix(float(-88.62), _GLF_IDENTITY(float(_GLF_FUZZED(-915.104)), float(mat2x3(float(_GLF_FUZZED(-915.104)), abs(1.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(bool(false), (bool(false)) && true))), 9.0, 314.794, 7.9, 1.5)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true != (mat4x2(-6.7, 40.74, 7.6, 410.261, 24.59, 38.58, 89.76, 3.8) != mat4x2(0.3, _GLF_IDENTITY(-27.33, max(-27.33, -27.33)), _GLF_IDENTITY(2.0, 0.0 + (2.0)), -88.62, 9.0, 314.794, 7.9, 1.5)), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))))) != (_GLF_IDENTITY(mat4x2(-6.7, 40.74, 7.6, 410.261, _GLF_IDENTITY(24.59, (24.59) * 1.0), 38.58, 89.76, 3.8) != mat4x2(0.3, -27.33, 2.0, -88.62, 9.0, 314.794, 7.9, 1.5), bool(bvec3(mat4x2(_GLF_IDENTITY(-6.7, min(-6.7, -6.7)), 40.74, _GLF_IDENTITY(7.6, max(7.6, 7.6)), 410.261, 24.59, 38.58, 89.76, 3.8) != mat4x2(0.3, -27.33, 2.0, -88.62, 9.0, 314.794, 7.9, 1.5), true, true)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true)) != (mat4x2(-6.7, 40.74, 7.6, 410.261, 24.59, 38.58, 89.76, 3.8) != mat4x2(_GLF_IDENTITY(0.3, (0.3) - sqrt(0.0)), -27.33, 2.0, -88.62, 9.0, 314.794, 7.9, _GLF_IDENTITY(1.5, mix(float(1.5), float(_GLF_FUZZED(float(false))), bool(false)))))), false || (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) != _GLF_IDENTITY((mat4x2(-6.7, 40.74, 7.6, _GLF_IDENTITY(410.261, float(mat2x3(_GLF_IDENTITY(410.261, mix(float(410.261), float(_GLF_FUZZED(332.789)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0))), 24.59, 38.58, 89.76, 3.8) != mat4x2(_GLF_IDENTITY(0.3, max(0.3, 0.3)), -27.33, _GLF_IDENTITY(2.0, (true ? _GLF_IDENTITY(2.0, (false ? _GLF_FUZZED(42.18) : 2.0)) : _GLF_FUZZED(pow(-1458.1204, 7797.9806)))), -88.62, 9.0, 314.794, 7.9, 1.5)), bool(bvec3((mat4x2(-6.7, 40.74, 7.6, _GLF_IDENTITY(410.261, float(mat2x3(_GLF_IDENTITY(410.261, mix(float(410.261), float(_GLF_FUZZED(332.789)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0))), 24.59, 38.58, 89.76, 3.8) != mat4x2(_GLF_IDENTITY(0.3, max(0.3, 0.3)), -27.33, _GLF_IDENTITY(2.0, (true ? _GLF_IDENTITY(2.0, (false ? _GLF_FUZZED(42.18) : 2.0)) : _GLF_FUZZED(pow(-1458.1204, 7797.9806)))), -88.62, 9.0, 314.794, 7.9, 1.5)), false, true))))))) || false)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               ;
              }
             do
              {
               if(true)
                {
                 mat3 _GLF_SWITCH_0_1v[83], _GLF_SWITCH_0_2v;
                 unpackUnorm2x16(34903u);
                 mat2x3(-4.1, -2.3, -7.9, 5.2, 116.839, 5.8);
                 ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-92816, 44654, 6329, -60028), min(_GLF_IDENTITY(ivec4(-92816, 44654, 6329, -60028), (ivec4(-92816, 44654, 6329, -60028)) << ivec4(0, 0, 0, 0)), ivec4(-92816, 44654, 6329, -60028))), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-92816, 44654, 6329, -60028), min(_GLF_IDENTITY(ivec4(-92816, 44654, 6329, -60028), (ivec4(-92816, 44654, 6329, -60028)) << ivec4(0, 0, 0, 0)), ivec4(-92816, 44654, 6329, -60028))), min(_GLF_IDENTITY(ivec4(-92816, 44654, 6329, -60028), min(_GLF_IDENTITY(ivec4(-92816, 44654, 6329, -60028), (ivec4(-92816, 44654, 6329, -60028)) << ivec4(0, 0, 0, 0)), ivec4(-92816, 44654, 6329, -60028))), _GLF_IDENTITY(ivec4(-92816, 44654, 6329, -60028), min(_GLF_IDENTITY(ivec4(-92816, 44654, 6329, -60028), (ivec4(-92816, 44654, 6329, -60028)) << ivec4(0, 0, 0, 0)), ivec4(-92816, 44654, 6329, -60028)))))))[0], _GLF_IDENTITY(-94297, min(-94297, -94297)), -77466);
                 (mat4(mat2x4(-3.1, -0.8, _GLF_IDENTITY(94.05, (94.05) - 0.0), -2636.3382, -285.305, -4171.6689, -95.36, _GLF_IDENTITY(_GLF_IDENTITY(-2361.7776, (-2361.7776) / 1.0), (_GLF_IDENTITY(-2361.7776, _GLF_IDENTITY((-2361.7776), mix(float(_GLF_FUZZED((true ? 4302.4845 : -18.78))), float((-2361.7776)), bool(true))) / 1.0)) * 1.0))) , uvec3(76793u, 157838u, 11622u));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             mat4 _GLF_SWITCH_0_3v;
             vec4 _GLF_SWITCH_0_4v[68];
             if((8.0 < _GLF_IDENTITY(-9.5, min(-9.5, _GLF_IDENTITY(-9.5, _GLF_IDENTITY((-9.5), mix(float((-9.5)), float(_GLF_FUZZED(-6.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))
              {
               mat2x3 _GLF_SWITCH_0_5v;
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true))) && true))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) && true))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1170.2724)), float(injectionSwitch.x), bool(true))))))) < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true, false))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true))) && true))) && true)))))
                {
                 for(vec3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[61], _GLF_SWITCH_0_8v; true; subgroup_size)
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 0:
                     case 45:
                     case 34:
                     case 63:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       _GLF_IDENTITY(ivec2(46257, 67790), (_GLF_IDENTITY(ivec2(46257, 67790), ~ (~ _GLF_IDENTITY((ivec2(46257, 67790)), clamp((ivec2(46257, 67790)), (ivec2(46257, 67790)), (ivec2(46257, 67790))))))) - ivec2(0, 0));
                      }
                     case 32:
                     case 68:
                     case 48:
                     case 43:
                     case 10:
                     case 12:
                     vec3 _GLF_SWITCH_0_9v;
                     break;
                     case 16:
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                      {
                       mix(7459.7486, _GLF_IDENTITY(vec4(_GLF_IDENTITY(-1.8, (-1.8) - 0.0), -1.1, -768.721, 2.5).w, (vec4(-1.8, -1.1, -768.721, 2.5).w) / abs(_GLF_ONE(1.0, injectionSwitch.y))), -31.52);
                      }
                     else
                      {
                      }
                     default:
                     1;
                    }
                  }
                }
               else
                {
                }
              }
             else
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, exp(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(259.865)), float(1.0), bool(true))))), _GLF_IDENTITY(mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 1.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, exp(0.0), log(1.0)))), (mat4x3(mat4(mat4x3(injectionSwitch, 1.0, 1.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, exp(0.0), log(1.0))))) * mat4(1.0)))))[0], injectionSwitch[1])).x)), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), max((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0, (_GLF_IDENTITY(((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0, max(((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0, ((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0))) * 1)))) | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 ceil((vec3(57.48, -29.20, 4103.1446) + vec3(-938.109, -3.1, 3960.9451)));
                }
               (vec3(-828.965, _GLF_IDENTITY(5.7, min(_GLF_IDENTITY(5.7, max(5.7, 5.7)), _GLF_IDENTITY(5.7, 1.0 * (5.7)))), 813.138) + _GLF_IDENTITY(vec3(-5103.0709, 4.4, 23.41), mat3(1.0) * (vec3(-5103.0709, 4.4, 23.41))));
              }
             mat2(3050.5341, 2834.7202, _GLF_IDENTITY(-703.493, clamp(_GLF_IDENTITY(-703.493, _GLF_IDENTITY((true ? -703.493 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-2679.1825, max(_GLF_IDENTITY(-2679.1825, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-51.60) : -2679.1825)), -2679.1825)), (false ? _GLF_FUZZED(9372.4215) : _GLF_IDENTITY(-2679.1825, float(mat3(-2679.1825, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-227.285)), bool(false))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), max(float(mat4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-227.285)), bool(false))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-227.285)), bool(false))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0)))))))), min((true ? -703.493 : _GLF_FUZZED(_GLF_IDENTITY(-2679.1825, (false ? _GLF_FUZZED(9372.4215) : _GLF_IDENTITY(-2679.1825, float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0)))))))), _GLF_IDENTITY((true ? -703.493 : _GLF_FUZZED(_GLF_IDENTITY(-2679.1825, (false ? _GLF_FUZZED(9372.4215) : _GLF_IDENTITY(-2679.1825, _GLF_IDENTITY(float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))), max(float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))), float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0)))))))))), max(_GLF_IDENTITY((true ? -703.493 : _GLF_FUZZED(_GLF_IDENTITY(-2679.1825, (false ? _GLF_FUZZED(9372.4215) : _GLF_IDENTITY(-2679.1825, _GLF_IDENTITY(float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))), max(float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))), float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0)))))))))), clamp((true ? -703.493 : _GLF_FUZZED(_GLF_IDENTITY(-2679.1825, (false ? _GLF_FUZZED(9372.4215) : _GLF_IDENTITY(-2679.1825, _GLF_IDENTITY(float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))), max(float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))), float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0)))))))))), (true ? -703.493 : _GLF_FUZZED(_GLF_IDENTITY(-2679.1825, (false ? _GLF_FUZZED(9372.4215) : _GLF_IDENTITY(-2679.1825, _GLF_IDENTITY(float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))), max(float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))), float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0)))))))))), (true ? -703.493 : _GLF_FUZZED(_GLF_IDENTITY(-2679.1825, (false ? _GLF_FUZZED(9372.4215) : _GLF_IDENTITY(-2679.1825, _GLF_IDENTITY(float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))), max(float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))), float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0)))))))))))), (true ? -703.493 : _GLF_FUZZED(_GLF_IDENTITY(-2679.1825, (false ? _GLF_FUZZED(9372.4215) : _GLF_IDENTITY(-2679.1825, _GLF_IDENTITY(float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))), max(float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))), float(mat3(-2679.1825, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, log(1.0))))))))))))))), -703.493, -703.493)), 7248.4519);
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(max(_injected_loop_counter, _injected_loop_counter), max(max(_injected_loop_counter, _injected_loop_counter), max(_injected_loop_counter, _injected_loop_counter)))) < 1))); _injected_loop_counter ++)
              {
               mat4x2(_GLF_IDENTITY(9.0, (9.0) / _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(4.8) : exp(0.0)))), 75.08, 17.68, 8.9, -21.98, -8.3, -1.4, -3625.1007);
              }
            }
           case 0:
           case 91:
           case 20:
           case 95:
           case 59:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(125964u)))], uint(2), 4, _GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) | 0));
            }
           else
            {
            }
           case 64:
           case 99:
           case 11:
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) << 0)))); _GLF_IDENTITY(_injected_loop_counter --, (0 & -57204) ^ (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))))
            {
             subgroupAll(false);
            }
           break;
           case 56:
           do
            {
             mat2(mat4x3(6545.3569, 17.46, 77.93, 10.97, _GLF_IDENTITY(_GLF_IDENTITY(619.306, 0.0 + (619.306)), 0.0 + (619.306)), 4043.4058, _GLF_IDENTITY(-93.42, (-93.42) - 0.0), -8.1, -6.9, 5.2, _GLF_IDENTITY(18.37, clamp(18.37, _GLF_IDENTITY(18.37, float(_GLF_IDENTITY(mat2x4(18.37, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0)))))))), (mat2x4(18.37, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.7) : 1.0))) - 0.0, clamp((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.7) : 1.0))) - 0.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.7) : 1.0))) - 0.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.7) : 1.0))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.0)))), 1.0 * (min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.0))))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.0)))), 1.0 * (min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.0))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.0)))), 1.0 * (min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.0))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.0)))), 1.0 * (min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.0))))))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0))) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(250.394, -907.501, -2.0, 16.85)) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-3.3, 6.5, -2949.8299, -1568.9689)), mat2(mat4x2(_GLF_FUZZED(mat2(-3.3, 6.5, -2949.8299, -1568.9689))))) : transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(250.394, -907.501, -2.0, 16.85)) : mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))))))))))), 18.37)), _GLF_IDENTITY(-2783.2924, (_GLF_IDENTITY(-2783.2924, max(-2783.2924, -2783.2924))) - 0.0)));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))), false)))));
           case 62:
           mat2 _GLF_SWITCH_0_10v[16], _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
           default:
           1;
          }
        }
       break;
       case 68:
       mat4x2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[97];
       default:
       1;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
  }
 else
  {
   switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(ivec3(int(0), 1, 0)), clamp(int(ivec3(int(0), 1, 0)), int(ivec3(int(0), 1, 0)), int(ivec3(int(0), 1, 0))))), int(0)))))
    {
     case 83:
     do
      {
       if(false)
        {
         do
          {
           while(true)
            {
             uvec4 _GLF_SWITCH_1_0v[87], _GLF_SWITCH_1_1v;
             do
              {
               while(false)
                {
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)).y, true, false)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)), vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)))), 0.0, 1.0, 0.0, determinant(mat2(abs(0.0), 0.0, 0.0, 0.0)), 1.0, 1.0))).y)) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), min(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(4.8, clamp(4.8, _GLF_IDENTITY(_GLF_IDENTITY(4.8, (_GLF_IDENTITY(4.8, float(mat4(4.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(4.8, (_GLF_IDENTITY(4.8, float(mat4(4.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(4.8, (_GLF_IDENTITY(4.8, float(mat4(4.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(4.8, (_GLF_IDENTITY(4.8, float(mat4(4.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), float(mat2x4(_GLF_IDENTITY(4.8, (_GLF_IDENTITY(4.8, float(mat4(4.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(4.8, (_GLF_IDENTITY(4.8, float(mat4(4.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y)))))), 4.8)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1])) - _GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), injectionSwitch)).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(_GLF_IDENTITY(4.8, clamp(4.8, _GLF_IDENTITY(4.8, (_GLF_IDENTITY(4.8, float(mat4(4.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), 4.8)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.3), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat3(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), max(float(mat3(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))))), (vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1])) - vec2(0.0, 0.0)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)), true))), injectionSwitch)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(4.8, clamp(4.8, _GLF_IDENTITY(4.8, _GLF_IDENTITY((_GLF_IDENTITY(4.8, float(mat4(4.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y), mix(float((_GLF_IDENTITY(4.8, float(mat4(4.8, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(294.558)), bool(false)))), 4.8)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1])) - vec2(0.0, 0.0)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, determinant(mat4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, determinant(mat4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4(injectionSwitch, 1.0, 1.0, 0.0, determinant(mat4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))).x, injectionSwitch.x)) > injectionSwitch.y)), true))), injectionSwitch)).y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true)))))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y)))), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y)))), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y)))), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)), true, false, true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y)))), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y)))), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y)))), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)), true, false, true)))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y)))), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y)))), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y)))), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)), true, false, true))))))))))))))))))));
             if(true)
              {
              }
             else
              {
               vec2 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v[17];
               _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), clamp(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)) >> 0u), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec3(next_virtual_gid, 0u, 1u), clamp(uvec3(next_virtual_gid, 0u, 1u), uvec3(next_virtual_gid, 0u, 1u), uvec3(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), 0u, 1u)))))));
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 mat4x2(356.567, _GLF_IDENTITY(-9.4, max(-9.4, -9.4)), 3845.3168, -9.6, _GLF_IDENTITY(6.9, float(mat3(6.9, abs(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(351.038) : 0.0))), vec3(1.0, 1.0, 1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(351.038) : 0.0))))), vec3(0.0, 0.0, 1.0)), max(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))), 1.0), vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)), dot(vec2(_GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)), vec3(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))))) - vec3(0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), 0.0, sqrt(_GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_IDENTITY(_GLF_FUZZED((676.491 + 661.899)), (_GLF_FUZZED((676.491 + 661.899))) / 1.0)), bool(false)))), 1.0, 0.0))), -331.729, _GLF_IDENTITY(89.24, max(89.24, 89.24)), 1400.4743);
                }
               bool _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v[16];
               uvec3 _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v;
               _GLF_IDENTITY((66053), max(_GLF_IDENTITY((66053), int(ivec2((66053), 1))), (66053)));
               _GLF_IDENTITY(uvec2(139950u, 164317u), (uvec2(139950u, 164317u)) | (uvec2(139950u, 164317u)));
              }
             true;
             (mat3x4(mat2(_GLF_IDENTITY(-3.1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-3.1, (-3.1) / _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)), max(_GLF_IDENTITY(-3.1, (-3.1) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(-3.1, (-3.1) / _GLF_ONE(1.0, injectionSwitch.y)))), -3.1, -3.1)), 20.65, 0.5, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-819.139)), bool(false))))))) - _GLF_IDENTITY(-1.7, length(vec2(0.0, 0.0)) + (-1.7)));
             for(float _GLF_SWITCH_1_9v[8]; isnan(14.31); uvec2(44186u, 145344u))
              {
               do
                {
                 ;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])).y))));
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
                {
                }
               else
                {
                 do
                  {
                   (_GLF_IDENTITY(-87.12, (false ? _GLF_FUZZED(4666.9563) : _GLF_IDENTITY(-87.12, clamp(-87.12, -87.12, _GLF_IDENTITY(-87.12, (-87.12) - 0.0))))) + mat4x3(-8410.6093, _GLF_IDENTITY(-151.545, mix(float(_GLF_IDENTITY(-151.545, clamp(-151.545, -151.545, -151.545))), float(_GLF_FUZZED(9.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -907.942, _GLF_IDENTITY(403.309, clamp(403.309, _GLF_IDENTITY(403.309, float(mat4(403.309, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, sqrt(1.0)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 1.0))), 403.309)), 0.6, _GLF_IDENTITY(6.8, (true ? _GLF_IDENTITY(6.8, max(6.8, 6.8)) : _GLF_FUZZED(tanh(-2.6)))), -0.8, -559.433, 3.5, -335.016, -4990.1759, -1.2));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))));
                }
               ;
               uvec3 _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v[82];
               mat4x2 _GLF_SWITCH_1_13v[23];
               uint _GLF_SWITCH_1_14v;
               mat4(-0.1, 5836.8696, -297.298, -9.0, _GLF_IDENTITY(1.8, 1.0 * (1.8)), 629.913, -2.2, -45.33, 6437.5955, 22.59, -9.8, _GLF_IDENTITY(19.36, (true ? _GLF_IDENTITY(19.36, float(mat3(19.36, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))) : _GLF_FUZZED(-25.67))), 177.845, 8106.0947, -4.5, 5.1);
              }
             int _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v[72], _GLF_SWITCH_1_17v;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))), (_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), (! (true)) && true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((false) && true, true, false), bvec3(bvec4(bvec3((false) && true, true, false), true))), _GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false) && true, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((false) && true, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((false) && true, true, false), bvec3(bvec3(bvec3((false) && true, true, false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((false) && true, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((false) && true, true, false), bvec3(bvec3(bvec3((false) && true, true, false)))))))), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, true && (false))) && true, true, false), bvec3(bvec4(bvec3((false) && true, true, false), true))), _GLF_IDENTITY(false, (false) || false))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))), clamp(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))))))).x < injectionSwitch.y))))));
         ivec2(-8104, 97701);
         mat2x4 _GLF_SWITCH_1_18v[40], _GLF_SWITCH_1_19v[30];
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             _GLF_IDENTITY(_GLF_IDENTITY(vec4(8.4, -785.386, 26.56, 6.0), _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(8.4, -785.386, 26.56, 6.0)), vec4(_GLF_IDENTITY(mat3x2(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(8.4, -785.386, 26.56, 6.0)), 0.0, 1.0), (mat3x2(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(8.4, -785.386, 26.56, 6.0)), 0.0, 1.0)) * mat3(1.0))))), (_GLF_IDENTITY(vec4(8.4, _GLF_IDENTITY(-785.386, min(-785.386, _GLF_IDENTITY(-785.386, mix(float(-785.386), float(_GLF_FUZZED(-860.133)), bool(false))))), 26.56, 6.0), _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(8.4, -785.386, 26.56, 6.0)), vec4(_GLF_IDENTITY(mat3x2(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(8.4, -785.386, 26.56, 6.0)), 0.0, 1.0), (mat3x2(mat4(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-36.50) : _GLF_IDENTITY(1.0, 0.0 + (1.0)))), injectionSwitch.y)) * (vec4(8.4, -785.386, 26.56, 6.0)), 0.0, 1.0)) * mat3(1.0)))))) - vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))));
         {
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              _GLF_IDENTITY(vec4(-4356.3100, 2.8, 69.98, 3.8), (false ? _GLF_FUZZED(vec4(-48.50, 84.93, 6.1, 6.4)) : vec4(-4356.3100, 2.8, 69.98, 3.8)));
             }
           }
          mat2x4 _GLF_SWITCH_1_20v[93], _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v[18];
          if(false)
           {
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)));
               }
             }
            else
             {
             }
            mat4 _GLF_SWITCH_1_23v, _GLF_SWITCH_1_24v;
            ivec4(86982, (_GLF_IDENTITY(16374, (true ? 16374 : _GLF_FUZZED(-19962))) | ivec3(93740, -15896, 43731)));
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(ivec2(_GLF_IDENTITY(int(5), int(5)), 0)))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(ivec2(_GLF_IDENTITY(int(5), int(5)), 0))))))) >> 0)); _injected_loop_counter --)
             {
              if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                   {
                    do
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          mat2x4(_GLF_IDENTITY(7.2, float(mat3x2(7.2, 0.0, 0.0, 1.0, 1.0, cos(0.0)))), 6.8, -0.8, -712.518, 435.761, -3.7, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED(abs(sinh(-9666.3108))) : _GLF_IDENTITY(4.7, max(4.7, 4.7)))), 376.555);
                         }
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  else
                   {
                   }
                 }
                else
                 {
                 }
               }
              else
               {
               }
             }
            _GLF_IDENTITY((_GLF_IDENTITY(mat4(3.8, -637.312, -193.936, -4.6, -6200.2432, _GLF_IDENTITY(-71.72, (false ? _GLF_FUZZED(81.53) : -71.72)), -4.1, -65.17, 5200.4338, 7.3, _GLF_IDENTITY(4.2, _GLF_IDENTITY((true ? _GLF_IDENTITY(4.2, min(4.2, _GLF_IDENTITY(4.2, min(4.2, 4.2)))) : _GLF_FUZZED(dot(_GLF_IDENTITY(vec4(-6199.1245, -6.8, 7.0, 5039.0261), min(vec4(-6199.1245, -6.8, 7.0, _GLF_IDENTITY(5039.0261, (false ? _GLF_FUZZED(roundEven((6363.2529 * -2.5))) : 5039.0261))), _GLF_IDENTITY(vec4(-6199.1245, _GLF_IDENTITY(-6.8, mix(float(_GLF_IDENTITY(-6.8, 1.0 * (-6.8))), float(_GLF_FUZZED(8419.9992)), bool(false))), 7.0, 5039.0261), max(vec4(-6199.1245, -6.8, 7.0, 5039.0261), vec4(-6199.1245, -6.8, 7.0, 5039.0261))))), vec4(1.8, -8.4, -9.5, 6680.0121)))), ((true ? 4.2 : _GLF_FUZZED(dot(vec4(-6199.1245, -6.8, 7.0, _GLF_IDENTITY(5039.0261, mix(float(5039.0261), float(_GLF_FUZZED((-9.4 + 6727.2306))), bool(false)))), vec4(1.8, -8.4, -9.5, 6680.0121))))) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(1.7))))), _GLF_IDENTITY(957.764, min(957.764, 957.764)), 3.7, 51.01, 89.10, 256.946), mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(560.073)), float(0.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat2x4(mat4(mat2x4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(3.8, -637.312, -193.936, -4.6, -6200.2432, _GLF_IDENTITY(-71.72, (false ? _GLF_FUZZED(81.53) : -71.72)), -4.1, -65.17, 5200.4338, 7.3, _GLF_IDENTITY(4.2, _GLF_IDENTITY(_GLF_IDENTITY((true ? 4.2 : _GLF_FUZZED(dot(_GLF_IDENTITY(vec4(-6199.1245, -6.8, _GLF_IDENTITY(7.0, min(_GLF_IDENTITY(7.0, min(7.0, 7.0)), _GLF_IDENTITY(7.0, max(7.0, 7.0)))), 5039.0261), min(vec4(-6199.1245, _GLF_IDENTITY(-6.8, float(mat2x4(-6.8, 0.0, 0.0, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0))), 7.0, 5039.0261), _GLF_IDENTITY(vec4(-6199.1245, -6.8, 7.0, 5039.0261), max(vec4(-6199.1245, -6.8, 7.0, 5039.0261), vec4(-6199.1245, -6.8, 7.0, 5039.0261))))), vec4(1.8, -8.4, -9.5, 6680.0121)))), min((true ? 4.2 : _GLF_FUZZED(dot(_GLF_IDENTITY(vec4(-6199.1245, -6.8, _GLF_IDENTITY(7.0, min(_GLF_IDENTITY(7.0, min(7.0, 7.0)), _GLF_IDENTITY(7.0, max(7.0, 7.0)))), 5039.0261), min(vec4(-6199.1245, _GLF_IDENTITY(-6.8, float(mat2x4(-6.8, 0.0, 0.0, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0))), 7.0, 5039.0261), _GLF_IDENTITY(vec4(-6199.1245, -6.8, 7.0, 5039.0261), max(vec4(-6199.1245, -6.8, 7.0, 5039.0261), vec4(-6199.1245, -6.8, 7.0, 5039.0261))))), vec4(1.8, -8.4, -9.5, 6680.0121)))), (true ? 4.2 : _GLF_FUZZED(dot(_GLF_IDENTITY(vec4(-6199.1245, -6.8, _GLF_IDENTITY(7.0, min(_GLF_IDENTITY(7.0, min(7.0, 7.0)), _GLF_IDENTITY(7.0, max(7.0, 7.0)))), 5039.0261), min(vec4(-6199.1245, _GLF_IDENTITY(-6.8, float(mat2x4(-6.8, 0.0, 0.0, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0))), 7.0, 5039.0261), _GLF_IDENTITY(vec4(-6199.1245, -6.8, 7.0, 5039.0261), max(vec4(-6199.1245, -6.8, 7.0, 5039.0261), vec4(-6199.1245, -6.8, 7.0, 5039.0261))))), vec4(1.8, -8.4, -9.5, 6680.0121)))))), ((true ? 4.2 : _GLF_FUZZED(dot(vec4(_GLF_IDENTITY(-6199.1245, mix(float(_GLF_FUZZED(-1.4)), float(-6199.1245), bool(true))), -6.8, 7.0, 5039.0261), vec4(1.8, -8.4, -9.5, 6680.0121))))) - 0.0)), 957.764, 3.7, 51.01, _GLF_IDENTITY(89.10, max(89.10, 89.10)), 256.946))) + _GLF_IDENTITY(mat4(-0.8, _GLF_IDENTITY(-4.4, (-4.4) + 0.0), _GLF_IDENTITY(3.1, clamp(3.1, 3.1, 3.1)), 1.6, -41.00, _GLF_IDENTITY(-56.95, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -56.95 : _GLF_FUZZED(2.0))), -98.94, -16.30, 1.6, -5.7, 377.465, -4.0, 5.6, -531.841, -2027.7381, -572.797), (mat4(-0.8, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(-64.13)), bool(false))), 3.1, 1.6, -41.00, -56.95, -98.94, -16.30, 1.6, -5.7, 377.465, -4.0, 5.6, -531.841, -2027.7381, -572.797)) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(length(vec4(953.086, -4794.6709, -7968.3440, 83.14))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), ((_GLF_IDENTITY(mat4(3.8, -637.312, -193.936, -4.6, -6200.2432, -71.72, -4.1, -65.17, 5200.4338, 7.3, _GLF_IDENTITY(4.2, _GLF_IDENTITY((true ? 4.2 : _GLF_FUZZED(dot(vec4(-6199.1245, -6.8, 7.0, 5039.0261), vec4(1.8, -8.4, -9.5, 6680.0121)))), ((true ? 4.2 : _GLF_FUZZED(dot(vec4(-6199.1245, -6.8, 7.0, 5039.0261), vec4(1.8, -8.4, -9.5, 6680.0121))))) - 0.0)), 957.764, 3.7, 51.01, 89.10, _GLF_IDENTITY(256.946, max(256.946, 256.946))) + _GLF_IDENTITY(mat4(-0.8, -4.4, _GLF_IDENTITY(3.1, clamp(3.1, 3.1, 3.1)), 1.6, -41.00, _GLF_IDENTITY(-56.95, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -56.95 : _GLF_FUZZED(2.0))), -98.94, -16.30, 1.6, -5.7, 377.465, -4.0, 5.6, -531.841, -2027.7381, -572.797), _GLF_IDENTITY((mat4(-0.8, -4.4, 3.1, 1.6, -41.00, -56.95, -98.94, -16.30, 1.6, -5.7, 377.465, -4.0, 5.6, -531.841, -2027.7381, -572.797)) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(_GLF_SWITCH_1_24v) : _GLF_IDENTITY((mat4(-0.8, -4.4, 3.1, 1.6, -41.00, -56.95, -98.94, -16.30, 1.6, -5.7, 377.465, -4.0, 5.6, -531.841, -2027.7381, -572.797)) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), ((mat4(-0.8, -4.4, 3.1, 1.6, -41.00, -56.95, -98.94, -16.30, 1.6, -5.7, 377.465, -4.0, 5.6, -531.841, -2027.7381, -572.797)) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), (false ? _GLF_FUZZED(_GLF_SWITCH_1_24v) : mat4(3.8, -637.312, -193.936, -4.6, -6200.2432, -71.72, -4.1, -65.17, 5200.4338, 7.3, _GLF_IDENTITY(4.2, _GLF_IDENTITY((true ? 4.2 : _GLF_FUZZED(dot(vec4(-6199.1245, -6.8, 7.0, 5039.0261), vec4(1.8, -8.4, -9.5, 6680.0121)))), ((true ? 4.2 : _GLF_FUZZED(dot(vec4(-6199.1245, -6.8, 7.0, 5039.0261), vec4(1.8, -8.4, -9.5, _GLF_IDENTITY(6680.0121, (false ? _GLF_FUZZED(8.3) : _GLF_IDENTITY(6680.0121, float(mat4x3(6680.0121, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))))) - 0.0)), 957.764, 3.7, 51.01, 89.10, _GLF_IDENTITY(256.946, max(256.946, 256.946))) + _GLF_IDENTITY(mat4(-0.8, -4.4, _GLF_IDENTITY(3.1, clamp(3.1, 3.1, 3.1)), 1.6, -41.00, _GLF_IDENTITY(-56.95, (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))), (injectionSwitch.x < injectionSwitch.y)) ? -56.95 : _GLF_FUZZED(2.0))), -98.94, -16.30, 1.6, _GLF_IDENTITY(-5.7, float(mat3x4(-5.7, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), 377.465, -4.0, 5.6, -531.841, -2027.7381, -572.797), _GLF_IDENTITY((mat4(-0.8, -4.4, 3.1, 1.6, -41.00, -56.95, -98.94, -16.30, 1.6, -5.7, 377.465, -4.0, 5.6, -531.841, -2027.7381, -572.797)) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), 1.0 * (max(1.0, 1.0))), max(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(_GLF_SWITCH_1_24v) : _GLF_IDENTITY((mat4(-0.8, -4.4, _GLF_IDENTITY(3.1, clamp(_GLF_IDENTITY(3.1, min(3.1, 3.1)), 3.1, 3.1)), 1.6, -41.00, _GLF_IDENTITY(-56.95, mix(float(_GLF_IDENTITY(-56.95, float(mat4x2(-56.95, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(3.4)), bool(false))), -98.94, -16.30, 1.6, -5.7, 377.465, -4.0, 5.6, -531.841, -2027.7381, -572.797)) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, tan(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), ((mat4(-0.8, -4.4, 3.1, 1.6, -41.00, -56.95, -98.94, -16.30, 1.6, -5.7, 377.465, -4.0, 5.6, -531.841, -2027.7381, -572.797)) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), vec3(0.0, 0.0, 1.0))) + 0.0)), 1.0, 1.0, 0.0, sqrt(1.0)))))))))))))) * mat4(1.0));
            for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY(0, ~ (~ (0)))))) >> _GLF_IDENTITY(int(0), int(0))), clamp(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY(0, ~ (~ (0)))))) >> _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY(0, ~ (~ (0)))))) >> _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY(0, ~ (~ (0)))))) >> _GLF_IDENTITY(int(0), int(0))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, (1) - 0) ^ 1)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1, (1) - 0) ^ 1), ! (! (_injected_loop_counter != (_GLF_IDENTITY(1, (1) - 0) ^ 1)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))); _injected_loop_counter --)
             {
              ivec3(-77265, -66587, 83831);
             }
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              491.696;
             }
            else
             {
             }
            do
             {
              bvec3(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec4(bool(bool(true)), true, false, true)), ! (! (bool(bvec4(bool(bool(true)), true, false, true)))))))) || false), false);
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
         }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(             (6.3 < min(mod(-347.866, 4.5), -46.17));
 (_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | (~ (workgroup_size))))) >= _GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (next_virtual_gid), 0u ^ (~ (next_virtual_gid)))), ~ (~ ((~ (next_virtual_gid))))))); mat3x4(vec4(-7958.5472, 7379.7239, -4.3, -56.89), vec4(-2094.6931, _GLF_IDENTITY(_GLF_IDENTITY(-5.9, 1.0 * (_GLF_IDENTITY(-5.9, mix(float(_GLF_FUZZED(vec2(-83.25, 376.444).s)), float(-5.9), bool(true))))), mix(float(_GLF_FUZZED(764.365)), float(_GLF_IDENTITY(-5.9, float(_GLF_IDENTITY(vec3(-5.9, 1.0, 1.0), mix(vec3(_GLF_FUZZED(float(120086u)), _GLF_IDENTITY(_GLF_FUZZED(5059.7133), (true ? _GLF_FUZZED(5059.7133) : _GLF_FUZZED(7.9))), (vec3(-5.9, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))[2]), vec3((vec3(-5.9, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0))))[0], (vec3(-5.9, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1916.7040)))))[1], _GLF_FUZZED(3.9)), bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(true), false || (bool(true))))), -7.8, 3500.3518), vec4(5114.5313, -7.2, -6.5, -10.04)))
              {
               ;
               do
                {
                 ;
                }
               while(_GLF_WRAPPED_LOOP(false));
               bvec4(false, true, false, true);
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  (uvec4(117612u, 22304u, 75394u, 142987u) & num_workgroup);
                 }
                uvec3 _GLF_SWITCH_1_25v, _GLF_SWITCH_1_26v;
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                 {
                  _GLF_IDENTITY(((false , uvec2(149903u, 5797u)) | subgroup_local_id), ~ (_GLF_IDENTITY(~ (((false , uvec2(149903u, 5797u)) | subgroup_local_id)), _GLF_IDENTITY(uvec2(uvec4(~ (((false , uvec2(149903u, 5797u)) | subgroup_local_id)), 0u, 1u)), max(uvec2(uvec4(~ (((false , uvec2(149903u, 5797u)) | subgroup_local_id)), 0u, 1u)), uvec2(uvec4(~ (((false , uvec2(149903u, 5797u)) | subgroup_local_id)), 0u, 1u)))))));
                 }
                if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true))))), false || (bool(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true)))))))), false || (bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true))))), false || (bool(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true))))))))))))))
                 {
                 }
                else
                 {
                  (_GLF_IDENTITY(mat2(1.3, 4.4, 104.769, 6.6) * mat2(3393.8745, -2531.8608, 3.5, 2.3), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-4.6, 967.057, 9.9, -3.6)), transpose(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat2(_GLF_IDENTITY(-4.6, float(_GLF_IDENTITY(mat2x3(-4.6, 1.0, 1.0, determinant(mat2(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), tan(0.0), 1.0), (false ? _GLF_FUZZED(mat2x3(8161.0470, -238.352, -0.8, 10.81, -758.331, -58.71)) : mat2x3(-4.6, 1.0, 1.0, determinant(mat2(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), tan(0.0), 1.0))))), 967.057, 9.9, -3.6))), transpose(transpose(transpose(_GLF_FUZZED(mat2(-4.6, 967.057, 9.9, -3.6)))))))) : mat2(1.3, _GLF_IDENTITY(_GLF_IDENTITY(4.4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(34.27) : 4.4)), mix(float(_GLF_FUZZED(vec3(6.3, 610.045, -0.8).g)), float(4.4), bool(true))), 104.769, 6.6) * mat2(3393.8745, -2531.8608, 3.5, 2.3)), mat2(mat4((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(mat2(-4.6, _GLF_IDENTITY(967.057, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))), min(_GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))))), 1.0, 1.0), mix(vec3((vec3(_GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 1.0))[0], (vec3(_GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 1.0))[1], _GLF_IDENTITY((vec3(_GLF_IDENTITY(_GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))), (true ? _GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(1.6))), 1.0, 1.0)), mix(vec3(((vec3(_GLF_IDENTITY(_GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))), (true ? _GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(1.6))), 1.0, 1.0)))[0], ((vec3(_GLF_IDENTITY(_GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))), (true ? _GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(1.6))), 1.0, 1.0)))[1], ((vec3(_GLF_IDENTITY(_GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))), (true ? _GLF_IDENTITY(967.057, _GLF_IDENTITY(float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(vec2(967.057, _GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(1.6))), 1.0, 1.0)))[2]), vec3(_GLF_FUZZED(97.08), _GLF_FUZZED(-240.601), _GLF_FUZZED(6.9)), bvec3(false, false, false)))[2]), vec3(_GLF_FUZZED(float(8766u)), _GLF_FUZZED(4300.6422), _GLF_FUZZED(8637.4308)), bvec3(false, false, false))))), 9.9, -3.6)) : mat2(1.3, _GLF_IDENTITY(4.4, mix(float(_GLF_FUZZED(vec3(6.3, 610.045, -0.8).g)), float(4.4), _GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), 104.769, 6.6) * mat2(3393.8745, -2531.8608, 3.5, 2.3)))))));
                 }
                ;
                uvec4 _GLF_SWITCH_1_27v, _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v;
                for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))); _injected_loop_counter --)
                 {
                  (_GLF_SWITCH_1_29v);
                 }
               }
              }
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     case 0:
     case 85:
     case 53:
     case 17:
     do
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     case 99:
     subgroupAll(true);
     break;
     case 52:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(all(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))))), true)))), false))), bvec3(bvec3(bvec3(bvec3(false, false, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec3(bvec3(bvec3(false, false, true)))))), false))))))
          {
           vec4 _GLF_SWITCH_1_30v;
           do
            {
             _GLF_IDENTITY(false, (false) && true);
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(bvec2 _GLF_SWITCH_1_31v; (uvec2(43737u, _GLF_IDENTITY(163315u, (true ? _GLF_IDENTITY(163315u, max(163315u, 163315u)) : _GLF_FUZZED(subgroup_id)))) != uvec2(_GLF_IDENTITY(85712u, _GLF_IDENTITY((_GLF_IDENTITY(85712u, 0u + (_GLF_IDENTITY(85712u, (85712u) / 1u)))) ^ 0u, max((_GLF_IDENTITY(85712u, 0u + (_GLF_IDENTITY(85712u, (85712u) / 1u)))) ^ 0u, (_GLF_IDENTITY(85712u, 0u + (_GLF_IDENTITY(85712u, (85712u) / 1u)))) ^ 0u))), 40700u)); (vec3(844.549, _GLF_IDENTITY(_GLF_IDENTITY(1.1, min(1.1, 1.1)), max(_GLF_IDENTITY(1.1, min(1.1, 1.1)), _GLF_IDENTITY(1.1, min(1.1, 1.1)))), -1.1) != vec3(-9173.3199, 0.0, -590.023)))
              {
               do
                {
                 while(true)
                  {
                   vec3 _GLF_SWITCH_1_32v[66], _GLF_SWITCH_1_33v;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.8)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.8)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.8)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.8)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) - 0.0)), bool(true)))), float(_GLF_FUZZED(-28.45)), bool(false)))))))));
               do
                {
                 ivec2(74283, -7972);
                 mat2(-82.67, 6080.0990, _GLF_IDENTITY(917.241, max(917.241, 917.241)), -0.7);
                 _GLF_IDENTITY(-30085, (-30085) | 0);
                 mat4x2 _GLF_SWITCH_1_34v;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   ivec3(-81636, -66200, 83489);
                  }
                 do
                  {
                   bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false);
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(true);
               mix((ivec2(-44326, -99221) % ivec2(-68799, _GLF_IDENTITY(-48958, min(_GLF_IDENTITY(-48958, int(ivec4(-48958, 0, 1, 1))), -48958)))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(19908, 0 ^ (19908)), -39090), (ivec2(_GLF_IDENTITY(19908, 0 ^ (19908)), -39090)) | (ivec2(_GLF_IDENTITY(19908, 0 ^ (19908)), -39090))), bvec2(true, true));
               _GLF_IDENTITY(cos(injectionSwitch), min(_GLF_IDENTITY(cos(injectionSwitch), clamp(_GLF_IDENTITY(cos(injectionSwitch), (cos(injectionSwitch)) / vec2(1.0, 1.0)), _GLF_IDENTITY(cos(injectionSwitch), clamp(cos(injectionSwitch), cos(injectionSwitch), cos(injectionSwitch))), cos(injectionSwitch))), _GLF_IDENTITY(cos(injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(8.3), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_FUZZED(8.3))), _GLF_FUZZED(0.0)), vec2((cos(injectionSwitch))[0], (_GLF_IDENTITY(cos(injectionSwitch), vec2(mat3(cos(injectionSwitch), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))[_GLF_IDENTITY(1, (1) ^ 0)]), bvec2(true, true)))));
               ;
               mat3x2(9203.4642, 3.0, _GLF_IDENTITY(-89.28, max(-89.28, _GLF_IDENTITY(-89.28, (true ? _GLF_IDENTITY(-89.28, clamp(-89.28, -89.28, -89.28)) : _GLF_FUZZED(-0.2))))), 9.6, -8.9, 74.82);
              }
            }
           else
            {
            }
           matrixCompMult(mat4(1229.1012, 4.6, 12.60, _GLF_IDENTITY(9.9, clamp(9.9, 9.9, 9.9)), -207.358, _GLF_IDENTITY(_GLF_IDENTITY(-531.756, mix(float(-531.756), float(_GLF_FUZZED(-7142.2691)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(-531.756, (true ? -531.756 : _GLF_FUZZED(-8.4)))) / 1.0, max((_GLF_IDENTITY(-531.756, (true ? -531.756 : _GLF_FUZZED(-8.4)))) / 1.0, (_GLF_IDENTITY(-531.756, (true ? -531.756 : _GLF_FUZZED(-8.4)))) / 1.0))), 2.7, _GLF_IDENTITY(-14.24, max(-14.24, -14.24)), -7.2, 5413.5713, 94.73, 68.90, 6.6, -75.03, 2.5, 9.2), mat4(-516.183, 4786.9552, -7.9, -3.6, -6.9, -501.067, -58.40, -1985.5286, _GLF_IDENTITY(1.5, (true ? 1.5 : _GLF_FUZZED(615.787))), 5.2, 7743.1305, 5.5, -4635.2056, 0.1, -17.08, 9540.1175));
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), sqrt(0.0)))).x > injectionSwitch.y))))
            {
            }
           else
            {
             if(bvec3(true, false, true)[0])
              {
              }
             else
              {
               uvec4 _GLF_SWITCH_1_35v;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 switch(_GLF_SWITCH((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (int(1))), int(1)))))
                  {
                   case 0:
                   case 6:
                   case 33:
                   case 66:
                   case 57:
                   case 51:
                   case 41:
                   case 11:
                   case 26:
                   case 94:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                      {
                       (_GLF_IDENTITY(-339.356, max(-339.356, _GLF_IDENTITY(-339.356, clamp(-339.356, -339.356, -339.356)))) - mat4x3(7.6, 8191.3516, 26.26, -4.7, 23.50, 3.1, -54.04, -29.79, _GLF_IDENTITY(3.0, clamp(3.0, 3.0, 3.0)), -734.101, -6.5, 863.218));
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                   break;
                   case 34:
                   step(-1473.1026, _GLF_IDENTITY(vec2(-0.0, -4.3), max(_GLF_IDENTITY(vec2(-0.0, -4.3), mat2(1.0) * (vec2(-0.0, -4.3))), vec2(-0.0, -4.3))));
                   case 18:
                   vec3(148.135, -92.82, -3285.2392);
                   default:
                   1;
                  }
                }
               else
                {
                }
              }
            }
           mat3x4 _GLF_SWITCH_1_36v;
          }
        }
       else
        {
        }
      }
     else
      {
      }
     case 21:
     bvec4 _GLF_SWITCH_1_37v, _GLF_SWITCH_1_38v[63];
     default:
     1;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
