#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 mat2 _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 uvec3 _f1;
 uint _f2;
 uint subgroup_size;
 mat3 _f3;
 mat2 _f4;
 float _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat4x2 _f1;
 vec4 _f2;
 mat3x2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 mat2x4 _f1;
 uvec3 _f2;
 bvec2 _f3;
 mat4 _f4;
 mat4x2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(min(uvec3(1u), _GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) >> uvec3(0u, 0u, 0u))))), (min(uvec3(1u), _GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) >> uvec3(0u, 0u, 0u)))))) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)))), min((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)), (_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u))) ^ 0u))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)), (_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) ^ 0u))), ((uvec3(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))) * (1u))))) >> uvec3(0u, 0u, 0u))))) | uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((subgroup_id | uvec3(49308u, 42859u, 14353u).t)) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, max(0u, 0u)))))), uvec3(uvec4(~ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)))), min((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)), (_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u))) ^ 0u))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)), (_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) ^ 0u))), ((uvec3(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))) * (1u))))) >> uvec3(0u, 0u, 0u))))) | uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((subgroup_id | uvec3(49308u, 42859u, 14353u).t)) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, max(0u, 0u)))))), 1u)))), max(~ (~ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)))), min((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)), (_GLF_IDENTITY(1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)))))))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)))))))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id))))))))))) - 0u)) ^ 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u))) ^ 0u))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)), (_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) ^ 0u))), ((uvec3(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))) * (1u))))) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)))))) | _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_id | uvec3(49308u, 42859u, 14353u).t)) : 0u), ((false ? _GLF_FUZZED((subgroup_id | uvec3(49308u, 42859u, 14353u).t)) : 0u)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, max(0u, 0u))))), (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_id | uvec3(49308u, 42859u, 14353u).t)) : 0u), ((false ? _GLF_FUZZED((subgroup_id | uvec3(49308u, 42859u, 14353u).t)) : 0u)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, max(0u, 0u)))))) | (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_id | uvec3(49308u, 42859u, 14353u).t)) : 0u), ((false ? _GLF_FUZZED((subgroup_id | uvec3(49308u, 42859u, 14353u).t)) : 0u)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, max(0u, 0u))))))))), ~ (~ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)))), min((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), uint(uvec2((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (1u & 1u)))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(178887u) : 1u)))), (_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), min(0u << _GLF_IDENTITY(uint(8u), uint(8u)), 0u << _GLF_IDENTITY(uint(8u), uint(8u))))) ^ (_GLF_IDENTITY(uint(1u), uint(1u)))) : _GLF_FUZZED(subgroup_id)))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u))) ^ 0u))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u)), (_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, max(1u, 1u))))) * (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) ^ 0u))), ((uvec3(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))) * _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), 0u ^ ((1u))), (1u))))))) >> uvec3(0u, 0u, 0u))))) | uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((subgroup_id | uvec3(49308u, 42859u, 14353u).t)) : 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, max(0u, 0u)))))))))), 1u, gl_SubgroupSize, mat3(1.0), mat2(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), mat4x2(1.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat3x2(1.0), bvec2(true)), mat2x4(1.0), uvec3(1u), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false, true))), mat4(1.0), mat4x2(_GLF_IDENTITY(1.0, (1.0) / 1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(82842u, 64933u, 61053u)))), min(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat2(1.0), workgroup_size * workgroup_id);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec4(bvec3((_GLF_DEAD(false)), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec4(bvec3((_GLF_DEAD(false)), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false, true)), (bool(bvec4(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec4(bvec3((_GLF_DEAD(false)), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false, true))) || false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(2.2)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y)) || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8729.1074) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false, false)), (bool(bvec4(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false, false))) || false))) || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 1.0, 1.0))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false), true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, determinant(mat2(1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, float(mat4x2(1.0, tan(0.0), exp(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, (_GLF_struct_replacement_3.workgroup_base) ^ 0u) + subgroup_id * _GLF_struct_replacement_2._f0._f0.subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED((vec2(-9.5, -78.15) + injectionSwitch)))).y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(-3.3)), bool(false))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_3.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(uaddCarry(183190u, subgroup_id, num_workgroup)))) / 1u) * _GLF_struct_replacement_2._f0._f0.subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u))) * _GLF_struct_replacement_2._f0._f0.subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 1u))))))) % _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.subgroup_size, max(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.subgroup_size, min(_GLF_struct_replacement_2._f0._f0.subgroup_size, _GLF_struct_replacement_2._f0._f0.subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.subgroup_size, uint(uvec3(_GLF_struct_replacement_2._f0._f0.subgroup_size, 1u, 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) | _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u)))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(199424u) : _GLF_IDENTITY(uint(2u), uint(2u))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | (2u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(199424u) : _GLF_IDENTITY(uint(2u), uint(2u)))))) << 0u) >> _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-63.18))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-326.908)), bool(false))), 0.0, 0.0)))), 0.0)), 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.x, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(7.3)), bool(false))), 0.0, 0.0)), 1.0, 1.0)), mat2(mat2x4(transpose(mat2(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))))))))) ^ _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(9.1)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(9.1)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u)))))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (_GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (_GLF_IDENTITY(uint(2u), uint(2u))))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u)))) * _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (true ? (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) : _GLF_FUZZED(virtual_gid))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-16.09) : 0.0)), injectionSwitch.x)))) * 1u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u), 1u, 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.5)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true)))))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x)) - 0.0), 0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x)) - 0.0), 0.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x)) - 0.0), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x)) - 0.0), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x)) - 0.0), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(96.51)), float(0.0), bool(true))), injectionSwitch.x)) - 0.0), 0.0, 0.0, 0.0)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> 0u)))) >> 0u)))) * _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u)), ~ (~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (true ? (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) : _GLF_FUZZED(virtual_gid))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))), abs(0.0), 1.0, 0.0))))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)), 0.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.2))), 0.0, 0.0)), 0.0, determinant(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u)))) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) + 0u), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), 0u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (true ? ((_GLF_IDENTITY(1u, max(1u, 1u)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) - 0u)))) : _GLF_FUZZED(next_virtual_gid)))))) | (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))) != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id)))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id))))))) / 1u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id)))))))) + 1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) * 1u)) ^ 0u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) * 1u)) ^ 0u)) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) * 1u)) ^ 0u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) * 1u)) ^ 0u)) << 0u)) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), max((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(next_virtual_gid))), subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) | (max(subgroup_local_id, subgroup_local_id)))) + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) | 0u))) ^ 0u)) * 1u) : _GLF_FUZZED(subgroup_local_id))) < _GLF_struct_replacement_2._f0._f0.subgroup_size)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) && true) || false))))) || false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      barrier();
    }
   else
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), 0u | (uint(_GLF_IDENTITY(2, int(int(2)))))), 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), (min(64, 64)) | (min(64, 64)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(_GLF_IDENTITY(8, int(ivec2(8, 1))))), (int(int(_GLF_IDENTITY(8, int(ivec2(8, 1)))))) ^ 0)), clamp(8, 8, 8)))))), (false ? _GLF_FUZZED(bitCount(bitCount(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) ^ ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (2)) >> 0)))), int(2))) & 64840))))) : _GLF_IDENTITY(8, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (8), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(0, 0, 0) & ivec3(37658, -92739, 80105)) | (_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(~ (8), 1, 0)) << ivec3(0, 0, 0))))), 0 | (int(_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(0, 0, 0) & ivec3(37658, -92739, 80105)) | (_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(~ (8), 1, 0)) << ivec3(0, 0, 0)))))))), min(~ _GLF_IDENTITY((8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((8), ((8)) ^ 0) : _GLF_FUZZED(27353))), ~ (8)))))))), int(8)), clamp(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(_GLF_IDENTITY(8, int(ivec2(8, 1))))), (int(int(_GLF_IDENTITY(8, int(ivec2(8, 1)))))) ^ 0)), clamp(8, 8, 8)))))), (false ? _GLF_FUZZED(bitCount(bitCount(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) ^ ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (2)) >> 0)))), int(2))) & 64840))))) : _GLF_IDENTITY(8, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (8), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(0, 0, 0) & ivec3(37658, -92739, 80105)) | (_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(~ (8), 1, 0)) << ivec3(0, 0, 0))))), 0 | (int(_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(0, 0, 0) & ivec3(37658, -92739, 80105)) | (_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(~ (8), 1, 0)) << ivec3(0, 0, 0)))))))), min(~ _GLF_IDENTITY((8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((8), ((8)) ^ 0) : _GLF_FUZZED(27353))), ~ (8)))))))), int(8)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(_GLF_IDENTITY(8, int(ivec2(8, 1))))), (int(int(_GLF_IDENTITY(8, int(ivec2(8, 1)))))) ^ 0)), clamp(8, 8, 8)))))), (false ? _GLF_FUZZED(bitCount(bitCount(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) ^ ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (2)) >> 0)))), int(2))) & 64840))))) : _GLF_IDENTITY(8, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (8), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(0, 0, 0) & ivec3(37658, -92739, 80105)) | (_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(~ (8), 1, 0)) << ivec3(0, 0, 0))))), 0 | (int(_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(0, 0, 0) & ivec3(37658, -92739, 80105)) | (_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(~ (8), 1, 0)) << ivec3(0, 0, 0)))))))), min(~ _GLF_IDENTITY((8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((8), ((8)) ^ 0) : _GLF_FUZZED(27353))), ~ (8)))))))), int(8)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(_GLF_IDENTITY(8, int(ivec2(8, 1))))), (int(int(_GLF_IDENTITY(8, int(ivec2(8, 1)))))) ^ 0)), clamp(8, 8, 8)))))), (false ? _GLF_FUZZED(bitCount(bitCount(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) ^ ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (2)) >> 0)))), int(2))) & 64840))))) : _GLF_IDENTITY(8, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (8), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(0, 0, 0) & ivec3(37658, -92739, 80105)) | (_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(~ (8), 1, 0)) << ivec3(0, 0, 0))))), 0 | (int(_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(0, 0, 0) & ivec3(37658, -92739, 80105)) | (_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(~ (8), 1, 0)) << ivec3(0, 0, 0)))))))), min(~ _GLF_IDENTITY((8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((8), ((8)) ^ 0) : _GLF_FUZZED(27353))), ~ (8)))))))), int(8))) | (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(_GLF_IDENTITY(8, int(ivec2(8, 1))))), (int(int(_GLF_IDENTITY(8, int(ivec2(8, 1)))))) ^ 0)), clamp(8, 8, 8)))))), (false ? _GLF_FUZZED(bitCount(bitCount(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) ^ ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (2)) >> 0)))), int(2))) & 64840))))) : _GLF_IDENTITY(8, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (8), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(0, 0, 0) & ivec3(37658, -92739, 80105)) | (_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(~ (8), 1, 0)) << ivec3(0, 0, 0))))), 0 | (int(_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(0, 0, 0) & ivec3(37658, -92739, 80105)) | (_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(~ (8), 1, 0)) << ivec3(0, 0, 0)))))))), min(~ _GLF_IDENTITY((8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((8), ((8)) ^ 0) : _GLF_FUZZED(27353))), ~ (8)))))))), int(8)))), 0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(_GLF_IDENTITY(8, int(ivec2(8, 1))))), (int(int(_GLF_IDENTITY(8, int(ivec2(8, 1)))))) ^ 0)), clamp(8, 8, 8)))))), (false ? _GLF_FUZZED(bitCount(bitCount(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) ^ ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (2)) >> 0)))), int(2))) & 64840))))) : _GLF_IDENTITY(8, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (8), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(0, 0, 0) & ivec3(37658, -92739, 80105)) | (_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(~ (8), 1, 0)) << ivec3(0, 0, 0))))), 0 | (int(_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(0, 0, 0) & ivec3(37658, -92739, 80105)) | (_GLF_IDENTITY(ivec3(~ (8), 1, 0), (ivec3(~ (8), 1, 0)) << ivec3(0, 0, 0)))))))), min(~ _GLF_IDENTITY((8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((8), ((8)) ^ 0) : _GLF_FUZZED(27353))), ~ (8)))))))), int(8))))) + (_GLF_IDENTITY(64, (64) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) << 0)) | (_GLF_IDENTITY((64), ((64)) >> 0))) >> 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (_GLF_IDENTITY(64, (64) >> 0)) >> 0)))), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), 1 * (_GLF_IDENTITY(64, (64) >> 0))))), 0, 1)), (int(ivec3(_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, 0 | ((64) >> 0))), 0, 1))) + 0)))), 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(! (((_GLF_IDENTITY(false, ! (! (false)))))))))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), true && ((_GLF_IDENTITY(false, ! (! (false)))))) && true))) && true)), (false) || false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false, false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), bool(bool((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))), ! (! (! (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), bool(bool((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))))))) || false, (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), bool(bool((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))), ! (! (! (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), bool(bool((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))))))))) || false) && true)))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), true)), true))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), true)), true))))))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), true)), true))))))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))), true)), true))))))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false, false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), false, false))))), (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false))) || false))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), false, false))))), (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false))) || false)))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false))) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), false, false))) || false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
