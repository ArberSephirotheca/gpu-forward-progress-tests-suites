#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, max((workgroup_id) << 0u, (workgroup_id) << 0u))), workgroup_id), min(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, max((workgroup_id) << 0u, (workgroup_id) << 0u))), workgroup_id), min(min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, max((workgroup_id) << 0u, (workgroup_id) << 0u))), workgroup_id), min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, max((workgroup_id) << 0u, (workgroup_id) << 0u))), workgroup_id))), min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, max((workgroup_id) << 0u, (workgroup_id) << 0u))), workgroup_id))))), ((_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) << _GLF_IDENTITY(0u, 0u + (0u))), workgroup_id)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))))))))))), min(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_id))) << 0u), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_id) << 0u))), workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), workgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), workgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id)))) / 1u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (false ? _GLF_FUZZED(133152u) : _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), workgroup_id), max(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))) << 0u), (false ? _GLF_FUZZED(133152u) : _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), workgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (false ? _GLF_FUZZED(133152u) : _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))), workgroup_id)))), clamp(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), (workgroup_id) << _GLF_IDENTITY(0u, (1u ^ 1u) | (0u))), workgroup_id)), _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), workgroup_id)), _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), workgroup_id)), (workgroup_id) << 0u), workgroup_id))))))))), (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), workgroup_id))))))) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true)))), (bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))) && true)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true))))))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false)))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ((! (_GLF_IDENTITY(false, false || (false))))) || false)) || false))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))), false || (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))))))))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true)))), (bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true)))), (bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))) && true))), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), bool(bvec4(_GLF_IDENTITY(bool(! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))))), false, false, true)))), (bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(bool(bvec4(bool(! (false)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, true)), bool(bvec3(bool(bvec4(bool(! (false)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, true)), true, true)))))) && true)))) || false))), ! _GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true)))), ! (! (! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true)))))))))))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (false))), bool(bool((! (! (false)))))), bool(bool(! (! (! (false)))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))), bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))), false), bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))), false)))))))), ! (! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))))))) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))))), bool(bvec4(bool(! (false)), false, false, true)))), (bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))) && true)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (false))), bool(bvec2((! (! (false))), true)))), bool(bvec2(! ((! (! (false)))), true))))))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false)))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), ! (! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), (! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))))) || false))), ! (! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), true && (! (! (false)))))))))))))))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))))), bool(bvec4(bool(! (false)), false, false, true)))), (bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))) && true)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (false))), bool(bvec2((! (! (false))), true)))), bool(bvec2(! ((! (! (false)))), true))))))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false)))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), ! (! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), (! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))))) || false))), ! (! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), true && (! (! (false)))))))))))))))) || false))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true)))), (bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))) && true)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true))))))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false)))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))), bool(bvec3(! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))), false, false))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), _GLF_IDENTITY(bool(bvec3((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), true, false)), (bool(bvec3((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), true, false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), _GLF_IDENTITY(bool(bvec3((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), true, false)), (bool(bvec3((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), true, false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true))))))), true))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false)))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false)))), ! (! (! ((_GLF_IDENTITY(false, false || (false)))))))))))))))))), ! (! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))))))) || false)))), true), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true)))), (bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))) && true)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true))))))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false)))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))), bool(bvec3(! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))), false, false))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), _GLF_IDENTITY(bool(bvec3((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), true, false)), (bool(bvec3((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), true, false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), _GLF_IDENTITY(bool(bvec3((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), true, false)), (bool(bvec3((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), true, false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true))))))), true))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false)))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false)))), ! (! (! ((_GLF_IDENTITY(false, false || (false)))))))))))))))))), ! (! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))))))) || false)))), true), false)), bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true)))), (bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))) && true)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true))))))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false)))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))), bool(bvec3(! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))), false, false))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), _GLF_IDENTITY(bool(bvec3((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), true, false)), (bool(bvec3((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), true, false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), _GLF_IDENTITY(bool(bvec3((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), true, false)), (bool(bvec3((bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), false, false, true))))), true, false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec2(! ((! (! (false)))), true))))))), true))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bool(! (! (! (false)))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false)))), ! (! (! ((_GLF_IDENTITY(false, false || (false)))))))))))))))))), ! (! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false))))), true && ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (false)))))))))))))) || false)))), true), false)))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bool(false))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec2(bool(false), true))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec2(bool(false), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), ((_GLF_IDENTITY(! (false), ! (! (! (false)))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)))).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec2(bool(false), true))))))), bool(bvec4(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec2(bool(false), true))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec2(bool(false), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec2(bool(bvec4((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))), ! (! (! (false)))))) && true))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), true && (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))), true)))), bool(bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, true, true))))), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true)))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || false))))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.2)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, ((bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true))) && true)))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || false))))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.2)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), 1u * ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(14.89) : injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   for(int _injected_loop_counter = (_GLF_IDENTITY(0, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (0) + 0), 0), (min(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0)), (0) + 0), 0)) | 0)) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) | (2))))), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(8.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
