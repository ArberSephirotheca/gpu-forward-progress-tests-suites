#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), ((! (false))) && true), false, false, false)))) && true)), true && (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true)))))), ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), _GLF_IDENTITY(bool(bvec4(bool((! (false))), true, true, false)), (bool(bvec4(bool((! (false))), true, true, false))) || false)))))))))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))) && true, true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(9.0, 315.394)), max(_GLF_FUZZED(vec2(9.0, 315.394)), _GLF_FUZZED(vec2(9.0, 315.394)))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(26.08)), vec2(_GLF_FUZZED(9417.3548), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(vec2(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(26.08)), vec2(_GLF_FUZZED(9417.3548), (injectionSwitch)[1]), bvec2(false, true)), 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(26.08)), vec2(_GLF_FUZZED(9417.3548), (injectionSwitch)[1]), bvec2(false, true)), 0.0, 1.0)), (vec2(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(26.08)), vec2(_GLF_FUZZED(9417.3548), (injectionSwitch)[1]), bvec2(false, true)), 0.0, 1.0))) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 1.0, 0.0))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-272.967) : _GLF_IDENTITY(0.0, (0.0) + 0.0)))) - 0.0))))) * mat2(1.0))), (transpose(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), (mat2(injectionSwitch, 1.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) * mat2(1.0)))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), transpose(transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0)))) * mat2(1.0)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(2.8, 611.575, -3.1, 1.3)) : transpose(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, sqrt(0.0)))))), (false ? _GLF_FUZZED(mat2(2.8, 611.575, -3.1, 1.3)) : transpose(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, sqrt(0.0))))))) / mat2(1.0, 1.0, 1.0, 1.0))))))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((862.007 + -1.6), min((862.007 + -1.6), (862.007 + -1.6)))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), max(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))) - 0.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, _GLF_IDENTITY(-393.401, clamp(-393.401, -393.401, -393.401)), -4614.8427))))), min(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), mix(float(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427)))))), float(_GLF_FUZZED(7.7)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), mix(float(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427)))))), float(_GLF_FUZZED(7.7)), bool(false))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), mix(float(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427)))))), float(_GLF_FUZZED(7.7)), bool(false))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), mix(float(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427)))))), float(_GLF_FUZZED(7.7)), bool(false))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), mix(float(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427)))))), float(_GLF_FUZZED(7.7)), bool(false))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427))))), mix(float(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0), (true ? mat2x3(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-1615.2661, -6.8, 79.63, 6.3, -393.401, -4614.8427)))))), float(_GLF_FUZZED(7.7)), bool(false)))))) - 0.0)))))))), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0, 0.0)), clamp(determinant(_GLF_IDENTITY(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), (determinant(mat2(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(7.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) - 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.1)), float(0.0), bool(true)))), mat3(_GLF_IDENTITY(mat4x3(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(mat3(1.0) * (mat4x3(mat3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-1.8, _GLF_IDENTITY(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), clamp(float(mat3x2(-1.8, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0))), round(length(normalize(1.0))), 0.0, 0.0, 0.0)), float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(85.29)), float(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0))), bool(true))))))))), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-1.8, _GLF_IDENTITY(float(mat3x2(-1.8, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-11.25)), bool(false))), round(length(normalize(1.0))), 0.0, 0.0, 0.0)), clamp(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(-1.8, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.6)), float(-1.8), bool(true)), sqrt(0.0) + (mix(float(_GLF_FUZZED(-3.6)), float(-1.8), bool(true))))), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(85.29)), float(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0))), bool(true))))))))), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-1.8, _GLF_IDENTITY(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), clamp(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), float(mat3x2(-1.8, 0.0, round(length(_GLF_IDENTITY(normalize(1.0), (normalize(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0))) - log(1.0)))), 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))), min(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))), min(vec4(0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))), vec4(0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))))), vec4(0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))))))), 0.0)), mix(float(_GLF_FUZZED(85.29)), _GLF_IDENTITY(float(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0))), (float(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)))) - 0.0), bool(true))))))))), (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, true && (true)) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-1.8, _GLF_IDENTITY(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), clamp(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.7)), bool(false))))), float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3x2(-1.8, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(85.29)), float(float(mat3x2(_GLF_IDENTITY(-1.8, (-1.8) + 0.0), 0.0, round(length(normalize(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0)), 1.0, 1.0), _GLF_IDENTITY(mat3x2(mat4x2(mat3x2(1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0)), 1.0, 1.0))), (mat3x2(mat4x2(mat3x2(1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0)), 1.0, 1.0)))) * mat3(1.0)))))))), 0.0, 0.0, 0.0))), bool(true))))))))) : _GLF_IDENTITY(_GLF_FUZZED(3.8), min(_GLF_IDENTITY(_GLF_FUZZED(3.8), max(_GLF_FUZZED(3.8), _GLF_FUZZED(3.8))), _GLF_FUZZED(3.8)))))), bool(true))), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, tan(0.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), mat4x3(mat4(mat3(1.0) * (mat4x3(mat3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((1.6 / 0.5))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(0.0, 0.0, 0.0))), bool(true))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), clamp(float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))))))))))), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - abs(0.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.5)), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(-7.7)))))), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(mat2(2.8, 611.575, -3.1, 1.3)) : _GLF_IDENTITY(transpose(mat2(injectionSwitch, 1.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (true ? transpose(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat3(-0.7, 8053.4084, -247.075, 6.6, -0.2, -4.1, 5463.2986, -8.9, -385.904))))))))), (_GLF_IDENTITY(transpose(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(transpose(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), transpose(_GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), mat2(mat3x4(transpose(transpose(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(29.54) : determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (true ? mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3(0.9, -742.275, 2.3, 4.5, 67.27, -27.53, 7.5, -4.2, 3.3))))))))))))))) : _GLF_FUZZED(mat2(-963.243, -2.4, -306.214, 80.74))))) / mat2(1.0, 1.0, 1.0, 1.0))))))))[1]), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat2(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), mat2(mat4x3(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(mat2(2.8, 611.575, -3.1, 1.3)) : _GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0)), mix(float(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-317.840)), bool(false))), (determinant(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0)), mat2(1.0) * (mat2(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0)), mix(float(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-317.840)), bool(false))), (determinant(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0))))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0)), mix(float(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-317.840)), bool(false))), (determinant(mat3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0), clamp(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0)), mat2(1.0) * (mat2(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0)), mix(float(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-317.840)), bool(false))), (determinant(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0))))))))))), (_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(_GLF_IDENTITY(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? vec2(35.60, -8.3) : vec2(39.96, 8.1)).t)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) - abs(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0)))), bool(true))), 0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3(9.3, 3.2, 436.070, -9.1, 5.5, 49.58, 15.35, -5.1, 8825.6569)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(true ? mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3(9.3, 3.2, 436.070, -9.1, 5.5, 49.58, 15.35, -5.1, 8825.6569)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (true ? mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3(9.3, 3.2, 436.070, -9.1, 5.5, 49.58, 15.35, -5.1, 8825.6569)))) : _GLF_FUZZED(_GLF_IDENTITY(mat3(-2.1, 572.575, -2.6, -45.43, -3.7, 3.8, 4.4, 6.0, -2.5), _GLF_IDENTITY(mat3(1.0) * (mat3(-2.1, 572.575, -2.6, -45.43, -3.7, 3.8, 4.4, 6.0, -2.5)), (mat3(1.0) * (mat3(-2.1, 572.575, -2.6, -45.43, -3.7, 3.8, 4.4, 6.0, -2.5))) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))))), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, 1.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) / 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(mat2(2.8, 611.575, -3.1, 1.3)) : transpose(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, determinant(mat3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))))) + mat2(0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(9224.6464)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, false), false))))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, abs(sin(0.0)), log(1.0)))).y, mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), tan(0.0), 0.0, abs(sin(0.0)), log(1.0)))).y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true))))))), bool(bool(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))), (false) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - vec2(0.0, 0.0))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false)), (bool(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, cos(0.0)))), (false ? _GLF_FUZZED(mat4(-8113.2886, 0.0, -5.5, -7.2, 0.0, -790.688, -465.787, -3.9, -2.2, -836.426, 56.16, 7272.8771, -3.6, 493.863, -1.6, -1197.2566)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, cos(0.0)))), (mat4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, cos(0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))).x > injectionSwitch.y), false))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))).y), false, false), true)))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && true, bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))) && true, false)))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y))))))), true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((56.00 - -9.0))), bool(false))) > injectionSwitch.y)), true, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) && true)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))) | 0u)) | 0u)) + 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch)).y) * 1.0), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0)) * vec2(1.0, 1.0)))), injectionSwitch)).y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.7))) : _GLF_FUZZED(-41.92)))))))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)) - 0u)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), clamp(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), clamp(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), clamp(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), clamp(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), clamp(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), clamp(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) % subgroup_size)) >> 0u)) | 0u), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) * 1u)))) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), max(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (0u | 0u) + (subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), min(subgroup_local_id, subgroup_local_id))) ^ 0u), subgroup_local_id)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), clamp(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size)) | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) | (_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), ~ (~ (uvec2(subgroup_local_id, 0u)))))))), min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) << (0u ^ 0u))), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 1u, 0u))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) + 1) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) | (((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))))), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) - 0u)) + 1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (~ (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) - 0u))))) - 0u)) + 1), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) - 0u)) + 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) - 0u)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) - 0u)) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) - 0u)) + 1) >> 0u)) ^ (0u | 0u))), clamp((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) << 0u)) - 0u)) + 1), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) - 0u)) + 1), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) - 0u)) + 1))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) - 0u)) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) - 0u)) + 1))) % subgroup_size)) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1)) ^ 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1)) | 0u), 1u, 1u)))) / 1u) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))))), max(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), clamp((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1))), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1))) % subgroup_size))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) | (((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))))) / 1u);
 buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), ~ (~ (max(1, 1)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(259.272) : _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), ((false ? _GLF_FUZZED(259.272) : _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) - 0.0))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), (! (_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || ((_GLF_IDENTITY(true, ! (! (true))))))))) && true))))), _GLF_IDENTITY(true && (bool(bvec4(false, false, false, true))), (true && (bool(bvec4(false, false, false, true)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? 574.093 : 8.1))), bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (vec2(vec4(injectionSwitch, 0.0, 1.0))) - vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 0 | (4)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) || false))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
