#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (injectionSwitch.y) * determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.3) : injectionSwitch.y))))))))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.7), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), bvec2(true, false))).y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(_GLF_IDENTITY(bool((_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (bool((_GLF_DEAD(false)) && true)), (! (bool((_GLF_DEAD(false)) && true))) || false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0))))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(73179)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-34.93) : (injectionSwitch)[0])), _GLF_FUZZED(92.78)), bvec2(true, false))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-9.5, -9459.0019).g), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(2.0)), bvec2(true, false))), 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)))))).x)) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), true && ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))))) || false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), false, false, _GLF_IDENTITY(true, (true) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(acosh(80.14)) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), false)), false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, true, true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))) : _GLF_FUZZED(5.3))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(382.320), _GLF_FUZZED((- -4.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(55962u, 141299u, 135434u)))), uvec3(uvec4(gl_WorkGroupID, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5377.6329)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)), injectionSwitch), mix(vec2((max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], _GLF_FUZZED(-0.5)), vec2(_GLF_FUZZED(-12.32), (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)), injectionSwitch))[1]), bvec2(false, true)))).x, abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * determinant(mat2(1.0, 0.0, 0.0, 1.0)))) - log(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), (float(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)), injectionSwitch), mix(vec2((max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], _GLF_FUZZED(-0.5)), vec2(_GLF_FUZZED(-12.32), (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)), injectionSwitch))[1]), bvec2(false, true)))).x, abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * determinant(mat2(1.0, 0.0, 0.0, 1.0)))) - log(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))) / 1.0)) / 1.0)), float(_GLF_FUZZED(vec3(-27.75, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-79.91, 0.0 + (_GLF_IDENTITY(-79.91, (false ? _GLF_FUZZED(-112.457) : -79.91)))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(-79.91, clamp(-79.91, -79.91, _GLF_IDENTITY(-79.91, (-79.91) * 1.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(-79.91, clamp(-79.91, -79.91, _GLF_IDENTITY(-79.91, (-79.91) * 1.0)))), mix(float(float(_GLF_IDENTITY(-79.91, clamp(-79.91, -79.91, _GLF_IDENTITY(-79.91, (-79.91) * 1.0))))), float(_GLF_FUZZED(-68.06)), bool(false)))) - 0.0), float(_GLF_FUZZED((_GLF_IDENTITY(-91.41 + -46.70, mix(float(_GLF_FUZZED(-1.3)), float(-91.41 + -46.70), bool(true)))))), bool(false))), (_GLF_IDENTITY(-79.91, mix(float(_GLF_IDENTITY(-79.91, _GLF_IDENTITY(clamp(-79.91, -79.91, _GLF_IDENTITY(_GLF_IDENTITY(-79.91, 1.0 * (-79.91)), _GLF_IDENTITY((-79.91), max(_GLF_IDENTITY((-79.91), min((-79.91), (-79.91))), (-79.91))) * 1.0)), max(clamp(-79.91, -79.91, _GLF_IDENTITY(-79.91, _GLF_IDENTITY((-79.91), max(_GLF_IDENTITY((-79.91), min((-79.91), (-79.91))), (-79.91))) * 1.0)), clamp(-79.91, -79.91, _GLF_IDENTITY(-79.91, _GLF_IDENTITY((-79.91), _GLF_IDENTITY(max(_GLF_IDENTITY((-79.91), min((-79.91), (-79.91))), (-79.91)), max(max(_GLF_IDENTITY((-79.91), min((-79.91), (-79.91))), (-79.91)), max(_GLF_IDENTITY((-79.91), min((-79.91), (-79.91))), (-79.91))))) * 1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((-91.41 + -46.70)), _GLF_IDENTITY((_GLF_FUZZED((-91.41 + -46.70))) * 1.0, min((_GLF_FUZZED((-91.41 + -46.70))) * 1.0, (_GLF_FUZZED((-91.41 + -46.70))) * 1.0)))), float(mat2x4(float(_GLF_FUZZED((-91.41 + -46.70))), 1.0, exp(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, _GLF_IDENTITY(-4.0, (true ? -4.0 : _GLF_FUZZED(8.8))))))), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(80.62)), float(0.0), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(bool(true), true, true)), ! (! (bool(bvec3(bool(true), true, true))))))))), bool(true))), 1.0, 0.0, 0.0, 0.0))), bool(false)))) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))), 661.175).p)), bool(false))))))))).x, min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat4x3(injectionSwitch.x, cos(0.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat4x3(injectionSwitch.x, cos(0.0), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5428.9694)), bool(false))))))) - 0.0), injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))))).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))).x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u)))))).x));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false))), false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))) - sqrt(abs(vec2(0.0, 0.0)))), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0))))), 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + _GLF_IDENTITY((vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((vec2(0.0, 0.0)), mat2(1.0) * ((vec2(0.0, 0.0))))))), vec2(0.0, 0.0), vec2(0.0, 0.0))), 0.0, 0.0)), mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(448.256)), vec2((vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))), 0.0, 0.0)))[0], (vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.2))), _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, min(-4.0, -4.0)), (-4.0) / 1.0), -1630.9287)) : vec2(0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)), clamp(clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))))), 0.0, 0.0)))[1]), bvec2(true, true)))))), (_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 0.0)))) - vec2(0.0, 0.0)) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))), min(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 0.0)))) - vec2(0.0, 0.0)) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 0.0)))) - vec2(0.0, 0.0)) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)))))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-8681.3469)), vec2(_GLF_FUZZED(2405.5095), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0))))), 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((vec2(0.0, 0.0)), mat2(1.0) * ((vec2(0.0, 0.0)))))), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY((vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((vec2(0.0, 0.0)), mat2(1.0) * ((vec2(0.0, 0.0)))))), 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0)), (vec2(mat3x4(_GLF_IDENTITY((vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((vec2(0.0, 0.0)), mat2(1.0) * ((vec2(0.0, 0.0)))))), 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0))) - sin(vec2(0.0, 0.0))))), vec2(0.0, 0.0), vec2(0.0, 0.0))), 0.0, 0.0)), mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(448.256)), vec2((vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))), 0.0, 0.0)))[0], _GLF_IDENTITY((vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.2))), _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), clamp(0.0, 0.0, 0.0)))), 0.0))), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-4.0, (-4.0) / 1.0), -1630.9287)) : vec2(0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)), clamp(clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.9)), bool(false)))) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.4)), float(0.0), bool(true))))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))))), 0.0, 0.0)))[1], mix(float((vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.2))), _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), clamp(0.0, 0.0, 0.0)))), 0.0))), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-4.0, (-4.0) / 1.0), -1630.9287)) : vec2(0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)), clamp(clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.9)), bool(false)))) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.4)), float(0.0), bool(true))))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))))), 0.0, 0.0)))[1]), float(_GLF_FUZZED(vec4(-3.9, 45.60, 569.530, -4045.3808).q)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(true, true)))))), (_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 0.0)))) - vec2(0.0, 0.0)) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)))))) * _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-6.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), max(_GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), min(_GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), clamp(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), max(vec2(1.0, 1.0), vec2(1.0, 1.0)), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0))))), 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, 0.0))), max(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, 0.0)))) - vec2(0.0, 0.0)))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + _GLF_IDENTITY((vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((vec2(0.0, 0.0)), mat2(1.0) * ((vec2(0.0, 0.0))))))), vec2(0.0, 0.0), vec2(0.0, 0.0))), 0.0, 0.0)), mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(448.256)), vec2((vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-4.0, -1630.9287)) : vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0))), 0.0, 0.0)))[0], (vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.2))), _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-4.0, (-4.0) / 1.0), -1630.9287)) : vec2(0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)), clamp(clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))))), 0.0, 0.0), (mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.2))), _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-4.0, (-4.0) / 1.0), -1630.9287)) : vec2(0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)), clamp(clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))))), 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))))[1]), bvec2(true, true)))))), (_GLF_IDENTITY(vec2(0.0, 0.0), mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2886.3271)), bool(false))))))) - vec2(0.0, 0.0)) + (vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)))))) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(cos(0.0), abs(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), 1.0))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) << 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))) && true), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)), _GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((workgroup_base), uint(uint((workgroup_base)))))) ^ 0u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec4(_GLF_IDENTITY(uint(4u), 0u ^ (_GLF_IDENTITY(uint(4u), ~ (~ (_GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u)))))), 1u, 1u, 1u))))) | (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u | (subgroup_size), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 1u * (0u)) : _GLF_FUZZED(subgroup_size))) | (subgroup_size)) | 0u)))), (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) | (subgroup_size)))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), 0u | (_GLF_IDENTITY((subgroup_local_id + 1), 0u | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), 0u ^ ((subgroup_local_id + 1))))))), 1u)), uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), (true ? uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) : _GLF_FUZZED(num_workgroup)))), min(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), (true ? uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) : _GLF_FUZZED(num_workgroup)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), (true ? uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) : _GLF_FUZZED(num_workgroup))))))), 0u | ((subgroup_local_id + 1))), 1u)))))), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) | ((subgroup_local_id + 1)))) | (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((virtual_gid << 162702u))))))) ^ 0u) % subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), 0u | (_GLF_IDENTITY((subgroup_local_id + 1), 0u | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), 0u ^ ((subgroup_local_id + 1))))))), 1u)), uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), (true ? uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) : _GLF_FUZZED(num_workgroup)))), min(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), (true ? uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) : _GLF_FUZZED(num_workgroup)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), (true ? uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) : _GLF_FUZZED(num_workgroup))))))), 0u | ((subgroup_local_id + 1))), 1u)))))), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) | ((subgroup_local_id + 1)))) | (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((virtual_gid << 162702u))))))) ^ 0u) % subgroup_size) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) + 0u) + 1))) % subgroup_size)) / 1u, max((((subgroup_local_id + 1) % subgroup_size)) / 1u, (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), ~ (~ _GLF_IDENTITY((uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (_GLF_IDENTITY((uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), max((uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) | ((uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), ~ (~ (uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.2, 6.6)))), 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), 1u), ~ (~ (uvec4(((subgroup_local_id + 1) % subgroup_size), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))))))) / 1u)))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, (167583u & 0u)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (subgroup_size)))))) / 1u, (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, (167583u & 0u)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (subgroup_size)))))) / 1u, clamp(((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, (167583u & 0u)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (subgroup_size)))))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, (167583u & 0u)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (subgroup_size)))))) / 1u, clamp(((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, (167583u & 0u)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (subgroup_size)))))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, (167583u & 0u)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (subgroup_size)))))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, (167583u & 0u)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (subgroup_size)))))) / 1u)), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, (167583u & 0u)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (subgroup_size)))))) / 1u, max(((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, (167583u & 0u)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (subgroup_size)))))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, (167583u & 0u)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (subgroup_size)))))) / 1u))))) | 0u))) - 0u, min((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (0u & 181269u) | (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u | (uint(5u)))) - _GLF_IDENTITY(0u, 0u | (0u))))), uint(5u))) ^ (subgroup_size)))))) / 1u)) - 0u, (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uint(5u), uint(uvec4(uint(5u), 0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), (1u ^ 1u) ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), 0u + (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))), 1u))))) ^ (subgroup_size)))))) / 1u)) - 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false), false))))))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false), false)))))))))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false))))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false))))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false))))), false, false), true)), true))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false))))), false, false)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false))))) && true)))))), true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))))), _GLF_IDENTITY(false || (! ((false))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(! ((false)), ! _GLF_IDENTITY((! (! ((false)))), false || ((! (! ((false)))))))), true, false, true)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false || (! ((false))), ! _GLF_IDENTITY((! (false || (! ((false))))), ((! (false || (! ((false)))))) && true)), true, _GLF_IDENTITY(false, false || (false)), true))), ((bool(bvec4(_GLF_IDENTITY(false || (! ((false))), ! _GLF_IDENTITY((! (false || (! ((false))))), ((! (false || (! ((false)))))) && true)), true, _GLF_IDENTITY(false, false || (false)), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! _GLF_IDENTITY((! (! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))), ! (! (_GLF_IDENTITY((! (! (! (false)))), false || ((! (! (! (false)))))))))))))) && true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), ! (! (_GLF_IDENTITY((! (! (! (false)))), ! (! ((! (! (! (false)))))))))))) && true))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), ! (! (_GLF_IDENTITY((! (! (! (false)))), ! (! ((! (! (! (false)))))))))))) && true))))))), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true)) && true))), true))))))), bool(bvec3(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))))), _GLF_IDENTITY(false || (! ((false))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false || (! ((false))), ! _GLF_IDENTITY((! (false || (! ((false))))), ((! (false || (! ((false)))))) && true)), true, _GLF_IDENTITY(false, false || (false)), true)))))))))), bool(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))))), _GLF_IDENTITY(false || (! ((false))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false || (! ((false))), ! _GLF_IDENTITY((! (false || (! ((false))))), ((! (false || (! ((false)))))) && true)), true, _GLF_IDENTITY(false, false || (false)), true)))))))))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))))), _GLF_IDENTITY(false || (! ((false))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false || (! ((false))), ! _GLF_IDENTITY((! (false || (! ((false))))), ((! (false || (! ((false)))))) && true)), true, _GLF_IDENTITY(false, false || (false)), true))))))))))), bool(bvec4(! (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))))), _GLF_IDENTITY(false || (! ((false))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false || (! ((false))), ! _GLF_IDENTITY((! (false || (! ((false))))), ((! (false || (! ((false)))))) && true)), true, _GLF_IDENTITY(false, false || (false)), true))))))))))), true, false, true))))), true))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), ! (! (_GLF_IDENTITY((! (! (! (false)))), ! (! ((! (! (! (false)))))))))))) && true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), ! (! (_GLF_IDENTITY((! (! (! (false)))), ! (! ((! (! (! (false)))))))))))) && true))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), ! (! (_GLF_IDENTITY((! (! (! (false)))), ! (! ((! (! (! _GLF_IDENTITY((false), ((false)) || false)))))))))))) && true))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), ! (! (_GLF_IDENTITY((! (! (! (false)))), ! (! ((! (! (! (false)))))))))))) && true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), ! (! (_GLF_IDENTITY((! (! (! (false)))), ! (! ((! (! (! (false)))))))))))) && true))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), ! (! (_GLF_IDENTITY((! (! (! (false)))), ! (! ((! (! (! _GLF_IDENTITY((false), ((false)) || false)))))))))))) && true))))))), true), false), bvec3(bvec4(bvec3(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), ! (! (_GLF_IDENTITY((! (! (! (false)))), ! (! ((! (! (! (false)))))))))))) && true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), ! (! (_GLF_IDENTITY((! (! (! (false)))), ! (! ((! (! (! (false)))))))))))) && true))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), ! (! (_GLF_IDENTITY((! (! (! (false)))), ! (! ((! (! (! _GLF_IDENTITY((false), ((false)) || false)))))))))))) && true))))))), true), false), false))))), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), false || ((! (! (! (false)))))))) && true)) && true))), true))))))), false, true)))))))), true, false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((_GLF_IDENTITY(true, true && (true))), true, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), false || ((! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && _GLF_IDENTITY(true, (true) || false)), false)), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true, true))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, true && ((_GLF_IDENTITY(true, ! (! (true)))) || false))), false), true)))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))))))))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true)))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true)), true && (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true))))))))) || false)), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true, true)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, true, true))), ! (! (! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true, true))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))), (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, true && ((_GLF_IDENTITY(true, ! (! (true)))) || false))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), true)))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))))))))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))))))))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))))))))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true))))), bool(bvec3(bool(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))))))))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true))))), true, true)))))))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true)), true && (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), true))))))))) || false))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true)))), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), _GLF_IDENTITY(true, ! (! (true)))))))))) && _GLF_IDENTITY(true, (true) || false)), false)), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), _GLF_IDENTITY(true, ! (! (true)))))))))) && _GLF_IDENTITY(true, (true) || false)), false)), true)), ! (! (bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), _GLF_IDENTITY(true, ! (! (true)))))))))) && _GLF_IDENTITY(true, (true) || false)), false)), true))))), true, true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true, true))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true)))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, true && ((_GLF_IDENTITY(true, ! (! (true)))) || false))), false), true)))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))))))))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))))))))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))))))))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true))), false))), false)))), true)))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true))))))))) || false))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true)))), false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(true, ! (! (true)))))))))) && _GLF_IDENTITY(true, (true) || false)), false)), true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), ! (! (! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true, true))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true)))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, true && ((_GLF_IDENTITY(true, ! (! (true)))) || false))), false), true)))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))))))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true)))), _GLF_IDENTITY(true, ! (! (true))) && (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true)), true && (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), true)))), true))))))))) || false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), ! (! (bool(bvec4((false), true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[0], _GLF_FUZZED(2.2)), bvec2(true, false))).x, mix(float(_GLF_FUZZED(-8.2)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(60.87) : injectionSwitch.y)))), false, false, true)), (bool(bvec4(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(60.87) : injectionSwitch.y)))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(60.87) : injectionSwitch.y)))), false, false, true)), (bool(bvec4(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(60.87) : injectionSwitch.y)))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(60.87) : injectionSwitch.y)))), false, false, true)), (bool(bvec4(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(60.87) : injectionSwitch.y)))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3984.9684), _GLF_FUZZED(-41.13)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2503.9345)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false || (_GLF_DEAD(false))), ! (! (bool(false || (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false || (_GLF_DEAD(false))), ! (! (bool(false || (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false || (_GLF_DEAD(false))), ! (! (bool(false || (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(bool(false || (_GLF_DEAD(false))), ! (! (bool(false || (_GLF_DEAD(false)))))))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) / 1))), ((1)) - (0 | 0))), 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(1, 1)))), 1, 1));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0))).x))), (92823u & 0u) + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0))).x)), ((subgroup_local_id) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0), mat3(mat3(mat3(injectionSwitch, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0)))))).x))) | ((subgroup_local_id) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0))).x))))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), uint(uvec4((subgroup_local_id), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) || _GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0))) + abs(0.0)) < injectionSwitch.y))))), false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) ^ 0), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (next_virtual_gid) | 0u)], uint(2), 4, 64, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(4, 4)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((85873 << -98756)), 0 ^ (_GLF_FUZZED((85873 << -98756)))), max(_GLF_IDENTITY(_GLF_FUZZED((85873 << -98756)), 0 ^ (_GLF_FUZZED((85873 << -98756)))), _GLF_IDENTITY(_GLF_FUZZED((85873 << -98756)), 0 ^ (_GLF_FUZZED((85873 << -98756)))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
