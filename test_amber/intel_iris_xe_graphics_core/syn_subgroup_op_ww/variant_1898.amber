#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_26 {
 uint _f0;
 mat4x3 _f1;
 mat4x3 _f2;
 uvec4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_25 {
 vec3 _f0;
 int _injected_loop_counter;
} ;

struct _GLF_struct_24 {
 mat2 _f0;
 bvec3 _f1;
 ivec3 _f2;
 uint _f3;
 uvec2 _f4;
 mat3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_27 {
 _GLF_struct_24 _f0;
 uvec2 _f1;
 bvec4 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_26 _f4;
} ;

struct _GLF_struct_28 {
 uvec2 _f0;
 _GLF_struct_27 _f1;
 bool _f2;
} ;

struct _GLF_struct_21 {
 vec3 _f0;
} ;

struct _GLF_struct_20 {
 uvec2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_22 {
 uint subgroup_size;
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 bvec3 _f2;
 mat2x4 _f3;
 vec4 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_18 {
 vec4 _f0;
 bvec2 _f1;
 int _f2;
 mat3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_19 {
 _GLF_struct_18 _f0;
} ;

struct _GLF_struct_23 {
 _GLF_struct_19 _f0;
 _GLF_struct_22 _f1;
} ;

struct _GLF_struct_17 {
 uint next_virtual_gid;
 mat3x4 _f0;
} ;

struct _GLF_struct_14 {
 mat3x4 _f0;
 float _f1;
 mat4x2 _f2;
 float _f3;
 mat3 _f4;
 uvec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_13 {
 mat4x2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 bvec4 _f1;
 vec2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_11 {
 float _f0;
} ;

struct _GLF_struct_15 {
 bvec2 _f0;
 _GLF_struct_11 _f1;
 int _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 mat2x4 _f1;
 uint virtual_gid;
 bvec2 _f2;
 bvec2 _f3;
 int _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_8 {
 uint _f0;
 bool _f1;
 mat4x2 _f2;
 uvec2 _f3;
 mat4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 ivec2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 _GLF_struct_7 _f1;
 bvec2 _f2;
 _GLF_struct_8 _f3;
 uint _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_16 {
 _GLF_struct_10 _f0;
 mat3x4 _f1;
 uvec2 _f2;
 _GLF_struct_15 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 mat4 _f1;
 mat4x3 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 vec2 _f1;
 mat3 _f2;
 uint _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 ivec4 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 mat4x3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint num_workgroup;
 _GLF_struct_5 _f2;
 uvec2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), _GLF_IDENTITY((bool(bvec3(true, true, false))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec3((bool(bvec3(true, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), (_GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false)))))) || false), (bool(bvec3(true, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bvec2(bool(bvec3(true, true, false)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true, false)))))))))), (bool(bvec3(true, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))), bool(_GLF_IDENTITY(bvec2(bool(bvec3(true, true, false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))))))))), true, false)), true), false), bvec3(bvec4(bvec3(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))))))))), true, false)), true), false), false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y))))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), clamp(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), clamp(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), clamp(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x4(-8023.1409, -716.178, -4144.2777, 7.2, 8.3, 6.3, -2405.9518, 748.404, 1.4, -6.4, 828.510, -259.325)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0))))), injectionSwitch)).y))))))))) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_19(_GLF_struct_18(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true, false)))))), false))), 1, mat3(1.0), uvec3(1u))), _GLF_struct_22(gl_SubgroupSize, _GLF_struct_20(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u))), uvec2(1u, 1u) * ((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u))))) + uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (uvec2(1u))))), bvec2(true)), _GLF_struct_21(vec3(1.0)), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), mat2x4(1.0), vec4(1.0), mat4(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), false || (bool(_GLF_IDENTITY(false, false || (false))))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false)))))))))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (false), (! (false)) && true)), false, false)), false || (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (false), (! (false)) && true)), false, false)), false || (bool(bvec3((_GLF_IDENTITY(! (false), (! (false)) && true)), false, false)))))), ! (! (bool(bvec3((_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_IDENTITY(false, bool(bool(false))), false)))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true, true))))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_0(ivec3(1), mat3(1.0)), _GLF_struct_1(mat3x4(1.0), mat4x3(1.0), uvec3(1u)), gl_NumWorkGroups.x, _GLF_struct_5(_GLF_struct_2(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), mix(float(_GLF_FUZZED(0.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), 1.0 * (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((1.0), (1.0))) / 1.0)) - 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mat3(1.0), 1u, uvec3(1u)), _GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(ivec4(1), (ivec4(1)) << ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) + determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ivec4(1), ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1))))), _GLF_struct_3(mat3(1.0), mat4(1.0), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(mat4(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(243.972) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)))), mix(float(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-65.35) : 0.0)), 0.0, 0.0)), (true ? _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-65.35) : 0.0)), 0.0, 0.0)) : _GLF_FUZZED(vec3(2.4, 8948.8863, 76.76)[0])))))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.9)), bool(false))), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, 1.0)), (float(mat2(1.0, 0.0, 0.0, 1.0))) - 0.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 1.0), (mat4(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-65.35) : 0.0)), 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.9)), bool(false))), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 0.0, 1.0)), (float(mat2(1.0, 0.0, 0.0, 1.0))) - 0.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3796.5189), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2549.7984)), bvec2(true, false))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), float(_GLF_FUZZED(-9684.9569)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), mat4x3(1.0)), _GLF_struct_4(ivec4(1), vec4(1.0)), uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), uvec2(1u));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(97790u) : (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))) << 0u))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-515.652)), float(injectionSwitch.x), bool(true)))))))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) >> 0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) >> 0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) >> 0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)))))) << _GLF_IDENTITY(uint(8u), uint(8u))))))) / uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u), 1u, _GLF_IDENTITY(1u, (1u) | (1u)))), min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), max(_GLF_IDENTITY((0u) | (0u), 0u | ((0u) | (0u))), (0u) | (0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (true ? _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) >> 0u) : _GLF_FUZZED(subgroup_id))))))) * (1u & 1u)))), 0u)), uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ~ (~ ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(120703u) : 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, min(8u, 8u)))))))))))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) - 0u))))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(0u, 0u | (0u)) << _GLF_IDENTITY(uint(8u), uint(8u))))))) / uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(_GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, _GLF_IDENTITY(-58.15, (false ? _GLF_FUZZED(181.736) : -58.15)), 8.2) , workgroup_size), (true ? _GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), uint(uvec3((_GLF_IDENTITY(mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2), mat3(_GLF_IDENTITY(mat4(mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2)), transpose(transpose(mat4(mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2))))))) , workgroup_size), 0u, 0u))) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (1u ^ 0u) * (0u)), (_GLF_IDENTITY(0u, (1u ^ 0u) * (0u))) << 0u) + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / (1u & 1u), (true ? _GLF_IDENTITY((0u) / (1u & 1u), ((0u) / (1u & 1u)) - 0u) : _GLF_FUZZED(atomicAnd(workgroup_size, workgroup_size))))) << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) << 0u)))))))))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), (true ? _GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), uint(uvec3((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), 0u, 0u))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), (true ? _GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), uint(uvec3((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), 0u, 0u))) : _GLF_FUZZED(workgroup_size))), clamp(_GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), (true ? _GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), uint(uvec3((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), 0u, 0u))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), (true ? _GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), uint(uvec3((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), 0u, 0u))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), (true ? _GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), uint(uvec3((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), 0u, 0u))) : _GLF_FUZZED(workgroup_size)))))) << 0u)) : _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(0u, (1u ^ 0u) * (0u)) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / (1u & 1u), (true ? (0u) / (1u & 1u) : _GLF_FUZZED(atomicAnd(workgroup_size, workgroup_size))))) << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) << 0u))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / (1u & 1u), (true ? (0u) / (1u & 1u) : _GLF_IDENTITY(_GLF_FUZZED(atomicAnd(workgroup_size, workgroup_size)), (_GLF_IDENTITY(_GLF_FUZZED(atomicAnd(workgroup_size, workgroup_size)), 0u | (_GLF_FUZZED(atomicAnd(workgroup_size, workgroup_size))))) | 0u)))) << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) << 0u)))))))))))))))) >> uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (true ? 0u << _GLF_IDENTITY(uint(8u), uint(8u)) : _GLF_FUZZED(subgroup_local_id)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (uint(8u)) / _GLF_IDENTITY(1u, (1u) ^ 0u))) + 0u), uint(8u)))), ~ (~ (_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(8u)) / 1u, ~ (~ ((uint(8u)) / 1u))))) + 0u), uint(8u)))), (((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (uint(8u)) / 1u)) + 0u), uint(8u))))) << 0u)))) / 1u))))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))) / uvec3(1u, 1u, 1u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))) / uvec3(1u, 1u, 1u))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), max((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u))) | 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (false ? _GLF_FUZZED(45678u) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)))))) << _GLF_IDENTITY(uint(8u), uint(8u))))), clamp(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), max((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u))) | 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (false ? _GLF_FUZZED(45678u) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)))))) << _GLF_IDENTITY(uint(8u), uint(8u))))), (uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), max((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u))) | 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (false ? _GLF_FUZZED(45678u) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)))))) << _GLF_IDENTITY(uint(8u), uint(8u)))))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), max((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u))) | 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (false ? _GLF_FUZZED(45678u) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)))))) << _GLF_IDENTITY(uint(8u), uint(8u))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), max((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u))) | 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (false ? _GLF_FUZZED(45678u) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)))))) << _GLF_IDENTITY(uint(8u), uint(8u))))), uvec3(0u, 0u, 0u) | (uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), max((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(93280u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u))) | 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (false ? _GLF_FUZZED(45678u) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u))) + 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)))))) << _GLF_IDENTITY(uint(8u), uint(8u))))))))))) / uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))) * (1u & 1u)))), 0u)), uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ~ (~ ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(120703u) : 0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))) * (1u & 1u)))), 0u)), uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ~ (~ ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(120703u) : 0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))) * (1u & 1u)))), 0u)), uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ~ (~ ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(120703u) : 0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) - 0u)))), max(uvec4(gl_WorkGroupID, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) - 0u)))), uvec4(gl_WorkGroupID, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) - 0u))))))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))) / uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(_GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), (true ? _GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), uint(uvec3((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), 0u, 0u))) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(0u, (1u ^ 0u) * (0u)) + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / (1u & 1u), (true ? (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) / (1u & 1u) : _GLF_FUZZED(atomicAnd(workgroup_size, workgroup_size))))) << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) << 0u)))))))))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, _GLF_IDENTITY(803.735, clamp(_GLF_IDENTITY(803.735, (803.735) - 0.0), 803.735, 803.735)), 62.45, 7.6, -58.15, 8.2) , workgroup_size), (true ? _GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), uint(uvec3((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), 0u, 0u))) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(0u, (1u ^ 0u) * _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), ((0u)) / 1u), (0u))), (0u)))) + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / (1u & 1u), (true ? (0u) / (1u & 1u) : _GLF_FUZZED(atomicAnd(workgroup_size, workgroup_size))))) << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) << 0u)))))), (false ? _GLF_FUZZED((workgroup_size * 77282u)) : (false ? _GLF_FUZZED(_GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, _GLF_IDENTITY(803.735, clamp(_GLF_IDENTITY(803.735, (803.735) - 0.0), 803.735, 803.735)), 62.45, 7.6, -58.15, 8.2) , workgroup_size), (true ? _GLF_IDENTITY((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), uint(uvec3((mat3(-904.782, -9.0, 3.3, -637.770, 803.735, 62.45, 7.6, -58.15, 8.2) , workgroup_size), 0u, 0u))) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(0u, (1u ^ 0u) * _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), ((0u)) / 1u), (0u))), (0u)))) + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / (1u & 1u), (true ? (0u) / (1u & 1u) : _GLF_FUZZED(atomicAnd(workgroup_size, workgroup_size))))) << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) << 0u))))))))))))))) >> uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (true ? 0u << _GLF_IDENTITY(uint(8u), uint(8u)) : _GLF_FUZZED(subgroup_local_id)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (uint(8u)) / 1u)) + 0u), uint(8u)))), ~ (~ (_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (uint(8u)) / 1u)) + 0u), uint(8u)))), (((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (uint(8u)) / 1u)) + 0u), uint(8u))))) << 0u)))) / 1u), (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (true ? 0u << _GLF_IDENTITY(uint(8u), uint(8u)) : _GLF_FUZZED(subgroup_local_id)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (uint(8u)) / 1u)) + 0u), uint(8u)))), ~ (~ (_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (uint(8u)) / 1u)) + 0u), uint(8u)))), (((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (uint(8u)) / 1u)) + 0u), uint(8u))))) << 0u)))) / 1u)) | 0u))))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_10(mat2(1.0), _GLF_struct_7(_GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0)), (false ? _GLF_FUZZED(mat4(408.975, -71.58, 1.8, -8.1, 6.1, 80.35, 8.9, 129.998, -9.9, -2157.8009, -265.831, -5.5, 122.600, -1479.8681, -5857.0336, -45.83)) : transpose(mat4(1.0)))))), ivec2(1), vec3(1.0)), bvec2(true), _GLF_struct_8(1u, true, mat4x2(1.0), uvec2(1u), mat4(1.0), mat4x3(1.0)), 1u, _GLF_struct_9(ivec2(1), mat2x4(1.0), workgroup_base + subgroup_id * _GLF_struct_replacement_23._f1.subgroup_size + subgroup_local_id, bvec2(true), bvec2(true), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), (false ? _GLF_FUZZED(-93092) : ~ (1))))), mat4x3(1.0))), mat3x4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(5113u, 12472u)) : uvec2(1u)), uvec2(0u, 0u) | ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(5113u, 12472u)) : uvec2(1u))))), _GLF_struct_15(bvec2(true), _GLF_struct_11(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1663.3926) : 1.0))), 1, _GLF_struct_12(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u)))) * uvec4(1u, 1u, 1u, 1u)), bvec4(true), vec2(1.0), ivec3(1)), _GLF_struct_13(mat4x2(1.0), bvec3(true)), _GLF_struct_14(mat3x4(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mat4x2(1.0), 1.0, mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), uvec2(1u), vec2(1.0))), mat3x2(1.0));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), bool(bool(_injected_loop_counter < (1 & 1))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_23._f1.subgroup_size, uint(uvec3(subgroup_id * _GLF_struct_replacement_23._f1.subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) * 1u) % _GLF_IDENTITY(_GLF_struct_replacement_23._f1.subgroup_size, clamp(_GLF_struct_replacement_23._f1.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_23._f1.subgroup_size, ~ (~ (_GLF_struct_replacement_23._f1.subgroup_size))), _GLF_IDENTITY(_GLF_struct_replacement_23._f1.subgroup_size, (_GLF_struct_replacement_23._f1.subgroup_size) * 1u)))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_23._f1.subgroup_size), min(((subgroup_local_id + 1) % _GLF_struct_replacement_23._f1.subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_23._f1.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_23._f1.subgroup_size) * 1u)), uint(uvec4(((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % _GLF_struct_replacement_23._f1.subgroup_size), 0u, 0u, 1u)))))) | 0u), mat3x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))) && _GLF_IDENTITY(true, true && (true))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.7)), bool(false))), injectionSwitch.x)), abs(1.0), exp(0.0), abs(1.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.7)), bool(false))), injectionSwitch.x)), abs(1.0), exp(0.0), abs(1.0), _GLF_IDENTITY(0.0, round(length(normalize(1.0))) * (0.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   _GLF_IDENTITY(buf[_GLF_struct_replacement_16._f0._f5.virtual_gid] = 1, (false ? _GLF_FUZZED((70314u ^ bitfieldExtract(subgroup_local_id, 96501, -53245))) : _GLF_IDENTITY(buf[_GLF_struct_replacement_16._f0._f5.virtual_gid] = 1, ~ (~ (buf[_GLF_struct_replacement_16._f0._f5.virtual_gid] = 1)))));
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) && true) || false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? 0 : _GLF_FUZZED(ivec4(-51923, 42364, 65199, -91989)[0]))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) * ivec2(1, 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_injected_loop_counter) : int(0))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(bitfieldInsert(_injected_loop_counter, (_injected_loop_counter), -19917, _injected_loop_counter))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (int(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))))))), (38674 & 0) ^ (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))))) + 0)) - 0))), max(_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), (_GLF_IDENTITY(int(0), (int(0)) | (int(_GLF_IDENTITY(0, (0) >> 0))))) - 0))), min(_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))) - 0))), max(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) - 0)), (_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), 0 | (int(0)))))) - 0)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) - 0)), (_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), 0 | (int(0)))))) - 0)), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) - 0)), (_GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), 0 | (int(0)))))) - 0)))), (~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) - 0)), (_GLF_IDENTITY(int(0), (int(0)) | _GLF_IDENTITY((_GLF_IDENTITY(int(0), _GLF_IDENTITY(0 | (int(0)), min(0 | (int(0)), 0 | (int(0)))))), ((_GLF_IDENTITY(int(0), _GLF_IDENTITY(0 | (int(0)), min(0 | (int(0)), 0 | (int(0))))))) | ((_GLF_IDENTITY(int(0), _GLF_IDENTITY(0 | (int(0)), min(0 | (int(0)), 0 | (int(0)))))))))) - 0))))) + (0 | 0))))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))) - 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))) - 0), (_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))) - 0)) ^ 0))))))), int(int(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) | (int(_GLF_IDENTITY(0, (0) - 0))))) - 0))))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))) - 0)))))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), int(0))), (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0)))), (int(int(0))) * 1)), _GLF_IDENTITY(_GLF_IDENTITY(min(int(int(int(0))), int(int(int(0)))), (min(int(int(int(0))), int(int(int(0))))) << 0), min(min(int(int(int(0))), int(int(int(0)))), _GLF_IDENTITY(min(int(int(int(0))), int(int(int(0)))), max(min(int(int(int(0))), int(int(int(0)))), min(int(int(int(0))), int(int(int(0)))))))))))))) >> _GLF_IDENTITY(int(0), int(0)))) || false)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) && true), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))) || false)), _GLF_IDENTITY(bool(bvec2(bool(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(bool(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))), false))) || false)))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))) || false), false)))), true)))))))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), true, true))))))));
          }
         else
          {
          }
         barrier();
        }
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))))))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))) || false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false), bool(bvec2(false, false)))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true)) && true));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) >> 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))), (false ? _GLF_FUZZED((+ workgroup_id)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), workgroup_base, workgroup_base), (clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, min(0u, 0u))), workgroup_base, workgroup_base)) ^ 0u))) : _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, (_GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) ^ 0u, ((subgroup_local_id + 1) ^ 0u) - 0u)) | 0u)) ^ 0u)))), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.96)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.96)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1)))), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.96)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.96)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.96)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.96)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.96)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.96)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.96)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.96)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1)))))))) | 0u))), subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0))))) < _GLF_struct_replacement_23._f1.subgroup_size)
        {
         atomicStore(buf[_GLF_struct_replacement_17.next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(0, 0 ^ (0)), 0), max(ivec3(_GLF_IDENTITY(4, (4) / 1), 0, 0), ivec3(_GLF_IDENTITY(4, (4) / 1), 0, 0)))), int(ivec3(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) / 1)), 0, 0), max(ivec3(_GLF_IDENTITY(4, (4) / 1), 0, 0), ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) / 1), 0, 0)))), 0, (1 & 1))))), max(4, 4)), 64, 4);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))
              barrier();
            }
          }
         else
          {
           for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 21366); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (0 ^ 1), false || (_injected_loop_counter < (0 ^ 1)))); _injected_loop_counter ++)
            {
             subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (! (false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))), true, true))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false || (! (! (! (false))))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false || (! (! (! (false))))), true, true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))), true))))), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(! (false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))) || false)))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))), true, true))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false || (! (! (! (false))))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false || (! (! (! (false))))), true, true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))), true))))), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(! (false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))) || false)))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), false, true))))) && true)))))), bool(bool(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (! (false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))), true, true))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false || (! (! (! (false))))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false || (! (! (! (false))))), true, true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))), true))))), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(! (false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))) || false)))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))), true, true))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false || (! (! (! (false))))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false || (! (! (! (false))))), true, true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))), true))))), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(! (false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))) || false)))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), false, true))))) && true)))))))))));
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true))))))))))))
              barrier();
             barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), (true ? float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(794.490)))) : _GLF_FUZZED(4.3))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))));
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     barrier();
                    }
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
                barrier();
              }
             for(_GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(uvec2(1u), _GLF_struct_27(_GLF_struct_24(mat2(1.0), bvec3(_GLF_IDENTITY(true, bool(bool(true)))), ivec3(1), 1u, uvec2(1u), mat3(1.0), vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0))), uvec2(1u), bvec4(_GLF_IDENTITY(true, ! (! (true)))), _GLF_struct_25(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0)), 0), _GLF_struct_26(1u, mat4x3(1.0), mat4x3(1.0), uvec4(1u), mat2x4(1.0))), true); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_28._f1._f3._injected_loop_counter < 1); _GLF_struct_replacement_28._f1._f3._injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                }
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(ivec3(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : int(4))), 1, 0))), _GLF_IDENTITY(int(4), (false ? _GLF_IDENTITY(_GLF_FUZZED(-759), max(_GLF_FUZZED(-759), _GLF_FUZZED(-759))) : int(4))))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 ^ (4)))))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           for(int _injected_loop_counter = ((1 ^ 1) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, clamp(4, 4, 4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(3847.2745) : _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0, 1.0, sin(0.0)), (mat3x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(3847.2745) : _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0, 1.0, sin(0.0))) * mat3(1.0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (22553 & 0)); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || false), (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0))); _injected_loop_counter --)
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))) && true)))))
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(5), int(5))))) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 | 0) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec4(int(2), 0, 1, 0)))))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 & _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1)))))), (false ? _GLF_FUZZED(12375) : (1 & _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1))))))))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) * 1)))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                        barrier();
                      }
                     else
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 1 * (0))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) << 0)); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         atomicStore(buf[_GLF_struct_replacement_17.next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-88853) : _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))))), (int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0)))))) + 0)))), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-88853) : _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))))), (int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0)))))) + 0))))) | (0 >> _GLF_IDENTITY(int(1), int(1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-88853) : _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))))), (int(ivec3(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(4, 4))))) / 1), 4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0)))))) + 0))))), _GLF_IDENTITY(((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-88853) : _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))))), (int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0)))))) + 0)))))) | 0, (((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-88853) : _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))))), (int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0)))))) + 0)))))) | 0) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-88853) : _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))))), (int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0)))))) + 0))))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0), (false ? _GLF_FUZZED(-88853) : _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) + 0, ~ (~ (_GLF_IDENTITY((int(7)) + 0, (false ? _GLF_FUZZED(1443) : (int(7)) + 0)))))))))), (int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0)), max(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0)), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0)))))))) + 0)))))) >> 0))) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.1)))))), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (0 & _GLF_IDENTITY(82327, _GLF_IDENTITY(~ (~ (82327)), clamp(~ (~ (82327)), ~ (~ (82327)), ~ (~ (82327)))))) + (64)), 64, 64)), 4);
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((0 ^ 0) | 1, min(_GLF_IDENTITY((0 ^ 0) | 1, ((0 ^ 0) | 1) ^ 0), (0 ^ 0) | 1)))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ((1) * 1) << 0))) * 1, min(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), ((_GLF_IDENTITY(1, (1) * 1))) / 1) * 1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)) * 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)) * 1, ((_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), (1), (1)))) >> 0) * 1)) * 1) << 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), min((_GLF_IDENTITY(1, (1) * 1)), (_GLF_IDENTITY(1, (1) * 1)))) * 1, _GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) * 1)) * 1) << 0, max(((_GLF_IDENTITY(1, (1) * 1)) * 1) << 0, ((_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, max(_GLF_IDENTITY((1) * 1, 0 | (_GLF_IDENTITY((1) * 1, clamp((1) * 1, (1) * 1, (1) * 1)))), _GLF_IDENTITY((1) * 1, ((1) * 1) ^ 0))))) * 1) << 0))))) >> 0)))))) << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | _GLF_IDENTITY((_GLF_IDENTITY(5, min(5, 5))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(findMSB(-56799)) : _GLF_IDENTITY(5, (_GLF_IDENTITY(5, ~ (~ (5)))) >> 0))), 5))), int(ivec4((_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(findMSB(-56799)) : _GLF_IDENTITY(5, (_GLF_IDENTITY(5, ~ (~ (5)))) >> 0))), 5))), 1, 1, 0)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                  {
                  }
                 else
                  {
                   subgroupAll(true);
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
