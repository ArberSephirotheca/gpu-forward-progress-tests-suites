#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-585.333)), _GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x)))) + 0.0), bool(true))), injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-585.333)), _GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x)))) + 0.0), bool(true))), injectionSwitch.x), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-585.333)), _GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).x)))) + 0.0), bool(true))), injectionSwitch.x), (false ? _GLF_FUZZED(-225.455) : max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-585.333)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x)))) + 0.0), bool(true))), injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-4.6) : 1.0, 0.0 + (false ? _GLF_FUZZED(-4.6) : 1.0)))), 1.0, 0.0, 0.0)), 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), mix(vec2((vec2(mat3x4(injectionSwitch, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0)), 1.0, 0.0, 0.0)), 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))[0], _GLF_FUZZED(0.4)), vec2(_GLF_FUZZED(vec3(59.33, -3.4, 3297.0559).z), (vec2(mat3x4(injectionSwitch, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.6) : 1.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7554.2149)), bool(false))))), 0.0, 1.0, sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0))), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-60.86) : 0.0)), 1.0)), 1.0)))[1]), bvec2(false, true))))) * vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bool(bool(bvec4(false, false, true, false)))))))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-50.04)), bool(false))) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-771.583)))), _GLF_IDENTITY(float(_GLF_FUZZED(-50.04)), mix(float(float(_GLF_FUZZED(-50.04))), float(_GLF_FUZZED(-4020.1632)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7527.7495)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-50.04)), bool(false))) > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-50.04)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - log(cos(0.0)))))), true, false, true))))), false, true))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, sqrt(0.0), 0.0, 1.0)), clamp(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))), 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.72) : 0.0)), 1.0), mix(vec2((vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.72) : 0.0)), 1.0))[0], _GLF_FUZZED(8.2)), vec2(_GLF_FUZZED(-62.34), (vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.72) : 0.0)), 1.0))[1]), bvec2(false, true))), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-843.226) : 1.0))), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-798.766)), float(0.0), bool(true)))))), 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), float(mat4x3(sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, 0.0)))) * 1.0), 0.0, 1.0)), vec2(mat3x4(injectionSwitch, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * mat2(1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))), 0.0, 1.0, sqrt(0.0), 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, sqrt(0.0), 0.0, 1.0)), clamp(vec2(mat3x4(injectionSwitch, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4144.3110)), vec2(_GLF_FUZZED(float(100513u)), (normalize(vec2(1.0, 1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, sqrt(0.0), 0.0, 1.0)), vec2(mat3x4(injectionSwitch, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), max(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0)), vec2(0.0, 1.0))), vec2(1.0, 0.0))), 0.0, 1.0, sqrt(0.0), 0.0, 1.0)), vec2(mat3x4(injectionSwitch, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), clamp(_GLF_IDENTITY(vec2(vec2(1.0, 1.0)), vec2(mat2x3(_GLF_IDENTITY(vec2(vec2(1.0, 1.0)), max(vec2(vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec2(1.0, 1.0)), min(vec2(vec2(1.0, 1.0)), vec2(vec2(1.0, 1.0)))))), 0.0, 0.0, round(length(normalize(1.0))), 1.0))), _GLF_IDENTITY(vec2(vec2(1.0, 1.0)), min(vec2(vec2(1.0, 1.0)), vec2(vec2(1.0, 1.0)))), vec2(vec2(1.0, 1.0))))))))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, sqrt(0.0), 0.0, 1.0))))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(abs(vec2(0.0, 0.0)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(abs(vec2(0.0, 0.0))))))) / vec2(1.0, 1.0)).y))));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))) || false))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                            barrier();
                           barrier();
                          }
                         barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
                          barrier();
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))), _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), _GLF_IDENTITY(false, ! (! (false))), false)))))) || false), true && (false))))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         barrier();
                        }
                      }
                     else
                      {
                      }
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))))));
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
              barrier();
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))))))))))))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
                          barrier();
                         barrier();
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           do
                            {
                             barrier();
                            }
                           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       else
        {
        }
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / (_GLF_IDENTITY(1u ^ 0u, ~ (~ (_GLF_IDENTITY(1u ^ 0u, ~ (~ (_GLF_IDENTITY(1u ^ 0u, (1u ^ 0u) / 1u)))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-12417, _GLF_IDENTITY((-12417), ((-12417)) ^ 0) >> (1 ^ 1)))))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(90.50) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(69.98))) + (injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
        {
         do
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) | 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), 0 | ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(0, 1))) | _GLF_IDENTITY((int(ivec2(0, 1))), (true ? (int(ivec2(0, 1))) : _GLF_FUZZED((_injected_loop_counter ^ _injected_loop_counter))))))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
            }
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.2), _GLF_FUZZED(-5.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))), (false ? _GLF_FUZZED(9635.8631) : (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))))), (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (false ? _GLF_FUZZED(52.17) : 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED((8959.2820 * -6544.5811)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))) - 0.0))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.2), _GLF_FUZZED(-5.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))), (false ? _GLF_FUZZED(9635.8631) : (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))))), (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (false ? _GLF_FUZZED(52.17) : 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED((8959.2820 * -6544.5811)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))) - 0.0))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.2), _GLF_FUZZED(-5.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))), (false ? _GLF_FUZZED(9635.8631) : (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))))), (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (false ? _GLF_FUZZED(52.17) : 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED((8959.2820 * -6544.5811)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))) - 0.0))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.2), _GLF_FUZZED(-5.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))), (false ? _GLF_FUZZED(9635.8631) : (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))))), (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), min(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(7731.2660, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(7731.2660, max(7731.2660, 7731.2660))))) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (false ? _GLF_FUZZED(7731.2660) : min((injectionSwitch)[1], (injectionSwitch)[1]))))))))))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (false ? _GLF_FUZZED(52.17) : 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED((8959.2820 * -6544.5811)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(52.17), float(mat4x2(_GLF_FUZZED(52.17), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(52.17) : 1.0))) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))) - 0.0))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x))) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(8), int(8))) | 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u), (subgroup_id * subgroup_size) - 0u)) + 0u), subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))), false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0)) * 1))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-0.9)), (true ? float(_GLF_FUZZED(-0.9)) : _GLF_FUZZED(-9.9))), bool(false)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), (float(vec3(injectionSwitch.y, 1.0, 1.0))) - 0.0)))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false, true)))), false, true))))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))) >> 0u), _GLF_IDENTITY(uint(uint(subgroup_size)), 1u * (uint(uint(subgroup_size))))) + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, 0 + (_injected_loop_counter ++)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) << 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), true && (bool(_GLF_WRAPPED_LOOP(false)))))));
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0))) > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       buf[virtual_gid] = 1;
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), max(int(4), int(4))), int(4))) >> _GLF_IDENTITY(int(4), int(4)))) | (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ (0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, min(8, _GLF_IDENTITY(8, clamp(8, 8, 8))))))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))); _injected_loop_counter --)
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, true), bvec3(bvec4(bvec3(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, true), bvec3(bvec4(bvec3(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, true), true)))))))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                {
                 barrier();
                }
               else
                {
                }
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
            barrier();
          }
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) | ((0 << _GLF_IDENTITY(int(7), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))) && true))))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), clamp(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), (float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0))) + 0.0), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0))))) < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
     else
      {
       if(subgroup_local_id + 1 < subgroup_size)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-68.70, (true ? -68.70 : _GLF_FUZZED(-76.92)))) : injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), (_GLF_IDENTITY(64, 0 ^ (64))) | 0) : _GLF_FUZZED(85411))), int(int(64))), 4);
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))), bool(bool(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))).y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))))
                  barrier();
                 barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (4))), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(48646, max(48646, 48646)) & 0)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), (false ? _GLF_FUZZED(-4.9) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))))) > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false, false)))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, true && (true))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                  }
                 barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), (injectionSwitch.x > injectionSwitch.y) || false), true))))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (_GLF_DEAD(false)) || false)), true, false))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       else
                        {
                        }
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         subgroupAll(false);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false) || false, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, ((false) || false) || false), true, true, false))), false, false, true)), (bool(bvec4(_GLF_IDENTITY((false) || false, bool(bvec4(_GLF_IDENTITY((false) || false, ((false) || false) || false), true, true, false))), false, false, true))) && true)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | 0)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-46.45)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true)))))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec4(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec4(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false, true, true)))))))))); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(uint(2), uint(2))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))), 64, 4);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             do
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)))), true)))))))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     barrier();
                    }
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) && _GLF_IDENTITY(true, true && (true))))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               subgroupAll(true);
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   do
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       do
                        {
                         barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                        barrier();
                      }
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-24.39))) > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
                barrier();
               barrier();
              }
             for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 & int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.3, 2.9)))).y))), (_GLF_IDENTITY((1 & int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.3, 2.9)))).y))), clamp((1 & int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.3, 2.9)))).y))), (1 & int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.3, 2.9)))).y))), (1 & int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.3, 2.9)))).y)))))) | ((1 & int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.3, 2.9)))).y)))))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, abs(0.0), 1.0, length(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(1.0), sqrt(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 1.0, _GLF_IDENTITY(tan(0.0), float(vec2(tan(0.0), 0.0)))), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)), dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7848.7621))), injectionSwitch.x), 0.0, 1.0, 0.0)))), transpose(transpose(mat4(injectionSwitch, abs(0.0), 1.0, length(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(1.0), sqrt(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])).x), 0.0, 1.0, 0.0)), clamp(dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 0.0)), dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 0.0)), dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 0.0)))), dot(vec4(log(1.0), 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(((ivec4(46802, 35982, -98660, -13886) != ivec4(27251, -2001, 48825, 37991)) ? 957.812 : -206.102))), bool(false))) * (0.0))))))))))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, abs(0.0), 1.0, length(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(1.0), sqrt(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 1.0, _GLF_IDENTITY(tan(0.0), float(vec2(tan(0.0), 0.0)))), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)), dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7848.7621))), injectionSwitch.x), 0.0, 1.0, 0.0)))), transpose(transpose(mat4(injectionSwitch, abs(0.0), 1.0, length(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(1.0), sqrt(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])).x), 0.0, 1.0, 0.0)), clamp(dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 0.0)), dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 0.0)), dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 0.0)))), dot(vec4(log(1.0), 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(((ivec4(46802, 35982, -98660, -13886) != ivec4(27251, -2001, 48825, 37991)) ? 957.812 : -206.102))), bool(false))) * (0.0))))))))))))))).x > injectionSwitch.y)) || false), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, abs(0.0), 1.0, length(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(1.0), sqrt(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)), dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)))), transpose(transpose(mat4(injectionSwitch, abs(0.0), 1.0, length(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(1.0), sqrt(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 0.0)), clamp(dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 0.0)), dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 0.0)), dot(vec4(log(1.0), 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 1.0, 0.0)))), dot(vec4(log(1.0), 0.0, 1.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)), float(vec2(_GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)), float(_GLF_IDENTITY(mat3x4(tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat3x4(tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), 1.0)))), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0))))))))))))))).x > injectionSwitch.y))))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ((_GLF_IDENTITY(! (false), false || (! (false))))) || false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0))) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), true))))))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! _GLF_IDENTITY((true), ((true)) && true)))))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))))))), bool(bvec4(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))))))), true, true, true))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                  barrier();
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(23.34))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(23.34)))))) && true)))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), true && (_GLF_WRAPPED_IF_FALSE(false))))
                    {
                    }
                   else
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                        barrier();
                      }
                    }
                  }
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)), false))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)), false)))))) && true)))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(996.248)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), true)))) && true)))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), true, true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
