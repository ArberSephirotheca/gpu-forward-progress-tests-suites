#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat4 _f0;
 bvec2 _f1;
 uvec4 _f2;
 uint _f3;
 vec2 _f4;
 int _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_1 {
 float _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 uint _f3;
 mat3x4 _f4;
 mat3x4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat2x4 _f1;
 uint virtual_gid;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id;
 _GLF_struct_0 _GLF_struct_replacement_0;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x = subgroup_size;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.z = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.z;
 _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w = workgroup_base;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_1(1.0, mat2x4(1.0), mat3x2(1.0), 1u, mat3x4(1.0), mat3x4(1.0), vec4(1.0)), _GLF_struct_2(mat4(1.0), bvec2(true), uvec4(1u), 1u, vec2(1.0), 1, mat2x4(1.0))), mat2x4(1.0), _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + subgroup_id * GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x + _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.y = _GLF_struct_replacement_4.virtual_gid;
  }
 uint next_virtual_gid = _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + subgroup_id * GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x + ((_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1) % GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x);
 _GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.x = next_virtual_gid;
 buf[GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.y] = 1;
 if(_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1 < GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
    }
   else
    {
     atomicStore(buf[_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.x], uint(2), 4, 64, 4);
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       subgroupAll(false);
      }
    }
   else
    {
    }
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_0.GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.x], uint(2), 4, 64, 4);
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         subgroupAll(true);
        }
       else
        {
        }
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
