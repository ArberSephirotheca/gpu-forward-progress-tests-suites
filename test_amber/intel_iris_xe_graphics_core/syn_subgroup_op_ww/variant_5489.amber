#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0), (mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0)) * mat2(1.0)))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8.2 + -214.721))), bool(false)))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(640.965) : 0.0)), _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY((determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0, min(_GLF_IDENTITY((determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0, 1.0 * (_GLF_IDENTITY((determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0, float(mat4x2((determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), (determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0))))))))))), injectionSwitch)).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(640.965) : 0.0)), _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY((determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0, min(_GLF_IDENTITY((determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0, 1.0 * (_GLF_IDENTITY((determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0, float(mat4x2((determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), (determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0))))))))))), injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(640.965) : 0.0)), _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY((determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0, min(_GLF_IDENTITY((determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0, 1.0 * (_GLF_IDENTITY((determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0, float(mat4x2((determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), (determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) / 1.0))))))))))), injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(float(3132u))), bool(false))), _GLF_IDENTITY(1.0 * (injectionSwitch.x), clamp(1.0 * (injectionSwitch.x), 1.0 * (injectionSwitch.x), _GLF_IDENTITY(1.0 * (injectionSwitch.x), min(1.0 * (injectionSwitch.x), 1.0 * (injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8378.7438), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), vec2((injectionSwitch)[0], _GLF_FUZZED(95.57)), bvec2(true, false)), clamp(mix(vec2(_GLF_FUZZED(8378.7438), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), vec2((injectionSwitch)[0], _GLF_FUZZED(95.57)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(8378.7438), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), vec2((injectionSwitch)[0], _GLF_FUZZED(95.57)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(8378.7438), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), vec2((injectionSwitch)[0], _GLF_FUZZED(95.57)), bvec2(true, false))))).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) && true))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(771.331)), float(injectionSwitch[1]), bool(true))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true))), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true)))) || false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))), true && (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, abs(0.0), 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, float(mat4x2(0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), exp(0.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), sqrt(0.0)))))), abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)))), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(vec2(vec2(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, abs(0.0), 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, float(mat4x2(0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), exp(0.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), sqrt(0.0)))))), abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)))), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))), vec2(mat3x4(vec2(vec2(vec2(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, abs(0.0), 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, float(mat4x2(0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), exp(0.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), sqrt(0.0)))))), abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.8)), float(0.0), bool(true)))), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, sqrt(0.0), 0.0))))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-200.412)), vec2(_GLF_FUZZED(-22.56), (injectionSwitch)[1]), bvec2(false, true))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(78.93, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(78.93, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0), mat2x3(mat4x3(mat2x3(78.93, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0))))), max(float(_GLF_IDENTITY(mat2x3(78.93, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0), mat2x3(mat4x3(mat2x3(78.93, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0))))), float(_GLF_IDENTITY(mat2x3(78.93, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0), mat2x3(mat4x3(mat2x3(78.93, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0)))))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0))))) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - 0.0))))) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))), true, false)))))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, true, false))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, true, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? injectionSwitch[1] : _GLF_FUZZED(-101.223))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-722.737), (_GLF_FUZZED(-722.737)) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)) : injectionSwitch[1])))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), vec2(mat3x2(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 1.0, 1.0))))))), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), vec2(mat3x2(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 1.0, 1.0))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), vec2(mat3x2(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)), (true ? vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 1.0, 1.0))))))))) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(70.79))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(8674.5184)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))).x, sqrt(0.0) + _GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true)))) || false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u), workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) << 0u), (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_id))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-518.065, 1.9), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(vec2(-518.065, 1.9), min(vec2(-518.065, 1.9), _GLF_IDENTITY(vec2(-518.065, 1.9), vec2(mat3(vec2(-518.065, 1.9), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), sqrt(0.0), sin(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(vec2(-518.065, 1.9), min(vec2(-518.065, 1.9), _GLF_IDENTITY(vec2(-518.065, 1.9), vec2(mat3(vec2(-518.065, 1.9), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), sqrt(0.0), sin(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), mix(vec2(_GLF_FUZZED(5.1), (vec2(mat2x4(_GLF_IDENTITY(vec2(-518.065, 1.9), min(vec2(-518.065, 1.9), _GLF_IDENTITY(vec2(-518.065, 1.9), vec2(mat3(vec2(-518.065, 1.9), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), sqrt(0.0), sin(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)))[1]), vec2((vec2(mat2x4(_GLF_IDENTITY(vec2(-518.065, 1.9), min(vec2(-518.065, 1.9), _GLF_IDENTITY(vec2(-518.065, 1.9), vec2(mat3(vec2(-518.065, 1.9), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), sqrt(0.0), sin(0.0), sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)))[0], _GLF_FUZZED(-5971.6516)), bvec2(true, false)))))).t), _GLF_FUZZED(-98.45)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(0u, max(0u, 0u)) ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))))), 0u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))) ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) << (1u ^ 1u)), _GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | (0u ^ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))), 0u ^ (subgroup_size))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u | ((1u))) << 0u)))) << (1u ^ 1u)), _GLF_IDENTITY(0u ^ (subgroup_size), _GLF_IDENTITY(max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | (0u ^ (subgroup_size))), 0u ^ (subgroup_size)), max(max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | (0u ^ (subgroup_size))), 0u ^ (subgroup_size)), max(_GLF_IDENTITY(0u ^ (subgroup_size), _GLF_IDENTITY((0u ^ (subgroup_size)), min((0u ^ (subgroup_size)), (0u ^ (subgroup_size)))) | (0u ^ (subgroup_size))), 0u ^ (subgroup_size))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) << (1u ^ 1u)), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((subgroup_size), min((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), (subgroup_size))), max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | (0u ^ (subgroup_size))), 0u ^ (subgroup_size))))), uint(uvec4(_GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) ^ 0u) << 0u)))) << (1u ^ 1u)), _GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | (0u ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), 0u ^ (subgroup_size))))), 0u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) << (1u ^ 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) << (1u ^ 1u)), 1u, _GLF_IDENTITY(1u, (1u) | (1u))), (uvec3(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)) << 0u))))) << (1u ^ 1u)), 1u, 1u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) << (1u ^ 1u)), 1u, 1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(0u ^ (subgroup_size), (_GLF_IDENTITY(0u, ~ (~ (0u))) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) << (1u ^ 1u)), 1u, 1u))))))), ~ (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) << (1u ^ 1u)), 1u, 1u), (uvec3(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) << (1u ^ 1u)), 1u, 1u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) << _GLF_IDENTITY((1u ^ 1u), max((1u ^ 1u), (1u ^ 1u)))), 1u, 1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(0u ^ (subgroup_size), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u))), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) << (0u & 123892u))) << (1u ^ 1u)), 1u, 1u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_size), max(0u ^ (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size))), 0u ^ (subgroup_size))), clamp(0u ^ (subgroup_size), 0u ^ (subgroup_size), _GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) >> 0u)))) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_size), _GLF_IDENTITY((0u ^ (subgroup_size)), max((0u ^ (subgroup_size)), (0u ^ (subgroup_size)))) | (0u ^ (subgroup_size))), 1u * (_GLF_IDENTITY(0u ^ (subgroup_size), _GLF_IDENTITY((0u ^ (subgroup_size)), max((0u ^ (subgroup_size)), (0u ^ (subgroup_size)))) | (0u ^ (subgroup_size))))), 0u ^ (subgroup_size))))), clamp(_GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (true ? _GLF_IDENTITY(1u, (1u) << 0u) : _GLF_FUZZED(5374u)))))) << (1u ^ 1u)), _GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (subgroup_size), 1u * (0u ^ (subgroup_size)))) | (0u ^ (subgroup_size)), (_GLF_IDENTITY((0u ^ (subgroup_size)) | _GLF_IDENTITY((0u ^ (subgroup_size)), ((0u ^ (subgroup_size))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 0u ^ ((0u ^ (subgroup_size)) | (0u ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), max(~ ((subgroup_size)), ~ ((subgroup_size))))))) << 0u))))) | 0u)), 0u ^ (subgroup_size))))), _GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (_GLF_IDENTITY(0u, (0u) + 0u) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) << (1u ^ 1u)), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | (0u ^ (subgroup_size))), 0u ^ (subgroup_size))), (_GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (0u ^ (subgroup_size))), 0u ^ (subgroup_size))), (0u ^ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)) | (0u ^ (subgroup_size))), 0u ^ (subgroup_size)))) / 1u))), _GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) << (1u ^ 1u)), _GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_size), (_GLF_IDENTITY(0u ^ (subgroup_size), max(0u ^ (subgroup_size), 0u ^ (subgroup_size)))) ^ (0u | 0u)), _GLF_IDENTITY((0u ^ (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) | (0u ^ (subgroup_size)), (_GLF_IDENTITY((0u ^ (subgroup_size)) | (0u ^ (subgroup_size)), ((0u ^ (subgroup_size)) | (0u ^ (subgroup_size))) / 1u)) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), (1u) ^ 0u))), 0u ^ (subgroup_size))))))), _GLF_IDENTITY(0u ^ (subgroup_size), _GLF_IDENTITY(max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))) * _GLF_IDENTITY(1u, (1u) << 0u)))) << (1u ^ 1u)), _GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (_GLF_IDENTITY(0u, (0u) << 0u) ^ (subgroup_size)) | (0u ^ (subgroup_size))), 0u ^ (subgroup_size)))), (max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u)))) ^ 0u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (1u ^ 0u))))) << (1u ^ 1u)), _GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | (0u ^ (subgroup_size))), 0u ^ (subgroup_size))))) ^ 0u))))), subgroup_size)))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))))))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))))))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), ~ (~ (subgroup_size))), (_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))))))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), ~ (~ (subgroup_size)))) ^ 0u)) << 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(1u * ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ (1u * ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(~ (1u * ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (~ (1u * ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1u)) << 0u))))) - 0u) / 1u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u))), (((subgroup_local_id + 1) % subgroup_size)) / 1u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) - 0u) / 1u)) - 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), vec2(_GLF_IDENTITY(mat3x2(vec2(0.0, 0.0) + (injectionSwitch), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(vec2(0.0, 0.0) + (injectionSwitch), 1.0, 1.0, 1.0, 0.0)))))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0) + (injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)) || false)) || false)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) || false)))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-163.123)), bool(false)))) / 1.0), 0.0) + (injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)) + (injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)) || false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(798.903)))), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)), false, false, false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(516.178)), vec2(_GLF_FUZZED((3006.5071 / -2.7)), (injectionSwitch)[1]), bvec2(false, true))).y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))))))), 1.0, 0.0, sqrt(1.0))) - mat2x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)), true, true, false))), _GLF_IDENTITY(true, (true) || false), true, true))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0)))), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(5.8)), bvec2(true, false)))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, _GLF_IDENTITY(293.539, clamp(293.539, 293.539, 293.539)), -4.7).p), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / 1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-75.44), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2129.1225)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], _GLF_IDENTITY(float(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], 1.0)), clamp(_GLF_IDENTITY(float(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], 1.0)), clamp(float(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], 1.0)), float(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], 1.0)), float(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], 1.0)))), float(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], 1.0)), float(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1], 1.0)))))), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))), false)))))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))).x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(5215.0129)), bvec2(false, false))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(5215.0129)), bvec2(false, false))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(5215.0129)), bvec2(false, false))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))).x, mix(float(_GLF_FUZZED(1258.5097)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(5215.0129)), bvec2(false, false))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))).x), bool(true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec3(825.152, 293.539, -4.7).p), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(5215.0129)), bvec2(false, false))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(5.8)), bvec2(true, false)))).x)))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.1)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(748.457)))), bool(true))), 1.0)), 0.0, sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0)), (mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.4)), vec2(_GLF_FUZZED(4.9), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(false, true))).y)), true, true, false))), true, true, true)))))) || false)), true)))))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true), false, false))))), false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(6.7))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(639.063) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_IDENTITY(buf[virtual_gid] = 1, (true ? _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = _GLF_IDENTITY(1, max(1, 1))), ~ (~ ((buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | 0))))))) : _GLF_FUZZED((subgroup_size --))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), 0u, 1u, 0u))))) < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), 0u, 1u, 0u))))) < subgroup_size))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) * 1.0), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) * 1.0), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) * 1.0), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) * 1.0), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) && true), true)))) && true))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), 1, 0, 1))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-9.6))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec2(bvec2(bvec2(bvec3(bvec2((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(false, false || (false)), true))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(vec4(-1.1, 4.4, 634.397, 9.4).t)), bvec2(true, false))).y, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.38)), float(injectionSwitch.y), bool(true))))), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)), false), _GLF_IDENTITY(false, (false) || false), true)))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))) && true)) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))) && true)) && true)) && true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))), (false) && true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
              barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), ~ (~ (uint(2))))))) - (1u ^ 1u), 1u * ((_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))) - (1u ^ 1u))))) >> 0u), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (true) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
