#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - log(vec2(1.0, 1.0)), ((injectionSwitch) - log(vec2(1.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) < injectionSwitch.y))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ! (! ((! _GLF_IDENTITY((false), ((false)) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(9948.1649)), vec2(_GLF_FUZZED(-68.70), ((injectionSwitch))[1]), bvec2(false, true))))) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(19.54), (_GLF_IDENTITY((injectionSwitch), vec2(mat4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, exp(log(1.0)), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED((mat2(25.61, 6.5, -13.41, -3.6) / 3.4)))), transpose(transpose(mat2(1.0)))))[0], _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec4(bvec2(true, false), _GLF_IDENTITY(true, true && (true)), true))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(34.70, -5.7)))), abs(1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(34.70, -5.7)))), abs(1.0), 0.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(-9872.5682))), 1.0, 1.0, 1.0))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), vec2(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, _GLF_IDENTITY((0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((0), int(int((0)))), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY((0), int(int((0)))), 0))))) ^ 0)], _GLF_FUZZED(-3.8)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(true, false), true)), false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)), clamp((vec2(0.0, 0.0)), _GLF_IDENTITY((vec2(0.0, 0.0)), vec2(mat2x4(_GLF_IDENTITY((vec2(0.0, 0.0)), ((vec2(0.0, 0.0))) + vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2(0.0, 0.0)))) + vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch)), mat2(1.0) * (((injectionSwitch))))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(19.54), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y)), true))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-23.35, 2882.1998)))), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true, true))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(34.70, _GLF_IDENTITY(-5.7, (-5.7) - _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-1.6)), bvec2(false, false)))) : _GLF_FUZZED(vec2(34.70, -5.7)))), abs(1.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0, 1.0, 1.0))))) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -19.94)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-29.79)), bvec2(true, false)))) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), (true ? mat2x4(mat2(1.0)) : _GLF_FUZZED(mat2x4(-2647.4534, 0.5, 2.4, -437.191, -5.3, 0.5, -6897.5658, 1.8))))))))))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), max(vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], float(mat2x4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], clamp(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)]) + 0.0), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)])), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) - log(1.0)), sqrt(1.0), 1.0))), _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), 0.0)))) : injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch)), mat2(1.0) * (((injectionSwitch))))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(19.54), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y)), true))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-23.35, 2882.1998)))), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true, true))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(34.70, _GLF_IDENTITY(-5.7, (-5.7) - _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-1.6)), bvec2(false, false)))) : _GLF_FUZZED(vec2(34.70, -5.7)))), abs(1.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0, 1.0, 1.0))))) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -19.94)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-29.79)), bvec2(true, false)))) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), (true ? mat2x4(mat2(1.0)) : _GLF_FUZZED(mat2x4(-2647.4534, 0.5, 2.4, -437.191, -5.3, 0.5, -6897.5658, 1.8))))))))))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), max(vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], float(mat2x4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], clamp(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)]) + 0.0), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)])), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) - log(1.0)), sqrt(1.0), 1.0))), _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), 0.0)))) : injectionSwitch)))).x) * 1.0) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch)), mat2(1.0) * (((injectionSwitch))))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(19.54), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y)), true))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-23.35, 2882.1998)))), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true, true))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(34.70, _GLF_IDENTITY(-5.7, (-5.7) - _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-1.6)), bvec2(false, false)))) : _GLF_FUZZED(vec2(34.70, -5.7)))), abs(1.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0, 1.0, 1.0))))) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -19.94)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-29.79)), bvec2(true, false)))) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), (true ? mat2x4(mat2(1.0)) : _GLF_FUZZED(mat2x4(-2647.4534, 0.5, 2.4, -437.191, -5.3, 0.5, -6897.5658, 1.8))))))))))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), max(vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], float(mat2x4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], clamp(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)]) + 0.0), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)])), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) - log(1.0)), sqrt(1.0), 1.0))), _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), 0.0)))) : injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch)), mat2(1.0) * (((injectionSwitch))))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(19.54), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y)), true))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-23.35, 2882.1998)))), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true, true))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(34.70, _GLF_IDENTITY(-5.7, (-5.7) - _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-1.6)), bvec2(false, false)))) : _GLF_FUZZED(vec2(34.70, -5.7)))), abs(1.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0, 1.0, 1.0))))) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -19.94)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-29.79)), bvec2(true, false)))) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), (true ? mat2x4(mat2(1.0)) : _GLF_FUZZED(mat2x4(-2647.4534, 0.5, 2.4, -437.191, -5.3, 0.5, -6897.5658, 1.8))))))))))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), max(vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], float(mat2x4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], clamp(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)]) + 0.0), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)])), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) - log(1.0)), sqrt(1.0), 1.0))), _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), 0.0)))) : injectionSwitch)))).x) * 1.0) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch)), mat2(1.0) * (((injectionSwitch))))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(19.54), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y)), true))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-23.35, 2882.1998)))), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true, true))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(34.70, _GLF_IDENTITY(-5.7, (-5.7) - _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-1.6)), bvec2(false, false)))) : _GLF_FUZZED(vec2(34.70, -5.7)))), abs(1.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0, 1.0, 1.0))))) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -19.94)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-29.79)), bvec2(true, false)))) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), (true ? mat2x4(mat2(1.0)) : _GLF_FUZZED(mat2x4(-2647.4534, 0.5, 2.4, -437.191, -5.3, 0.5, -6897.5658, 1.8))))))))))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), max(vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], float(mat2x4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], clamp(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)]) + 0.0), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)])), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) - log(1.0)), sqrt(1.0), 1.0))), _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), 0.0)))) : injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch)), mat2(1.0) * (((injectionSwitch))))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(19.54), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y)), true))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-23.35, 2882.1998)))), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true, true))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(34.70, _GLF_IDENTITY(-5.7, (-5.7) - _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-1.6)), bvec2(false, false)))) : _GLF_FUZZED(vec2(34.70, -5.7)))), abs(1.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0, 1.0, 1.0))))) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -19.94)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-29.79)), bvec2(true, false)))) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), (true ? mat2x4(mat2(1.0)) : _GLF_FUZZED(mat2x4(-2647.4534, 0.5, 2.4, -437.191, -5.3, 0.5, -6897.5658, 1.8))))))))))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), max(vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], float(mat2x4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], clamp(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)]) + 0.0), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)])), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) - log(1.0)), sqrt(1.0), 1.0))), _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), 0.0)))) : injectionSwitch)))).x) * 1.0) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch)), mat2(1.0) * (((injectionSwitch))))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(19.54), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y)), true))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-23.35, 2882.1998)))), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true, true))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(34.70, _GLF_IDENTITY(-5.7, (-5.7) - _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-1.6)), bvec2(false, false)))) : _GLF_FUZZED(vec2(34.70, -5.7)))), abs(1.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0, 1.0, 1.0))))) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -19.94)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-29.79)), bvec2(true, false)))) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), (true ? mat2x4(mat2(1.0)) : _GLF_FUZZED(mat2x4(-2647.4534, 0.5, 2.4, -437.191, -5.3, 0.5, -6897.5658, 1.8))))))))))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), max(vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], float(mat2x4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], clamp(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)]) + 0.0), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)])), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) - log(1.0)), sqrt(1.0), 1.0))), _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), 0.0)))) : injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch)), mat2(1.0) * (((injectionSwitch))))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(19.54), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y)), true))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-23.35, 2882.1998)))), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true, true))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(34.70, _GLF_IDENTITY(-5.7, (-5.7) - _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-1.6)), bvec2(false, false)))) : _GLF_FUZZED(vec2(34.70, -5.7)))), abs(1.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0, 1.0, 1.0))))) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -19.94)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-29.79)), bvec2(true, false)))) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), (true ? mat2x4(mat2(1.0)) : _GLF_FUZZED(mat2x4(-2647.4534, 0.5, 2.4, -437.191, -5.3, 0.5, -6897.5658, 1.8))))))))))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), max(vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], float(mat2x4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], clamp(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)]) + 0.0), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)])), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) - log(1.0)), sqrt(1.0), 1.0))), _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), 0.0)))) : injectionSwitch)))).x) * 1.0) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch)), mat2(1.0) * (((injectionSwitch))))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(19.54), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y)), true))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-23.35, 2882.1998)))), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true, true))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(34.70, _GLF_IDENTITY(-5.7, (-5.7) - _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-1.6)), bvec2(false, false)))) : _GLF_FUZZED(vec2(34.70, -5.7)))), abs(1.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0, 1.0, 1.0))))) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -19.94)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-29.79)), bvec2(true, false)))) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), (true ? mat2x4(mat2(1.0)) : _GLF_FUZZED(mat2x4(-2647.4534, 0.5, 2.4, -437.191, -5.3, 0.5, -6897.5658, 1.8))))))))))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), max(vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], float(mat2x4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], clamp(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)]) + 0.0), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)])), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) - log(1.0)), sqrt(1.0), 1.0))), _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), 0.0)))) : injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch)), mat2(1.0) * (((injectionSwitch))))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(19.54), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) - sin(vec2(0.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y)), true))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-23.35, 2882.1998)))), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true, true))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(34.70, _GLF_IDENTITY(-5.7, (-5.7) - _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0) * (mat3x4(_GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-1.6)), bvec2(false, false)))) : _GLF_FUZZED(vec2(34.70, -5.7)))), abs(1.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, cos(0.0), sqrt(0.0), 1.0, 1.0, 1.0))))) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -19.94)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-29.79)), bvec2(true, false)))) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), (true ? mat2x4(mat2(1.0)) : _GLF_FUZZED(mat2x4(-2647.4534, 0.5, 2.4, -437.191, -5.3, 0.5, -6897.5658, 1.8))))))))))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), max(vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), vec2(_GLF_FUZZED(-4.0), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(ivec2(1, 1)))]))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], float(mat2x4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], clamp(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)]) + 0.0), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) + vec2(0.0, 0.0))) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)])), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) - log(1.0)), sqrt(1.0), 1.0))), _GLF_FUZZED(-3.8)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))), false)))))))))))), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, log(1.0), 0.0)))) : injectionSwitch)))).x) * 1.0) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.0)), bool(false))) > injectionSwitch.y))) && true)) && true)));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = (13741 & (0 >> _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0))) < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0)) : _GLF_FUZZED(78676))), 0 | (1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(46) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) ^ 0)))), int(3))), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) >> 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), ! (! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), 1))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true, false))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1)))) ^ 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat2(83.64, -7.8, -8.5, 3.9))) : 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 | (1))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0 + (_injected_loop_counter ++), (0 + (_injected_loop_counter ++)) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true))), (false ? _GLF_FUZZED(959.863) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.1)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))))))))))))))))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0 + (_injected_loop_counter ++), (0 + (_injected_loop_counter ++)) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true)))), ((false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true))))) * 1.0))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(654.730) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))))))))), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0 + (_injected_loop_counter ++), (0 + (_injected_loop_counter ++)) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? transpose(_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)))) : _GLF_FUZZED(mat2(-7.4, -3391.0133, 6.6, 561.610)))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-8.6, clamp(_GLF_IDENTITY(-8.6, (true ? -8.6 : _GLF_FUZZED(80.27))), -8.6, -8.6))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true)))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-8.6, clamp(_GLF_IDENTITY(-8.6, (true ? -8.6 : _GLF_FUZZED(80.27))), -8.6, -8.6))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true)))), float(mat4x3((false ? _GLF_FUZZED(_GLF_IDENTITY(-8.6, clamp(_GLF_IDENTITY(-8.6, (true ? -8.6 : _GLF_FUZZED(80.27))), -8.6, -8.6))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true)))), 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-8.6, clamp(_GLF_IDENTITY(-8.6, (true ? -8.6 : _GLF_FUZZED(80.27))), -8.6, -8.6))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-8.6, clamp(_GLF_IDENTITY(-8.6, (true ? -8.6 : _GLF_FUZZED(80.27))), -8.6, -8.6))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true)))))))))))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0), 1 * (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(_GLF_IDENTITY(0 + (_injected_loop_counter ++), (_GLF_IDENTITY(0 + (_injected_loop_counter ++), (0 + (_injected_loop_counter ++)) | 0)) - 0), (0 + (_injected_loop_counter ++)) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-1.1)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)))))))))))), ((_GLF_IDENTITY(_injected_loop_counter ++, 1 * _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0 + (_injected_loop_counter ++), (0 + (_injected_loop_counter ++)) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true)))))))))), 1 * ((_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0 + (_injected_loop_counter ++), (0 + (_injected_loop_counter ++)) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true))))))))))))))) / (1 & 1))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1 & int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(1 & int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1 & int(_GLF_ONE(1.0, injectionSwitch.y)), max(1 & int(_GLF_ONE(1.0, injectionSwitch.y)), 1 & int(_GLF_ONE(1.0, injectionSwitch.y)))), 1 & int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) / 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), clamp(mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), (false ? _GLF_FUZZED(8.7) : mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), clamp(mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), (false ? _GLF_FUZZED(8.7) : mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), clamp(mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), (false ? _GLF_FUZZED(8.7) : mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))))))), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0), (mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch), (true ? _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch), vec2(mat2x3(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0))) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch), (true ? _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch), vec2(mat2x3(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch), (true ? _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch), vec2(mat2x3(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))))), injectionSwitch)).y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(138.585, 0.2))))), vec2(0.0, 0.0) + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(138.585, 0.2))))), max((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(138.585, 0.2))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(138.585, 0.2))))), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(138.585, 0.2)))))) * vec2(1.0, 1.0)))))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0) < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), ~ (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | 0u), clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | 0u), _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id)) * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | 0u), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), ~ (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | 0u))) + subgroup_local_id) >> _GLF_IDENTITY(0u, min(0u, 0u)));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(atomicOr(subgroup_local_id, _GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))))) : (workgroup_base))) | 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), (1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u | (1u)))), 0u, 0u))) * (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) - (0 ^ 0))) % subgroup_size) - 0u))) * 1u)))) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(atomicOr(subgroup_local_id, _GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))))) : (workgroup_base))) | 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), (1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u | (1u)))), 0u, 0u))) * (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) - (0 ^ 0))) % subgroup_size) - 0u))) * 1u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(atomicOr(subgroup_local_id, _GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))))) : (workgroup_base))) | 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)), (1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u | (1u)))), 0u, 0u))) * (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) - (0 ^ 0))) % subgroup_size) - 0u))) * 1u)))) << 0u)) ^ 0u)))), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size))) | (subgroup_size)), max(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size))) | (subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? uint(7u) : _GLF_FUZZED(subgroup_id)))))) + _GLF_IDENTITY(0u, (0u) | 0u)), subgroup_size))) | (subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))) | 0), min(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))) | 0), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))) | 0)))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u & 39882u))) | (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) * 1u))) / 1u) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), _GLF_IDENTITY(~ (subgroup_local_id), (false ? _GLF_FUZZED(workgroup_id) : ~ (subgroup_local_id)))))), ((_GLF_IDENTITY(~ (subgroup_local_id), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (subgroup_local_id))))) * 1u))) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(18698u) : subgroup_local_id)))), ((~ (subgroup_local_id))) * 1u))) / 1u)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) * 1u))) / 1u) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) * 1u))) / 1u) + 1, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) * 1u))) / 1u) + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) * 1u))) / 1u) + 1))), 1u, 0u, 1u))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) * 1u))) / 1u) + 1)), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) * 1u))) / 1u) + 1))) % subgroup_size)) << 0u))));
 buf[virtual_gid] = _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / _GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(12718) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / 1, ((_GLF_IDENTITY(1, (1) / 1)) / 1) ^ 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / _GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(12718) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / 1, ((_GLF_IDENTITY(1, (1) / 1)) / 1) ^ 0))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / _GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(12718) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / 1, ((_GLF_IDENTITY(1, (1) / 1)) / 1) ^ 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / _GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(12718) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / 1, ((_GLF_IDENTITY(1, (1) / 1)) / 1) ^ 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / _GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(12718) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / 1, ((_GLF_IDENTITY(1, (1) / 1)) / 1) ^ 0))))), 1, 0))) : _GLF_FUZZED(-38450))))) ^ 0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5525.5223), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_FUZZED(-57.51)), bvec2(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((_GLF_IDENTITY(false, ! (! (false)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))).x < injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 & 18623, (true ? 0 & 18623 : _GLF_FUZZED(_injected_loop_counter))))); _injected_loop_counter --)
      {
       if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))
        {
         int i = 0;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -51966)), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -51966))) || false); _injected_loop_counter --)
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 barrier();
                                }
                              }
                             else
                              {
                              }
                             do
                              {
                               do
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9453.9567) : injectionSwitch.y))))))
                                    barrier();
                                   barrier();
                                  }
                                }
                               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), bool(bvec4(! (_GLF_WRAPPED_LOOP(false)), false, false, _GLF_IDENTITY(true, (true) || false)))))));
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(3.0)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch)).y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) || false, ((false) || false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y)) || (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
          }
         else
          {
          }
        }
       else
        {
         do
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, min(2, 2)))), _GLF_IDENTITY(2, (2) | (0 << _GLF_IDENTITY(int(3), int(3))))))), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
