#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))), (float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)))))) + 0.0))))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.1, 136.945)) : injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.8))))) : _GLF_FUZZED(-893.163)))) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-8100.3222), _GLF_IDENTITY((false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, _GLF_IDENTITY(-28.40, clamp(-28.40, -28.40, -28.40)))) : vec4(1.0, 1.0, 1.0, 0.0))[1], clamp((false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, _GLF_IDENTITY(-28.40, clamp(-28.40, -28.40, -28.40)))) : vec4(1.0, 1.0, 1.0, 0.0))[1], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, _GLF_IDENTITY(-28.40, clamp(-28.40, -28.40, -28.40)))) : vec4(1.0, 1.0, 1.0, 0.0))[1], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, _GLF_IDENTITY(-28.40, clamp(-28.40, -28.40, -28.40)))) : vec4(1.0, 1.0, 1.0, 0.0))[1])), _GLF_FUZZED(float((! true))), _GLF_FUZZED(-2.7)), vec4((false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(-3.6), _GLF_IDENTITY((false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0)), ((false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))) + vec4(0.0, 0.0, 0.0, 0.0))[2], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)))))), mix(float(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(985.970)), bool(false)))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-1.8), (false ? _GLF_FUZZED(-63.57) : _GLF_IDENTITY(_GLF_FUZZED(-1.8), (_GLF_FUZZED(-1.8)) + 0.0))), mix(float(_GLF_FUZZED(-1.8)), _GLF_IDENTITY(float(_GLF_FUZZED(9683.8457)), _GLF_IDENTITY(max(float(_GLF_FUZZED(9683.8457)), float(_GLF_FUZZED(9683.8457))), (false ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY(max(float(_GLF_FUZZED(9683.8457)), float(_GLF_FUZZED(9683.8457))), mix(float(max(float(_GLF_FUZZED(9683.8457)), float(_GLF_FUZZED(9683.8457)))), float(_GLF_FUZZED(9904.5037)), bool(false)))))), bool(false)))), bool(false))), injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-8100.3222), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(float((! true))), _GLF_FUZZED(-2.7)), vec4((false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, _GLF_IDENTITY(-28.40, mix(float(_GLF_FUZZED(-9.9)), float(-28.40), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) : vec4(1.0, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(-3.6), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[2], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)))))), mix(float(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(985.970)), bool(false)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1.8, mix(float(_GLF_FUZZED(85.97)), float(-1.8), bool(true)))), mix(float(_GLF_FUZZED(-1.8)), _GLF_IDENTITY(float(_GLF_FUZZED(9683.8457)), max(float(_GLF_FUZZED(9683.8457)), float(_GLF_FUZZED(9683.8457)))), bool(false)))), bool(false))), injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(0.0), 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.5) : 1.0)), max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-8100.3222), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))[1], _GLF_FUZZED(float((! true))), _GLF_FUZZED(-2.7)), vec4((false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(-218.965, _GLF_IDENTITY(-6859.7025, clamp(-6859.7025, _GLF_IDENTITY(-6859.7025, (-6859.7025) / 1.0), _GLF_IDENTITY(-6859.7025, (false ? _GLF_FUZZED(-5577.2429) : -6859.7025)))), -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))) : vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))[0], _GLF_FUZZED(-3.6), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[2], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)))))), mix(float(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(985.970)), bool(false)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1.8, mix(float(_GLF_FUZZED(85.97)), float(-1.8), bool(true)))), mix(float(_GLF_FUZZED(-1.8)), _GLF_IDENTITY(float(_GLF_FUZZED(9683.8457)), max(float(_GLF_FUZZED(9683.8457)), float(_GLF_FUZZED(9683.8457)))), bool(false)))), bool(false))), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-8100.3222), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(float((! true))), _GLF_FUZZED(-2.7)), vec4((false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(_GLF_IDENTITY(-218.965, mix(float(-218.965), float(_GLF_FUZZED(38.88)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))) : vec4(1.0, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(-3.6), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), (_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40))) * mat4(1.0)) : vec4(1.0, 1.0, 1.0, 0.0))[2], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)))))), mix(float(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(985.970)), bool(false)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1.8, _GLF_IDENTITY(mix(float(_GLF_FUZZED(85.97)), float(-1.8), bool(true)), (true ? mix(float(_GLF_FUZZED(85.97)), float(-1.8), bool(true)) : _GLF_FUZZED(408.421))))), mix(float(_GLF_FUZZED(-1.8)), _GLF_IDENTITY(float(_GLF_FUZZED(9683.8457)), max(float(_GLF_FUZZED(9683.8457)), float(_GLF_FUZZED(9683.8457)))), bool(false)))), bool(false))), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-8100.3222), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, cos(0.0), sin(0.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), sqrt(0.0), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0))[1], _GLF_FUZZED(float((! true))), _GLF_FUZZED(-2.7)), vec4((false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, _GLF_IDENTITY(-6859.7025, mix(float(_GLF_IDENTITY(-6859.7025, 1.0 * (-6859.7025))), float(_GLF_FUZZED(5546.7422)), bool(false))), -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(_GLF_IDENTITY(-218.965, mix(float(_GLF_FUZZED(-135.580)), float(_GLF_IDENTITY(-218.965, float(mat3x4(-218.965, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), bool(true))), -6859.7025, -9.1, -28.40)))) : vec4(1.0, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(-3.6), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[2], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)))))), mix(float(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(985.970)), bool(false)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1.8, mix(float(_GLF_FUZZED(85.97)), float(-1.8), bool(true)))), mix(float(_GLF_FUZZED(-1.8)), _GLF_IDENTITY(float(_GLF_FUZZED(9683.8457)), max(float(_GLF_FUZZED(9683.8457)), float(_GLF_FUZZED(9683.8457)))), bool(false)))), bool(false))), injectionSwitch.x))) * 1.0))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.8))))) : _GLF_FUZZED(-893.163)))) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-8100.3222), _GLF_IDENTITY((false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, _GLF_IDENTITY(-28.40, clamp(-28.40, -28.40, -28.40)))) : vec4(1.0, 1.0, 1.0, 0.0))[1], clamp((false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, _GLF_IDENTITY(-28.40, clamp(-28.40, -28.40, -28.40)))) : vec4(1.0, 1.0, 1.0, 0.0))[1], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, _GLF_IDENTITY(_GLF_IDENTITY(-28.40, clamp(-28.40, -28.40, -28.40)), (_GLF_IDENTITY(-28.40, clamp(-28.40, _GLF_IDENTITY(-28.40, max(-28.40, _GLF_IDENTITY(-28.40, float(mat3(-28.40, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), -28.40))) - 0.0))) : vec4(1.0, 1.0, 1.0, 0.0))[1], (false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, _GLF_IDENTITY(-28.40, clamp(-28.40, -28.40, -28.40)))), (_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, _GLF_IDENTITY(-28.40, clamp(-28.40, -28.40, -28.40))))) + vec4(0.0, 0.0, 0.0, 0.0)) : vec4(1.0, 1.0, 1.0, 0.0))[1])), _GLF_FUZZED(float((! true))), _GLF_FUZZED(-2.7)), vec4((false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(-3.6), _GLF_IDENTITY((false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0)), ((false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0))) + vec4(0.0, 0.0, 0.0, 0.0))[2], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)))))), mix(float(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(985.970)), bool(false)))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-1.8), (false ? _GLF_FUZZED(-63.57) : _GLF_IDENTITY(_GLF_FUZZED(-1.8), (_GLF_FUZZED(-1.8)) + 0.0))), mix(float(_GLF_FUZZED(-1.8)), _GLF_IDENTITY(float(_GLF_FUZZED(9683.8457)), _GLF_IDENTITY(max(float(_GLF_FUZZED(9683.8457)), float(_GLF_IDENTITY(_GLF_FUZZED(9683.8457), (_GLF_FUZZED(9683.8457)) + 0.0))), (false ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY(max(float(_GLF_FUZZED(9683.8457)), float(_GLF_FUZZED(9683.8457))), mix(float(max(float(_GLF_IDENTITY(_GLF_FUZZED(9683.8457), clamp(_GLF_FUZZED(9683.8457), _GLF_FUZZED(9683.8457), _GLF_IDENTITY(_GLF_FUZZED(9683.8457), mix(float(_GLF_FUZZED(-524.966)), float(_GLF_FUZZED(9683.8457)), bool(true)))))), float(_GLF_FUZZED(9683.8457)))), float(_GLF_FUZZED(9904.5037)), bool(false)))))), bool(false)))), bool(false))), injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), sqrt(1.0), 0.0, 0.0, abs(1.0), sqrt(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(-7.5) : float(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), sqrt(1.0), 0.0, 0.0, abs(1.0), sqrt(0.0), 0.0, 0.0))))), 1.0, 1.0, 0.0), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), clamp(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), max(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))))) : vec4(1.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-8100.3222), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(float((_GLF_IDENTITY(! true, ! (_GLF_IDENTITY(! (! true), ! (! (! (! true))))))))), _GLF_FUZZED(-2.7)), vec4((false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, _GLF_IDENTITY(-9.1, float(vec3(-9.1, 1.0, 0.0))), -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, _GLF_IDENTITY(-28.40, mix(float(_GLF_FUZZED(-9.9)), float(-28.40), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) : vec4(1.0, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(-3.6), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[2], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, _GLF_IDENTITY(-9.1, mix(float(-9.1), float(_GLF_FUZZED(72.42)), bool(false))), -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)))))), mix(float(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0)), ((false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(985.970)), bool(false)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1.8, mix(float(_GLF_FUZZED(85.97)), float(-1.8), bool(true)))), mix(float(_GLF_FUZZED(-1.8)), _GLF_IDENTITY(float(_GLF_FUZZED(9683.8457)), max(float(_GLF_FUZZED(_GLF_IDENTITY(9683.8457, (false ? _GLF_FUZZED(12.98) : 9683.8457)))), float(_GLF_FUZZED(9683.8457)))), bool(false)))), bool(false))), injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(-6.5))))), 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.5) : 1.0)), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.9) : 1.0))) * 1.0), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-8100.3222), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))[1], _GLF_FUZZED(float((! true))), _GLF_FUZZED(-2.7)), vec4((false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, _GLF_IDENTITY(-9.1, mix(float(-9.1), float(_GLF_FUZZED(74.17)), bool(false))), -28.40)), _GLF_FUZZED(vec4(-218.965, _GLF_IDENTITY(-6859.7025, clamp(-6859.7025, _GLF_IDENTITY(-6859.7025, (-6859.7025) / 1.0), _GLF_IDENTITY(-6859.7025, (false ? _GLF_FUZZED(-5577.2429) : -6859.7025)))), -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))) : vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))[0], _GLF_FUZZED(-3.6), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[2], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)))))), mix(float(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(985.970)), bool(false)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1.8, mix(float(_GLF_FUZZED(85.97)), float(-1.8), bool(true)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-1.8, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(-1.8, 1.0, 1.0, 1.0, abs(1.0), 0.0), transpose(transpose(mat3x2(-1.8, 1.0, 1.0, 1.0, abs(1.0), 0.0))))), (false ? _GLF_FUZZED(sqrt(-8444.9456)) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(-1.8, 1.0, 1.0, 1.0, abs(1.0), 0.0), transpose(transpose(mat3x2(-1.8, 1.0, 1.0, 1.0, abs(1.0), 0.0))))), float(vec4(float(_GLF_IDENTITY(mat3x2(-1.8, 1.0, 1.0, 1.0, abs(1.0), 0.0), transpose(transpose(mat3x2(-1.8, 1.0, 1.0, 1.0, abs(1.0), 0.0))))), 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(9683.8457), max(_GLF_FUZZED(9683.8457), _GLF_FUZZED(9683.8457)))), max(float(_GLF_FUZZED(9683.8457)), float(_GLF_FUZZED(9683.8457)))), bool(false)))), bool(false))), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-8100.3222), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(float((! true))), _GLF_FUZZED(-2.7)), vec4((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(_GLF_IDENTITY(-218.965, mix(float(-218.965), float(_GLF_FUZZED(38.88)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(_GLF_IDENTITY(-218.965, mix(float(-218.965), float(_GLF_FUZZED(38.88)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))), max(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(_GLF_IDENTITY(-218.965, mix(float(-218.965), float(_GLF_FUZZED(38.88)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))), _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(_GLF_IDENTITY(-218.965, mix(float(-218.965), float(_GLF_FUZZED(38.88)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(_GLF_IDENTITY(-218.965, mix(float(-218.965), float(_GLF_FUZZED(38.88)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(_GLF_IDENTITY(-218.965, mix(float(-218.965), float(_GLF_FUZZED(38.88)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(_GLF_IDENTITY(-218.965, mix(float(-218.965), float(_GLF_FUZZED(38.88)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))), (_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(_GLF_IDENTITY(-218.965, mix(float(-218.965), float(_GLF_FUZZED(38.88)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40))))) / vec4(1.0, 1.0, 1.0, 1.0)))))) : vec4(1.0, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(-3.6), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), (_GLF_FUZZED(_GLF_IDENTITY(vec4(-218.965, -6859.7025, -9.1, -28.40), (_GLF_IDENTITY(vec4(-218.965, -6859.7025, -9.1, -28.40), (vec4(-218.965, -6859.7025, -9.1, -28.40)) * mat4(1.0))) / vec4(1.0, 1.0, 1.0, 1.0)))) * mat4(1.0)) : vec4(1.0, 1.0, 1.0, 0.0))[2], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)))))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))), vec4(vec4(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))))))))) / abs(vec4(1.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(985.970)), bool(false)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1.8, _GLF_IDENTITY(mix(float(_GLF_FUZZED(85.97)), float(-1.8), bool(_GLF_IDENTITY(true, (true) || false))), (true ? mix(float(_GLF_FUZZED(85.97)), float(-1.8), bool(true)) : _GLF_FUZZED(408.421))))), mix(float(_GLF_FUZZED(-1.8)), _GLF_IDENTITY(float(_GLF_FUZZED(9683.8457)), max(float(_GLF_IDENTITY(_GLF_FUZZED(9683.8457), min(_GLF_FUZZED(9683.8457), _GLF_FUZZED(9683.8457)))), float(_GLF_FUZZED(9683.8457)))), bool(false)))), bool(false))), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-8100.3222), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, cos(0.0), sin(0.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), sqrt(0.0), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0))[1], _GLF_FUZZED(float((! true))), _GLF_FUZZED(-2.7)), vec4((false ? _GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, _GLF_IDENTITY(-6859.7025, mix(float(_GLF_IDENTITY(-6859.7025, 1.0 * (-6859.7025))), float(_GLF_FUZZED(5546.7422)), bool(false))), -9.1, -28.40)), min(_GLF_IDENTITY(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), min(_GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)), _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)))), _GLF_FUZZED(vec4(_GLF_IDENTITY(-218.965, mix(float(_GLF_FUZZED(-135.580)), float(_GLF_IDENTITY(-218.965, float(mat3x4(-218.965, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), bool(true))), -6859.7025, -9.1, -28.40)))) : vec4(1.0, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(-3.6), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[2], (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, _GLF_IDENTITY(-9.1, mix(float(_GLF_FUZZED(86.42)), float(_GLF_IDENTITY(-9.1, mix(float(-9.1), float(_GLF_FUZZED(7210.5741)), bool(false)))), bool(true))), -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)))))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(vec4(mat4x3(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))), 1.0, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(mat4x3(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-218.965, -6859.7025, -9.1, -28.40)) : vec4(1.0, 1.0, 1.0, 0.0))), 1.0, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))), float(_GLF_FUZZED(985.970)), bool(false)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-1.8, mix(float(_GLF_FUZZED(85.97)), float(-1.8), bool(true)))), mix(float(_GLF_FUZZED(-1.8)), _GLF_IDENTITY(float(_GLF_FUZZED(9683.8457)), max(_GLF_IDENTITY(float(_GLF_FUZZED(9683.8457)), (_GLF_IDENTITY(float(_GLF_FUZZED(9683.8457)), (float(_GLF_FUZZED(9683.8457))) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))) + 0.0), float(_GLF_FUZZED(9683.8457)))), bool(false)))), bool(_GLF_IDENTITY(false, ! (! (false)))))), injectionSwitch.x))) * 1.0))) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2((! (_GLF_DEAD(false))), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), min(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), mix(float(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0))), float(_GLF_FUZZED(5.4)), bool(false))), float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0))))))), false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-1.2, 0.0, -31.13, 382.666).r) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-1.2, 0.0, -31.13, 382.666).r) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-1.2, 0.0, -31.13, 382.666).r) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-709.566))))))) || false))), _GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, true)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))), (bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0))))), max(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0))))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0))))))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0))))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0)))))), (clamp(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0 + (_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0))))), max(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0))))))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(vec2(8.0, 4638.2299).t)), bvec2(false, false)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0))))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0, 1.0, 1.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0)), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0), vec4(1.0, sqrt(0.0), 0.0, 1.0))))))) + vec2(0.0, 0.0)))).x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6.9) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - vec2(0.0, 0.0)).y, clamp(false ? _GLF_FUZZED(-6.9) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(false ? _GLF_FUZZED(-6.9) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(-1488.0948)), float(false ? _GLF_FUZZED(-6.9) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - vec2(0.0, 0.0)).y), bool(true))), _GLF_IDENTITY(false ? _GLF_FUZZED(-6.9) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - vec2(0.0, 0.0)).y, (false ? _GLF_FUZZED(-358.573) : false ? _GLF_FUZZED(-6.9) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - vec2(0.0, 0.0)).y)))))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))) && true)))), true)))), bool(bool(_GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))) && true)))), true)))), bool(bool(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))) && true)))), true)))))))))), (bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))))), true))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true)))), (bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, 0.0, 0.0, 1.0), mat3x2(mat4(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0)))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))))) && true))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, min((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0))) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), _GLF_IDENTITY(vec2(tan(0.0), 1.0), vec2(mat3x2(vec2(tan(0.0), 1.0), 1.0, 0.0, 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), exp(0.0), 1.0)))).x < injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, min((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0))), mix(float(_GLF_FUZZED(-170.211)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) * 1.0, clamp((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((injectionSwitch.x) * 1.0) - 0.0))), min((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0)))), bool(true))) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, log(1.0), exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, (false) && true))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(752.546, 8.5)) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2380.1311, 0.6)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) >> 0u, 0u | ((workgroup_base + subgroup_id * subgroup_size) >> 0u)))) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 0u, 0u, 0u))))) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) + (subgroup_local_id + 1)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) + (subgroup_local_id + 1))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) + (subgroup_local_id + 1))))) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u), (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))) + (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) + _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u))), 1u, 1u)))) | ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) + _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1)))))))) | ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x)))))))), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(811.220, -8.3)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0))))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7787.2936)), vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-9534.0529), clamp(_GLF_FUZZED(-9534.0529), _GLF_IDENTITY(_GLF_FUZZED(-9534.0529), (_GLF_IDENTITY(_GLF_FUZZED(-9534.0529), (_GLF_IDENTITY(_GLF_FUZZED(-9534.0529), max(_GLF_FUZZED(-9534.0529), _GLF_FUZZED(-9534.0529)))) / 1.0)) + 0.0), _GLF_FUZZED(-9534.0529)))), bool(false))) > injectionSwitch.y)), true))).y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))) && true)))))) || ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(false, (false) && true) || ((true))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) || false), ! (! (bool((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) || false)))))), false, true)))))) && true))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))))), (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(528.565), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(16.27)), bvec2(true, false))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.1))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true)))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))) - 0.0), injectionSwitch.y))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, sqrt(0.0), determinant(mat4(0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(7.0) : float(mat2x4(injectionSwitch.x, 1.0, sqrt(0.0), determinant(mat4(0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0))))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x), float(injectionSwitch.x))))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
