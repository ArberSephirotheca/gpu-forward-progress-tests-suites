#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), true, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), true, true, true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(1972u, 76286u, 168246u)))).x) << (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (2u), _GLF_IDENTITY((~ (2u)), ((~ (2u))) - 0u) | 0u)), 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(~ (2u), (~ (2u)) | 0u), (_GLF_IDENTITY(~ (2u), (~ (2u)) | 0u)) | 0u))), min(((_GLF_IDENTITY(_GLF_IDENTITY(~ (2u), (~ (2u)) | 0u), (_GLF_IDENTITY(~ (2u), (~ (2u)) | 0u)) | 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (2u), (~ (2u)) | 0u), (_GLF_IDENTITY(~ (2u), (~ (2u)) | 0u)) | 0u)))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u), max(uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u)) | uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u), max(uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u), uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u))))) >> 0u, clamp((uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u), max(uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u), uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u))))) >> 0u, (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u), max(uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u), uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u))))) >> 0u, (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u), max(uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u), uvec4(_GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u), 0u, (1u ^ 1u), 1u))))) >> 0u)))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), uint(_GLF_IDENTITY(uvec4(~ (workgroup_size), 1u, 1u, 1u), clamp(uvec4(~ (workgroup_size), 1u, 1u, 1u), uvec4(~ (workgroup_size), 1u, 1u, 1u), uvec4(~ (workgroup_size), 1u, 1u, 1u))))))), (_GLF_IDENTITY(workgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), (_GLF_IDENTITY(max(workgroup_size, workgroup_size), (true ? max(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))) : _GLF_FUZZED(104315u)))) >> 0u)), min(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) + 0u), max(workgroup_size, workgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) + 0u), _GLF_IDENTITY(max(workgroup_size, workgroup_size), (max(workgroup_size, workgroup_size)) + 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) >> 0u), max(workgroup_size, workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), max(workgroup_size, workgroup_size)))))) - 0u)) >> 0u)))) | (workgroup_size)), ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size))), (~ (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size)))) ^ 0u))), ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(max(workgroup_size, workgroup_size), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(uvec2(_GLF_FUZZED(workgroup_id), 1u)))), max(uint(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(uvec2(_GLF_FUZZED(workgroup_id), 1u)))), uint(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(uvec2(_GLF_FUZZED(workgroup_id), 1u)))))))) : max(workgroup_size, workgroup_size)))) | (max(workgroup_size, workgroup_size)), ((max(workgroup_size, workgroup_size)) | (max(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), workgroup_size))) / 1u))))))), min((_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(max(workgroup_size, workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : max(workgroup_size, workgroup_size)))) | (max(workgroup_size, workgroup_size)), _GLF_IDENTITY(((max(workgroup_size, workgroup_size)) | (max(workgroup_size, workgroup_size))), ~ (~ (((_GLF_IDENTITY(max(workgroup_size, workgroup_size), 0u ^ (max(workgroup_size, workgroup_size)))) | (max(workgroup_size, workgroup_size)))))) / 1u))))))), (_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(max(workgroup_size, workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : max(workgroup_size, workgroup_size)))) | (max(workgroup_size, workgroup_size)), ((max(workgroup_size, workgroup_size)) | (max(workgroup_size, workgroup_size))) / 1u))))), clamp((~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(max(workgroup_size, workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : max(workgroup_size, workgroup_size)))) | (max(workgroup_size, workgroup_size)), ((max(workgroup_size, workgroup_size)) | (max(workgroup_size, workgroup_size))) / 1u))))), (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(max(workgroup_size, workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : max(workgroup_size, workgroup_size)))) | (max(workgroup_size, workgroup_size)), ((max(workgroup_size, workgroup_size)) | (max(workgroup_size, workgroup_size))) / 1u))))), (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(max(workgroup_size, workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : max(workgroup_size, workgroup_size)))) | (max(workgroup_size, workgroup_size)), ((max(workgroup_size, workgroup_size)) | _GLF_IDENTITY((max(workgroup_size, workgroup_size)), ~ (~ ((max(workgroup_size, workgroup_size)))))) / 1u))))))))))) | (workgroup_size))))) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || (bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) * subgroup_size))))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)) + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + subgroup_local_id, (false ? _GLF_FUZZED((num_workgroup ^ _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (~ (0u | (subgroup_id))))) * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), ~ (~ (_GLF_IDENTITY(0u | (subgroup_id), (_GLF_IDENTITY(0u | (subgroup_id), 0u ^ (0u | (subgroup_id)))) / 1u))))) * subgroup_size + subgroup_local_id, 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_id), ~ (~ (0u | (subgroup_id)))), min(_GLF_IDENTITY(0u | (subgroup_id), ~ (~ (0u | (subgroup_id)))), _GLF_IDENTITY(0u | (subgroup_id), ~ (~ (0u | (subgroup_id))))))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) >> 0u) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (true ? max(0u, 0u) : _GLF_FUZZED(workgroup_id)))) | _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) - 0u)) << 0u) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))) * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), min(subgroup_id, subgroup_id))), 0u))))), 0u | (subgroup_id)) * subgroup_size + subgroup_local_id) + 0u)), clamp(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) << 0u) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, max(0u, 0u)) | (subgroup_id)) * subgroup_size + subgroup_local_id), _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, min(0u, 0u)) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), min(_GLF_IDENTITY((subgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u), (subgroup_id))), max((subgroup_id), (subgroup_id))), _GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))))), (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) << 0u) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + subgroup_local_id), (max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u)))) | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 1u), min(uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 1u))))))) - 0u), 0u | _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), (true ? _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id)))) >> 0u)))) - (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), (0u | (subgroup_id)) | (0u | (subgroup_id))))) << 0u) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u)) * subgroup_size + subgroup_local_id)) >> 0u), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u))) << 0u) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u))), 0u | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u)) * subgroup_size + subgroup_local_id))))), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) >> 0u) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (true ? max(0u, 0u) : _GLF_FUZZED(workgroup_id)))) | _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) - 0u)) << 0u) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))) * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), min(subgroup_id, subgroup_id))), 0u))))), 0u | (subgroup_id)) * subgroup_size + subgroup_local_id) + 0u)), clamp(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) << 0u) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, max(0u, 0u)) | (subgroup_id)) * subgroup_size + subgroup_local_id), _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, min(0u, 0u)) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), min(_GLF_IDENTITY((subgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u), (subgroup_id))), max((subgroup_id), (subgroup_id))), _GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))))), (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) << 0u) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + subgroup_local_id), (max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u)))) | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 1u), min(uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 1u))))))) - 0u), 0u | _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), (true ? _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id)))) >> 0u)))) - (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), (0u | (subgroup_id)) | (0u | (subgroup_id))))) << 0u) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u)) * subgroup_size + subgroup_local_id)) >> 0u), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u))) << 0u) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u))), 0u | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u)) * subgroup_size + subgroup_local_id)))))) | ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) >> 0u) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (true ? max(0u, 0u) : _GLF_FUZZED(workgroup_id)))) | _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) - 0u)) << 0u) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))) * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), min(subgroup_id, subgroup_id))), 0u))))), 0u | (subgroup_id)) * subgroup_size + subgroup_local_id) + 0u)), clamp(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) << 0u) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, max(0u, 0u)) | (subgroup_id)) * subgroup_size + subgroup_local_id), _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, min(0u, 0u)) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), min(_GLF_IDENTITY((subgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u), (subgroup_id))), max((subgroup_id), (subgroup_id))), _GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))))), (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) << 0u) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + subgroup_local_id), (max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u)))) | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 1u), min(uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 1u))))))) - 0u), 0u | _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), (true ? _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id)))) >> 0u)))) - (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), (0u | (subgroup_id)) | (0u | (subgroup_id))))) << 0u) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u)) * subgroup_size + subgroup_local_id)) >> 0u), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u))) << 0u) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u))), 0u | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u)) * subgroup_size + subgroup_local_id))))))));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, true)))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(66.11, -9.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0]))) - 0.0))), injectionSwitch[1]))[1])).y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-147.541) : injectionSwitch[1])))))).y)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-46.38, 2054.6910)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(injectionSwitch[0]), max(float(injectionSwitch[0]), float(injectionSwitch[0]))), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))), vec2(mat4x3((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0))) * mat2(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0)))) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(8178.4906, 8159.9214, 5.3, 8.2))))))))).y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])).x > injectionSwitch.y))))))) && true)))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), true, false), bvec3(bvec4(bvec3(! (true), true, false), true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), (true) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), (true) && true))))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, true)))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(66.11, -9.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0]))) - 0.0))), injectionSwitch[1]))[1])).y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-147.541) : injectionSwitch[1])))))).y)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-46.38, 2054.6910)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(injectionSwitch[0]), max(float(injectionSwitch[0]), float(injectionSwitch[0]))), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))), vec2(mat4x3((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0))) * mat2(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0)))) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(8178.4906, 8159.9214, 5.3, 8.2))))))))).y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])).x > injectionSwitch.y))))))) && true)))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), true, false), bvec3(bvec4(bvec3(! (true), true, false), true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), (true) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), (true) && true))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, true)))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.7)), vec2(_GLF_FUZZED(-23.74), (injectionSwitch)[1]), bvec2(false, true))).y)), (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(66.11, -9.0)))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(intBitsToFloat(ivec2(91359, -69170))) : injectionSwitch))))[1])).x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2234.6357) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true))) ? injectionSwitch : _GLF_FUZZED(vec2(66.11, -9.0)), mix(vec2(_GLF_FUZZED(-7853.9470), (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true))) ? injectionSwitch : _GLF_FUZZED(vec2(66.11, -9.0)))[1]), vec2((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true))) ? injectionSwitch : _GLF_FUZZED(vec2(66.11, -9.0)))[0], _GLF_FUZZED(vec3(-7033.6247, 55.26, -967.695).g)), bvec2(true, false))))).y)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0]))) - 0.0))), injectionSwitch[1]))[1])).y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-147.541) : injectionSwitch[1])))))).y)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-46.38, 2054.6910)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch[0]), max(float(injectionSwitch[0]), float(injectionSwitch[0]))), float(_GLF_FUZZED(9.4)), bool(false)), min(mix(_GLF_IDENTITY(float(injectionSwitch[0]), max(float(injectionSwitch[0]), float(injectionSwitch[0]))), float(_GLF_FUZZED(9.4)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch[0]), max(float(injectionSwitch[0]), float(injectionSwitch[0]))), float(_GLF_FUZZED(9.4)), bool(false))))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[_GLF_IDENTITY(1, (1) - 0)]))) * mat2(1.0), vec2(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))), vec2(mat4x3((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7649.5402))), 1.0))), float(_GLF_FUZZED(96.79)), bool(false))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(false))), 0.0)), 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-24.43) : _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7649.5402))), 1.0))), float(_GLF_FUZZED(96.79)), bool(false))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(false))), 0.0)), 0.0, 1.0, 1.0)), 1.0 * (float(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7649.5402))), 1.0))), float(_GLF_FUZZED(96.79)), bool(false))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(false))), 0.0)), 0.0, 1.0, 1.0))))))), 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0))) * mat2(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0)))) * mat2(1.0)), vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0)))) * mat2(1.0)), length(vec2(0.0, 0.0)), 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))) * mat2(1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(0, 0, 0)))]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(0, 0, 0)))]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1]))))) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(8178.4906, 8159.9214, 5.3, 8.2))))))))).y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])).x > injectionSwitch.y))))))) && true)))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), true, false), bvec3(bvec4(bvec3(! _GLF_IDENTITY((true), true && ((true))), true, false), true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true)) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))) || false)), (true) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true)), ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), (true) && true))))) || false))))))) ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), _GLF_IDENTITY((uint(uint(subgroup_size))) | (uint(uint(subgroup_size))), ((uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))) | ((uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))))))))) : _GLF_FUZZED(subgroup_size))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))) : _GLF_FUZZED(uvec2(145644u, 90075u)[0])));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), true), true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).y), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)) + vec2(0.0, 0.0))).y), false, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))))).y), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).y), false, true), false)))))))))))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), false, true))))) || false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) || false), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, abs(0.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, exp(sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.3) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), cos(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(intBitsToFloat(10460)) : _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) > injectionSwitch.y))) && true)))))) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id), (false ? _GLF_FUZZED(virtual_gid) : (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uvec4(_GLF_FUZZED(subgroup_local_id), 1u, 1u, 0u)))) ^ 0u))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || ((false) && true))))))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), clamp(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, max(4, 4)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, (4) >> 0)), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, (4) >> 0)), (false ? _GLF_FUZZED(i) : min(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, (4) >> 0))))) | 0))) << 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), 1, 1))) | (4)))), _GLF_IDENTITY(_GLF_IDENTITY((4) << 0, 0 ^ ((4) << 0)), ~ (~ (_GLF_IDENTITY((4) << 0, 0 ^ (_GLF_IDENTITY((4) << 0, (_GLF_IDENTITY((4) << 0, clamp((4) << 0, (4) << 0, (4) << 0))) + int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY((1 | 0), _GLF_IDENTITY(((_GLF_IDENTITY(1, min(1, 1)) | 0)), min(_GLF_IDENTITY(((1 | 0)), (((1 | 0))) << 0), ((1 | 0)))) | ((1 | 0))), (_GLF_IDENTITY(_GLF_IDENTITY((1 | 0), ((1 | 0)) | ((1 | 0))), ~ (~ (_GLF_IDENTITY((1 | 0), _GLF_IDENTITY(((1 | 0)) | ((1 | 0)), (true ? ((1 | 0)) | ((1 | 0)) : _GLF_FUZZED(-49756)))))))) * _GLF_IDENTITY(1, min(1, 1))), 1, _GLF_IDENTITY(0, (0) - (int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(6453.4970, 0.0 + (_GLF_IDENTITY(6453.4970, max(6453.4970, 6453.4970)))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.3))))))) >> _GLF_IDENTITY(int(0), int(0)))))), int(ivec2(_GLF_IDENTITY(int(ivec4(4, _GLF_IDENTITY((1 | 0), (true ? _GLF_IDENTITY((1 | 0), ((1 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0)))) - 0) : _GLF_FUZZED(ivec3(-27576, -72476, -92791).p))), 1, 0)), (int(ivec4(4, (1 | 0), 1, 0))) >> 0), 1)))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) && true))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false)), ! (! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.6))) : _GLF_FUZZED(-0.2))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(-23.49), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! (! (bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), ivec2(0, 0) | (ivec2(2, 1))))) : _GLF_FUZZED(bitCount(30569))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), (true ? _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), ivec2(0, 0) | (ivec2(2, 1))))) : _GLF_FUZZED(bitCount(30569))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), ivec2(0, 0) | (ivec2(2, 1))), min(_GLF_IDENTITY(ivec2(2, 1), ivec2(0, 0) | (ivec2(2, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), ivec2(0, 0) | (ivec2(2, 1))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(2, 1), ivec2(0, 0) | (ivec2(2, 1)))), min(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(2, 1), ivec2(0, 0) | (ivec2(2, 1)))), ivec2(0, 0) ^ ((_GLF_IDENTITY(ivec2(2, 1), ivec2(0, 0) | (ivec2(2, 1)))))), (_GLF_IDENTITY(ivec2(2, 1), ivec2(0, 0) | (ivec2(2, 1)))))) + ivec2(0, 0)))))) : _GLF_FUZZED(bitCount(30569)))), (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), ivec2(0, 0) | (ivec2(2, 1))))) : _GLF_FUZZED(bitCount(30569))))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) | ivec2(0, 0))) | ivec2(0, 0)), ivec2(0, 0) | (ivec2(2, 1))))) : _GLF_FUZZED(bitCount(30569))))))))), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false)))))) && true))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))) || _GLF_IDENTITY(false, (false) || false)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y)))))) || false) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))), false || (bool(bool(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 38.30)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-70.97)), bvec2(true, false))).y)))), true), false)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-356.136), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.8)), bvec2(true, false))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
