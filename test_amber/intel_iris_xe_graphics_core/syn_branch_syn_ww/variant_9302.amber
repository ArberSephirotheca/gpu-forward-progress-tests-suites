#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  barrier();
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(false, true && (false)))), false)), ! (! (bool(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)))), false))))))))))))
    barrier();
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0))))))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-869.804))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0))))).y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), true && ((! (false))))))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, true))) && true)) && _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))), bool(bvec4(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))), false || ((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))), false, false, true))), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))), bool(bvec4(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))), false || ((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))), false, false, true))), true, false)), false, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(asin(cosh(vec2(-8.2, 8860.8957))))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)))))));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.5) : injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, bool(bool((false) || false)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-137.914, (false ? _GLF_FUZZED(2.5) : -137.914))), _GLF_FUZZED(5.7)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), float(float(1.0)), float(float(1.0))))))))))))), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))), (transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))), mat2(mat3(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))))))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), _GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), clamp(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(1.0, float(float(1.0)))))))))))))))))))))))), mat2(mat4(mat2(1.0))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-137.914, (false ? _GLF_FUZZED(2.5) : -137.914))), _GLF_FUZZED(5.7)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), float(float(1.0)), float(float(1.0))))))))))))), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))), (transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))), mat2(mat3(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))))))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), _GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), clamp(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(1.0, float(float(1.0)))))))))))))))))))))))), mat2(mat4(mat2(1.0))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-137.914, (false ? _GLF_FUZZED(2.5) : -137.914))), _GLF_FUZZED(5.7)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), float(float(1.0)), float(float(1.0))))))))))))), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))), (transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))), mat2(mat3(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))))))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), _GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), clamp(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(1.0, float(float(1.0)))))))))))))))))))))))), mat2(mat4(mat2(1.0))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-137.914, (false ? _GLF_FUZZED(2.5) : -137.914))), _GLF_FUZZED(5.7)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), float(float(1.0)), float(float(1.0))))))))))))), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))), (transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))), mat2(mat3(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))))))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), _GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), clamp(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(1.0, float(float(1.0)))))))))))))))))))))))), mat2(mat4(mat2(1.0))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-137.914, (false ? _GLF_FUZZED(2.5) : -137.914))), _GLF_FUZZED(5.7)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), float(float(1.0)), float(float(1.0))))))))))))), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))), (transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))), mat2(mat3(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))))))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), _GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), clamp(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(1.0, float(float(1.0)))))))))))))))))))))))), mat2(mat4(mat2(1.0))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-137.914, (false ? _GLF_FUZZED(2.5) : -137.914))), _GLF_FUZZED(5.7)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), float(float(1.0)), float(float(1.0))))))))))))), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))), (transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))), mat2(mat3(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))))))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), _GLF_IDENTITY(transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(float(1.0))))))), (false ? _GLF_FUZZED(mat2(mat2x4(-94.46, -1821.0503, -3.0, 61.11, -90.71, 7867.1066, 2.8, -1752.4015))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), clamp(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(1.0, float(float(1.0)))))))))))))))))))))))), mat2(mat4(mat2(1.0))))).x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), false, true, false)))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(41.27, -647.905)))), (injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(2.2), _GLF_FUZZED(-2077.3539)), bvec2(false, false))).x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-24.08))), injectionSwitch[1])).x > injectionSwitch.y))), false, true, true)), false, false, true))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       barrier();
      }
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) > int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (injectionSwitch.x) - _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))))) && true); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(27191))) ^ (int(1))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
            {
             for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0), (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0)) | 0))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   return;
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2((! (_GLF_DEAD(false))), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((true ? GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = _GLF_IDENTITY(workgroup_id, (workgroup_id) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, (174036u & 0u) + (1u))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))), ~ (_GLF_IDENTITY(~ ((true ? GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = _GLF_IDENTITY(workgroup_id, (workgroup_id) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, (174036u & 0u) + (1u))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))), 0u | (_GLF_IDENTITY(~ ((true ? GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = _GLF_IDENTITY(workgroup_id, (workgroup_id) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, (174036u & 0u) + (1u))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))), (false ? _GLF_FUZZED(num_workgroup) : ~ ((true ? GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = _GLF_IDENTITY(workgroup_id, (workgroup_id) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, (174036u & 0u) + (1u))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))))))))), 0u ^ (_GLF_IDENTITY((true ? GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id, (GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id) - 0u)) - 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((true ? GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), ((true ? GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) ^ 0u), (true ? (true ? GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) : _GLF_FUZZED(subgroup_id)))))) * 1u))));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, false, false, true)))))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY((1 & 1), max((1 & 1), (1 & 1))))), max(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))), _GLF_IDENTITY(int(4), 0 ^ (int(4))))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))))), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true), bvec3(bvec4(bvec3(false, false, true), true))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true), bvec3(bvec4(bvec3(false, false, true), true))), false)), true)))))))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true), bvec3(bvec4(bvec3(false, false, true), true)))), true))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(false, false, true), true)))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(false, false, true), true)))), true), true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9876.3167) : injectionSwitch.x)) > injectionSwitch.y)) || (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true), true)))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9876.3167) : injectionSwitch.x)) > injectionSwitch.y)) || (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true), true)))), true))), true)))))))))))
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(4.4))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false))))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false)) || false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y = workgroup_base;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0, (_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0, ((int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0) << 0)) | ((int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0))), 0)), (int(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0), 0))) ^ 0))), max(_GLF_IDENTITY((0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0), 0)), (int(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0), 0))) ^ 0))), max((0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(93.61)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))).x)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0), 0)), (int(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0), 0))) ^ 0))), (0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(ivec4((int(_GLF_ZERO(0.0, injectionSwitch.x))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), 0, (0 << _GLF_IDENTITY(int(5), int(5))))), (int(ivec4((int(_GLF_ZERO(0.0, injectionSwitch.x))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), 0, (0 << _GLF_IDENTITY(int(5), int(5)))))) + 0)) + 0), 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0), 0), ~ (~ (ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0), 0))))), int(ivec2(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0), 0), ~ (~ (ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0), 0))))), 0)))) ^ 0))))), (0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0), 0)), (int(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0), 0))) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) >> 0)) | (0)))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + subgroup_local_id, (GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) ^ 0u) + subgroup_local_id) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true && _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))) && true))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))) && true)))))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))
        {
         GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x = virtual_gid;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6630.0834)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(1, 1 * (1)), 1))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(1, 1 * (1)), 1))), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(1, 1 * (1)), 1))), false)))))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-6.9, 2.0).x), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2747.6471)), bvec2(true, false))), injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && _GLF_IDENTITY(true, true && (true)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(851.474)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) && true)))))), false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true)))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true, ! (! (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)))), false || (! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))))))))) || false), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * subgroup_size, 0u | (GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0)))) * abs(vec2(1.0, 1.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))) * mat2(1.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9.3, (false ? _GLF_FUZZED(87.69) : 9.3))), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-7.9)), float((injectionSwitch)[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(false, false, true))))), _GLF_IDENTITY(false, bool(bool(false))) || (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))).x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))), clamp(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), 0.0, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))) : vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))) + (1.0))))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.2, -2406.7554)))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))), clamp(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1]))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])))), injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), 0.0, 0.0, 0.0, 1.0))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), 0.0, 0.0, 0.0, 1.0))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-67.27)), bool(false)))), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (false ? _GLF_FUZZED(vec2(840.943, -21.07)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))), 0.0, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))))), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(324.463) : 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (vec3(0.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0)), (float(mat2(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0))) * 1.0)) + (1.0))))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(vec2(7041.6273, 0.6)) : vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))))), clamp(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0), 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]), mix(float((injectionSwitch[0])), float(_GLF_FUZZED(2105.2160)), bool(false))) + 0.0), injectionSwitch[1])), injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))), min(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]), mix(float((injectionSwitch[0])), float(_GLF_FUZZED(2105.2160)), bool(false))) + 0.0), injectionSwitch[1])), injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]), mix(float((injectionSwitch[0])), float(_GLF_FUZZED(2105.2160)), bool(false))) + 0.0), injectionSwitch[1])), injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))))))))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
            {
             do
              {
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (bool(_GLF_WRAPPED_LOOP(false))) && true))));
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * _GLF_IDENTITY(1, (1) | (1))) != _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0))))), _GLF_IDENTITY(0, max(0, 0)))))), ~ (~ (0)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * _GLF_IDENTITY(1, (1) | (1))) != _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0))))), _GLF_IDENTITY(0, max(0, 0)))))), ~ (~ (0)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ (0 & 36104)), (_injected_loop_counter) * _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) | (1))) != _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) | (~ (0))))), _GLF_IDENTITY(0, max(0, 0)))))), ~ (~ (0))))) && true)) && true); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false))))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6096.2209)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-4.0, (true ? _GLF_IDENTITY(-4.0, min(-4.0, -4.0)) : _GLF_FUZZED(-806.546)))), (injectionSwitch)[1]), bvec2(false, true))).y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, false)))), true, true, true)))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), (bool(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-2.8)), bool(false))), injectionSwitch[1])))).x, mix(float(_GLF_FUZZED(7.9)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4024.5670)), bool(false))))), 1.0)).y)))))) || false)), (bool(_GLF_IDENTITY(bool(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), (bool(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-2.8)), bool(false))), injectionSwitch[1])))).x, mix(float(_GLF_FUZZED(7.9)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4024.5670)), bool(false))))), 1.0)).y)))))) || false))) && true))), (false) && true), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false) || false)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false) || false)) || false), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))), (_GLF_IDENTITY((true), ! (! ((true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)) || false)))))), true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), (bool(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-2.8)), bool(false))), injectionSwitch[1])))).x, mix(float(_GLF_FUZZED(7.9)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4024.5670)), bool(false))))), 1.0)).y)))))) || false)), (bool(_GLF_IDENTITY(bool(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), (bool(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-2.8)), bool(false))), injectionSwitch[1])))).x, mix(float(_GLF_FUZZED(7.9)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4024.5670)), bool(false))))), 1.0)).y)))))) || false))) && true))), (false) && true), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false) || false)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false) || false)) || false), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))), (_GLF_IDENTITY((true), ! (! ((true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)) || false)))))), true))))))) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + length(vec2(0.0, 0.0)))))))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))) > 0), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))) > 0))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), (false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) && true))))))))))))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(roundEven(-4918.7602))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || false))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), true), true)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1009.7786), _GLF_FUZZED(0.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1009.7786), _GLF_FUZZED(0.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1009.7786), _GLF_FUZZED(0.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1009.7786), _GLF_FUZZED(0.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1009.7786), _GLF_FUZZED(0.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))) || false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-6941.2021) : (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-72.80), _GLF_FUZZED(-5.5)), bvec2(false, false))).y))))), true), true)))))))))))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-641.331), _GLF_FUZZED(-233.837)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-641.331), _GLF_FUZZED(-233.837)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-641.331), _GLF_FUZZED(-233.837)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * vec2(1.0, 1.0))) - sqrt(vec2(0.0, 0.0)))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-641.331), _GLF_FUZZED(-233.837)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-641.331), _GLF_FUZZED(-233.837)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-641.331), _GLF_FUZZED(-233.837)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x) / sqrt(1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-641.331), _GLF_FUZZED(-233.837)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-641.331), _GLF_FUZZED(-233.837)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x) / sqrt(1.0))), float(_GLF_FUZZED(vec2(-856.484, -83.39).r)), bool(false))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, clamp(22.58, 22.58, _GLF_IDENTITY(22.58, float(mat4(22.58, 1.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(273.221, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(273.221, max(273.221, 273.221)), max(_GLF_IDENTITY(_GLF_IDENTITY(273.221, max(273.221, 273.221)), min(_GLF_IDENTITY(273.221, max(273.221, 273.221)), _GLF_IDENTITY(273.221, max(273.221, 273.221)))), _GLF_IDENTITY(273.221, max(273.221, 273.221))))), float(_GLF_FUZZED(5.9)), bool(false)))))), vec2(46.36, -3.5))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, clamp(22.58, 22.58, _GLF_IDENTITY(22.58, float(mat4(22.58, 1.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(273.221, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(273.221, max(273.221, 273.221)), max(_GLF_IDENTITY(_GLF_IDENTITY(273.221, max(273.221, 273.221)), min(_GLF_IDENTITY(273.221, max(273.221, 273.221)), _GLF_IDENTITY(273.221, max(273.221, 273.221)))), _GLF_IDENTITY(273.221, max(273.221, 273.221))))), float(_GLF_FUZZED(5.9)), bool(false)))))), vec2(46.36, -3.5))) : injectionSwitch, 1.0, 0.0, round(length(normalize(cos(vec2(0.0, 0.0))))), 1.0)))))), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))), _GLF_IDENTITY((_GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), max(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6))))))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, min(22.58, 22.58)), 273.221))), vec2(46.36, -3.5)))), ((_GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), max(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6))))))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, min(22.58, 22.58)), 273.221))), vec2(46.36, -3.5))))) + vec2(0.0, 0.0)) + vec2(0.0, 0.0)) : injectionSwitch, mix(vec2(_GLF_FUZZED(float(140753u)), _GLF_FUZZED((true ? -9.0 : (-279.097)))), vec2((false ? _GLF_IDENTITY(_GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))), _GLF_IDENTITY((_GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), max(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6))))))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, min(22.58, 22.58)), 273.221))), vec2(46.36, -3.5)))), ((_GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), max(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6))))))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, min(22.58, 22.58)), 273.221))), vec2(46.36, -3.5))))) + vec2(0.0, 0.0)) + vec2(0.0, 0.0)) : injectionSwitch)[0], _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))), _GLF_IDENTITY((_GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), max(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6))))))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, min(22.58, 22.58)), 273.221))), vec2(46.36, -3.5)))), ((_GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), max(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6))))))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, min(22.58, 22.58)), 273.221))), vec2(46.36, -3.5))))) + vec2(0.0, 0.0)) + vec2(0.0, 0.0)) : injectionSwitch)[1], max((false ? _GLF_IDENTITY(_GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))), _GLF_IDENTITY((_GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), max(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6))))))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, min(22.58, 22.58)), 273.221))), vec2(46.36, -3.5)))), ((_GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), max(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6))))))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, min(22.58, 22.58)), 273.221))), vec2(46.36, -3.5))))) + vec2(0.0, 0.0)) + vec2(0.0, 0.0)) : injectionSwitch)[1], _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))), _GLF_IDENTITY((_GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), max(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6))))))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, min(22.58, 22.58)), 273.221))), vec2(46.36, -3.5)))), ((_GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), max(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6))))))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, min(22.58, 22.58)), 273.221))), vec2(46.36, -3.5))))) + vec2(0.0, 0.0)) + vec2(0.0, 0.0)) : injectionSwitch)[1], mix(float(_GLF_FUZZED(-5.8)), float((false ? _GLF_IDENTITY(_GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))), _GLF_IDENTITY((_GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), max(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6))))))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, min(22.58, 22.58)), 273.221))), vec2(46.36, -3.5)))), ((_GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), max(_GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6)))), _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, clamp(9.6, 9.6, 9.6)))), _GLF_IDENTITY(9.6, min(9.6, 9.6))))))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, min(22.58, 22.58)), 273.221))), vec2(46.36, -3.5))))) + vec2(0.0, 0.0)) + vec2(0.0, 0.0)) : injectionSwitch)[1]), bool(true)))))), bvec2(true, true))))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)).x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1.4)))) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), vec2(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))))))))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), clamp((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))))), max(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(_GLF_IDENTITY(-9.6, mix(float(-9.6), float(_GLF_FUZZED(4.5)), bool(false))), 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (_GLF_IDENTITY(vec2(22.58, 273.221), min(vec2(22.58, 273.221), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))))))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, (9.6) - 0.0), 9.6))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))))) * (_GLF_IDENTITY(vec2(22.58, 273.221), (_GLF_IDENTITY(vec2(22.58, 273.221), min(vec2(22.58, 273.221), vec2(22.58, 273.221)))) / vec2(1.0, 1.0)))), vec2(46.36, -3.5))) : injectionSwitch), vec2(mat3x4((false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))))) * (_GLF_IDENTITY(vec2(22.58, 273.221), (_GLF_IDENTITY(vec2(22.58, 273.221), min(vec2(22.58, 273.221), vec2(22.58, 273.221)))) / vec2(1.0, 1.0)))), vec2(46.36, -3.5))) : injectionSwitch), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, length(0.0), 1.0, 1.0)), 1.0, 0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(_GLF_IDENTITY(vec2(22.58, 273.221), max(vec2(22.58, 273.221), vec2(22.58, 273.221))), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(_GLF_IDENTITY(vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), clamp(_GLF_IDENTITY(vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), clamp(_GLF_IDENTITY(vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), (vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221)))))) * vec2(1.0, 1.0)), vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))))), vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))))), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))))) / vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) + vec2(0.0, 0.0)).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1.4)))) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), vec2(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))))))))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), clamp((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))))), max(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(_GLF_IDENTITY(-9.6, mix(float(-9.6), float(_GLF_FUZZED(4.5)), bool(false))), 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (_GLF_IDENTITY(vec2(22.58, 273.221), min(vec2(22.58, 273.221), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))))))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(9.6, (9.6) - 0.0), 9.6))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))))) * (_GLF_IDENTITY(vec2(22.58, 273.221), (_GLF_IDENTITY(vec2(22.58, 273.221), min(vec2(22.58, 273.221), vec2(22.58, 273.221)))) / vec2(1.0, 1.0)))), vec2(46.36, -3.5))) : injectionSwitch), vec2(mat3x4((false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))))) * (_GLF_IDENTITY(vec2(22.58, 273.221), (_GLF_IDENTITY(vec2(22.58, 273.221), min(vec2(22.58, 273.221), vec2(22.58, 273.221)))) / vec2(1.0, 1.0)))), vec2(46.36, -3.5))) : injectionSwitch), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, length(0.0), 1.0, 1.0)), 1.0, 0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(_GLF_IDENTITY(vec2(22.58, 273.221), max(vec2(22.58, 273.221), vec2(22.58, 273.221))), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(_GLF_IDENTITY(vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), clamp(_GLF_IDENTITY(vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), clamp(_GLF_IDENTITY(vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), (vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221)))))) * vec2(1.0, 1.0)), vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))))), vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))))), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))))) / vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) + vec2(0.0, 0.0)).x > injectionSwitch.y)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), (false || (_GLF_IDENTITY(false, false || (false)))) && true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1.4)))) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))), (_GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1.4)))) * (vec2(22.58, 273.221))), vec2(46.36, -3.5)))) / vec2(1.0, 1.0)) : injectionSwitch))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5)), max(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5)), smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))))) : injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(_GLF_IDENTITY(-9.6, float(mat2x4(-9.6, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (_GLF_IDENTITY(vec2(22.58, 273.221), (false ? _GLF_FUZZED(injectionSwitch) : vec2(22.58, 273.221))))), vec2(46.36, -3.5))) : injectionSwitch))), vec2(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, _GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5))))) : injectionSwitch))))))))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(_GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), (_GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (_GLF_IDENTITY(vec2(22.58, 273.221), mix(vec2((vec2(22.58, 273.221))[0], (vec2(22.58, 273.221))[1]), vec2(_GLF_FUZZED(-7.3), _GLF_FUZZED(-8461.0122)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) / vec2(1.0, 1.0)), vec2(46.36, -3.5))) : injectionSwitch))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))), (clamp((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5)), clamp(_GLF_IDENTITY(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5)), (smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) + vec2(0.0, 0.0)), smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5)), smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))))) / vec2(1.0, 1.0)))))), max(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-9.6, mix(float(-9.6), float(_GLF_FUZZED(4.5)), bool(false))), (_GLF_IDENTITY(-9.6, mix(float(-9.6), float(_GLF_FUZZED(4.5)), bool(false)))) - 0.0), 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (_GLF_IDENTITY(vec2(22.58, 273.221), min(vec2(22.58, 273.221), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))))))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, _GLF_IDENTITY(9.6, max(_GLF_IDENTITY(_GLF_IDENTITY(9.6, (9.6) - 0.0), max(_GLF_IDENTITY(9.6, (9.6) - 0.0), _GLF_IDENTITY(9.6, (9.6) - 0.0))), 9.6))), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(_GLF_IDENTITY(vec2(22.58, 273.221), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))))) * (_GLF_IDENTITY(vec2(22.58, 273.221), (_GLF_IDENTITY(vec2(22.58, 273.221), min(vec2(22.58, 273.221), vec2(22.58, 273.221)))) / vec2(1.0, 1.0)))), max(_GLF_IDENTITY(vec2(22.58, 273.221), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))))) * (_GLF_IDENTITY(vec2(22.58, 273.221), (_GLF_IDENTITY(vec2(22.58, 273.221), min(vec2(22.58, 273.221), vec2(22.58, 273.221)))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(22.58, 273.221), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))))) * (_GLF_IDENTITY(vec2(22.58, 273.221), (_GLF_IDENTITY(vec2(22.58, 273.221), min(vec2(22.58, 273.221), vec2(22.58, 273.221)))) / vec2(1.0, 1.0)))))), vec2(46.36, -3.5))) : injectionSwitch), vec2(mat3x4((false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))), (transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))))) - mat2(0.0, 0.0, 0.0, 0.0))))))) * (_GLF_IDENTITY(vec2(22.58, 273.221), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(22.58, 273.221), min(vec2(22.58, 273.221), vec2(22.58, 273.221))), (_GLF_IDENTITY(vec2(22.58, 273.221), min(vec2(22.58, 273.221), vec2(22.58, 273.221)))) - abs(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))), vec2(46.36, -3.5))) : injectionSwitch), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, cos(0.0), 0.0, length(0.0), 1.0, 1.0)), 1.0, 0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(_GLF_IDENTITY(vec2(22.58, 273.221), max(vec2(22.58, 273.221), vec2(22.58, 273.221))), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))), (true ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(_GLF_IDENTITY(22.58, max(22.58, _GLF_IDENTITY(22.58, max(22.58, 22.58)))), 273.221))), vec2(46.36, -3.5))) : _GLF_FUZZED(injectionSwitch))) : injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))))[0], _GLF_FUZZED(-8.4)), vec2(_GLF_FUZZED(-7.3), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(_GLF_IDENTITY(vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), clamp(_GLF_IDENTITY(vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, _GLF_IDENTITY(273.221, clamp(273.221, _GLF_IDENTITY(273.221, mix(float(273.221), float(_GLF_FUZZED(549.905)), bool(false))), 273.221))))))), clamp(_GLF_IDENTITY(vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), _GLF_IDENTITY(273.221, clamp(273.221, 273.221, 273.221)), _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), (vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, _GLF_IDENTITY(clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221), mix(float(_GLF_FUZZED((7.3 - 4.9))), float(clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221)), bool(true)))))))) * vec2(1.0, 1.0)), vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(_GLF_IDENTITY(273.221, min(273.221, 273.221)), max(_GLF_IDENTITY(273.221, min(273.221, 273.221)), _GLF_IDENTITY(_GLF_IDENTITY(273.221, min(273.221, 273.221)), max(_GLF_IDENTITY(273.221, min(273.221, 273.221)), _GLF_IDENTITY(273.221, min(273.221, 273.221)))))), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))))), vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, clamp(273.221, 273.221, 273.221)), 273.221, 273.221))))))))), vec2(22.58, _GLF_IDENTITY(273.221, _GLF_IDENTITY(clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))), max(clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))), float(mat3(clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, (273.221) - 0.0), 273.221, 273.221))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))), vec2(22.58, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, min(273.221, 273.221)), 273.221, _GLF_IDENTITY(273.221, clamp(_GLF_IDENTITY(273.221, _GLF_IDENTITY((273.221) - 0.0, min((273.221) - 0.0, (273.221) - 0.0))), 273.221, 273.221))))))), _GLF_IDENTITY(mat2(1.0) * (vec2(22.58, 273.221)), vec2(mat2(_GLF_IDENTITY(mat2(1.0) * (vec2(22.58, 273.221)), vec2(0.0, 0.0) + (mat2(1.0) * (vec2(22.58, 273.221)))), 0.0, 1.0)))), vec2(46.36, -3.5))) : injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(vec2(-9.6, 9.6), _GLF_IDENTITY(vec2(22.58, 273.221), mat2(1.0) * (vec2(22.58, 273.221))), vec2(46.36, -3.5))) : injectionSwitch)))))))) / vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))))) && true))) && true))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, false || (false)) || (bool(bool(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), 0 + (clamp(int(6), int(6), int(6))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           barrier();
          }
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) || false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), bool(bool(! (_GLF_WRAPPED_LOOP(false)))))), ((_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), bool(bool(! (_GLF_WRAPPED_LOOP(false))))))) && true)));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   buf[GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x] = 1;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), ((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), ((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), ((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), _GLF_IDENTITY(((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))) || false, true && (((_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))) || false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))))))))) || false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((0 | 0), max(_GLF_IDENTITY((0 | 0), ((0 | 0)) | 0), (0 | 0))) | (_GLF_IDENTITY(3, min(3, 3))))), int(3))) * (1 | 0))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (0 | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-45105) : 3))) | (3)), min(3, 3))))), int(3))) * (1 | 0)))) * 1) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED((true ? 2.8 : 79.84)), min(_GLF_FUZZED((true ? 2.8 : 79.84)), _GLF_FUZZED((true ? 2.8 : 79.84))))), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(60.23, max(60.23, 60.23)))))), bool(true))), injectionSwitch.y))); _injected_loop_counter ++)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     barrier();
    }
   barrier();
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), true && (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), bool(bvec2(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), false)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), true && (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), bool(bvec2(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), false))))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)), injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(int(6), int(6)))) / 1) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5971.6987), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((5187.3919 - 469.429))), bvec2(true, false))).y), true && ((injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5971.6987), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0)))[0], _GLF_FUZZED((5187.3919 - 469.429))), bvec2(true, false))).y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))))) || false) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) | (uint(subgroup_local_id))), (uint(subgroup_local_id)) - 0u))) + 1 < subgroup_size)
  {
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY((0), int(_GLF_IDENTITY(ivec2((0), 0), max(ivec2((0), 0), ivec2((0), 0))))) ^ 0);
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) - vec2(0.0, 0.0))).y) - 0.0)))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 0, 0, 0), (ivec4(64, 0, 0, 0)) << ivec4(0, 0, _GLF_IDENTITY(0, max(0, 0)), 0))))) * 1), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 0, 0, 0), (ivec4(64, 0, 0, 0)) << ivec4(0, 0, _GLF_IDENTITY(0, max(0, 0)), 0))))) * 1)) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 0, 0, 0), (ivec4(64, 0, 0, 0)) << ivec4(0, 0, _GLF_IDENTITY(0, max(0, 0)), 0))))) * 1))), 4);
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-845.102)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(433.878))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(step(vec2(-1.3, 576.416), injectionSwitch)) : vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(81.77), clamp(_GLF_FUZZED(81.77), _GLF_FUZZED(81.77), _GLF_FUZZED(81.77)))), bool(false)))), float(_GLF_FUZZED(-4969.7099)), bool(false))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(3850.6185)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) * 1.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), bool(true)))), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), log(1.0) + (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.8)))), float(_GLF_FUZZED(-470.503)), bool(false)))) / 1.0), 1.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-845.102)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(433.878))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(step(vec2(-1.3, 576.416), injectionSwitch)) : vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(81.77), clamp(_GLF_FUZZED(81.77), _GLF_FUZZED(81.77), _GLF_FUZZED(81.77)))), bool(false)))), float(_GLF_FUZZED(-4969.7099)), bool(false))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(3850.6185)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) * 1.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), bool(true)))), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), log(1.0) + (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.8)))), float(_GLF_FUZZED(-470.503)), bool(false)))) / 1.0), 1.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-845.102)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(433.878))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(step(vec2(-1.3, 576.416), injectionSwitch)) : vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(81.77), clamp(_GLF_FUZZED(81.77), _GLF_FUZZED(81.77), _GLF_FUZZED(81.77)))), bool(false)))), float(_GLF_FUZZED(-4969.7099)), bool(false))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(3850.6185)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) * 1.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), bool(true)))), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), log(1.0) + (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.8)))), float(_GLF_FUZZED(-470.503)), bool(false)))) / 1.0), 1.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-845.102)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, true)), bool(bvec2(bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])) : _GLF_FUZZED(433.878))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(step(vec2(-1.3, 576.416), injectionSwitch)) : vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(81.77), clamp(_GLF_FUZZED(81.77), _GLF_FUZZED(81.77), _GLF_FUZZED(81.77)))), bool(false)))), float(_GLF_FUZZED(-4969.7099)), bool(false))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(3850.6185)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) * 1.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), bool(true)))), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), log(1.0) + (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.8)))), float(_GLF_FUZZED(-470.503)), bool(false)))) / 1.0), 1.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-845.102)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, true)), false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-4.4)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED((+ 143.580)), _GLF_FUZZED(5437.0132)), bvec2(false, false)))) - vec2(0.0, 0.0)).y))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), next_virtual_gid))], uint(_GLF_IDENTITY(2, int(ivec4(2, (0 << _GLF_IDENTITY(int(3), int(3))), 0, 1)))), 4, 64, 4);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((127048u | 5671u)))), bool(false))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.3)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(true, false || (true))))) && true)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
