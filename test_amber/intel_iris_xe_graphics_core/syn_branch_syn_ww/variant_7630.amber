#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)))) && true)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)))) && true)), true, false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(exp2(-4.3)))) > injectionSwitch.y) && true), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(exp2(-4.3)))) > injectionSwitch.y) && true)))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(3.6), (_GLF_FUZZED(3.6)) + 0.0)))) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(748.361) : 0.0))), (((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(748.361) : 0.0)), float(vec4(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(748.361) : 0.0)), tan(0.0), 1.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(748.361) : 0.0)), float(vec4(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(748.361) : 0.0)), tan(0.0), 1.0, 0.0))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(1.0))), _GLF_IDENTITY(mat2(mat2x3(mat2(mat4x2(mat2(1.0))))), mat2(1.0) * (mat2(mat2x3(mat2(mat4x2(mat2(1.0))))))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x3(mat2(1.0))), (mat2(mat4x3(mat2(1.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-643.067)))) * (injectionSwitch)))), max(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x3(mat2(1.0))), (mat2(mat4x3(mat2(1.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-643.067)))) * (injectionSwitch)))), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x3(mat2(1.0))), (mat2(mat4x3(mat2(1.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-643.067)))) * (injectionSwitch)))))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.2)), vec2(_GLF_FUZZED((54.82 * (false ? -7.7 : -17.92))), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))))), max(_GLF_IDENTITY(clamp(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6069.3603)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(2.8, -7.9)) : mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, round(length(normalize(abs(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9263.5376)), bool(false)))))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)))) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(((injectionSwitch))[0], ((injectionSwitch))[0])), ((injectionSwitch))[1]), vec2(_GLF_FUZZED((- 161.713)), _GLF_FUZZED(5528.8211)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))) * mat2(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) + 0.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(1.0), vec2(mat2x3(false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) + 0.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(ceil(-879.650)) : 1.0))) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), mat2(1.0) * (injectionSwitch)), (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.1)))) * 1.0)) * (injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))) - vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))))))), mat2(1.0) * (injectionSwitch)))), injectionSwitch)), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(1144.1413, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) ? 1144.1413 : _GLF_IDENTITY(_GLF_FUZZED(-1.8), float(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.8), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.8), clamp(_GLF_FUZZED(-1.8), _GLF_FUZZED(-1.8), _GLF_FUZZED(-1.8)))), float(_GLF_FUZZED(193.955)), bool(false))), length(log(vec2(1.0, 1.0)))))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.6)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((clamp(mat2(_GLF_IDENTITY(1.0, (1.0) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, mix(float((1.0) - 0.0), float(_GLF_FUZZED(-426.609)), bool(false))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-893.442))))))), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), mat2(mat2x4(mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))) : _GLF_FUZZED(mat2(171.185, 230.348, 2.4, -7406.1576))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)) * (injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.7)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), bool(true)))) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2x3((injectionSwitch), 1.0, 1.0, 0.0, 0.0)), (vec2(mat2x3((injectionSwitch), 1.0, 1.0, 0.0, 0.0))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-779.348, -8492.4041)) : (mat2(1.0) * (injectionSwitch)) * mat2(1.0)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0)))) * (injectionSwitch)), vec2(mat4x3(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), mix(vec2(_GLF_FUZZED(-21.08), (mat2(1.0) * ((injectionSwitch)))[1]), vec2((mat2(1.0) * ((injectionSwitch)))[0], _GLF_FUZZED(8.7)), bvec2(true, false)))), mat2(1.0) * (injectionSwitch)), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))))))), clamp(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED((injectionSwitch * vec2(5.7, _GLF_IDENTITY(-24.22, (true ? -24.22 : _GLF_FUZZED(4908.3582)))))) : clamp(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((1.0), (1.0))) - 0.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) - mat2(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) / vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), 1.0)), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(max(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), max(max(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), max(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-642.417)), vec2(_GLF_FUZZED((-5.4)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((clamp(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(-96.55) : exp(0.0))), abs(0.0), 1.0)), clamp(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, 0.0, round(length(normalize(1.0))), sqrt(1.0), 1.0)), (false ? _GLF_FUZZED(-6.6) : float(mat3x2(1.0, 0.0, 0.0, round(length(normalize(1.0))), sqrt(1.0), 1.0))))), 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0), exp(0.0))), abs(0.0), 1.0)), 0.0 + (float(mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, exp(0.0), abs(0.0), 1.0)))), float(mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, exp(0.0), abs(0.0), 1.0)), float(mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, exp(0.0), abs(0.0), 1.0)))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(5.0, 4.9)) : _GLF_IDENTITY((_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mat2(1.0) * (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) * mat2(1.0), min((_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mat2(1.0) * (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) * mat2(1.0), (_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mat2(1.0) * (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) * mat2(1.0)))))), _GLF_IDENTITY(clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(mat2(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(mat2(1.0)), mat3(mat4x3(mat3(mat2(1.0)))))), transpose(transpose(transpose(_GLF_IDENTITY(mat3(mat2(1.0)), mat3(mat4x3(mat3(mat2(1.0))))))))))), (true ? mat3(mat2(1.0)) : _GLF_FUZZED(mat3(2245.4884, 4.1, -0.6, -4.7, -72.34, 737.635, -34.29, 8.2, -85.52)))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (clamp(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))), mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))))), vec2(vec4(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec3((injectionSwitch), 0.0)), (vec2(vec3((injectionSwitch), 0.0))) - vec2(0.0, 0.0))), mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY((clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), mat2(1.0) * (injectionSwitch))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(1.0)))), (_GLF_IDENTITY(clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(1.0))))) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED((false ? -8936.6851 : 2606.2517)), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(1.6)), bvec2(true, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (clamp(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((1.7 + -3059.0416))), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))), (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(40.48)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(40.48)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[0], _GLF_FUZZED(666.086)), vec2(_GLF_FUZZED(79.92), _GLF_IDENTITY((_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(40.48)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[1], ((_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(40.48)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[1]) / 1.0)), bvec2(false, true))))))), 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat3x2(mat2(1.0))), _GLF_IDENTITY(mat2(mat2x3(mat2(mat3x2(mat2(1.0))))), (mat2(mat2x3(mat2(mat3x2(mat2(1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch))) * mat2(1.0)))), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), max(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), min(mat2(1.0) * (mat2(1.0) * (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), mat2(1.0) * (mat2(1.0) * (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))))), max(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 0.0, log(1.0), 1.0, 1.0)))) - vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(1.0), min(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0), max(false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0), max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(-9574.2076), _GLF_FUZZED(991.885)), vec2((false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0))[0], (false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0))[1]), bvec2(true, true))), false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0))))), false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(5.0, 4.9)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(5.0, 4.9)), clamp(_GLF_FUZZED(vec2(5.0, 4.9)), _GLF_FUZZED(vec2(5.0, 4.9)), _GLF_IDENTITY(_GLF_FUZZED(vec2(5.0, 4.9)), clamp(_GLF_FUZZED(vec2(5.0, 4.9)), _GLF_FUZZED(vec2(5.0, 4.9)), _GLF_FUZZED(vec2(5.0, 4.9)))))), _GLF_FUZZED(vec2(5.0, 4.9)), _GLF_IDENTITY(_GLF_FUZZED(vec2(5.0, 4.9)), (_GLF_FUZZED(vec2(5.0, 4.9))) - vec2(0.0, 0.0)))) : (clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(1.0)))), mat2(1.0) * ((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(1.0), min(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0), max(false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0), max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(-9574.2076), _GLF_FUZZED(991.885)), vec2((false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0))[0], (false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0))[1]), bvec2(true, true))), false ? _GLF_FUZZED(vec2(5.0, 4.9)) : (clamp(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), vec2(mat3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0))))), false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(5.0, 4.9)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(5.0, 4.9)), clamp(_GLF_FUZZED(vec2(5.0, 4.9)), _GLF_FUZZED(vec2(5.0, 4.9)), _GLF_IDENTITY(_GLF_FUZZED(vec2(5.0, 4.9)), clamp(_GLF_FUZZED(vec2(5.0, 4.9)), _GLF_FUZZED(vec2(5.0, 4.9)), _GLF_FUZZED(vec2(5.0, 4.9)))))), _GLF_FUZZED(vec2(5.0, 4.9)), _GLF_IDENTITY(_GLF_FUZZED(vec2(5.0, 4.9)), (_GLF_FUZZED(vec2(5.0, 4.9))) - vec2(0.0, 0.0)))) : (clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) * mat2(1.0)))))))), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) * (injectionSwitch), mix(vec2((_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) * (injectionSwitch))[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED(67.82), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) * (injectionSwitch))[1]), bvec2(false, true))), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) - 0.0)) * (injectionSwitch)), (clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), max(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))))))) - vec2(0.0, 0.0))))), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)))), injectionSwitch)), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) * (injectionSwitch)).y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), _GLF_IDENTITY(vec2(vec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), 0.0, 0.0)), vec2(mat2x3(vec2(vec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0))))).x < injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.7, 639.845)) : injectionSwitch))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ -2439.9231))), float(1.0), bool(true)))) / determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))).x < injectionSwitch.y))))), ! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y)))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), _GLF_IDENTITY(vec2(vec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), 0.0, 0.0)), vec2(mat2x3(vec2(vec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0))))).x < injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.7, 639.845)) : injectionSwitch))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ -2439.9231))), float(1.0), bool(true)))) / determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))).x < injectionSwitch.y))))), ! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y)))))))))))))))), (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false))), (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false))), ((bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)))) || false)) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-96.66)), float(injectionSwitch.y), bool(true))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, (1u & uint(_GLF_ONE(1.0, injectionSwitch.y))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (true ? uint(uvec3(workgroup_size * workgroup_id, (1u & uint(_GLF_ONE(1.0, injectionSwitch.y))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(subgroup_size)))), clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(workgroup_size, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(uvec4(110894u, 141955u, 114410u, 35375u)) : uvec4(workgroup_size, 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED((true ? subgroup_local_id : 9171u)) : workgroup_id))), 0u | ((workgroup_size * workgroup_id)))), workgroup_size * workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size, uint(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, (0u & 179323u), 1u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((true ? (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), clamp(uvec3(subgroup_size, _GLF_IDENTITY(1u, (1u) >> 0u), 1u), uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))), max((_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))), (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))))))) : _GLF_FUZZED(workgroup_id)), ((true ? (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) % subgroup_size : _GLF_FUZZED(workgroup_id))) + (0u & 55218u)))), ~ (~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u))), subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u))), subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u))), subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u))), subgroup_id)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> 0u) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), 1, 1))) % subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), 1, 1))) % subgroup_size))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.8) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true)), bool(bool(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true)), bool(bool(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true))))), bool(bool(bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false), true, true, _GLF_IDENTITY(true, (true) || false)))), false, true, true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true)), bool(bool(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true)), bool(bool(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true))))), bool(bool(bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false), true, true, _GLF_IDENTITY(true, (true) || false)))), false, true, true))))))))) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY(bool(bvec4(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0) < subgroup_size, false, true, true)), bool(bool(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, true)))), false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0)))), max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0)))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0)))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(41.21), (injectionSwitch)[1]), bvec2(false, true))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(805.855) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), 0 | _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 ^ ((4)))) - 0), int(_GLF_IDENTITY(int((4)), (int((4))) * 1)))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), uint(uvec2(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))), 0u))), ((next_virtual_gid)) << 0u) - _GLF_IDENTITY(0u, ~ (~ (0u))))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true)), ! (! (bool(bvec4(false, false, true, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(ceil(dot(vec4(3.5, 7.0, -36.94, 1868.8173), vec4(-4307.6444, 4.8, -2081.5304, -0.0))))))))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
