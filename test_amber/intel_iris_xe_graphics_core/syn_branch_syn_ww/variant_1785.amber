#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size);
 do
  {
   buf[virtual_gid] = 1;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u), 0u, (0u | 1u)))))
      {
       switch(_GLF_SWITCH(0))
        {
         case 16:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           mat2x3(-5.9, 166.879, 2647.2117, -3.1, 9.3, _GLF_IDENTITY(-84.74, min(_GLF_IDENTITY(-84.74, float(mat2x3(_GLF_IDENTITY(-84.74, clamp(_GLF_IDENTITY(-84.74, mix(float(_GLF_FUZZED((-7.0 / -7.5))), float(-84.74), bool(true))), _GLF_IDENTITY(-84.74, min(-84.74, -84.74)), -84.74)), 0.0, 0.0, 1.0, 0.0, 0.0))), -84.74)));
          }
         case 27:
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true, true))), bool(bvec3(! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true, true))), true, true)))))))), true), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true, true))), bool(bvec3(! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true, true))), true, true)))))))), true), true))))) && true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, true, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true), false))), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), true), false))), true, false))))))))))))
          {
           switch(_GLF_SWITCH(0))
            {
             case 47:
             vec4(98.70, -411.154, 1504.3840, -598.539);
             case 0:
             case 74:
             case 99:
             case 70:
             case 86:
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 (44387 * 82001);
                }
               else
                {
                }
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                 }
                else
                 {
                 }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 93:
                    mat2x4(1249.6139, -32.71, 777.208, -0.4, -7.9, -4.8, 5.2, 3509.1576);
                    case 45:
                    bvec4(false, false, false, false);
                    case 0:
                    case 87:
                    bvec2(true, true);
                    break;
                    case 23:
                    not(mix(bvec4(true, true, false, false), bvec4(true, false, true, true), bvec4(true, false, true, true)));
                    case 80:
                    (mat3x2(-850.343, 4.5, 9983.5641, -7.9, -39.17, -9.1) / -9.8);
                    default:
                    1;
                   }
                 }
                do
                 {
                  do
                   {
                    uvec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      412.926;
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                while(_GLF_WRAPPED_LOOP(false));
                int _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[97];
                bvec3 _GLF_SWITCH_1_5v[37], _GLF_SWITCH_1_6v[82], _GLF_SWITCH_1_7v[9];
                do
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                     {
                      mat4x3(101.929, 2.7, -90.15, 63.62, -380.355, 43.19, 367.088, 98.04, 36.56, 4870.4712, -94.41, -625.632);
                     }
                   }
                  else
                   {
                   }
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))))
                 {
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
                   {
                    switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                     {
                      case 0:
                      case 65:
                      case 14:
                      case 77:
                      case 21:
                      case 54:
                      case 35:
                      case 45:
                      ;
                      break;
                      case 28:
                      (mat2(-2.7, -57.69, -741.784, 462.898) * mat4x2(6.5, -6.0, 5.9, 0.0, -25.93, -2417.8797, 611.695, 4074.1888));
                      default:
                      1;
                     }
                   }
                 }
                else
                 {
                 }
               }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 do
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 70:
                     ;
                     case 0:
                     case 89:
                     case 81:
                     case 99:
                     case 8:
                     case 68:
                     case 85:
                     case 56:
                     case 94:
                     switch(_GLF_SWITCH((_GLF_IDENTITY(0, ~ (~ (0))) | 0)))
                      {
                       case 44:
                       mat3x4(7.3, 4.7, _GLF_IDENTITY(8.6, clamp(_GLF_IDENTITY(8.6, (8.6) - 0.0), 8.6, 8.6)), 582.839, 4784.8008, 513.001, -7266.7317, -3.1, -194.713, -0.8, -89.07, -1.4);
                       case 34:
                       ivec3(9368, 944, -50486);
                       case 0:
                       case 94:
                       case 54:
                       case 70:
                       case 80:
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         for(uvec3 _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v; (false ^^ (mat2(_GLF_IDENTITY(-8.7, max(-8.7, -8.7)), 0.3, 8570.0670, -78.65) == mat2(-1.1, -4668.9801, _GLF_IDENTITY(1.4, float(mat2(_GLF_IDENTITY(1.4, max(1.4, 1.4)), 0.0, 1.0, 0.0))), 5651.9258))); bvec3(false, true, true))
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 0:
                             case 81:
                             case 65:
                             case 9:
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), int(1)))))
                                {
                                 case 8:
                                 uvec2(131299u, 6438u);
                                 case 60:
                                 do
                                  {
                                   (mat2x3(-6.7, -781.230, 2.7, 661.959, 1853.4750, 4.9) * mat2(_GLF_IDENTITY(6.9, (false ? _GLF_FUZZED(-5.6) : 6.9)), -1201.6402, -3.0, -3.7));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 case 0:
                                 vec4 _GLF_SWITCH_1_10v[98], _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v;
                                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 0:
                                     do
                                      {
                                       do
                                        {
                                         uvec2((ivec3(34908, 44867, -54782) , uvec3(_GLF_IDENTITY(next_virtual_gid, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), _GLF_IDENTITY(uvec2(43466u, 180125u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(9.4, 96.12, -4.1).b)), _GLF_IDENTITY(vec2(_GLF_FUZZED(6826.7723), (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-3.0, 3599.0770, 7807.6386, 6770.2127)))) * (vec2(_GLF_FUZZED(6826.7723), (injectionSwitch)[1])), max(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-3.0, 3599.0770, 7807.6386, 6770.2127)))) * (vec2(_GLF_FUZZED(6826.7723), (injectionSwitch)[1])), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(80.21))), 3599.0770, 7807.6386, 6770.2127)), transpose(transpose(true ? mat2(1.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(80.21))), 3599.0770, 7807.6386, 6770.2127))))), mat2(mat3x4(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-3.0, 3599.0770, _GLF_IDENTITY(7807.6386, (7807.6386) - 0.0), 6770.2127)), (false ? _GLF_FUZZED(mat2(-74.11, 1.5, 506.553, -844.935)) : true ? mat2(1.0) : _GLF_FUZZED(mat2(-3.0, 3599.0770, 7807.6386, 6770.2127))))))))) * (vec2(_GLF_FUZZED(6826.7723), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(80.21))), 3599.0770, 7807.6386, 6770.2127)), transpose(transpose(true ? mat2(1.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(80.21))), 3599.0770, 7807.6386, 6770.2127))))), mat2(mat3x4(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-3.0, 3599.0770, _GLF_IDENTITY(7807.6386, (7807.6386) - 0.0), 6770.2127)), (false ? _GLF_FUZZED(mat2(-74.11, 1.5, 506.553, -844.935)) : true ? mat2(1.0) : _GLF_FUZZED(mat2(-3.0, 3599.0770, 7807.6386, 6770.2127))))))))) * (vec2(_GLF_FUZZED(6826.7723), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0))), (_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(80.21))), 3599.0770, 7807.6386, 6770.2127)), transpose(transpose(true ? mat2(1.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(80.21))), 3599.0770, 7807.6386, 6770.2127))))), mat2(mat3x4(_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-3.0, 3599.0770, _GLF_IDENTITY(7807.6386, (7807.6386) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), 6770.2127)), (false ? _GLF_FUZZED(mat2(-74.11, 1.5, 506.553, -844.935)) : true ? mat2(1.0) : _GLF_FUZZED(mat2(-3.0, 3599.0770, 7807.6386, 6770.2127))))))))) * (vec2(_GLF_FUZZED(6826.7723), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))) / abs(vec2(1.0, 1.0)))))))), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true))).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(177424u, 42736u)) : _GLF_IDENTITY(uvec2(43466u, 180125u), clamp(_GLF_IDENTITY(uvec2(43466u, 180125u), (false ? _GLF_FUZZED(uvec2(146422u, 176783u)) : uvec2(43466u, 180125u))), uvec2(43466u, _GLF_IDENTITY(180125u, ~ (_GLF_IDENTITY(~ (180125u), min(~ (180125u), ~ (180125u)))))), uvec2(43466u, 180125u))))))));
                                        }
                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                     break;
                                     case 94:
                                     mat2x4 _GLF_SWITCH_9_0v[20], _GLF_SWITCH_9_1v;
                                     case 78:
                                     vec3(6786.0380, -731.673, -668.964);
                                     default:
                                     1;
                                    }
                                  }
                                 case 48:
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   do
                                    {
                                     ;
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 break;
                                 default:
                                 1;
                                }
                              }
                             else
                              {
                              }
                             break;
                             case 37:
                             atan(vec2(47.73, 9275.4040));
                             default:
                             1;
                            }
                          }
                        }
                       break;
                       default:
                       1;
                      }
                     break;
                     case 28:
                     uvec4(110512u, 157081u, 111899u, 112967u);
                     default:
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               fract(1.6);
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 0:
                     case 16:
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_injected_loop_counter), clamp(int(_injected_loop_counter), int(_injected_loop_counter), int(_injected_loop_counter))))) != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         do
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 0:
                             case 85:
                             case 89:
                             case 53:
                             case 80:
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                              }
                             break;
                             case 79:
                             mat2(8.0, 2.8, 1.5, -1862.5817);
                             default:
                             1;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                        }
                      }
                     case 26:
                     case 25:
                     case 50:
                     do
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                        {
                         for(                         (vec4(1768.3057, 2.8, -8498.7620, 86.00) - vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4.8, clamp(4.8, 4.8, _GLF_IDENTITY(4.8, min(4.8, 4.8)))), max(4.8, 4.8)), min(_GLF_IDENTITY(4.8, max(4.8, 4.8)), _GLF_IDENTITY(4.8, max(_GLF_IDENTITY(4.8, min(4.8, 4.8)), 4.8)))), 101.689, 4.4, -4.7));
 _GLF_IDENTITY((ivec2(-10037, -98360) == ivec2(-99681, 60084)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(ivec2(-10037, -98360) == ivec2(-99681, 60084), (ivec2(-10037, -98360) == ivec2(-99681, 60084)) || false)), true, _GLF_IDENTITY(false, (false) || false))), false || (bool(bvec3((ivec2(-10037, -98360) == ivec2(-99681, 60084)), true, false))))); uvec4(uvec2(185035u, 16956u), uvec2(6770u, 140259u)))
                          {
                           switch(_GLF_SWITCH((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) / 1) >> _GLF_IDENTITY(int(4), int(4)))))
                            {
                             case 0:
                             for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > (0 ^ 0)); _injected_loop_counter --)
                              {
                               do
                                {
                                 do
                                  {
                                   for(int _injected_loop_counter = (_GLF_IDENTITY(1 ^ (0 ^ 0), _GLF_IDENTITY((1 ^ (0 ^ 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 ^ (0 ^ 0)))) << 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                        {
                                         switch(_GLF_IDENTITY(_GLF_SWITCH(0), (_GLF_SWITCH(0)) ^ (0 | 0)))
                                          {
                                           case 65:
                                           bvec2(false, true);
                                           case 0:
                                           case 18:
                                           case 10:
                                           case 16:
                                           case 95:
                                           case 99:
                                           case 93:
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                {
                                                }
                                               else
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   uvec4(95913u, 35910u, 142223u, _GLF_IDENTITY(34236u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(34236u, (34236u) | (_GLF_IDENTITY(34236u, (34236u) / 1u))), 34236u, _GLF_IDENTITY(34236u, _GLF_IDENTITY((34236u) | (34236u), ((34236u) | (34236u)) + 0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(34236u, (34236u) | (_GLF_IDENTITY(34236u, (34236u) / 1u))), 34236u, _GLF_IDENTITY(34236u, (34236u) | (34236u))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(34236u, (false ? _GLF_FUZZED(packUnorm2x16(vec2(-5.1, 8.4))) : 34236u)), (34236u) | (_GLF_IDENTITY(34236u, (34236u) / 1u))), 34236u, _GLF_IDENTITY(34236u, (34236u) | (34236u)))) ^ 0u)) + 0u)));
                                                  }
                                                }
                                              }
                                            }
                                           break;
                                           case 29:
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 ;
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                           else
                                            {
                                            }
                                           default:
                                           for(int _injected_loop_counter = (_GLF_IDENTITY(0, max(0, 0)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((0 ^ 1) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
                                            {
                                             1;
                                            }
                                          }
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             case 2:
                             case 37:
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               do
                                {
                                 bvec2(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             else
                              {
                              }
                             break;
                             default:
                             1;
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     break;
                     case 94:
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))))
                        {
                         ;
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     case 32:
                     (_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u) * uvec4(144638u, _GLF_IDENTITY(138608u, (138608u) << 0u), 167305u, 70918u));
                     default:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) || false)))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 62:
                             mat2x4 _GLF_SWITCH_8_0v;
                             case 0:
                             case 95:
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))
                              {
                               switch(_GLF_SWITCH((_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0 ^ 0)), (true ? 0 ^ 0 : _GLF_FUZZED(-85420))))))
                                {
                                 case 0:
                                 case 61:
                                 case 52:
                                 case 28:
                                 case 45:
                                 case 69:
                                 case 99:
                                 case 65:
                                 do
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 0:
                                     case 31:
                                     case 97:
                                     case 13:
                                     case 53:
                                     case 95:
                                     case 1:
                                     switch(_GLF_SWITCH((32205 & 0)))
                                      {
                                       case 64:
                                       matrixCompMult((bvec3(true, false, true) , mat2(6040.6140, 0.7, 73.90, 717.781)), mat2(-120.077, 456.957, 291.595, 994.815));
                                       case 0:
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 67616)); _injected_loop_counter --)
                                        {
                                         1;
                                        }
                                       break;
                                       case 21:
                                       mat2 _GLF_SWITCH_9_0v[91], _GLF_SWITCH_9_1v[23], _GLF_SWITCH_9_2v;
                                       default:
                                       1;
                                      }
                                     break;
                                     case 52:
                                     vec2 _GLF_SWITCH_10_0v[58];
                                     case 4:
                                     ;
                                     default:
                                     1;
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 break;
                                 default:
                                 1;
                                }
                              }
                             else
                              {
                              }
                             break;
                             default:
                             1;
                            }
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 0:
                     case 9:
                     case 5:
                     case 20:
                     case 89:
                     case 4:
                     case 10:
                     case 11:
                     for(                     mat2x4(mat3(67.57, -0.6, _GLF_IDENTITY(-10.58, mix(float(_GLF_IDENTITY(-10.58, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-10.58, mix(float(_GLF_FUZZED(-204.728)), float(-10.58), bool(true))) : _GLF_FUZZED(-3464.0819)))), float(_GLF_FUZZED(_GLF_IDENTITY(-62.32, float(mat3x2(-62.32, tan(0.0), 1.0, 1.0, 1.0, 0.0))))), bool(false))), -91.67, -135.681, -768.112, 902.517, -6324.9402, -8349.6589));
 false; 1.7)
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 15:
                             uvec3 _GLF_SWITCH_7_0v[71], _GLF_SWITCH_7_1v;
                             case 0:
                             case 58:
                             case 39:
                             case 87:
                             case 8:
                             case 24:
                             case 56:
                             case 29:
                             case 77:
                             case 97:
                             ;
                             break;
                             default:
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               1;
                              }
                             else
                              {
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       bvec3 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v[65];
                       float _GLF_SWITCH_1_15v[29], _GLF_SWITCH_1_16v;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 0:
                               case 2:
                               case 51:
                               case 17:
                               case 97:
                               case 6:
                               case 21:
                               case 65:
                               case 92:
                               case 74:
                               switch(_GLF_IDENTITY(_GLF_SWITCH(0), (_GLF_SWITCH(0)) << 0))
                                {
                                 case 0:
                                 case 33:
                                 bvec4 _GLF_SWITCH_1_17v, _GLF_SWITCH_1_18v;
                                 case 77:
                                 case 69:
                                 case 12:
                                 bvec2 _GLF_SWITCH_1_19v[17], _GLF_SWITCH_1_20v, _GLF_SWITCH_1_21v;
                                 case 70:
                                 case 90:
                                 vec2(6.0, -88.50);
                                 break;
                                 case 49:
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), false, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true)))))), (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   ;
                                  }
                                 else
                                  {
                                  }
                                 case 22:
                                 uvec4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                                 default:
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   1;
                                  }
                                 else
                                  {
                                  }
                                }
                               break;
                               case 37:
                               do
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 14:
                                   vec2 _GLF_SWITCH_10_0v, _GLF_SWITCH_10_1v;
                                   case 68:
                                   mat4(5.2, -9763.0235, 51.24, 42.73, -8.7, -57.46, 677.688, 6.5, 8.9, -912.725, -199.442, 95.34, 6132.0133, -646.338, -7.2, -1.1);
                                   case 0:
                                   case 52:
                                   case 11:
                                   case 54:
                                   case 69:
                                   case 29:
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 23:
                                     uvec3(62739u, 101336u, 195222u);
                                     case 52:
                                     int _GLF_SWITCH_9_0v, _GLF_SWITCH_9_1v, _GLF_SWITCH_9_2v;
                                     case 0:
                                     mat4(_GLF_IDENTITY(-874.735, (true ? _GLF_IDENTITY(-874.735, min(-874.735, -874.735)) : _GLF_FUZZED(_GLF_SWITCH_1_16v))));
                                     break;
                                     case 57:
                                     bvec4(true, false, false, true);
                                     default:
                                     1;
                                    }
                                   break;
                                   case 43:
                                   ;
                                   default:
                                   1;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.6)), bool(false))) > injectionSwitch.y))));
                               default:
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   case 50:
                                   1;
                                   break;
                                   default:
                                   1;
                                  }
                                }
                               else
                                {
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(true)
                            {
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       ;
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true)))))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 13:
                           case 60:
                           case 41:
                           switch(_GLF_SWITCH(_GLF_IDENTITY(0, ~ (~ (0)))))
                            {
                             case 0:
                             case 56:
                             case 44:
                             case 6:
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               bvec3(true, true, true);
                              }
                             else
                              {
                              }
                             break;
                             case 23:
                             bool _GLF_SWITCH_7_0v[33];
                             default:
                             1;
                            }
                           break;
                           case 88:
                           ivec4(73386, 66571, 13770, 49466);
                           case 6:
                           mat3x2 _GLF_SWITCH_8_0v, _GLF_SWITCH_8_1v[79], _GLF_SWITCH_8_2v[87];
                           default:
                           do
                            {
                             1;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       else
                        {
                        }
                       for(                       _GLF_IDENTITY(dot(vec3(-2.2, -3.7, -142.977), vec3(-796.192, -4.7, 7378.4234)), (dot(vec3(-2.2, -3.7, -142.977), _GLF_IDENTITY(vec3(-796.192, -4.7, 7378.4234), max(vec3(-796.192, -4.7, _GLF_IDENTITY(7378.4234, mix(float(7378.4234), float(_GLF_FUZZED(float(57717))), bool(false)))), _GLF_IDENTITY(vec3(-796.192, -4.7, _GLF_IDENTITY(7378.4234, _GLF_IDENTITY(clamp(7378.4234, 7378.4234, 7378.4234), (_GLF_IDENTITY(true ? clamp(7378.4234, 7378.4234, 7378.4234) : _GLF_FUZZED(-4.9), max(true ? clamp(7378.4234, 7378.4234, 7378.4234) : _GLF_FUZZED(-4.9), _GLF_IDENTITY(true ? clamp(7378.4234, 7378.4234, 7378.4234) : _GLF_FUZZED(-4.9), (true ? clamp(7378.4234, 7378.4234, 7378.4234) : _GLF_FUZZED(-4.9)) / 1.0))))))), (vec3(_GLF_IDENTITY(-796.192, 1.0 * (-796.192)), -4.7, 7378.4234)) - vec3(0.0, 0.0, 0.0)))))) / _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, sin(0.0)), (false ? _GLF_FUZZED(vec3(468.828, -9040.8863, 2.9)) : vec3(0.0, 1.0, sin(0.0)))), vec3(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7098.6089) : 0.0)), determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), clamp(float(vec2(0.0, 0.0)), _GLF_IDENTITY(float(vec2(0.0, 0.0)), clamp(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0)))), float(vec2(0.0, 0.0))))), 0.0, 1.0), (mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), (true ? transpose(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(283.788), (_GLF_FUZZED(283.788)) / abs(1.0))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))))) - mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2(412.787, -688.567, -1.6, 9485.3439))))))), 0.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))));
 ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), 0u, 1u, 0u)), 0u + (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, 0u + (0u)) | (subgroup_size)), 0u ^ (subgroup_size)), 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 0u, 1u, 0u)))))), 1u, 0u, 1u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) != 8823u)); mat3x2(_GLF_IDENTITY(-4942.2517, max(_GLF_IDENTITY(-4942.2517, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? -4942.2517 : _GLF_FUZZED(_GLF_IDENTITY(-18.28, (-18.28) / 1.0)))), -4942.2517)), _GLF_IDENTITY(_GLF_IDENTITY(-19.79, _GLF_IDENTITY(_GLF_IDENTITY(float(float(-19.79)), min(_GLF_IDENTITY(float(float(-19.79)), clamp(float(float(-19.79)), float(float(-19.79)), float(float(-19.79)))), float(float(-19.79)))), float(mat4x3(float(float(-19.79)), 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.4) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 0.0, 0.0, 0.0))))))))), (_GLF_IDENTITY(-19.79, _GLF_IDENTITY(float(float(-19.79)), _GLF_IDENTITY(float(mat4x3(float(float(_GLF_IDENTITY(-19.79, max(-19.79, -19.79)))), 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), max(_GLF_IDENTITY(float(mat4x3(float(float(-19.79)), 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), min(_GLF_IDENTITY(float(mat4x3(float(float(-19.79)), 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), (float(mat4x3(float(float(-19.79)), 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) / 1.0), float(mat4x3(float(float(-19.79)), 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), float(mat4x3(float(float(-19.79)), 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))))))) - 0.0), -8.9, 70.09, 1.1, 64.22))
                        {
                         for(int _injected_loop_counter = (1 ^ 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) > 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) > 0))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) > 0)))) || false)) && true)) && true); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             switch(_GLF_SWITCH(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1)))))
                              {
                               case 2:
                               for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec3(0, 1, 0))))), (false ? _GLF_FUZZED(ivec2(-67208, -20600)[1]) : _GLF_IDENTITY(0, ~ (~ (0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                {
                                 bvec4(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true, true);
                                }
                               case 29:
                               uvec3 _GLF_SWITCH_4_0v[69], _GLF_SWITCH_4_1v;
                               case 0:
                               case 17:
                               case 65:
                               case 75:
                               case 53:
                               case 26:
                               case 59:
                               case 4:
                               case 34:
                               case 56:
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 mat2(9.9, 5667.3086, 7.2, -914.387);
                                }
                               else
                                {
                                }
                               break;
                               case 49:
                               ;
                               default:
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 switch(_GLF_SWITCH((-67344 & 0)))
                                  {
                                   case 47:
                                   ivec3(41961, 95265, -50444);
                                   case 0:
                                   1;
                                   break;
                                   case 52:
                                   mat3x2(8145.1704, 7597.8701, 4.5, 4.2, -37.53, -9.6);
                                   case 28:
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     mat4x2(95.70, -1.8, 6022.9507, -23.37, 3344.8281, -35.85, -186.967, -9.2);
                                    }
                                   else
                                    {
                                    }
                                   default:
                                   1;
                                  }
                                }
                              }
                            }
                          }
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(true, (true) || false)))), bool(_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(true, (true) || false))))), ! (! (bool(bool(! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)), bool(bvec4(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)), false, false, false))), true, true))))) && ((true) || false))))))))))))), false || (bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) || false))), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))))), true && (true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (! ((_GLF_IDENTITY(true, (true) || false))))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (! ((_GLF_IDENTITY(true, (true) || false)))))))))))))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true)))))), (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true))), bool(bvec3((_GLF_IDENTITY(true, (true) || false)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true))), bool(bvec3((_GLF_IDENTITY(true, (true) || false)), true, true))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true))), bool(bvec3((_GLF_IDENTITY(true, (true) || false)), true, true))))))) || false)), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true))), bool(bvec3((_GLF_IDENTITY(true, (true) || false)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true))), bool(bvec3((_GLF_IDENTITY(true, (true) || false)), true, true))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true))), bool(bvec3((_GLF_IDENTITY(true, (true) || false)), true, true))))))) || false))))) || false), false)))), _GLF_IDENTITY(bool(bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), true))))), (true) || false)))))), bool(bvec2(bool(bool(bool(! (! (_GLF_IDENTITY(true, (true) || false)))))), false)))))))))))
                          {
                           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                            {
                             case 78:
                             mat2x3(mat3x4(757.025, -1817.4839, 44.27, 112.788, 1.3, -42.04, -6.1, 6413.9679, -6.4, 2538.3934, -6.7, 8.8));
                             case 61:
                             bvec4(false, false, true, false);
                             case 0:
                             case 29:
                             case 52:
                             switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(3), int(3)))))
                              {
                               case 67:
                               uint _GLF_SWITCH_8_0v, _GLF_SWITCH_8_1v, _GLF_SWITCH_8_2v;
                               case 0:
                               case 15:
                               case 92:
                               case 2:
                               case 18:
                               case 19:
                               case 46:
                               case 25:
                               do
                                {
                                 do
                                  {
                                   do
                                    {
                                     switch(_GLF_SWITCH(((0 | 0) >> _GLF_IDENTITY(int(0), int(0)))))
                                      {
                                       case 31:
                                       findLSB(-39160);
                                       case 47:
                                       uvec4 _GLF_SWITCH_6_0v[12];
                                       case 0:
                                       case 12:
                                       case 64:
                                       case 83:
                                       case 73:
                                       case 49:
                                       mat4(1939.5503, -784.249, 6.7, 7.8, -1.0, -1890.2292, 5.2, 13.95, -0.9, 446.987, -36.66, -6.8, 0.4, 13.74, 3901.5695, -749.392);
                                       break;
                                       default:
                                       1;
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               break;
                               case 62:
                               mat4x3 _GLF_SWITCH_8_3v[91];
                               case 37:
                               mat4x2 _GLF_SWITCH_8_4v[82];
                               default:
                               1;
                              }
                             break;
                             case 51:
                             mat3 _GLF_SWITCH_10_0v, _GLF_SWITCH_10_1v;
                             case 94:
                             ;
                             default:
                             1;
                            }
                          }
                         else
                          {
                          }
                         lessThanEqual(_GLF_IDENTITY(ivec3(58641, 59052, 80179), max(ivec3(58641, 59052, _GLF_IDENTITY(80179, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(80179, max(80179, _GLF_IDENTITY(80179, (80179) / 1))), 1, 1), (ivec3(_GLF_IDENTITY(80179, max(80179, _GLF_IDENTITY(80179, (80179) / 1))), 1, 1)) << ivec3(0, 0, 0))), (false ? _GLF_FUZZED(3260) : _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(80179, max(80179, _GLF_IDENTITY(80179, (80179) / 1))), 1, 1), (ivec3(_GLF_IDENTITY(80179, max(80179, _GLF_IDENTITY(80179, (80179) / 1))), 1, 1)) << ivec3(0, 0, 0))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(80179, max(80179, _GLF_IDENTITY(80179, (80179) / 1))), 1, 1), (ivec3(_GLF_IDENTITY(80179, max(80179, _GLF_IDENTITY(80179, (80179) / 1))), 1, 1)) << ivec3(0, 0, 0)))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(80179, max(80179, _GLF_IDENTITY(80179, (80179) / 1))), 1, 1), (ivec3(_GLF_IDENTITY(80179, max(80179, _GLF_IDENTITY(80179, (80179) / 1))), 1, 1)) << ivec3(0, 0, 0))))))))), ivec3(58641, 59052, 80179))), (ivec3(-83298, _GLF_IDENTITY(14111, ~ (~ (_GLF_IDENTITY(14111, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(14111, (14111) | 0), 0), ivec2(ivec2(ivec2(_GLF_IDENTITY(14111, (14111) | 0), 0))))))))), -53763)));
                         uint _GLF_SWITCH_1_22v, _GLF_SWITCH_1_23v, _GLF_SWITCH_1_24v;
                         mat3x4(4.1, -0.4, 9.7, 5498.8675, 56.84, _GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)), -5.9, 264.914, -6.5, 3.4, 0.9, -2.2);
                         do
                          {
                           do
                            {
                             switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(5), int(5)))))
                              {
                               case 42:
                               mat2x3(-7.2, 747.759, -5.5, 675.294, -3.1, -4392.9635);
                               case 0:
                               case 99:
                               case 15:
                               case 95:
                               case 90:
                               case 91:
                               switch(_GLF_SWITCH(0))
                                {
                                 case 32:
                                 mat2x3(-6.5, 124.453, 882.146, -14.26, 1625.5896, 3.8);
                                 case 97:
                                 mat4x2 _GLF_SWITCH_6_0v;
                                 case 0:
                                 case 56:
                                 case 83:
                                 case 82:
                                 (mat4x3(-10.12, -4772.9953, 2.9, _GLF_IDENTITY(_GLF_IDENTITY(1.8, clamp(1.8, 1.8, 1.8)), float(mat3x2(1.8, sqrt(1.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0))), 4.8, -4.6, 27.26, 3.0, 4.7, 9767.6913, 27.53, 5.9) + mat4x3(-96.36, 824.793, -9.7, -9.9, 20.66, 4623.8335, -85.27, _GLF_IDENTITY(18.69, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-1745.5889) : _GLF_IDENTITY(18.69, max(18.69, 18.69)))), _GLF_IDENTITY(3.7, clamp(_GLF_IDENTITY(3.7, (true ? 3.7 : _GLF_FUZZED(-505.596))), 3.7, 3.7)), _GLF_IDENTITY(-7532.3669, float(mat3x4(-7532.3669, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, abs(1.0), abs(sqrt(0.0))))), 1.0, round(_GLF_IDENTITY(length(normalize(determinant(mat2(1.0, 1.0, 0.0, 1.0)))), min(length(normalize(determinant(mat2(1.0, 1.0, 0.0, 1.0)))), length(normalize(determinant(mat2(1.0, 1.0, 0.0, 1.0))))))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(-9.2, (true ? -9.2 : _GLF_FUZZED(-5911.6053))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-9.2, (true ? -9.2 : _GLF_IDENTITY(_GLF_FUZZED(-5911.6053), (_GLF_FUZZED(-5911.6053)) * 1.0))), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-9.2, (true ? -9.2 : _GLF_FUZZED(-5911.6053))), 0.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-9.2, (true ? -9.2 : _GLF_FUZZED(-5911.6053))), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-9.2, (true ? -9.2 : _GLF_FUZZED(-5911.6053))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((19.16 - -7512.2929))), bool(false)))))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-9.2, (true ? -9.2 : _GLF_FUZZED(-5911.6053))), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-9.2, (true ? -9.2 : _GLF_FUZZED(-5911.6053))), 0.0, 1.0, 1.0)))))))), -938.226));
                                 break;
                                 case 5:
                                 uvec3(87584u, 119097u, 75056u);
                                 case 57:
                                 do
                                  {
                                   _GLF_IDENTITY((_injected_loop_counter & 36583), (_GLF_IDENTITY((_injected_loop_counter & 36583), ((_injected_loop_counter & 36583)) >> 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 default:
                                 1;
                                }
                               break;
                               default:
                               1;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         mat3x4 _GLF_SWITCH_1_25v, _GLF_SWITCH_1_26v;
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true))))
                            {
                            }
                           else
                            {
                             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                              {
                               case 0:
                               case 24:
                               case 28:
                               case 37:
                               switch(_GLF_SWITCH(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), min((0 << _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) ^ 0)))))
                                {
                                 case 45:
                                 equal(uvec2(118439u, 100577u), uvec2(72367u, 188108u));
                                 case 0:
                                 switch(_GLF_SWITCH((_GLF_IDENTITY((-93508 << -3362), ((-93508 << -3362)) >> 0) & int(_GLF_ZERO(0.0, injectionSwitch.x)))))
                                  {
                                   case 43:
                                   bvec2(false, false);
                                   case 0:
                                   case 11:
                                   case 99:
                                   case 35:
                                   case 44:
                                   case 20:
                                   case 69:
                                   case 85:
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true)))), false, false, false))), true, false)))))
                                    {
                                    }
                                   else
                                    {
                                     switch(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (3), ~ (_GLF_IDENTITY(~ (~ (3)), ~ (~ (~ (~ (_GLF_IDENTITY(3, (3) | (3)))))))))))), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), clamp(_GLF_IDENTITY(int(3), max(int(3), int(3))), _GLF_IDENTITY(int(3), max(int(3), int(3))), _GLF_IDENTITY(int(3), max(int(3), int(3)))))))))
                                      {
                                       case 31:
                                       do
                                        {
                                         switch(_GLF_SWITCH(0))
                                          {
                                           case 0:
                                           floor(vec2(-4.5, 526.330));
                                           break;
                                           default:
                                           1;
                                          }
                                        }
                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                       case 0:
                                       case 47:
                                       case 55:
                                       case 7:
                                       switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-32686)), 0 ^ ((true ? int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.4)), bool(false))), 0.0)), injectionSwitch.x)) : _GLF_FUZZED(-32686))))))))))
                                        {
                                         case 51:
                                         packSnorm2x16(injectionSwitch);
                                         case 0:
                                         case 71:
                                         case 84:
                                         case 49:
                                         case 55:
                                         case 58:
                                         case 27:
                                         case 44:
                                         do
                                          {
                                           switch(_GLF_SWITCH(0))
                                            {
                                             case 78:
                                             ivec4 _GLF_SWITCH_9_0v[88], _GLF_SWITCH_9_1v;
                                             case 33:
                                             mat2x4 _GLF_SWITCH_9_2v;
                                             case 0:
                                             case 68:
                                             case 17:
                                             case 15:
                                             bvec4(greaterThan(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), bvec2(true, false));
                                             break;
                                             default:
                                             1;
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                         break;
                                         case 9:
                                         bool _GLF_SWITCH_3_0v[57], _GLF_SWITCH_3_1v;
                                         case 60:
                                         vec4 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
                                         default:
                                         do
                                          {
                                           switch(_GLF_SWITCH((1 ^ 1)))
                                            {
                                             case 0:
                                             case 68:
                                             case 64:
                                             case 10:
                                             case 44:
                                             case 63:
                                             case 92:
                                             1;
                                             break;
                                             default:
                                             1;
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true)), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true)))))));
                                        }
                                       break;
                                       default:
                                       _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED((-18014 & _injected_loop_counter)) : 1))) - _GLF_IDENTITY(0, max(0, 0)));
                                      }
                                    }
                                   break;
                                   case 75:
                                   do
                                    {
                                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false))
                                      {
                                      }
                                     else
                                      {
                                       switch(_GLF_SWITCH(0))
                                        {
                                         case 0:
                                         case 44:
                                         case 7:
                                         case 24:
                                         case 10:
                                         case 61:
                                         case 37:
                                         case 45:
                                         case 49:
                                         mat2x3(7.7, 9944.1386, 4.7, -7.9, -2.5, -733.950);
                                         break;
                                         case 23:
                                         mat4x3(mat2x4(62.78, -357.034, 80.88, _GLF_IDENTITY(-1246.8974, float(mat4x2(-1246.8974, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), -1.7, 26.62, 6245.2745, -15.39));
                                         case 91:
                                         bvec3(false, true, false);
                                         default:
                                         1;
                                        }
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                   default:
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                      {
                                       do
                                        {
                                         1;
                                        }
                                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))));
                                      }
                                     else
                                      {
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 break;
                                 case 62:
                                 mat4 _GLF_SWITCH_7_0v[86], _GLF_SWITCH_7_1v[26], _GLF_SWITCH_7_2v[10];
                                 case 52:
                                 vec2 _GLF_SWITCH_7_3v, _GLF_SWITCH_7_4v, _GLF_SWITCH_7_5v[62];
                                 default:
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     1;
                                    }
                                  }
                                }
                               break;
                               default:
                               1;
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                     break;
                     default:
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             break;
             default:
             1;
            }
          }
         else
          {
          }
         case 0:
         case 40:
         case 20:
         case 17:
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), 1 * (0 << _GLF_IDENTITY(int(6), int(6))))))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     do
                      {
                       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(bitCount(subgroup_id)))), _injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / cos(vec2(0.0, 0.0))).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                          {
                           do
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 8:
                               ivec2 _GLF_SWITCH_10_0v;
                               case 25:
                               mat3 _GLF_SWITCH_10_1v, _GLF_SWITCH_10_2v, _GLF_SWITCH_10_3v[77];
                               case 0:
                               case 15:
                               case 68:
                               case 10:
                               case 74:
                               case 44:
                               case 56:
                               switch(_GLF_SWITCH(0))
                                {
                                 case 73:
                                 uvec2 _GLF_SWITCH_9_0v[10], _GLF_SWITCH_9_1v, _GLF_SWITCH_9_2v[83];
                                 case 25:
                                 (mat2x4(1.7, -57.95, _GLF_IDENTITY(-7.3, (-7.3) / 1.0), 645.221, 139.620, -5.2, -5.3, 61.22) + length(vec4(9433.7557, 8.2, -6604.4471, 40.61)));
                                 case 0:
                                 case 66:
                                 case 45:
                                 case 85:
                                 case 86:
                                 case 26:
                                 case 72:
                                 case 50:
                                 case 37:
                                 case 95:
                                 switch(_GLF_IDENTITY(_GLF_SWITCH(0), ~ (~ (_GLF_IDENTITY(_GLF_SWITCH(0), _GLF_IDENTITY(max(_GLF_SWITCH(0), _GLF_SWITCH(0)), (max(_GLF_SWITCH(0), _GLF_IDENTITY(_GLF_SWITCH(0), (_GLF_SWITCH(0)) | (_GLF_IDENTITY(_GLF_SWITCH(0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) : _GLF_SWITCH(0))))))) | 0))))))
                                  {
                                   case 57:
                                   {
                                    if(_GLF_WRAPPED_IF_TRUE(true))
                                     {
                                      switch(_GLF_SWITCH(0))
                                       {
                                        case 22:
                                        ;
                                        case 66:
                                        (mat3x4(3.6, 699.775, -7.2, 429.468, 4600.2679, 1.8, -6415.4342, 637.808, 4.3, 7814.2821, _GLF_IDENTITY(7.1, clamp(7.1, 7.1, 7.1)), 6.4) * mat3(5.2, -2.0, -8.1, 4.4, 2801.7070, 4.8, 7928.9420, 2.2, 70.33));
                                        case 0:
                                        case 25:
                                        case 6:
                                        case 80:
                                        case 44:
                                        case 85:
                                        do
                                         {
                                          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6246.3665) : 0.0)))), injectionSwitch.x), 1.0 * (_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6246.3665) : 0.0)))), injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6246.3665) : 0.0)))), injectionSwitch.x))))))); _injected_loop_counter --)
                                           {
                                            ;
                                           }
                                         }
                                        while(_GLF_WRAPPED_LOOP(false));
                                        break;
                                        case 48:
                                        (2.7 + mat3(977.888, -77.65, -5.5, -1034.3207, -6.3, -546.755, _GLF_IDENTITY(582.793, 0.0 + (582.793)), 79.02, 93.51));
                                        default:
                                        1;
                                       }
                                     }
                                    else
                                     {
                                     }
                                    if(_GLF_WRAPPED_IF_FALSE(false))
                                     {
                                     }
                                    else
                                     {
                                      switch(_GLF_SWITCH(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), clamp((0 >> _GLF_IDENTITY(int(4), int(4))), (0 >> _GLF_IDENTITY(int(4), int(4))), (0 >> _GLF_IDENTITY(int(4), int(4)))))))
                                       {
                                        case 81:
                                        uvec2 _GLF_SWITCH_10_0v, _GLF_SWITCH_10_1v[86], _GLF_SWITCH_10_2v;
                                        case 65:
                                        uvec3(189193u, 119040u, 11066u);
                                        case 0:
                                        case 53:
                                        case 99:
                                        case 17:
                                        switch(_GLF_SWITCH((0 ^ (0 | 0))))
                                         {
                                          case 0:
                                          case 7:
                                          case 5:
                                          case 18:
                                          if(_GLF_WRAPPED_IF_FALSE(false))
                                           {
                                           }
                                          else
                                           {
                                            for(                                            uvec4(uvec2(_GLF_IDENTITY(121029u, uint(uint(_GLF_IDENTITY(121029u, clamp(121029u, 121029u, _GLF_IDENTITY(121029u, clamp(_GLF_IDENTITY(121029u, 0u | (_GLF_IDENTITY(121029u, (121029u) | 0u))), 121029u, _GLF_IDENTITY(121029u, (0u ^ 0u) | (121029u))))))))), 68714u)[0], uvec2(33495u, _GLF_IDENTITY(_GLF_IDENTITY(54220u, clamp(_GLF_IDENTITY(54220u, max(54220u, 54220u)), 54220u, 54220u)), 0u ^ (_GLF_IDENTITY(54220u, clamp(_GLF_IDENTITY(54220u, max(54220u, 54220u)), 54220u, 54220u))))), virtual_gid);
 _GLF_IDENTITY((mat4(8287.3247, _GLF_IDENTITY(-965.870, (_GLF_IDENTITY(-965.870, (false ? _GLF_FUZZED(-1.9) : -965.870))) - 0.0), 6830.8560, -1839.4595, 1511.7978, _GLF_IDENTITY(9.4, (9.4) / 1.0), -5.0, _GLF_IDENTITY(5.2, (true ? _GLF_IDENTITY(5.2, clamp(5.2, 5.2, 5.2)) : _GLF_FUZZED(asinh(52.98)))), _GLF_IDENTITY(95.28, float(mat2(95.28, 0.0, 1.0, abs(0.0)))), -825.195, 4.5, 6.6, 2.0, 7.6, -9.5, 1.3) != outerProduct(vec4(-1365.7859, -604.275, 6.5, -6.7), _GLF_IDENTITY(vec4(_GLF_IDENTITY(-7.3, _GLF_IDENTITY(float(mat4x2(-7.3, 0.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), (float(mat4x2(-7.3, 0.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), (float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))) * 1.0)))))) - 0.0)), _GLF_IDENTITY(-1936.9036, min(_GLF_IDENTITY(-1936.9036, min(_GLF_IDENTITY(-1936.9036, min(-1936.9036, -1936.9036)), -1936.9036)), -1936.9036)), -9.0, -7.3), (vec4(_GLF_IDENTITY(-7.3, _GLF_IDENTITY(float(mat4x2(-7.3, 0.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), (float(mat4x2(-7.3, 0.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)), -1936.9036, -9.0, -7.3)) * vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(mat4(8287.3247, _GLF_IDENTITY(-965.870, (_GLF_IDENTITY(-965.870, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.9), float(mat4x3(_GLF_FUZZED(-1.9), 1.0, 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 0.0))) : _GLF_IDENTITY(-965.870, mix(float(_GLF_FUZZED(-553.452)), float(-965.870), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) - 0.0), 6830.8560, -1839.4595, 1511.7978, 9.4, -5.0, 5.2, 95.28, -825.195, 4.5, 6.6, 2.0, 7.6, -9.5, 1.3) != outerProduct(vec4(-1365.7859, -604.275, 6.5, -6.7), vec4(-7.3, -1936.9036, -9.0, -7.3)), false || (mat4(8287.3247, _GLF_IDENTITY(-965.870, (_GLF_IDENTITY(-965.870, (_GLF_IDENTITY(false ? _GLF_FUZZED(-1.9) : -965.870, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-1.9, (-1.9) - tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-99.32)), bool(false)))))) : -965.870, clamp(false ? _GLF_FUZZED(-1.9) : -965.870, false ? _GLF_FUZZED(-1.9) : -965.870, false ? _GLF_FUZZED(-1.9) : -965.870)), false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), max(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), _GLF_IDENTITY(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), min(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), _GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9))))))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), max(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), _GLF_IDENTITY(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), min(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), _GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9))))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), max(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), _GLF_IDENTITY(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), min(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), _GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9))))))), (false ? _GLF_FUZZED(699.424) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), max(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), _GLF_IDENTITY(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), min(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), _GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9))))))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), max(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), _GLF_IDENTITY(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), min(_GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9)), _GLF_IDENTITY(-1.9, clamp(-1.9, _GLF_IDENTITY(-1.9, mix(float(-1.9), float(_GLF_FUZZED(-839.665)), bool(false))), -1.9))))))))) : -965.870, false ? _GLF_FUZZED(-1.9) : -965.870))))) - 0.0), 6830.8560, -1839.4595, 1511.7978, 9.4, -5.0, 5.2, _GLF_IDENTITY(95.28, min(95.28, 95.28)), -825.195, 4.5, 6.6, 2.0, 7.6, -9.5, 1.3) != outerProduct(vec4(-1365.7859, -604.275, 6.5, -6.7), vec4(-7.3, -1936.9036, -9.0, -7.3))))))); mat3(-4154.8675, -67.33, _GLF_IDENTITY(346.852, (_GLF_IDENTITY(346.852, (346.852) + 0.0)) / 1.0), _GLF_IDENTITY(2361.6369, _GLF_IDENTITY((2361.6369), max((2361.6369), _GLF_IDENTITY((2361.6369), clamp((2361.6369), (2361.6369), (2361.6369))))) / 1.0), -1.7, _GLF_IDENTITY(3809.2449, (true ? _GLF_IDENTITY(3809.2449, (3809.2449) / 1.0) : _GLF_FUZZED((sinh(996.338) + -432.093)))), 8552.7081, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.1, mix(float(_GLF_FUZZED(-62.01)), float(1.1), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(1.1, (true ? 1.1 : _GLF_FUZZED(-33.91))), 1.1)), (_GLF_IDENTITY(_GLF_IDENTITY(1.1, mix(float(_GLF_FUZZED(-62.01)), float(1.1), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(1.1, (true ? 1.1 : _GLF_FUZZED(-33.91))), 1.1))) - 0.0), 5237.0233))
                                             {
                                             }
                                           }
                                          break;
                                          default:
                                          1;
                                         }
                                        break;
                                        default:
                                        1;
                                       }
                                     }
                                    int _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[95];
                                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                     {
                                      switch(_GLF_SWITCH(0))
                                       {
                                        case 80:
                                        injectionSwitch;
                                        case 24:
                                        ivec3 _GLF_SWITCH_10_0v;
                                        case 0:
                                        case 58:
                                        if(_GLF_WRAPPED_IF_FALSE(false))
                                         {
                                         }
                                        else
                                         {
                                          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                           {
                                            if(_GLF_WRAPPED_IF_TRUE(true))
                                             {
                                              switch(_GLF_SWITCH(0))
                                               {
                                                case 2:
                                                (ivec3(-3816, -30845, -74187) , (+ mat4x2(582.501, 26.41, -23.10, 2.7, -4.4, 5568.4468, -5535.4622, 3290.0677)));
                                                case 58:
                                                mat3x2(2585.3334, -5169.4491, 6203.2164, 6.0, 478.533, -32.11);
                                                case 0:
                                                case 97:
                                                if(_GLF_WRAPPED_IF_TRUE(true))
                                                 {
                                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                                   {
                                                    if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bvec2(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
                                                     {
                                                     }
                                                    else
                                                     {
                                                      switch(_GLF_SWITCH(0))
                                                       {
                                                        case 0:
                                                        case 40:
                                                        case 78:
                                                        case 32:
                                                        case 55:
                                                        case 93:
                                                        case 51:
                                                        if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))), (injectionSwitch.x < injectionSwitch.y))))
                                                         {
                                                          for(                                                          (mat2x3(-781.122, -1.3, 6.6, -970.161, -8.6, 181.046) - mat2x3(-9.5, -6.9, -8623.5653, _GLF_IDENTITY(_GLF_IDENTITY(-79.55, (false ? _GLF_FUZZED(97.02) : -79.55)), clamp(-79.55, -79.55, -79.55)), 8.6, 9968.1193));
 true; mat3x4((mat4x2(-5.0, 60.20, _GLF_IDENTITY(-90.76, min(-90.76, -90.76)), -349.358, -425.072, 41.81, _GLF_IDENTITY(-48.42, clamp(-48.42, -48.42, -48.42)), _GLF_IDENTITY(-7.9, min(-7.9, _GLF_IDENTITY(-7.9, float(mat4x2(-7.9, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) + -15.19)))
                                                           {
                                                           }
                                                         }
                                                        else
                                                         {
                                                         }
                                                        break;
                                                        default:
                                                        1;
                                                       }
                                                     }
                                                   }
                                                  else
                                                   {
                                                   }
                                                 }
                                                else
                                                 {
                                                 }
                                                break;
                                                default:
                                                1;
                                               }
                                             }
                                            else
                                             {
                                             }
                                           }
                                         }
                                        break;
                                        case 25:
                                        uvec4 _GLF_SWITCH_10_1v;
                                        default:
                                        1;
                                       }
                                     }
                                    else
                                     {
                                     }
                                   }
                                   case 31:
                                   int _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
                                   case 0:
                                   case 91:
                                   case 7:
                                   int i = 0;
                                   case 78:
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
                                    }
                                   else
                                    {
                                    }
                                   break;
                                   default:
                                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_SWITCH_0_2v, _GLF_IDENTITY(clamp(_GLF_SWITCH_0_2v, _GLF_SWITCH_0_2v, _GLF_SWITCH_0_2v), 0 ^ (_GLF_IDENTITY(clamp(_GLF_SWITCH_0_2v, _GLF_SWITCH_0_2v, _GLF_SWITCH_0_2v), min(clamp(_GLF_SWITCH_0_2v, _GLF_SWITCH_0_2v, _GLF_SWITCH_0_2v), clamp(_GLF_SWITCH_0_2v, _GLF_SWITCH_0_2v, _GLF_SWITCH_0_2v))))))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_SWITCH_0_2v, (false ? _GLF_FUZZED((_injected_loop_counter & _injected_loop_counter)) : _GLF_SWITCH_0_2v)))) * 1)))); _injected_loop_counter --)
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), int(3)))))
                                        {
                                         case 8:
                                         false;
                                         case 0:
                                         case 70:
                                         case 22:
                                         case 74:
                                         1;
                                         break;
                                         case 73:
                                         mat2(-472.952, 647.955, -8.6, 4.5);
                                         case 30:
                                         ;
                                         default:
                                         do
                                          {
                                           1;
                                          }
                                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 break;
                                 default:
                                 1;
                                }
                               break;
                               case 21:
                               mat2x4(179.020, 4934.2818, -2825.8512, -945.651, -8302.9107, 568.729, -368.745, -827.808);
                               default:
                               1;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)))), vec4(0.0, 0.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 0.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(step(-1.6, -506.178)) : 1.0)), 1.0, 1.0, 1.0))))), vec4(0.0, 0.0, 0.0, exp(0.0)))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))));
                          }
                         else
                          {
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
            }
          }
         break;
         default:
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 74:
                 case 34:
                 case 35:
                 case 28:
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / (1 & 1))) / (_GLF_IDENTITY(1 | 1, (1 | 1) * 1)))) | (0)), _GLF_IDENTITY((-6277 & _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) << 0) * (0), min(_GLF_IDENTITY(1 * (0), clamp(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1)))))) * (_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED((_injected_loop_counter)) : 0, max(false ? _GLF_FUZZED((_injected_loop_counter)) : 0, false ? _GLF_FUZZED((_injected_loop_counter)) : 0))))), 1 * (0), 1 * (0))), 1 * (0))), 1, 0, 0))))) ^ (0), ~ (~ ((-6277 & _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) << 0)) << 0) * (0), min(_GLF_IDENTITY(1 * (0), clamp(1 * (_GLF_IDENTITY(0, (false ? _GLF_FUZZED((_injected_loop_counter)) : 0))), 1 * (0), 1 * (0))), 1 * (0))), 1, 0, 0))))) ^ (0)))))); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = (16340 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0) | 1)); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(ivec4(int(6), 1, (1 & 1), 1)), (int(ivec4(int(6), 1, (1 & 1), 1))) >> 0)), int(6)))))
                            {
                             case 73:
                             (ivec3(-73232, -19658, -96377) >> (true ? -80565 : _injected_loop_counter));
                             case 3:
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                              {
                               sinh(unpackHalf2x16(workgroup_base));
                              }
                             case 0:
                             case 53:
                             case 48:
                             case 84:
                             case 79:
                             case 55:
                             case 11:
                             case 49:
                             case 46:
                             case 85:
                             do
                              {
                               1;
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
                             break;
                             case 96:
                             mat2x3 _GLF_SWITCH_5_0v;
                             default:
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                                {
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 70:
                                     uvec4(90970u, 112865u, 114914u, 52589u);
                                     case 73:
                                     mat2 _GLF_SWITCH_9_0v;
                                     case 0:
                                     case 5:
                                     case 41:
                                     case 63:
                                     case 38:
                                     case 97:
                                     1;
                                     break;
                                     case 8:
                                     ;
                                     case 93:
                                     bvec2 _GLF_SWITCH_9_1v, _GLF_SWITCH_9_2v[53], _GLF_SWITCH_9_3v[35];
                                     default:
                                     1;
                                    }
                                  }
                                }
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                  }
                 break;
                 case 44:
                 ;
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))) || false)); _injected_loop_counter ++)
            {
             switch(_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec4(-22342, -92860, 18134, 59217)[0]) : 0)))), (int(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(69021) : 0))))) | _GLF_IDENTITY(_GLF_IDENTITY((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))), ~ (~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))))), (_GLF_IDENTITY((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))), ~ (~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))), ~ (~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))))), 0 + (_GLF_IDENTITY((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))), ~ (~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))))))))))))), min(~ (0), ~ (0)))))), _GLF_IDENTITY((_GLF_SWITCH(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(69021) : 0))))) | _GLF_IDENTITY((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))), ~ (_GLF_IDENTITY(~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), max(~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), _GLF_IDENTITY(~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), clamp(~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), ~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), ~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))))))))))))), min(~ _GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) << 0), (0), (0))), _GLF_IDENTITY((0), 1 * ((0))))), ~ (0))))))), min((_GLF_SWITCH(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(69021) : 0))))) | _GLF_IDENTITY((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))), ~ (_GLF_IDENTITY(~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), max(~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), _GLF_IDENTITY(~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), clamp(~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), ~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), ~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))))))))))))), min(~ _GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) << 0), (0), (0))), _GLF_IDENTITY((0), 1 * ((0))))), ~ (0))))))), (_GLF_SWITCH(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(69021) : 0))))) | _GLF_IDENTITY((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))), ~ (_GLF_IDENTITY(~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), max(~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), _GLF_IDENTITY(~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), clamp(~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), ~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))), ~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))))))))))))), min(~ _GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) << 0), (0), (0))), _GLF_IDENTITY((0), 1 * ((0))))), ~ (0))))))))) | (_GLF_SWITCH(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(69021) : 0))))) | _GLF_IDENTITY((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))), ~ (~ ((int(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))))))))))), min(~ (0), ~ (0)))))))))
              {
               case 44:
               do
                {
                 injectionSwitch;
                 bvec3(true, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               case 0:
               case 95:
               case 91:
               case 80:
               case 39:
               case 78:
               for(int _injected_loop_counter = (_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (1 & 1) << 0), 1 & 1, 1 & 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) | (2), (false ? _GLF_FUZZED((-57288 + _GLF_IDENTITY(-43026, (true ? -43026 : _GLF_FUZZED(52002))))) : (2) | (2))))), 4, 64, 4);
                }
               break;
               default:
               do
                {
                 1;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
