#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)) && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-872.432)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(206.168)))), bool(true))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-872.432)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5146.0626)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7611.4909)), float(injectionSwitch.y), bool(true)))) * _GLF_ONE(1.0, injectionSwitch.y))), bool(true))), (true ? injectionSwitch.y : _GLF_FUZZED(206.168)))), bool(true)))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))) * vec2(1.0, 1.0)), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y, mix(float(_GLF_FUZZED(-872.432)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(206.168)))), bool(true)))))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y, mix(float(_GLF_FUZZED(-872.432)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(206.168)))), bool(true)))))), true, false, true))))))), bool(bool(((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))) * vec2(1.0, 1.0)), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y, mix(float(_GLF_FUZZED(-872.432)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(206.168)))), bool(true)))))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y, mix(float(_GLF_FUZZED(-872.432)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(206.168)))), bool(true)))))), true, false, true)))))))))) || false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) / 1u))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) / 1u)))))) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uint(uint(5u)), max(uint(uint(5u)), uint(uint(5u)))))), uint(5u))), (true ? _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uint(uint(5u)), max(uint(uint(5u)), uint(uint(5u)))))), uint(5u))), uint(uvec4((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uint(uint(5u)), max(uint(uint(5u)), uint(uint(5u)))))), uint(5u))), 0u, 0u, 1u))) : _GLF_FUZZED(num_workgroup))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false) && (false)), bool(bvec3(! (_GLF_IDENTITY(true, (true) || false) && (false)), true, false)))))) || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))), injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))), injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))), injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))), injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))), injectionSwitch))))))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -50.41))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))))).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y)))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-508.394 * injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))), clamp(_GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))), vec2(mat3(vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))), mat2(1.0) * (vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY((vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0)))) * mat2(1.0), vec2(1.0, 1.0) * ((vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0)))) * mat2(1.0)))))))))).x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-508.394 * injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))), clamp(_GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))), vec2(mat3(vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))), mat2(1.0) * (vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))))), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY((vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0)))) * mat2(1.0), vec2(1.0, 1.0) * ((vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, 0.0)))) * mat2(1.0)))))))))).x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, true)))))), true, false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), true), false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), true), false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))))) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))))) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))))) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))) || false)) || false)), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, true && (false)))) && true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6558.1804), _GLF_FUZZED(9.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7.9)), bool(false))), 0.0)), 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))).y)), true))))) || false, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7.9)), bool(false))), 0.0)), 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))).y)), true))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y) || false)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7.9)), bool(false))), 0.0)), 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7.9)), bool(false)), max(mix(float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7.9)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7.9)), bool(false)), (false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7.9)), bool(false)), (mix(float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7.9)), bool(false))) - 0.0)))))), 0.0)), 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))).y)))), true))))) || false)))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) : _GLF_FUZZED(dot(injectionSwitch, injectionSwitch)))) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))) - vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)).y)), true))))) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false)))), (bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((3651.0796 * 211.553)), _GLF_FUZZED(_GLF_IDENTITY(76.49, clamp(76.49, 76.49, 76.49)))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.1), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(6.8)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))), true, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, false || ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), true, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))), false))), false))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, (true) || false), false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(false)))))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9755.9692) : 1.0)), 1.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) || false)))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), bool(bvec2((false), true))))))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(uint(uvec2(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! ((injectionSwitch.x < injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(! ((injectionSwitch.x < injectionSwitch.y)), true, false), false)))))))) ? 1u : _GLF_FUZZED(atomicMax(num_workgroup, subgroup_size)))), (1u) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(atomicMax(num_workgroup, subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))) ? 1u : _GLF_FUZZED(atomicMax(num_workgroup, subgroup_size)))), ~ (~ (_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(atomicMax(num_workgroup, subgroup_size)))))))) ^ 0u), (1u) << (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u ^ 0u) + (0u)), 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u)))), uint(0u)))) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), _GLF_IDENTITY(0u ^ (uint(uvec2(workgroup_size, 1u))), (0u ^ (uint(uvec2(workgroup_size, 1u)))) + 0u))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u), uvec2(0u, 0u) | ((uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u)))))) << 0u), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(((workgroup_size)), min(((workgroup_size)), ((workgroup_size)))) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) * uvec2(1u, 1u))))) << _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u)), uint(uvec4(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u)))) << 0u), 1u), clamp(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u)))) << 0u), 1u), uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u)))) << 0u), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u)))) << 0u), 1u), (uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u)))) << 0u), 1u)) >> uvec2(0u, 0u))))), 0u, 1u, 0u))), 0u), max(uvec2(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u)))) << 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u)))) << 0u), 1u)), 0u, 1u, 0u))), 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u)))) << 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), _GLF_IDENTITY((workgroup_size), min((workgroup_size), _GLF_IDENTITY((workgroup_size), 0u ^ ((workgroup_size)))))))) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u))) >> uvec2(0u, 0u)))) << 0u), 1u)), 0u, 1u, 0u))), 0u), max(uvec2(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u)))) << 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), _GLF_IDENTITY((workgroup_size), min((workgroup_size), _GLF_IDENTITY((workgroup_size), 0u ^ ((workgroup_size)))))))) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u))) >> uvec2(0u, 0u)))) << 0u), 1u)), 0u, 1u, 0u))), 0u), uvec2(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u)))) << 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), _GLF_IDENTITY((workgroup_size), min((workgroup_size), _GLF_IDENTITY((workgroup_size), 0u ^ ((workgroup_size)))))))) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u))) >> uvec2(0u, 0u)))) << 0u), 1u)), 0u, 1u, 0u))), 0u))), (uvec2(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (0u)), 0u)))) << 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u), (uvec2(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), 0u)) >> uvec2(0u, 0u)))) << 0u), 1u)), 0u, 1u, 0u))), _GLF_IDENTITY(0u, (0u) | (0u)))) | uvec2(0u, 0u)))))), uint(uint(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), 0u ^ ((workgroup_size))) << 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) << 0u))))))) / _GLF_IDENTITY(1u, ~ (~ (1u)))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), max(uint(uvec2(workgroup_size, 1u)), uint(uvec2(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))), workgroup_size)), 1u))))), ((_GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), max(uint(uvec2(workgroup_size, 1u)), uint(uvec2(workgroup_size, 1u)))))) + 0u))))) << 0u)) ^ 0u)) * workgroup_id, 0u | _GLF_IDENTITY((workgroup_size * workgroup_id), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_size * workgroup_id)), ~ (~ (~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))))))), 0u + (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u))), ~ (~ (~ (_GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) / 1u))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))))).y : _GLF_FUZZED(dot(vec4(36.51, 4291.0314, -6.9, -4.4), vec4(25.34, 8033.6872, -59.97, -6.4))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))).y)) : _GLF_FUZZED(dot(vec4(36.51, 4291.0314, -6.9, -4.4), vec4(25.34, 8033.6872, -59.97, -6.4))))), false), bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1)))) << 0)], float(mat2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1)))) << 0)], 1.0, 1.0, 1.0))), (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))).y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x3((injectionSwitch)[1], 1.0, 0.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0)), dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, log(1.0))), dot(vec2(1.0, 1.0), vec2(0.0, log(1.0)))))), min(float(mat4x3((injectionSwitch)[1], 1.0, 0.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0)), dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, log(1.0))), dot(vec2(1.0, 1.0), vec2(0.0, log(1.0)))))), float(mat4x3((injectionSwitch)[1], 1.0, 0.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0)), dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, log(1.0))), dot(vec2(1.0, 1.0), vec2(0.0, log(1.0)))))))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) >> 0))], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))).y : _GLF_FUZZED(dot(vec4(36.51, 4291.0314, -6.9, -4.4), vec4(25.34, 8033.6872, -59.97, -6.4)))), mix(float(_GLF_FUZZED(3914.7106)), float(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x3((injectionSwitch)[1], 1.0, 0.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0)), dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, log(1.0))), dot(vec2(1.0, 1.0), vec2(0.0, log(1.0)))))), min(float(mat4x3((injectionSwitch)[1], 1.0, 0.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0)), dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, log(1.0))), dot(vec2(1.0, 1.0), vec2(0.0, log(1.0)))))), float(mat4x3((injectionSwitch)[1], 1.0, 0.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0)), dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, log(1.0))), dot(vec2(1.0, 1.0), vec2(0.0, log(1.0)))))))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) >> 0))], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))).y : _GLF_FUZZED(dot(vec4(36.51, 4291.0314, -6.9, -4.4), vec4(25.34, 8033.6872, -59.97, -6.4)))), ((true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x3((injectionSwitch)[1], 1.0, 0.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0)), dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, log(1.0))), dot(vec2(1.0, 1.0), vec2(0.0, log(1.0)))))), min(float(mat4x3((injectionSwitch)[1], 1.0, 0.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0)), dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, log(1.0))), dot(vec2(1.0, 1.0), vec2(0.0, log(1.0)))))), float(mat4x3((injectionSwitch)[1], 1.0, 0.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0)), dot(vec2(exp(0.0), 1.0), vec2(0.0, 0.0))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, log(1.0))), dot(vec2(1.0, 1.0), vec2(0.0, log(1.0)))))))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) >> 0))], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))).y : _GLF_FUZZED(dot(vec4(36.51, 4291.0314, -6.9, -4.4), vec4(25.34, 8033.6872, -59.97, -6.4))))) - 0.0)), bool(true)))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false)))) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))))).y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))).y : _GLF_FUZZED(dot(vec4(36.51, 4291.0314, -6.9, -4.4), vec4(25.34, 8033.6872, -59.97, -6.4))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-719.855), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))).y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-719.855, mix(float(_GLF_FUZZED(-83.92)), float(-719.855), bool(true)))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1710.4567)), bvec2(true, false))).y : _GLF_FUZZED(dot(vec4(36.51, 4291.0314, -6.9, -4.4), vec4(25.34, 8033.6872, -59.97, -6.4))))), false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec4(false, false, false, true)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(! (! ((_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bool(! (! ((_GLF_DEAD(false)) && true)))), (_GLF_IDENTITY(bool(bool(! (! ((_GLF_DEAD(false)) && true)))), bool(bvec2(bool(bool(! (! ((_GLF_DEAD(false)) && true)))), true)))) || false)))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, false, false)))))) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), ! (! (! (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || _GLF_IDENTITY(false, (false) && true))))))) && true))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), true))), false)), (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), true, false), true))))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false)))))) || false), false, false))) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, true && (true)), ((false) && _GLF_IDENTITY(true, true && (true))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false)), bool(bvec4(bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false))), false || (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false))))), ! (! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false))), bool(bvec2(_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false))), false))))))))))) || false), false, false))) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), true && (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))), true && (false)), true))), false)), (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false)))))) || false), false, false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true)))), bool(bvec4(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true)))), false, true, false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(_GLF_IDENTITY(false || (false), (false || (false)) || false)))))))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) && true))))))), ! (! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) && true))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u ^ 0u))) ^ 0u), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u ^ 0u))) ^ 0u), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u ^ 0u))) ^ 0u))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46964)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true && (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), 0 | (0 ^ (1))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.2)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.2)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(_GLF_IDENTITY(244.132, max(244.132, 244.132)))), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[_GLF_IDENTITY(0, max(0, 0))], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), bvec2(true, true))).x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), vec2(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), 0.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-67.50, 3.3, -8.2, -940.371).w)), bvec2(true, false)))) + vec2(0.0, 0.0)).y), true, false), false))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, 1 * (2)), 1, 0)))), 1 * ((_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, 1 * (2)), 1, 0)))))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, 0 ^ ((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0))) + 0), (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0))))), 0 + (((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, _GLF_IDENTITY(1, (1) | (1)), 0)))) << 0, (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, 0))) : _GLF_FUZZED((-65887 + -87778))))) << 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 0), clamp(ivec3(2, 1, 0), ivec3(2, 1, 0), ivec3(2, 1, 0)))))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << _GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 0), max(_GLF_IDENTITY(ivec3(2, 1, 0), min(ivec3(2, 1, 0), ivec3(2, 1, 0))), ivec3(2, 1, 0)))))) << 0, (_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, (2) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))), _GLF_IDENTITY(1, (1) | (1)), 0)))) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0))))), 0 + (((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, _GLF_IDENTITY(1, (1) | (1)), 0)))) << 0, (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, 0))) : _GLF_FUZZED((-65887 + -87778))))) << 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 0), clamp(ivec3(2, 1, 0), ivec3(2, 1, 0), ivec3(2, 1, 0)))))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << _GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 0), max(_GLF_IDENTITY(ivec3(2, 1, 0), min(ivec3(2, 1, 0), ivec3(2, 1, 0))), ivec3(2, 1, 0)))))) << 0, (_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, (2) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))), _GLF_IDENTITY(1, (1) | (1)), 0)))) << 0))))))), 0 ^ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0))))), 0 + (((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, _GLF_IDENTITY(1, (1) | (1)), 0)))) << 0, (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, 0))) : _GLF_FUZZED((-65887 + -87778))))) << 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 0), clamp(ivec3(2, 1, 0), ivec3(2, 1, 0), ivec3(2, 1, 0)))))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << _GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 0), max(_GLF_IDENTITY(ivec3(2, 1, 0), min(ivec3(2, 1, 0), ivec3(2, 1, 0))), ivec3(2, 1, 0)))))) << 0, (_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, (2) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))), _GLF_IDENTITY(1, (1) | (1)), 0)))) << 0)))))))))) - 0)) + 0)))), (true ? uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, (0 ^ 1) * (0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, _GLF_IDENTITY(1, (1) >> 0), 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 0), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3(2, 1, 0), (ivec3(2, 1, 0)) / ivec3(1, 1, 1))))))) << 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0)))) << 0)))))), 0 + (((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, _GLF_IDENTITY(1, clamp(1, 1, 1)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(54549))), 1, 0)))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << 0, (_GLF_IDENTITY(2, int(ivec3(2, _GLF_IDENTITY(1, (1) | (1)), 0)))) << 0, (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, 0))) : _GLF_FUZZED((-65887 + -87778))))) << 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 0 | (2)))), int(ivec3(2, 1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 0), clamp(ivec3(2, 1, 0), ivec3(2, 1, 0), ivec3(2, 1, 0)))))) << 0, clamp((_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), ~ (~ (~ (_GLF_IDENTITY(0, (0) | (0)))))))), (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 0), max(_GLF_IDENTITY(ivec3(2, 1, 0), min(ivec3(2, 1, 0), ivec3(2, 1, 0))), ivec3(2, 1, 0)))))) << 0, (_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, (2) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))), _GLF_IDENTITY(1, (1) | (1)), 0)))) << 0)))))))) + 0)))) : _GLF_FUZZED(virtual_gid))), uint(2), uint(_GLF_IDENTITY(2, (2) | 0)))), 4, _GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, clamp(64, 64, 64)), 1, _GLF_IDENTITY(1, ~ (~ (1)))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY(true, true && (true)), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((mat4x3(6762.8281, 595.350, -1694.1073, -7.8, -5.1, 7.7, 633.852, -0.9, -9.2, -561.636, -161.263, -830.053) * vec4(4.6, 10.07, -1.9, 985.573)).g), (_GLF_FUZZED((mat4x3(6762.8281, 595.350, -1694.1073, -7.8, -5.1, 7.7, 633.852, -0.9, -9.2, -561.636, -161.263, -830.053) * vec4(4.6, 10.07, -1.9, 985.573)).g)) / 1.0), _GLF_FUZZED(57.52)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((mat4x3(6762.8281, 595.350, -1694.1073, -7.8, -5.1, 7.7, 633.852, -0.9, -9.2, -561.636, -161.263, -830.053) * vec4(4.6, 10.07, -1.9, 985.573)).g), _GLF_FUZZED(57.52)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((mat4x3(6762.8281, 595.350, -1694.1073, -7.8, -5.1, 7.7, 633.852, -0.9, -9.2, _GLF_IDENTITY(-561.636, clamp(-561.636, -561.636, -561.636)), -161.263, -830.053) * vec4(4.6, 10.07, -1.9, 985.573)).g), _GLF_FUZZED(57.52)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bool(true)))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((mat4x3(6762.8281, 595.350, _GLF_IDENTITY(-1694.1073, (_GLF_IDENTITY(-1694.1073, clamp(-1694.1073, -1694.1073, -1694.1073))) / cos(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), -7.8, _GLF_IDENTITY(-5.1, (-5.1) / _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(exp(0.0), 0.0)), dot(vec2(sqrt(1.0), 0.0), vec2(exp(0.0), 0.0)))), 7.7, 633.852, -0.9, -9.2, -561.636, -161.263, -830.053) * vec4(4.6, 10.07, -1.9, 985.573)).g), _GLF_FUZZED(57.52)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(94063) : 1))]), bvec2(true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))) + vec2(0.0, 0.0)).y)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false, true, false)), (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false, true, false))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false, true, false)), (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false, true, false))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(false, ! (! (false))), true, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0)), mat2(1.0) * (vec2(mat3x2(injectionSwitch, sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0))))), (injectionSwitch) * vec2(1.0, 1.0)).y))))) || _GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0)), mat2(1.0) * (vec2(mat3x2(injectionSwitch, sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0))))), (injectionSwitch) * vec2(1.0, 1.0)).y))))) || _GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, false)), (bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0)), mat2(1.0) * (vec2(mat3x2(injectionSwitch, sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0))))), (injectionSwitch) * vec2(1.0, 1.0)).y))))) || _GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, false))) && true)) || false)) || false))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(84.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(165.002) : 0.0))), mat2x4(mat4(mat2x4(0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(165.002) : 0.0)))))))) + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(84.17) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x))))) - 0.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (false))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool((false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), false || (bool(bool(_GLF_IDENTITY(false, false || (false))))))), ! (! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), false || (bool(bool(_GLF_IDENTITY(false, false || (false)))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(false, false || (false))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
