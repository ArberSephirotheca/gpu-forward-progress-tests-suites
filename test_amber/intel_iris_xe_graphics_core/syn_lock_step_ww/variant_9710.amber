#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, true), bvec2(bvec3(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, true), false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)), _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY((true ? float(injectionSwitch.x) : _GLF_FUZZED(-248.106)), ((true ? float(injectionSwitch.x) : _GLF_FUZZED(-248.106))) - 0.0)))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)) && (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), true && (injectionSwitch.x > injectionSwitch.y))))) && true), false)), false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(exp(-7.9)))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3309.2567) : injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, false || (false)), false)))))) || false), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, false, false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6174.8286), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-2.2)), bool(false)), (mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-2.2)), bool(false))) / 1.0))) * cos(0.0)), _GLF_FUZZED(-62.06)), bvec2(true, false))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.7)), bool(false))))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.7)), bool(false))))))))), clamp(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.7)), bool(false))))))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.7)), bool(false))))))))), vec2(vec4(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.7)), bool(false))))))))), 1.0, 1.0))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.7)), bool(false)))))))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), true, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))), false || (bool(bool(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), true, true, true)))))))), (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9073.0114) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0))) > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, true)))), true)))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(false, false || (false))) && true)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (_GLF_IDENTITY(! ((_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) && true), false, false)))))))) && true) && true)), ! (! (false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) ^ 0u)))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) && true), (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true, false, true)))), (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ((_GLF_IDENTITY(1u, 0u ^ (1u)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(5u, (5u) | 0u)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(5u, (5u) | 0u)))))))), (1u ^ 0u))), max(uint(uvec4(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) * 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (~ (5u))), max(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, min(5u, 5u))) >> 0u), 5u))) ^ _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base))))))))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << 0u))), 0u | _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (5u)), 5u))), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u)), (((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u), clamp(uvec4(1u, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) << 0u)), _GLF_IDENTITY(uvec4(1u, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u), (false ? _GLF_FUZZED(uvec4(103497u, 15358u, 52292u, 135628u)) : uvec4(1u, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u))), _GLF_IDENTITY(uvec4(1u, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u), ~ (~ (uvec4(1u, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u))))))), 0u + (uint(_GLF_IDENTITY(uvec4(1u, 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(uint(0u), uint(0u)))))), 1u), clamp(uvec4(1u, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u), _GLF_IDENTITY(uvec4(1u, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u), (false ? _GLF_FUZZED(uvec4(103497u, 15358u, 52292u, 135628u)) : uvec4(1u, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u))), _GLF_IDENTITY(uvec4(1u, 0u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(0u))), _GLF_IDENTITY(1u, max(1u, 1u))), ~ (~ (uvec4(1u, 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << _GLF_IDENTITY(0u, (0u) >> 0u)), uint(0u))), 1u)))))))))), max(1u, 1u))) << 0u) << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(uvec2(_GLF_IDENTITY(uint(5u), uint(5u)), 1u))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(uvec2(_GLF_IDENTITY(uint(5u), uint(5u)), 1u)))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(uvec2(_GLF_IDENTITY(uint(5u), uint(5u)), 1u))))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, min(5u, 5u))))), max(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, min(5u, 5u))))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, min(5u, _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)))))))))))) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) << _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(clamp(uint(5u), uint(5u), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (5u) - 0u))))), (false ? _GLF_FUZZED(workgroup_base) : clamp(uint(5u), uint(5u), uint(5u))))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY(uint(uvec2((1u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec4(uint(uvec2((1u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), 0u, 0u, 0u))))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u, (_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u, (_GLF_IDENTITY(((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, ~ (~ (_GLF_IDENTITY(5u, (5u) - 0u)))), 5u))), uint(5u))), (false ? _GLF_FUZZED(uvec3(90773u, 127595u, 124898u)[2]) : (1u << _GLF_IDENTITY(uint(5u), uint(5u))))))) ^ 0u, min((((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u, (((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) << 0u))) | ((((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(subgroup_size) : ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) | 0u, 1u * ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (false ? _GLF_FUZZED(workgroup_size) : (1u << _GLF_IDENTITY(uint(5u), uint(5u))))), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(true, (true) && true) ? 1u : _GLF_FUZZED(subgroup_local_id))) << _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(clamp(uint(5u), uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_base) : clamp(uint(5u), uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec4(5u, 0u, 1u, 1u)))))))))), 0u | _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY((_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), uint(5u)))), max(((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (_GLF_IDENTITY(uint(5u), (0u & 143683u) | (uint(5u))))), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(uint(5u), uint(5u)))))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))))))) ^ 0u, (_GLF_IDENTITY(((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) - 0u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((((_GLF_IDENTITY(1u, (1u) ^ 0u) << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u, min((((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u, (((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)), max(_GLF_IDENTITY((((_GLF_IDENTITY(1u, (1u) ^ 0u) << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u, min((((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u, (((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)), _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), ((_GLF_IDENTITY(1u, (1u) ^ 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))) ^ 0u, min((((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u, (((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u))))) << 0u)) | ((((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), ((false ? _GLF_FUZZED(subgroup_size) : ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) << 0u))) | 0u)) : _GLF_FUZZED(workgroup_id)))), (_GLF_IDENTITY(1u ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> (0u & 123778u)) ^ 0u, (0u ^ 1u) * (1u ^ 0u))) | (1u ^ 0u))))), uint(uvec4(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), clamp(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) - 0u))), _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), (1u ^ 0u)))))))) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) | (uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))), min(subgroup_size, subgroup_size)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (subgroup_size)), clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) * (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) | (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id))), clamp(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) - 0u, (false ? _GLF_FUZZED(workgroup_size) : (subgroup_id) - _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, 0u ^ (0u))))))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id))))))), min(_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id))), clamp(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) - 0u, (false ? _GLF_FUZZED(workgroup_size) : (subgroup_id) - _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, 0u ^ (0u))))))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id))))))), _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id))), clamp(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) - 0u, (false ? _GLF_FUZZED(workgroup_size) : (subgroup_id) - _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, 0u ^ (0u))))))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) | (subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (false ? _GLF_FUZZED(workgroup_id) : uint(subgroup_id))))), 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) | (_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), _GLF_IDENTITY(uint(uvec4((subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uint((subgroup_id))), ~ (~ (uint(uint((subgroup_id))))))), (subgroup_id))), 1u, 0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u + (2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec4((subgroup_id) | (subgroup_id), 1u, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u)))) + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) | (subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (false ? _GLF_FUZZED(workgroup_id) : uint(subgroup_id))))), 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) | (_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), _GLF_IDENTITY(uint(uvec4((subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uint((subgroup_id))), ~ (~ (uint(uint((subgroup_id))))))), (subgroup_id))), 1u, 0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u + (2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec4((subgroup_id) | (subgroup_id), 1u, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u)))) + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) | (subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (false ? _GLF_FUZZED(workgroup_id) : uint(subgroup_id))))), 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) | (_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), _GLF_IDENTITY(uint(uvec4((subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uint((subgroup_id))), ~ (~ (uint(uint((subgroup_id))))))), (subgroup_id))), 1u, 0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u + (2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec4((subgroup_id) | (subgroup_id), 1u, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u)))) + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) - 0u) : _GLF_FUZZED(subgroup_id)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) | (subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (false ? _GLF_FUZZED(workgroup_id) : uint(subgroup_id))))), 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) | (_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), _GLF_IDENTITY(uint(uvec4((subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uint((subgroup_id))), ~ (~ (uint(uint((subgroup_id))))))), (subgroup_id))), 1u, 0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u + (2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec4((subgroup_id) | (subgroup_id), 1u, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u)))) + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) | (subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (false ? _GLF_FUZZED(workgroup_id) : uint(subgroup_id))))), 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) | (_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), _GLF_IDENTITY(uint(uvec4((subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uint((subgroup_id))), ~ (~ (uint(uint((subgroup_id))))))), (subgroup_id))), 1u, 0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u + (2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec4((subgroup_id) | (subgroup_id), 1u, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u)))) + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) - 0u) : _GLF_FUZZED(subgroup_id))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) | (subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (false ? _GLF_FUZZED(workgroup_id) : uint(subgroup_id))))), 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) | (_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), _GLF_IDENTITY(uint(uvec4((subgroup_id) | _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uint((subgroup_id))), ~ (~ (uint(uint((subgroup_id))))))), (subgroup_id))), 1u, 0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u + (2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec4((subgroup_id) | (subgroup_id), 1u, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u)))) + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) - 0u) : _GLF_FUZZED(subgroup_id)))))))))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) : _GLF_FUZZED(subgroup_id))))))))) * subgroup_size) << 0u)) / _GLF_IDENTITY(1u, (0u | 0u) ^ (1u))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) * 1u)), (true ? uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) * 1u)) : _GLF_FUZZED(subgroup_local_id)))))) + ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0, (_GLF_IDENTITY(0 & -90560, (true ? 0 & -90560 : _GLF_FUZZED(-66156)))))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(false || ((! (_GLF_IDENTITY(false, false || (false))))), ! (! (false || ((! (_GLF_IDENTITY(false, false || (false)))))))))))))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) * (injectionSwitch)).y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-512.439)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-5.3), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(8.4)), bvec2(true, false)))), (injectionSwitch) - _GLF_IDENTITY(abs(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(-9414.1137)), vec2((abs(vec2(0.0, 0.0)))[0], (abs(vec2(0.0, 0.0)))[1]), bvec2(true, true)))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) && ((_GLF_DEAD(false))), (true && ((_GLF_DEAD(false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.3, -4.0)) : injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true) && true)))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], injectionSwitch[1])).x < injectionSwitch.y)) && ((true))))) || false), _GLF_IDENTITY(false, ! (! (false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(true, (true) || false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false, ! (! (false)))))))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false, ! (! (false))))), true, true)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((vec3(7608.4831, -4169.2275, 5.7) * -7.1).r), _GLF_FUZZED(-796.792)), bvec2(false, false))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - log(1.0)), 0.0, 1.0, 0.0), mix(vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], (vec4(1.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(52.36), (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0) : _GLF_FUZZED(vec4(5.5, 68.00, 748.465, 256.247)))))[3]), vec4(_GLF_FUZZED(-7.6), _GLF_FUZZED(-313.826), (vec4(1.0, 0.0, 1.0, 0.0))[2], _GLF_IDENTITY(_GLF_FUZZED(5.7), (true ? _GLF_IDENTITY(_GLF_FUZZED(5.7), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(5.7))) : _GLF_FUZZED(tan((-62.29 * 7.2)))))), bvec4(false, false, true, false))))), 0.0))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(3.0, -5185.2053)))).x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), true && ((false)))) || false)))), (_GLF_DEAD(false)) || false), true, false, false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false, true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0) : _GLF_FUZZED(3.5))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED((_GLF_IDENTITY(- 2311.4587, clamp(- 2311.4587, - 2311.4587, - 2311.4587)))), _GLF_FUZZED(8528.3220)), clamp(vec2(_GLF_FUZZED((_GLF_IDENTITY(- 2311.4587, clamp(- 2311.4587, - 2311.4587, - 2311.4587)))), _GLF_FUZZED(8528.3220)), vec2(_GLF_FUZZED((_GLF_IDENTITY(- 2311.4587, clamp(- 2311.4587, - 2311.4587, - 2311.4587)))), _GLF_FUZZED(8528.3220)), _GLF_IDENTITY(vec2(_GLF_FUZZED((_GLF_IDENTITY(- 2311.4587, clamp(- 2311.4587, - 2311.4587, - 2311.4587)))), _GLF_FUZZED(8528.3220)), min(vec2(_GLF_FUZZED((_GLF_IDENTITY(- 2311.4587, clamp(- 2311.4587, - 2311.4587, - 2311.4587)))), _GLF_FUZZED(8528.3220)), vec2(_GLF_FUZZED((_GLF_IDENTITY(- 2311.4587, clamp(- 2311.4587, - 2311.4587, - 2311.4587)))), _GLF_FUZZED(8528.3220)))))), bvec2(false, false))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED((_GLF_IDENTITY(- 2311.4587, clamp(- 2311.4587, - 2311.4587, - 2311.4587)))), _GLF_FUZZED(8528.3220)), clamp(vec2(_GLF_FUZZED((_GLF_IDENTITY(- 2311.4587, clamp(- 2311.4587, - 2311.4587, - 2311.4587)))), _GLF_FUZZED(8528.3220)), vec2(_GLF_FUZZED((_GLF_IDENTITY(- 2311.4587, clamp(- 2311.4587, - 2311.4587, - 2311.4587)))), _GLF_FUZZED(8528.3220)), _GLF_IDENTITY(vec2(_GLF_FUZZED((_GLF_IDENTITY(- 2311.4587, clamp(- 2311.4587, - 2311.4587, - 2311.4587)))), _GLF_FUZZED(8528.3220)), min(vec2(_GLF_FUZZED((_GLF_IDENTITY(- 2311.4587, clamp(- 2311.4587, - 2311.4587, - 2311.4587)))), _GLF_FUZZED(8528.3220)), vec2(_GLF_FUZZED((_GLF_IDENTITY(- 2311.4587, clamp(- 2311.4587, - 2311.4587, - 2311.4587)))), _GLF_FUZZED(8528.3220)))))), bvec2(false, false))).x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), log(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0)), (true ? mat3x2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), log(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0) : _GLF_FUZZED(mat3x2(-1.1, 351.672, -5.8, 4.2, 2.0, 8.1))))), mix(vec2((vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, abs(1.0)), _GLF_IDENTITY(vec2(vec2(vec2(1.0, abs(1.0)))), vec2(mat4x3(vec2(vec2(vec2(1.0, abs(1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), log(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), (true ? mat3x2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), log(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0) : _GLF_FUZZED(mat3x2(-1.1, 351.672, -5.8, 4.2, 2.0, 8.1))))))[0], (vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), log(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), (true ? mat3x2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), log(1.0), 0.0, determinant(mat4(0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-6.3))))), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0) : _GLF_FUZZED(mat3x2(-1.1, 351.672, -5.8, 4.2, 2.0, 8.1))))))[1]), vec2(_GLF_FUZZED(-1720.8933), _GLF_FUZZED(-695.173)), bvec2(false, false))))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), clamp(((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) * mat2(1.0), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1281.4249)), bool(false)))) * (mat2(1.0)))) * mat2(1.0))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true)))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(! (! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))) || (bool(bool(! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), bool(bvec4(false || (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))) || false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(bool((! (_GLF_IDENTITY(false, (false) && true)))), (bool((! (_GLF_IDENTITY(false, (false) && true))))) || _GLF_IDENTITY(false, (false) || false))) && true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))))))), true, true)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) && true))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true), true))) && true)))))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) || false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY(true, (true) && true), true))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))), ! (! (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
