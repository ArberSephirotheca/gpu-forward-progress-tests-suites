#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_2 {
 bvec4 _f0;
 uvec4 _f1;
 mat4x2 _f2;
 mat2x4 _f3;
 mat2x3 _f4;
 uvec4 _f5;
 uint num_workgroup;
 mat2 _f6;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat2x4 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 mat4x3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 _GLF_struct_1 _f1;
 uvec3 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat2x4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_0 {
 float _f0;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base;
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(1.0, gl_SubgroupID);
 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y = _GLF_struct_replacement_0.subgroup_id;
uint subgroup_size = 16;
 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x = subgroup_local_id;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(bvec3(true), _GLF_struct_1(mat3(1.0), mat2x4(1.0), mat4x2(1.0), mat3x2(1.0), mat4x3(1.0), bvec4(true)), uvec3(1u), _GLF_struct_2(bvec4(true), uvec4(1u), mat4x2(1.0), mat2x4(1.0), mat2x3(1.0), uvec4(1u), gl_NumWorkGroups.x, mat2(1.0))), mat2x4(1.0), bvec2(true));
 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.x = _GLF_struct_replacement_4._f0._f3.num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y = workgroup_base;
 uint virtual_gid = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y + GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y * GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z + GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x;
 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y = virtual_gid;
 uint next_virtual_gid = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y + GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y * GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z + ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + 1) % GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z);
 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.x = next_virtual_gid;
 atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.x], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y], 4, 64, 0);
 atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.x], uint(read_1 + 1), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
