#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 bvec2 _f0;
 bvec4 _f1;
 vec3 _f2;
 uint virtual_gid;
 bvec3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_12 {
 bvec2 _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_9 {
 bvec4 _f0;
 int _f1;
 float _f2;
} ;

struct _GLF_struct_10 {
 float _f0;
 int _f1;
 _GLF_struct_9 _f2;
 bvec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
 float _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_12 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_5 {
 float _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 bvec3 _f1;
 bvec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 float _f1;
 ivec2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_1 {
 uint _f0;
 vec2 _f1;
 ivec4 _f2;
 mat3x4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_2 {
 int _f0;
 _GLF_struct_1 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_0 {
 float _f0;
 bvec4 _f1;
 bvec3 _f2;
 mat4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 _GLF_struct_0 _f1;
 uint subgroup_local_id;
 _GLF_struct_2 _f2;
 _GLF_struct_6 _f3;
 mat3x2 _f4;
 uvec4 _f5;
 uint _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat3(1.0), _GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-884.154)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6850.3311)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(241.110), _GLF_FUZZED(13.54)), vec2((vec2(mat2(injectionSwitch, 0.0, 1.0)))[_GLF_IDENTITY(0, ~ (~ (0)))], (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat3x2(vec2(mat2(injectionSwitch, 0.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(vec2(mat2(injectionSwitch, 0.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))[1]), bvec2(true, true)))).x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-895.847, 7263.5409)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 1.0)))), mix(vec2(_GLF_FUZZED(241.110), _GLF_FUZZED(13.54)), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(transpose(mat2(injectionSwitch, 0.0, 1.0)))))), vec2(0.0, 0.0) + (_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(transpose(mat2(injectionSwitch, 0.0, 1.0)))))), clamp((vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(transpose(mat2(injectionSwitch, 0.0, 1.0)))))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(transpose(mat2(injectionSwitch, 0.0, 1.0)))))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(transpose(mat2(injectionSwitch, 0.0, 1.0))))))))))[0], (vec2(mat2(injectionSwitch, 0.0, 1.0)))[1]), bvec2(true, true)))).x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-895.847, 7263.5409)), min(_GLF_FUZZED(vec2(-895.847, 7263.5409)), _GLF_FUZZED(vec2(-895.847, 7263.5409)))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))) || false))))), bvec4(true), bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))), mat4(1.0), _GLF_IDENTITY(ivec4(1), (ivec4(1)) | (_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) ^ (ivec4(1)))))), gl_SubgroupInvocationID, _GLF_struct_2(1, _GLF_struct_1(1u, vec2(1.0), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) | (ivec4(1))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (false ? _GLF_FUZZED(-76924) : _GLF_IDENTITY(1, max(1, 1))))) << 0))) - ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) - ivec4(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0)), 0, 0, 0))) >> (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(6), ivec4(6)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(_GLF_IDENTITY(1, 0 | (1)))) >> ivec4(0, 0, 0, 0)), (ivec4(1)) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0), min((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY((ivec4(1)), (false ? _GLF_IDENTITY(_GLF_FUZZED(findMSB(ivec4(27044, 2601, 83524, 87752))), max(_GLF_FUZZED(findMSB(ivec4(27044, 2601, 83524, 87752))), _GLF_FUZZED(findMSB(ivec4(27044, 2601, 83524, 87752))))) : (ivec4(1)))) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)), (ivec4(1)) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0))))), (false ? _GLF_FUZZED(ivec4(91682, -90690, -36458, 74225)) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) - ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) - _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0), (ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0, 0)) - ivec4(0, 0, 0, 0))) | ivec4(0, 0, 0, 0)))) >> (_GLF_IDENTITY(ivec4(0, 0, 0, 0), ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (ivec4(0, 0, 0, 0))) << _GLF_IDENTITY(ivec4(6), ivec4(6)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)), (ivec4(1)) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0), _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)), (ivec4(1)) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, _GLF_IDENTITY(0, 0 | (0)), 0)), (ivec4(1)) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0)), max(min((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)), (ivec4(1)) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, _GLF_IDENTITY(0, 0 | (0)), 0)), (ivec4(1)) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)), (ivec4(1)) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, _GLF_IDENTITY(0, 0 | (0)), 0)), (ivec4(1)) - ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0))))))))) - _GLF_IDENTITY(ivec4(0, 0, 0, 0), ~ (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1)))))), mat3x4(1.0), mat3(1.0)), ivec4(1)), _GLF_struct_6(_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(88.97), mix(float(_GLF_FUZZED(3857.5051)), float(_GLF_FUZZED(88.97)), bool(true)))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) / 1.0)), bool(true))), (1.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), (1.0) / 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-98.60)))) / 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), mix(float(_GLF_FUZZED((106.576 / -3.3))), float(max(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.3) : 1.0)), 1.0)), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))) * 1.0)) * (1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.0)))))) / 1.0)) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-811.290) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))) / 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, clamp(_GLF_IDENTITY((1.0) / 1.0, max((1.0) / 1.0, (1.0) / 1.0)), (1.0) / 1.0, (1.0) / 1.0))), clamp(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), (mat4x3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)) * mat4(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(442.094, max(_GLF_IDENTITY(442.094, (false ? _GLF_FUZZED(-1.0) : 442.094)), 442.094))) : 1.0), float(mat4x2((false ? _GLF_FUZZED(442.094) : 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) + sin(0.0)), (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, exp(0.0), 1.0, 1.0))), (1.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(1.0, 1.0)), 0.0, 1.0, exp(0.0), 1.0, 1.0))), (1.0) / _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))))) + 0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, cos(0.0) * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0))), clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat3x2((1.0), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3x2((1.0), 0.0, 0.0, 0.0, 0.0, 0.0)))))), (1.0))) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))))))) - log(abs(1.0))), ivec2(1), _GLF_struct_3(mat3(1.0), bvec3(true), bvec3(_GLF_IDENTITY(true, ! (! (true)))), ivec3(1)), _GLF_struct_4(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(-98.29, max(_GLF_IDENTITY(_GLF_IDENTITY(-98.29, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (-98.29)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(-98.29, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * _GLF_IDENTITY((-98.29), (_GLF_IDENTITY((-98.29), clamp((-98.29), (-98.29), _GLF_IDENTITY((-98.29), (true ? (-98.29) : _GLF_FUZZED(-43.98)))))) * 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4952.7897))), injectionSwitch.x), sqrt(0.0), 1.0)), (true ? _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(-98.29, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (-98.29)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 1.0)), float(mat4x2(float(vec4(_GLF_IDENTITY(-98.29, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))) * (-98.29)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-64.72)))), _GLF_IDENTITY(-98.29, 1.0 * (-98.29)))), 1460.1435, -438.138, 971.434)) : mat2(1.0))), mat2x4(1.0)), _GLF_struct_5(1.0, bvec2(true))), mat3x2(1.0), uvec4(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) << 0u)), clamp(~ (_GLF_IDENTITY(0u, (0u) << 0u)), ~ (_GLF_IDENTITY(0u, (0u) << 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) << 0u)), clamp(~ (_GLF_IDENTITY(0u, (0u) << 0u)), ~ (_GLF_IDENTITY(0u, (0u) << 0u)), ~ (_GLF_IDENTITY(0u, (0u) << 0u)))))))))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | 0u));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])) : _GLF_FUZZED((subgroup_id ^ uvec3(99564u, _GLF_IDENTITY(185790u, min(185790u, 185790u)), 59987u))))), gl_NumWorkGroups)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], clamp(gl_NumWorkGroups[0], gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) | (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))))))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(54934u, 22845u, 20702u)), min(true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(54934u, 22845u, 20702u)), true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(54934u, 22845u, 20702u)))), max(_GLF_IDENTITY(true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(54934u, 22845u, 20702u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(true ? gl_WorkGroupID : _GLF_IDENTITY(_GLF_FUZZED(uvec3(54934u, 22845u, 20702u)), min(_GLF_IDENTITY(_GLF_FUZZED(uvec3(54934u, 22845u, 20702u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(54934u, 22845u, 20702u)), (true ? _GLF_FUZZED(uvec3(54934u, 22845u, 20702u)) : _GLF_FUZZED(_GLF_IDENTITY((uvec3(115710u, 50505u, 67861u) - uvec3(180908u, _GLF_IDENTITY(98359u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (98359u)), 133411u)), clamp((uvec3(115710u, 50505u, 67861u) - uvec3(180908u, _GLF_IDENTITY(98359u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (98359u)), 133411u)), _GLF_IDENTITY((uvec3(115710u, 50505u, 67861u) - uvec3(_GLF_IDENTITY(180908u, uint(_GLF_IDENTITY(uvec2(180908u, 0u), min(uvec2(180908u, 0u), uvec2(180908u, 0u))))), _GLF_IDENTITY(98359u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (98359u)), 133411u)), max((uvec3(115710u, 50505u, 67861u) - uvec3(180908u, _GLF_IDENTITY(98359u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (98359u)), 133411u)), (uvec3(115710u, 50505u, 67861u) - uvec3(180908u, _GLF_IDENTITY(98359u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (98359u)), 133411u)))), _GLF_IDENTITY((uvec3(115710u, 50505u, 67861u) - uvec3(180908u, _GLF_IDENTITY(98359u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (98359u)), 133411u)), ((uvec3(115710u, 50505u, 67861u) - uvec3(180908u, _GLF_IDENTITY(98359u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (98359u)), 133411u))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))) - uvec3(0u, 0u, 0u)), _GLF_FUZZED(uvec3(_GLF_IDENTITY(54934u, (54934u) | (54934u)), 22845u, 20702u)))), max(_GLF_IDENTITY(true, (true) && true) ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY(uvec3(54934u, _GLF_IDENTITY(22845u, ~ (_GLF_IDENTITY(~ (22845u), (~ (22845u)) - 0u))), _GLF_IDENTITY(20702u, min(_GLF_IDENTITY(20702u, (20702u) | (20702u)), 20702u))), ~ (_GLF_IDENTITY(~ (uvec3(54934u, 22845u, _GLF_IDENTITY(20702u, min(_GLF_IDENTITY(20702u, (20702u) | (20702u)), 20702u)))), (~ (uvec3(54934u, 22845u, _GLF_IDENTITY(20702u, min(_GLF_IDENTITY(20702u, (20702u) | (20702u)), 20702u))))) << uvec3(0u, 0u, 0u))))), true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(54934u, 22845u, 20702u)))), min(true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(54934u, max(_GLF_IDENTITY(54934u, 0u ^ (54934u)), 54934u)), 22845u, 20702u)), true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(54934u, 22845u, 20702u)))))), true ? _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), gl_WorkGroupID)) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(54934u, 0u + (_GLF_IDENTITY(54934u, min(54934u, 54934u)))), _GLF_IDENTITY(22845u, clamp(22845u, 22845u, 22845u)), 20702u)))))).x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id));
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(bvec3(true), 1.0, _GLF_struct_8(bvec2(true)), _GLF_struct_10(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), 0.0 + ((1.0))), ((1.0)) + 0.0))), min(_GLF_IDENTITY(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), float(mat4x3(_GLF_IDENTITY(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), mix(float(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0)))), float(_GLF_FUZZED(-1.1)), bool(false))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0)))), _GLF_IDENTITY(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), float(mat4x2(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, min(1.0, 1.0)))) + 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, tan(0.0))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), min(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), _GLF_IDENTITY(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), float(mat4x2(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(799.396, (true ? 799.396 : _GLF_FUZZED(-9.1))))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), _GLF_IDENTITY(min(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), _GLF_IDENTITY(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), float(mat4x2(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))))), min(min(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), _GLF_IDENTITY(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), float(mat4x2(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))))), min(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), _GLF_IDENTITY(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), float(mat4x2(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0)))))))))), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), min(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), _GLF_IDENTITY(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(((1.0)) + 0.0, (((1.0)) + 0.0) / 1.0)))), float(mat4x2(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), ((1.0)) + 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))))))))), 1, _GLF_struct_9(bvec4(_GLF_IDENTITY(true, ! (! (true)))), 1, 1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false), false), false), false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) - 0.0)))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false)))) || false), false), false), false))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false))), (_GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(true, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]) * 1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0, _GLF_IDENTITY((injectionSwitch[_GLF_IDENTITY(1, (1) | (1))]) * 1.0, max((injectionSwitch[1]) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), (injectionSwitch[1]) * 1.0)))), 0.0, 0.0, 1.0, sin(0.0), 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, ((injectionSwitch[1]) * 1.0) * 1.0), clamp((injectionSwitch[1]) * 1.0, (_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)) * 1.0, _GLF_IDENTITY((injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-20491) : _GLF_IDENTITY(1, min(1, 1))))) + 0)]) * 1.0, max((injectionSwitch[1]) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, sin(0.0))))[1]) * 1.0, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch[1]), log(1.0) + ((injectionSwitch[1]))) * 1.0, clamp((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))), (injectionSwitch[1]) * 1.0)), _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(0.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0))), 0.0, 1.0, 0.0, tan(0.0), 1.0, 1.0))))))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.0, max(2.0, 2.0)))), float(0.0), bool(true))), 1.0, sin(0.0), 1.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0))), float(_GLF_FUZZED(54.39)), bool(false))))))), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1], _GLF_IDENTITY((injectionSwitch[1]) * 1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0, _GLF_IDENTITY((injectionSwitch[1]) * 1.0, max((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(83.11)), float(1.0), bool(true))), sin(0.0), 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat4x3(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)) * 1.0, _GLF_IDENTITY((injectionSwitch[1]) * 1.0, max((injectionSwitch[1]) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, sin(0.0))))[1]) * 1.0, float(mat2x4(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(0.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0))), (false ? _GLF_FUZZED(0.0) : _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(0.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0))))), 0.0, 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), (true ? float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))) : _GLF_FUZZED(atan(97.44)))))))))))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.0, max(2.0, 2.0)))), float(0.0), bool(true))), 1.0, sin(0.0), 1.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0))), float(_GLF_FUZZED(54.39)), bool(false))))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]) * 1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0, _GLF_IDENTITY((injectionSwitch[1]) * 1.0, max((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0)))), 0.0, 0.0, 1.0, sin(0.0), 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat4x3(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)) * 1.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, max((injectionSwitch[1]) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, sin(0.0))))[1]) * 1.0, float(mat2x4(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0)), _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(0.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0))), 0.0, 1.0, 0.0, tan(0.0), 1.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-29.62) : _GLF_IDENTITY((injectionSwitch[1]) * 1.0, max((injectionSwitch[1]) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, sin(0.0))))[1]) * 1.0, float(mat2x4(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0)), _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(0.0, 1.0, _GLF_IDENTITY(sin(abs(0.0)), mix(float(_GLF_IDENTITY(sin(abs(0.0)), mix(float(_GLF_FUZZED(-4179.1603)), float(sin(abs(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_FUZZED(vec2(-4.1, -2.9).g)), bool(false))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0))), 0.0, 1.0, 0.0, tan(0.0), 1.0, 1.0))))))))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.0, max(2.0, 2.0)))), float(0.0), bool(true))), 1.0, sin(0.0), 1.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0))), float(_GLF_FUZZED(54.39)), bool(false)))))))) - vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, ((bool(bvec4(true, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]) * 1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0, _GLF_IDENTITY((injectionSwitch[1]) * 1.0, max((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0)))), 0.0, 0.0, 1.0, sin(0.0), 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat4x3(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)) * 1.0, _GLF_IDENTITY((injectionSwitch[1]) * 1.0, max((injectionSwitch[1]) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, sin(0.0))))[1]) * 1.0, float(mat2x4(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0, (_GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])) : _GLF_FUZZED(-44.67)))) * 1.0)), _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.9)), bool(false))), 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(0.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 0.0))), 0.0, 1.0, 0.0, tan(0.0), 1.0, 1.0))))))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.0, max(2.0, 2.0)))), float(0.0), bool(true))), 1.0, sin(0.0), 1.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0))), float(_GLF_FUZZED(54.39)), bool(false))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]) * 1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0, _GLF_IDENTITY((injectionSwitch[1]) * 1.0, max(_GLF_IDENTITY((injectionSwitch[1]), (true ? (injectionSwitch[1]) : _GLF_FUZZED(-34.69))) * 1.0, (injectionSwitch[1]) * 1.0)))), 0.0, 0.0, 1.0, sin(0.0), 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat4x3(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), float(vec3(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)))) * 1.0, _GLF_IDENTITY((injectionSwitch[1]) * 1.0, max((injectionSwitch[1]) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(vec4(injectionSwitch, 0.0, sin(0.0))))[1]) * 1.0, float(mat2x4(_GLF_IDENTITY((injectionSwitch[1]) * 1.0, clamp((injectionSwitch[1]) * 1.0, (injectionSwitch[1]) * 1.0, _GLF_IDENTITY((injectionSwitch[1]), clamp(_GLF_IDENTITY((injectionSwitch[1]), ((injectionSwitch[1])) - 0.0), (injectionSwitch[1]), (injectionSwitch[1]))) * 1.0)), _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.9)), bool(false))), 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(0.0, 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), max(0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 0.0))), 0.0, 1.0, 0.0, tan(0.0), 1.0, 1.0))))))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.0, max(2.0, 2.0)))), float(0.0), bool(true))), 1.0, sin(0.0), 1.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0))), float(_GLF_FUZZED(54.39)), bool(false))))))))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false) || false))) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(-44.87)), vec2((vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0)))[0], (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))[1]), bvec2(true, true)))).y)), _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((! (injectionSwitch.x > injectionSwitch.y))))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_IDENTITY(true, true && (true)), true))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3830.5832)), bool(false))) < injectionSwitch.y)))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3073.2763)), float(injectionSwitch.y), bool(true)))) - 0.0), injectionSwitch.y)))), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3073.2763)), float(injectionSwitch.y), bool(true)))) - 0.0), injectionSwitch.y)))), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))))) && true))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(69.86)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false, ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0, float(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0, min((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0)), 1.0)))) < injectionSwitch.y)))))) && true))))), true && _GLF_IDENTITY((_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), ! (! ((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(true, (true) && true), true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))))))), false || ((_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3301.3529))), injectionSwitch.x))), bool(true))) > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 0.0))).y) && true)) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), true))))))) && true), true, true, true))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch))))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), ((! (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, false))))), true, true)))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), ! (! ((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true)))))), true, true, true)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.1)), vec2(_GLF_FUZZED(-10.28), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y)))), ((! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))) && true))))), true && (_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), (((! (injectionSwitch.x > injectionSwitch.y)))) && true) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) && true))))), ! (! ((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! (((! (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (! (((! (injectionSwitch.x > injectionSwitch.y))) && true))))))), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, abs(1.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, abs(1.0), 1.0)))))))), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! (((! (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (! (((! (injectionSwitch.x > injectionSwitch.y))) && true))))))), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))) && true))), false || (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y))) && true), false || ((((! (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! (! (((! (injectionSwitch.x > injectionSwitch.y))) && true))))))), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))))))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), true))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (true))), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)) && true)))), ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) && true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) && true), false))))) && true))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))) && true, true && (((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))) && true))) || false)), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(83.09) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, 0.0))) > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! (((! (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, 0.0))) > injectionSwitch.y))) && true), (! (((! (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, 0.0))) > injectionSwitch.y))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), true && (_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)), vec2(_GLF_FUZZED((3.7)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true))).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).x > injectionSwitch.y) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-8176.5352))), bool(false))) > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true, true, _GLF_IDENTITY(true, (true) || false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x < injectionSwitch.y)))))) && true))))), ! (! ((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) && true), true, true, _GLF_IDENTITY(true, false || (true))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))) && true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bvec4(true)), _GLF_struct_12(bvec2(true), _GLF_struct_11(bvec2(true), bvec4(true), vec3(1.0), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), (true ? _GLF_IDENTITY((subgroup_id), uint(uvec4((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), 1u, 1u, 0u))) : _GLF_FUZZED(num_workgroup)))) ^ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))) ^ 0u)))) ^ 0u) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u)), subgroup_id * subgroup_size)) + _GLF_struct_replacement_7.subgroup_local_id, bvec3(true), mat4(1.0))), mat3(1.0));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), (0u ^ (workgroup_base + subgroup_id * subgroup_size)) | (0u ^ (workgroup_base + subgroup_id * subgroup_size)))) + ((_GLF_struct_replacement_7.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, max(1, 1))) << 0)) >> 0)) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_13._f4._f1.virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
