#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u)));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), clamp(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size), uint(uvec2(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))), 1u))), ~ (subgroup_id * subgroup_size))))), max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (false)))), (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))))))) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, false || (true)))))), ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false))) && true)), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, abs(1.0), cos(0.0), 1.0))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(4584.8108)), bvec2(false, false))), exp(0.0), 1.0, 1.0, 0.0, 1.0, tan(0.0), cos(0.0), cos(0.0), 1.0, 0.0))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true)), true, true, false))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) || false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (false)))), (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0))), (injectionSwitch.x) / 1.0) > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, false || (true)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false))) && true)), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) || false))) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, false || (true)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false))) && true)), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-397.908)), float(0.0), bool(true)))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, false || (true)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false))) && true)), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))), true, false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) || (bool(bvec3(! (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) || false))) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, false || (true)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false, true))))) || false))) && true)), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), true, false)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (true))), ! (! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), ! (! (! ((false) || false))))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.1) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(3.8, 7.7)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))))))).y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(mat4(42.98, 2.1, 3.3, 2.8, 719.916, -237.104, 22.60, -6619.3008, -29.58, 90.21, 330.668, 596.442, -667.782, -1.3, 73.15, -0.0)) : mat4(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), mix(float(_GLF_FUZZED(-5642.9332)), float(float(_GLF_IDENTITY(mat4(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(mat4(42.98, 2.1, 3.3, 2.8, 719.916, -237.104, 22.60, -6619.3008, -29.58, 90.21, 330.668, 596.442, -667.782, -1.3, 73.15, -0.0)) : mat4(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), bool(true))))))), false, true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(464.127)), vec2(_GLF_FUZZED(225.586), (injectionSwitch)[1]), bvec2(false, true))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bool(true))))), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false))))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7.7 / -96.77))), float(injectionSwitch.y), bool(true))))), false, true))))) || false)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false)))), ((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false))))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7.7 / -96.77))), float(injectionSwitch.y), bool(true))))), false, true))))) || false)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false)))), ((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false))))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7.7 / -96.77))), float(injectionSwitch.y), bool(true))))), false, true))))) || false)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false)))), ((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false))))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7.7 / -96.77))), float(injectionSwitch.y), bool(true))))), false, true))))) || false)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false)))), ((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false))))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7.7 / -96.77))), float(injectionSwitch.y), bool(true))))), false, true))))) || false)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false)))), ((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false))))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7.7 / -96.77))), float(injectionSwitch.y), bool(true))))), false, true))))) || false)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false)))), ((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), true, false))))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7.7 / -96.77))), float(injectionSwitch.y), bool(true))))), false, true))))) || false)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false)))), ((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), false), true, true)))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), false))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.0)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), false))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false), bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false), true, false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false), bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false), true, false))), false)))))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false))))), false)))) || false))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) && true), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), false, false, false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true))))))) || false))) && true)) && true)), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))) ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) / ((_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(1u, min(1u, 1u))), (_GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(1u, min(1u, 1u)))) / 1u)) << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, min(3u, 3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u))) / 1u)) / 1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u))) / 1u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u))) / 1u)) / 1u), 0u ^ (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u))) / 1u)) / 1u)))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u))) / 1u)) / 1u))), 1u, 0u, (1u | 1u))), 1u * (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u))) / 1u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u))) / 1u)) / 1u), 0u ^ (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u))) / 1u)) / 1u)))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u))) / 1u)) / 1u))), 1u, 0u, (1u | 1u)))))), false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) : _GLF_IDENTITY(3u, max(3u, 3u))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u))) ^ (0u ^ 0u))))), min(uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u))))), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u)))))))) | (uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(3u, max(3u, 3u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, _GLF_IDENTITY((3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((3u), (_GLF_IDENTITY((3u), (_GLF_IDENTITY((3u), ~ (~ ((3u))))) << 0u)) | (_GLF_IDENTITY((3u), ((3u)) >> 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec3((3u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec3((3u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) - 0u), 0u)))), (uint(_GLF_IDENTITY(uvec3((3u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(36.46)), bool(false))))), 0u), _GLF_IDENTITY((uvec3((3u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec3((3u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), (true ? (uvec3((3u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec3((3u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(69.78)), bool(false))))), _GLF_IDENTITY(0u, max(0u, 0u)))) : _GLF_FUZZED(uvec3(133937u, 49122u, 61864u))))))) | (uint(_GLF_IDENTITY(uvec3((3u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 1u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, (0u) ^ 0u, _GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, _GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, (0u) ^ 0u, (0u) ^ 0u)), (0u) ^ 0u)))), (_GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, (0u) ^ 0u, _GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, _GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, (0u) ^ 0u, (0u) ^ 0u)), (0u) ^ 0u))))) >> 0u)), 1u, 1u), (uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (1u ^ 1u) | (0u)))))), ((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (1u ^ 1u) | (0u))))))) | 0u) ^ 0u), 1u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 1u)))))), _GLF_IDENTITY((uvec3((_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, (3u) | (3u)), _GLF_IDENTITY(3u, uint(uvec4(3u, 1u, 1u, 1u))), 3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec3((3u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec3((3u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec3((3u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), ((uvec3((3u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec3((3u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), 0u))) / uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) + ((uvec3((3u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec3((3u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), (uvec3(_GLF_IDENTITY((3u), ((3u)) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec3((3u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))))))) ^ 0u)), (uint(3u)) - (0u & 2137u))))) : (_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (~ ((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (~ ((~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-67924)))))), ~ (~ (subgroup_local_id + 1)))))))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) ^ 0u), ~ (~ (subgroup_local_id + 1)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1))))))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(~ ((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), 1u, 1u, (0u & 148125u)), (uvec4(~ ((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), 1u, 1u, (0u & 148125u))) * uvec4(1u, 1u, 1u, 1u))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(~ ((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), 1u, 1u, (0u & 148125u)), (uvec4(~ ((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), 1u, 1u, (0u & 148125u))) * uvec4(1u, 1u, 1u, 1u))), 0u ^ (uint(_GLF_IDENTITY(uvec4(~ ((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), 1u, 1u, (0u & 148125u)), (uvec4(~ ((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), 1u, 1u, (0u & 148125u))) * uvec4(1u, 1u, 1u, 1u))))) : _GLF_FUZZED(num_workgroup)))))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (~ ((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (~ ((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (~ ((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))) >> 0u)) + 0u) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u))))))))) % subgroup_size)));
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) << 0), 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-76119) : (1))), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (1), (1)))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max(_GLF_IDENTITY((1), 0 + ((1))), (1)), max((1), (1))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1))), _GLF_IDENTITY((1), 0 | ((1)))))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357))), min(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1))), _GLF_IDENTITY((1), 0 | ((1)))))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1))), _GLF_IDENTITY((1), 0 | ((1)))))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357)))) ^ 0), _GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1))), _GLF_IDENTITY((1), 0 | ((1)))))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357))))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u, ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u) + 0u) : _GLF_FUZZED(subgroup_size)))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (1), (1)))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(49045) : _GLF_IDENTITY((1), (false ? _GLF_FUZZED(9584) : (1))))), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357))))), ~ (~ (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (1), (1)))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, int(int(1)))))))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357)))))))), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (1), (1)))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), (1), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 0, (1 & 1))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 0, (1 & 1))), 1 * (int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 0, (1 & 1)))))) | (int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 0, (1 & 1)))))))))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357)))))), max(clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (1), (1)), 0 + (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (1), (1)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (1), (1))) ^ 0))))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1)))), uint(uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1)))))))) << 0u)) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-26461) : 1))), (1)))))))), (1), (1)))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0)))))))), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (1) + 0)), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357))))), ~ (~ (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (1), (1)))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357)))))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u)) ^ 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(max((1), (1)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))), 1, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))), 1, 0, 0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), _GLF_IDENTITY(max(max((1), (1)), max((1), (1))), max(_GLF_IDENTITY(max(max((1), (1)), max((1), (1))), 0 ^ (max(max((1), (1)), max((1), (1))))), max(max((1), (1)), max((1), (1)))))))))), (1), (1)))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (_GLF_IDENTITY(1, 0 + (1)))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357)))))), clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1)))), max((1), (1)))))))), (1), (1)))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), ((_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) / 1), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (_GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY(max((1), (1)), _GLF_IDENTITY(max(max((1), (1)), max((1), (1))), min(max(max((1), (1)), max((1), (1))), _GLF_IDENTITY(max(max((1), (1)), max((1), (1))), 1 * (max(max((1), (1)), max((1), (1))))))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357)), 0 | ((0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357))))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u, 0u ^ ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u)), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (1), (1)))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), _GLF_IDENTITY((1), ((1)) * 1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357))))), ~ (~ (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (1), (1)))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357)))))))), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_1, 0u ^ (read_1))))) << 0u)) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))))), (1), (1)))) | ((1))), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), max((_GLF_IDENTITY(1, (1) | 0)), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max((1), (1))))), _GLF_IDENTITY(max((1), (1)), max(max((1), (1)), max((1), (1))))))) | 0))), (1), (1)))) | ((1))) : _GLF_FUZZED(12798))) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(50357), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_FUZZED(50357)))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) >> 0)), ((_GLF_IDENTITY(4, (4) >> 0))) ^ 0) | (_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), clamp((4), (4), (4)))))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4) * (1 ^ 0), ((4) * (1 ^ 0)) | ((4) * (_GLF_IDENTITY(1, 1 * (1)) ^ 0)))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
