#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(644.502)))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) / 1.0)) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x = subgroup_id, ~ (~ (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x = subgroup_id)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, (0) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) & -17348))], _GLF_FUZZED(673.197)), vec2(_GLF_FUZZED(-0.5), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], float(mat4x2(((injectionSwitch) * mat2(1.0))[1], 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), bvec2(false, true)))).x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true, false, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).y, mix(float(_GLF_FUZZED(-9.1)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).y), bool(true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! ((false)))), ! (! (! _GLF_IDENTITY((false), ! (! ((false))))))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! (! _GLF_IDENTITY((false), ! (! ((false))))))), _GLF_IDENTITY(false, false || (false)), true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, false, false))))), false))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), false || (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))) || false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, (false) || false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)) && true))))), false || ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)) && true)))))))) || false), true))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, (false) || false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)) && true))))), false || ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))) && true)) && true)))))))) || false), true))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.9) : injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) && (false), ! (! (_GLF_IDENTITY(true && (false), false || (true && (false)))))), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter))), clamp((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter))) >> (0 | 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), clamp((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter))) >> (0 | 0), max(_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), _GLF_IDENTITY(clamp((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter)), min(clamp((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter)), clamp((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter))))) >> (0 | 0), (_GLF_IDENTITY((_injected_loop_counter), clamp((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)), clamp((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)), max((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)), 0, 1, 1), ~ (~ (ivec4((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)), 0, 1, 1)))))))), (_injected_loop_counter))), (_injected_loop_counter))) >> (0 | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), clamp((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), clamp((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter))), clamp(_GLF_IDENTITY((_injected_loop_counter), clamp((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), clamp((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter))), _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), clamp((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter))), (_GLF_IDENTITY((_injected_loop_counter), clamp((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter)))) - 0))))) >> (0 | 0))), _GLF_IDENTITY((_injected_loop_counter), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 + (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-99019))))))), min(_injected_loop_counter, _injected_loop_counter))), _GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter))), (_injected_loop_counter))) >> _GLF_IDENTITY((0 | 0), clamp((0 | 0), (0 | 0), (0 | 0)))))))) != ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, 0 | (3))) - 0), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(1, 1))), 1, _GLF_IDENTITY(1, (1) << 0))), 1, (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), ivec4(0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) ^ 0))), 0, 0) | (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)), (true ? _GLF_IDENTITY(3, max(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (3), ~ (~ (~ (3)))))), (3) ^ 0), 3)) : _GLF_FUZZED(-14975)))), (false ? _GLF_FUZZED(-71443) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) / 1), max(_GLF_IDENTITY(3, (3) ^ 0), _GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, int(ivec2(3, 0))))))), (true ? _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)) : _GLF_FUZZED(_GLF_IDENTITY(-14975, (-14975) - 0))))), ((_GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)), (true ? _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)) : _GLF_FUZZED(-14975))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)), (true ? _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), _GLF_IDENTITY(3, (3) >> (0 | 0)))) : _GLF_FUZZED(-14975))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)), (true ? _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), _GLF_IDENTITY(3, (3) >> (0 | 0)))) : _GLF_FUZZED(-14975))), (_GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)), (true ? _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), _GLF_IDENTITY(3, (3) >> (0 | 0)))) : _GLF_FUZZED(-14975)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)), (true ? _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), _GLF_IDENTITY(3, (3) >> (0 | 0)))) : _GLF_FUZZED(-14975))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)), (true ? _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), _GLF_IDENTITY(3, (3) >> (0 | 0)))) : _GLF_FUZZED(-14975))), min(_GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)), (true ? _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), _GLF_IDENTITY(3, (3) >> (0 | 0)))) : _GLF_FUZZED(-14975))), _GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)), (true ? _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), _GLF_IDENTITY(3, (3) >> (0 | 0)))) : _GLF_FUZZED(-14975)))))))), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)), (true ? _GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)) : _GLF_FUZZED(-14975)))))))))) | (_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) ^ 0), 3)))), (_GLF_IDENTITY(3, 0 | _GLF_IDENTITY((3), ((3)) >> 0))) - 0), 1, 1, (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (5))))))))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(3, (_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, 3)), 0 | (3))) - 0), 1, 1, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(ivec3(5, 0, 1)))), int(5)))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(3, _GLF_IDENTITY((_GLF_IDENTITY(3, 0 | (3))) - 0, (_GLF_IDENTITY((_GLF_IDENTITY(3, 0 | (3))) - 0, int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(3, 0 | (3))) - 0, 0), (ivec2((_GLF_IDENTITY(3, 0 | (3))) - 0, 0)) + ivec2(0, 0))))) | ((_GLF_IDENTITY(3, 0 | (3))) - 0))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ivec2(0, 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ivec2(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ivec2(0, 0)), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ivec2(0, 0))))) ^ ivec2(0, 0)), _GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ivec2(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ivec2(0, 0)), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ivec2(0, 0))))))))) >> 0)) | (1))) >> (0 ^ 0)), 1, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec4(5, 1, 0, _GLF_IDENTITY(1, int(int(1)))), ivec4(0, 0, 0, 0) | (ivec4(5, 1, 0, _GLF_IDENTITY(1, int(int(1))))))))), int(5)))))))) + 0))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), ~ (~ ((int(3))))) / 1)) ^ 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (1 ^ 1))), int(3)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (1 ^ 1))), int(3)), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (1 ^ 1))), int(3)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))) || false))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? injectionSwitch[1] : _GLF_FUZZED(-311.814))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(length(vec4(436.542, -1.8, -4.0, 894.215)))))) * (injectionSwitch)).x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)), false)))), false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true)))), false, false, false)), false || (bool(bvec4(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true)))), false, false, false)))))), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, false, true)), bool(bvec4(bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true)))), false, false, false)), false || (bool(bvec4(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true)))), false, false, false)))))), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, false, true)), bool(bvec4(bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true)))), false, false, false)), false || (bool(bvec4(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true)))), false, false, false)))))), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, false, true)), bool(bvec4(bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), (! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true))), false, true)))), false, false, false)), false || (bool(bvec4(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), true), true)))), false, false, false)))))), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, false, true)), bool(bvec4(bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, false, true)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)))))))))) || false)))))))), true))), true, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))), ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true))), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(-74.19)), bvec2(false, false))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(-74.19)), bvec2(false, false))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(-74.19)), bvec2(false, false))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(-74.19)), bvec2(false, false))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(-74.19)), bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true))))))))).y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.18)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))), bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.18)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.18)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))), bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.18)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))), true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.18)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))), bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.18)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))), true))), true), true, false)))))) && true))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), exp(0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), exp(0.0), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0))))).x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])), float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float((injectionSwitch)[1]), 0.0, 1.0, 1.0)))))), bvec2(false, true))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-694.916, 90.09)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-694.916, 90.09))) * vec2(1.0, 1.0)))))[1], 0.0 + ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-694.916, 90.09), min(vec2(-694.916, 90.09), vec2(-694.916, 90.09)))))))[1])), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-671.691), _GLF_FUZZED(-3.8)), bvec2(false, false))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))[1], max(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-671.691), _GLF_FUZZED(-3.8)), bvec2(false, false))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))[1], _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-671.691), _GLF_FUZZED(-3.8)), bvec2(false, false))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))[1]))), float(mat2(float(_GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1))], ((injectionSwitch)[1]) - 0.0), (injectionSwitch)[1], (injectionSwitch)[1]))), 0.0, 1.0, 1.0)))))), bvec2(false, true))).y), _GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float((injectionSwitch)[1]), 0.0, 1.0, 1.0)))))), bvec2(false, true))).y)), true && (true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float((injectionSwitch)[1]), 0.0, 1.0, 1.0)))))), bvec2(false, true))).y)))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 948.093)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9871.9594)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), true)), false, false))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), true, false)))))), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), true)), false, false))), true, true)), true))))))).y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))), float(_GLF_FUZZED(vec4(-3.9, 7.6, -49.78, 7678.9521).x)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0, 1.0)))))), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float((injectionSwitch)[1]), 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(vec3(8488.5779, -78.76, 569.196).b)), float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float((injectionSwitch)[1]), 0.0, 1.0, 1.0)))), bool(true)))))), bvec2(false, true)))) - sqrt(vec2(0.0, 0.0))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))), float(_GLF_FUZZED(vec4(-3.9, 7.6, -49.78, 7678.9521).x)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0, 1.0)))))), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float((injectionSwitch)[1]), 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(vec3(8488.5779, -78.76, 569.196).b)), float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float((injectionSwitch)[1]), 0.0, 1.0, 1.0)))), bool(true)))))), bvec2(false, true)))) - sqrt(vec2(0.0, 0.0))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))), float(_GLF_FUZZED(vec4(-3.9, 7.6, -49.78, 7678.9521).x)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0, 1.0)))))), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float((injectionSwitch)[1]), 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(vec3(8488.5779, -78.76, 569.196).b)), float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float((injectionSwitch)[1]), 0.0, 1.0, 1.0)))), bool(true)))))), bvec2(false, true)))) - sqrt(vec2(0.0, 0.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))), float(_GLF_FUZZED(vec4(-3.9, 7.6, -49.78, 7678.9521).x)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0, 1.0)))))), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(float(uint(-24309))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float((injectionSwitch)[1]), 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(vec3(8488.5779, -78.76, 569.196).b)), float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(float((injectionSwitch)[1]), 0.0, 1.0, 1.0)))), bool(true)))))), bvec2(false, true)))) - sqrt(vec2(0.0, 0.0))).y)) || false)))))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), vec2(_GLF_FUZZED(_GLF_IDENTITY(float(uint(-24309)), min(_GLF_IDENTITY(float(uint(-24309)), (true ? float(uint(-24309)) : _GLF_FUZZED(-5100.6589))), float(uint(-24309))))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(float((injectionSwitch)[1]), float(mat2(_GLF_IDENTITY(float((injectionSwitch)[1]), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float((injectionSwitch)[1]), 1.0 * (float((injectionSwitch)[1]))), (_GLF_IDENTITY(float((injectionSwitch)[1]), 1.0 * (float((injectionSwitch)[1])))) / 1.0)), float(_GLF_FUZZED((881.401 * 443.521))), bool(false))), 0.0, 1.0, 1.0)))))), bvec2(false, true))).y))))))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(mat4x3(_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(26.35, clamp(26.35, 26.35, 26.35)))), float((injectionSwitch.x)), bool(true))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true))), true, true)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(289.583, -990.899, 2.5, 1.4).y)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) - 0u)) + (workgroup_size), ((_GLF_IDENTITY(0u | 0u, (0u | 0u) - 0u)) + (workgroup_size)) ^ 0u)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true)))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))))))), true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true)))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))))))))) ? GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[0])), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), true && ((! (true)))) || false)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), (! (true)) || false))), false || ((! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true)))) || false))))))))))) ? _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y, (false ? _GLF_FUZZED(workgroup_base) : GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y)) : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[0]))), 1u * (~ ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))))))) ? GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[0])))))))), min(workgroup_base + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), false || (! (true)))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_IDENTITY(false, false || (false)))), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))))))) ? GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[0])), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! ((true))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false)))), (! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))) || false)))), false, false))))) ? GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[0]))), 1u * (~ ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) || false)), ((_GLF_IDENTITY(! (true), (! (true)) || false))) || false), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))))))) ? GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[0])))))))), _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (true)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_IDENTITY(false, bool(bvec3(false, false, true))))), ! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), true && ((! (true)))) || false))))))))) ? GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[0])), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))))))) ? GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[0]))), 1u * (~ ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))))))) ? GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[0])))))))), (workgroup_base + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), ((! (true))) && true) || false)), ! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) || false, bool(bvec2((! (true)) || false, false)))))))))))) ? GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[0])), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), false || (! (_GLF_IDENTITY(! (true), (! (true)) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false)))))))))))))) ? GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[0]))), 1u * (~ ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))))))) ? GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid[0]))))))))) | 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w = virtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w = virtual_gid, (true ? GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w = virtual_gid : _GLF_FUZZED(22519u)))) * 1u);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, true && (true))))), true, true, true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, true && (true))))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, true && (true))))), true, true, true)), false, true, false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, true && (true))))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, true && (true))))), true, true, true)), false, true, false))))), (bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, true && (true))))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, true && (true))))), true, true, true)), false, true, false)))))) && true)) || false)))))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, true, true)))))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, true, true)))))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) ^ (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid)).x * _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z), (~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid) | uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid) | uvec4(0u, 0u, 0u, 0u))))))).z)) / 1u), (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z), (~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid) | uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid) | uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u | (0u)) : _GLF_FUZZED(atomicOr(virtual_gid, subgroup_size))))))))))).z)) / 1u)) - 0u))) + _GLF_IDENTITY(((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y + 1) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z), clamp(((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y + 1) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z), ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y + 1, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y + 1) >> 0u)) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z), _GLF_IDENTITY(((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y + 1) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z), (((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y + 1) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z)) << 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) && true, false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) && true))))) ? (1) : _GLF_FUZZED(98030))))))), 4, _GLF_IDENTITY(64, int(ivec2(64, 1))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w], min(_GLF_IDENTITY(buf[GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w], ~ (~ (buf[GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w]))), buf[GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w])), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, max(4, 4)), 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 1, 1), (_GLF_IDENTITY(ivec4(4, 1, 1, 1), clamp(ivec4(4, 1, 1, 1), ivec4(4, 1, 1, 1), ivec4(4, 1, 1, 1)))) / ivec4(1, 1, 1, 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(4, 1, 1, 1), (ivec4(4, 1, 1, _GLF_IDENTITY(1, 0 ^ (1)))) ^ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(3), ivec4(3)), (true ? ivec4(0, 0, 0, 0) << _GLF_IDENTITY(_GLF_IDENTITY(ivec4(3), ivec4(3)), max(_GLF_IDENTITY(ivec4(3), ivec4(3)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(3), ivec4(3)), max(_GLF_IDENTITY(ivec4(3), ivec4(3)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(3), ivec4(3)), (_GLF_IDENTITY(ivec4(3), ivec4(3))) | ivec4(0, 0, 0, 0)))))) : _GLF_FUZZED(ivec4(1279, -41359, -39763, 49388))))))), ivec4(0, 0, 0, 0) ^ (~ (_GLF_IDENTITY(ivec4(4, 1, 1, 1), (ivec4(4, 1, 1, 1)) ^ (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(3), ivec4(3)))))))))), max(_GLF_IDENTITY(int(ivec4(4, 1, 1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(70443))))), clamp(int(ivec4(4, 1, 1, 1)), int(ivec4(4, 1, 1, 1)), int(ivec4(4, 1, 1, 1)))), int(ivec4(4, 1, 1, 1))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
