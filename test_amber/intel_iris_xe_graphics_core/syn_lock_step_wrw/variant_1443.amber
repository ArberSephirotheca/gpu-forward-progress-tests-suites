#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), 0u ^ (gl_WorkGroupSize.x));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID)))), uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))))))), (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(61812u, 61923u, _GLF_IDENTITY(120419u, max(120419u, _GLF_IDENTITY(_GLF_IDENTITY(120419u, _GLF_IDENTITY(1u * _GLF_IDENTITY((120419u), clamp((120419u), (120419u), (120419u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u * (120419u), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)) * (120419u)) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (120419u), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)) * (120419u)) / 1u))), ~ (~ (~ (~ (_GLF_IDENTITY(1u * (120419u), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)) * (120419u)) / 1u))))))), 1u, 1u, 0u)))), clamp(_GLF_IDENTITY(120419u, _GLF_IDENTITY(1u * _GLF_IDENTITY((120419u), clamp((120419u), (120419u), (120419u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u * (120419u), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)) * (120419u)) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (120419u), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)) * (120419u)) / 1u))), ~ (~ (~ (~ (_GLF_IDENTITY(1u * (120419u), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)) * (120419u)) / 1u))))))), 1u, 1u, 0u)))), _GLF_IDENTITY(120419u, _GLF_IDENTITY(1u * _GLF_IDENTITY((120419u), clamp((120419u), (120419u), (120419u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u * (120419u), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)) * (120419u)) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (120419u), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)) * (120419u)) / 1u))), ~ (~ (~ (~ (_GLF_IDENTITY(1u * (120419u), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)) * (120419u)) / 1u))))))), 1u, 1u, 0u)))), _GLF_IDENTITY(120419u, _GLF_IDENTITY(1u * _GLF_IDENTITY((120419u), clamp((120419u), (120419u), (120419u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u * (120419u), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)) * (120419u)) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u * (120419u), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)) * (120419u)) / 1u))), ~ (~ (~ (~ (_GLF_IDENTITY(1u * (120419u), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)) * (120419u)) / 1u))))))), 1u, 1u, 0u)))))))))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), bool(bvec2(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2x3((injectionSwitch), 1.0, tan(abs(0.0)), 1.0, 0.0)), min(vec2(mat2x3((injectionSwitch), 1.0, tan(abs(0.0)), 1.0, 0.0)), vec2(mat2x3((injectionSwitch), 1.0, tan(abs(0.0)), 1.0, 0.0))))) * mat2(1.0)).y)), true)))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0), transpose(transpose(mat4x2(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))))), 1.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-510.460)), float(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))) / 1.0), 1.0, 0.0, 1.0), transpose(transpose(mat4x2(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-1471.6187)), float(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), bool(true)))), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-1471.6187)), float(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), bool(true))))) - 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(918.059) : 0.0))))))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-1471.6187)), float(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), bool(true)))), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-1471.6187)), float(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), bool(true))))) - 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(918.059) : 0.0))))))) / 1.0), mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-1471.6187)), float(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), bool(true)))), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-1471.6187)), float(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), bool(true))))) - 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(918.059) : 0.0))))))) / 1.0)), float(_GLF_FUZZED(-14.14)), bool(false))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-1471.6187)), float(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), bool(true)))), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-1471.6187)), float(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), bool(true))))) - 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(918.059) : 0.0))))))) / 1.0))), 1.0, 0.0, 1.0)))))), bool(true))))))).y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, tan(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))).y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(641.569), _GLF_FUZZED(-1.4)), vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), bvec2(true, true))), vec2(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, tan(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))).y)))))) || false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / 1u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1), max(false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1), false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u | (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))))) : (subgroup_local_id + 1))))) % subgroup_size);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(1), 4, 64, _GLF_IDENTITY(4, (4) >> 0));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), true))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))) || false))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))), ! (! (false))), true)))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), true && (bool(bvec2((! (false)), false)))))))), true))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), true)))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), ! (! (false))), true))))) && true)))))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), true, true))), true, _GLF_IDENTITY(false, bool(bool(false))), true)))))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) | (0 << _GLF_IDENTITY(int(6), int(6))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) | (0 << _GLF_IDENTITY(int(6), int(6)))))) - 0), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), ((_GLF_IDENTITY(1, (1) | 0))) ^ 0)) << 0) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, (1) | (1))))))), max(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(-26441) : (1) | (1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), 0 | (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))))) | (false ? _GLF_FUZZED(_injected_loop_counter) : max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))), ~ (~ (false ? _GLF_FUZZED(_injected_loop_counter) : max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))))))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))), ~ (~ (false ? _GLF_FUZZED(_injected_loop_counter) : max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))), ~ (~ (false ? _GLF_FUZZED(_injected_loop_counter) : max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))), ~ (~ (false ? _GLF_FUZZED(_injected_loop_counter) : max((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), max(1, _GLF_IDENTITY(1, (1) | (1)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(98212)))), max(1, _GLF_IDENTITY(1, (1) | (1)))), 1)))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | (_GLF_IDENTITY((1) | (1), int(ivec2(_GLF_IDENTITY((1) | (1), ~ (~ ((1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (false ? _GLF_FUZZED(ivec3(54076, -84255, -41482)) : ivec3(1, 0, 0))))))))), 1))))))))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.5) : 0.0)), injectionSwitch.x))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, 0), 1), min(ivec4(ivec3(1, 0, 0), 1), ivec4(ivec3(1, 0, 0), 1))))))), 1))))))), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) * 1) | (1)), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) ^ 0)))) | (1)), _GLF_IDENTITY(1, (1) | (1))))))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) | (1))), int(int(max(1, _GLF_IDENTITY(1, (1) | (1)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) >> 0)) | 0))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0) : _GLF_FUZZED(_injected_loop_counter)))) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(36783, (_GLF_IDENTITY(36783, max(36783, 36783))) * 1)) : 1))) | (1))))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) ^ (0 ^ (0 | 0)))))))), (min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))), 1)), max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (-55805 & 0)), (1) | (1))))), _GLF_IDENTITY(((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * 1))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * 1))))), (((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * 1)))))) | (((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * 1)))))))) * 1) >> 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) | (1))))))) | (min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))))))) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1)), (1) | (1))))), _GLF_IDENTITY(((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0, (_GLF_IDENTITY(((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0, ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), clamp(~ (((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), ~ (((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), ~ (((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0)))))) ^ 0)), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1, 1)), 1)), 0 | (1)), (1) | (1)))))))), 1 * (min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? (1) | (1) : _GLF_FUZZED(82654))))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(1, int(int(1))))))))))) >> 0), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) | (1))), (max(1, _GLF_IDENTITY(1, (1) | (1)))) - 0))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))))))) / (0 ^ 1))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) * 1)) | ((1))) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), clamp(_GLF_IDENTITY((1) | (1), min((1) | (1), (1) | (1))), (1) | (1), (1) | (1)))) / 1))) ^ 0)) >> 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) + _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (0))))))))))) >> 0), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), int(ivec3(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 0))), 0))), _GLF_IDENTITY((1), 0 + ((1))) | (1))), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), (1) | (1))), 0 + (max(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(((_injected_loop_counter))))), int(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), (1) | (1)))))) >> 0))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) + _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (0))))))))))) >> 0), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), int(ivec3(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 0))), 0))), _GLF_IDENTITY((1), 0 + ((1))) | (1))), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), (1) | (1))), 0 + (max(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(((_injected_loop_counter))))), int(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), (1) | (1)))))) >> 0))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) + _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (0))))))))))) >> 0), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), int(ivec3(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 0))), 0))), _GLF_IDENTITY((1), 0 + ((1))) | (1))), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), (1) | (1))), 0 + (max(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(((_injected_loop_counter))))), int(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), (1) | (1)))))) >> 0))))), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) + _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (0))))))))))) >> 0), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), int(ivec3(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 0))), 0))), _GLF_IDENTITY((1), 0 + ((1))) | (1))), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), (1) | (1))), 0 + (max(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(((_injected_loop_counter))))), int(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), (1) | (1)))))) >> 0))))), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) + _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (0))))))))))) >> 0), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), int(ivec3(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 0))), 0))), _GLF_IDENTITY((1), 0 + ((1))) | (1))), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), (1) | (1))), 0 + (max(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(((_injected_loop_counter))))), int(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), (1) | (1)))))) >> 0)))))))) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))) || false) ? _GLF_FUZZED(-87056) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED((_injected_loop_counter --)) : 1))) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), (1) | (1)) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter)))))), _GLF_FUZZED(_injected_loop_counter)))))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (true ? _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1)))) : _GLF_FUZZED(_injected_loop_counter))))))) << 0), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))))), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), int(ivec2((1), 0))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 + (_GLF_IDENTITY(int(7), int(7))))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 + (_GLF_IDENTITY(int(7), int(7))))))))))), 1))), min((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(7), int(7)))), 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) - _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), max((0 << _GLF_IDENTITY(int(7), int(7))), (0 << _GLF_IDENTITY(int(7), int(7)))))), 1))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) | 0))), 1))), max((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(7), int(7)))), 1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), int(ivec3((1), ((0 ^ 1) | int(_GLF_ONE(1.0, injectionSwitch.y))), 1))), (1))) / 1), _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(7), int(7)))), 1))))))))) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))))))), (min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), int(ivec2((1), 0))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 + (_GLF_IDENTITY(int(7), int(7))))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 + (_GLF_IDENTITY(int(7), int(7))))))))))), 1))), min((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(7), int(7)))), 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) - _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), max((0 << _GLF_IDENTITY(int(7), int(7))), (0 << _GLF_IDENTITY(int(7), int(7)))))), 1))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) | 0))), 1))), max((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(7), int(7)))), 1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), int(ivec3((1), ((0 ^ 1) | int(_GLF_ONE(1.0, injectionSwitch.y))), 1))), (1))) / 1), _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(7), int(7)))), 1))))))))) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))))))) >> 0)), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | (1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1) : _GLF_FUZZED(_injected_loop_counter))) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1)))) | 0))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), min((1) | (1), (1) | (1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) ^ 0, max((_GLF_IDENTITY(1, (1) | (1))) ^ 0, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) | (1))), (max(1, _GLF_IDENTITY(1, (1) | (1)))) >> 0)))) >> 0), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) ^ 0))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) >> 0)))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), int(ivec3((1), 1, (0 << _GLF_IDENTITY(int(8), int(8)))))) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, 0 | (1)), 1), (false ? _GLF_FUZZED(-13842) : max(_GLF_IDENTITY(1, 0 | (1)), 1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | (1)), (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), min((1), (1))))))) ^ 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), clamp((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ~ (~ ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) - 0)))))))))))))), min(min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1)))), max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 ^ (0)) | (1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) ^ 0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), 0 | (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), 1))) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), ~ (~ ((1))))), _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) ^ 0, _GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(1, (1) | (1))) ^ 0, 1)), int(ivec2(int(ivec2((_GLF_IDENTITY(1, (1) | (1))) ^ 0, 1)), 1))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 | (_GLF_IDENTITY(1, (1) | (1))))) ^ 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) ^ 0)) / 1))))), clamp((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ~ (~ ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) / 1))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) ^ _GLF_IDENTITY(0, (0) >> 0))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, max(1, 1)))), (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) ^ 0))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ~ (~ ((1))))), (_GLF_IDENTITY(1, (1) | (1))) ^ 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), clamp((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (false ? _GLF_FUZZED(8905) : (1))))))), ~ (~ ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))))))))))))))))) >> 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ~ (~ ((1))))) | ((1))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(72.94)), float(float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), bool(true)))))))) >> 0))), _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), max((1), (1)))) >> 0), int(ivec3((1), (0 | 1), 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) >> 0), _GLF_IDENTITY((_GLF_IDENTITY((1), ((1)) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) >> 0), clamp(_GLF_IDENTITY((1), ((1)) >> 0), _GLF_IDENTITY((1), ((1)) >> 0), _GLF_IDENTITY((1), ((1)) >> 0))), _GLF_IDENTITY((1), ((1)) >> 0)))), ((_GLF_IDENTITY((1), ((1)) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) >> 0), clamp(_GLF_IDENTITY((1), ((1)) >> 0), _GLF_IDENTITY((1), ((1)) >> 0), _GLF_IDENTITY((1), ((1)) >> 0))), _GLF_IDENTITY((1), ((1)) >> 0))))) ^ 0)))), ((1)) | 0))) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) << 0), (1) | (1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) + 0), 1))), ~ (~ (1)))))))), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-10078), (_GLF_FUZZED(-10078)) | 0))))), 0))), (1) | (1)))))) >> 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, min(1, 1)), 1)), (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * 1)))), ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * 1)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) * 1))) + 0))))), ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))) * 1)) | 0))))))))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (_GLF_IDENTITY(! (_injected_loop_counter > 0), true && (! (_injected_loop_counter > 0)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)), false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)), false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)))))))))), true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), bool(bvec4(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), true, false, false))), (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))) || false)))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (_GLF_IDENTITY(! (_injected_loop_counter > 0), true && (! (_injected_loop_counter > 0)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)))))))), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)), _GLF_IDENTITY(false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0))), false || (false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))), _GLF_IDENTITY(int(ivec4(min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))), 0, 1, 1)), (int(ivec4(min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))), 0, 1, 1))) | (int(ivec4(min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))), 0, 1, 1)))))) > 0)))))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)), false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))), (min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) << 0)) > 0)))))))))), true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)), int(_GLF_IDENTITY(ivec2(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)), 0), clamp(ivec2(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)), 0), ivec2(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)), 0), ivec2(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)), 0))))))) > 0))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), bool(bvec4(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), true, false, false))), _GLF_IDENTITY((false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))), (_GLF_IDENTITY((false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))), ((false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))))) || false)) && true) || false))))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, false)))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false, false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false, false, true))))))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))) || false), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))))), (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))) || false)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec3(_injected_loop_counter, 0, 1)), int(ivec4(int(ivec3(_injected_loop_counter, 0, 1)), 0, 1, 1)))) > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > 0)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))), false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) + 0)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(7), int(7))))) / 1)), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), false || (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))), true && ((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))))))), (false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), false || ((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), false || ((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), false || ((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), false || ((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), false)))))), true, false)))) || false)), bool(bvec3(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), ((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))) && true)) || false)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) || false))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), true)))) || false)))) && true)))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0)))), false, true, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))))))))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) | 0))) > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))) || false)))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))))))))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) | 0))) > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))))))))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) | 0))) > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))) || false)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) | 0))) > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) | 0))) > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))))), (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))) || _GLF_IDENTITY(false, ! (! (false))))), true && ((_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) | 0))) > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) | 0))) > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))))), (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))) || _GLF_IDENTITY(false, ! (! (false)))))))))) && true))))))) && true))))))), (bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(0), int(0)))) | _GLF_IDENTITY((_injected_loop_counter), (false ? _GLF_FUZZED(_injected_loop_counter) : (_injected_loop_counter)))), _injected_loop_counter))) << 0) > 0), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, true && _GLF_IDENTITY((_injected_loop_counter > 0), ((_injected_loop_counter > 0)) || false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))) > 0))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), 1), ivec2(_GLF_IDENTITY(ivec3(ivec2(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), 1), 0), (ivec3(ivec2(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), 1), 0)) | (ivec3(ivec2(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), 1), 0))))))) > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), (false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-51837)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0))), bool(bvec3(_injected_loop_counter > 0, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), true)))))))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-51837)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0))), bool(bvec3(_injected_loop_counter > 0, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), true)))))))))))))), true, true))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))), true && ((! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))))) || false))))))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_injected_loop_counter), ~ (~ ((_injected_loop_counter))))), int(ivec2(~ (_GLF_IDENTITY((_injected_loop_counter), ~ (~ ((_injected_loop_counter))))), 0)))))) > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec3(_injected_loop_counter > 0, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > 0))))))))))))))) || false)))))))) || false))))))) && true))))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), 0.0 + (float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (_GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))), _GLF_IDENTITY(bool(bvec3((! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))), false, false)), (bool(bvec3((! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))), false, _GLF_IDENTITY(false, (false) && true)))) && true)))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))))), _GLF_IDENTITY(((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0))), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0))), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0))), vec2(vec3(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0))), 0.0)))))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
              {
               do
                {
                 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 64, 4);
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
