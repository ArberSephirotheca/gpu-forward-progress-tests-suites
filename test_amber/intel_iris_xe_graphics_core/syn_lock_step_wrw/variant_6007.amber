#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-54.06, -0.8)) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))), true))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
              break;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))) && true)))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                {
                }
               else
                {
                 do
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != ((1 ^ 1) ^ 1)); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       return;
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(349.567))) > injectionSwitch.y)))))))
                  break;
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false))) || false))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     return;
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      break;
                    }
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     return;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))))
            {
            }
           else
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-67.06)), vec2(_GLF_FUZZED((7.5 + 36.69)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0), vec2(mat2x4(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0), 1.0, 0.0, exp(0.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0), mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(90.02)), vec2((vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0))[0], (vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1))) + 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << (0 << _GLF_IDENTITY(int(2), int(2)))) > (0 | 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = ((1 | 1) | _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       else
        {
        }
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.5), _GLF_FUZZED(4.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))))
    return;
  }
 else
  {
  }
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
    }
   else
    {
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true), true && (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)))))) && true)))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (! (! ((injectionSwitch.x < injectionSwitch.y)))) && true)))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false, true)))))) || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             return;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                return;
              }
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1)) - 0))
      {
       do
        {
         GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.x = subgroup_id;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(196.609, 4.7, -1.4)) : vec3(injectionSwitch, 1.0))))).y))))
          return;
        }
       else
        {
        }
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true)))))), bool(bool(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true))))))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), (true) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), (true) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), (true) && true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), (true) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), (true) && true))), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, (true) && true)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
    }
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_injected_loop_counter != 0, true))), ! (! (_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_injected_loop_counter != 0, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))))))))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) * int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.z = subgroup_size;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch.x : _GLF_FUZZED(-751.894))) > injectionSwitch.y))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(asinh(injectionSwitch))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(vec3(8164.2424, -2301.4989, -4.0).t)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) / 1.0)))), bool(true)))))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) | 1)); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec2(int(0), 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) << 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + (0 >> _GLF_IDENTITY(int(0), int(0))))) * (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | 1)), 1 * (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + (0 >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((- _injected_loop_counter)))) + (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + (0 >> _GLF_IDENTITY(int(0), int(0))))))) * (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | 1)))) < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
        {
         GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y = _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(vec2(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)))))).y)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) ^ 1)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          break;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u, max(0u, 0u))), max(0u + (_GLF_IDENTITY(0u, max(0u, 0u))), 0u + (_GLF_IDENTITY(0u, max(0u, 0u)))))), 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec2(81332u, 187184u).stt) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(gl_NumWorkGroups)))) >> uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))))))))), uvec3(0u, 0u, 0u) | (uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((uvec3(gl_NumWorkGroups)), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY((uvec3(gl_NumWorkGroups)), ((uvec3(gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))))))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z = workgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z = workgroup_size) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), 0u | (_GLF_IDENTITY(uint(7u), uint(7u))))));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) ^ 0) > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec4(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), false, true)))))); _injected_loop_counter --)
    {
     return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) ? _GLF_IDENTITY(int(2), (int(2)) >> 0) : _GLF_FUZZED(74708))))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))) || false), (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(22.15) : injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), bool(bvec4(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true, true, false)))))))))
                break;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
       else
        {
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)) + (injectionSwitch)), injectionSwitch)).y))));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (~ (~ (1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, max(0, 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) >> 0)), int(6)))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
    {
     GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.w = workgroup_id;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 uint workgroup_base = GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.w;
 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y = workgroup_base;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 & -34337) << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true)))))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ! (_GLF_IDENTITY(! ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (! ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)))))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))) && true))) && true))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-23.60), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.4)), bvec2(true, false))).x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-23.60), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.4)), bvec2(true, false))).x, 1.0, 0.0, 0.0, 1.0, abs(0.0)), mat3x2(mat4x2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-23.60), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.4)), bvec2(true, false))).x, 1.0, 0.0, 0.0, 1.0, abs(0.0))))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(_GLF_IDENTITY(bool((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (bool((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(120.275) : injectionSwitch.x))))) - 0.0) > injectionSwitch.y)))) || false)) && true))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x)))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x)))) > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-373.449) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false))), mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.3)), bool(false)))), bool(true))))), injectionSwitch.x)))) > injectionSwitch.y)), true, true, false)))) && true)))), false, false, true)))))
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(cos(0.0) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(cos(0.0) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(cos(0.0) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), mix(float(cos(0.0) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), float(_GLF_FUZZED(-723.983)), bool(false))))))))))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) || false); _injected_loop_counter --)
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec4(0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)))) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true));
     if(_GLF_DEAD(false))
      continue;
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y, max(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y) | 0u))) + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) << (uvec4(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 0u)), (uint(uvec3(0u, 0u, 0u))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))), (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u)))) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u))), clamp((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) << (uvec4(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) * 1u))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec4(8u), max(uvec4(8u), uvec4(8u))), uvec4(8u))), (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) << (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u))), (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) << (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), max(clamp(0u, 0u, 0u), clamp(0u, 0u, 0u))))) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u)))))).x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.z + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.y;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x = virtual_gid;
 uint next_virtual_gid = GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id.z + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id), ((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id)) - uvec4(0u, 0u, 0u, 0u))), ((_GLF_IDENTITY((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id), ((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id)) - uvec4(0u, 0u, 0u, 0u)))) << uvec4(0u, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, uint(uint(0u))))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 0.0, 1.0), (_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))[0], injectionSwitch[1])).x), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0), (false ? _GLF_FUZZED(vec4(-67.15, -7.2, -99.05, _GLF_IDENTITY(3.6, clamp(3.6, 3.6, _GLF_IDENTITY(3.6, clamp(3.6, 3.6, 3.6)))))) : vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 0.0, 1.0)))) / vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)))), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 0.0, 1.0, 0.0)), (transpose(mat2(0.0, 0.0, 1.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), float(float(injectionSwitch.x))))))), min(~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), 1.0, 0.0, 0.0, 1.0))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), 1.0, 0.0, 0.0, 1.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x))), 1.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-256.900) : 0.0)), 1.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), 1.0, 0.0, 0.0, 1.0))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), 1.0, 0.0, 0.0, 1.0))).x)))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (true ? _GLF_IDENTITY(0.0, (0.0) * 1.0) : _GLF_FUZZED(-27.84))), injectionSwitch.x), 1.0, 0.0, 0.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), 1.0, 0.0, 0.0, 1.0))).x)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(960.653)), bool(_GLF_IDENTITY(false, (false) || false))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.9)), float(injectionSwitch.x), bool(true)))))))))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(960.653)), bool(_GLF_IDENTITY(false, (false) || false))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.9)), float(injectionSwitch.x), bool(true))))))))))) * uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-238.836)), vec2(_GLF_FUZZED(-9003.0474), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(701.658), _GLF_FUZZED(6.8)), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-238.836)), vec2(_GLF_FUZZED(-9003.0474), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))))[0], _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-238.836)), vec2(_GLF_FUZZED(-9003.0474), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))))[1], (false ? _GLF_FUZZED(79.85) : (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-238.836)), vec2(_GLF_FUZZED(-9003.0474), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))))[1]))), bvec2(true, true)))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.9)), float(injectionSwitch.x), bool(true))))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), tan(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.9), min(_GLF_FUZZED(7.9), _GLF_FUZZED(7.9)))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))))))))), ((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), tan(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.9), min(_GLF_FUZZED(7.9), _GLF_FUZZED(7.9)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) || false)))))))))) | uvec4(0u, 0u, 0u, 0u)))), clamp((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), tan(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.9), min(_GLF_FUZZED(7.9), _GLF_FUZZED(7.9)))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))))))))), ((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), tan(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.9), min(_GLF_FUZZED(7.9), _GLF_FUZZED(7.9)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) || false)))))))))) | uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), tan(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.9), min(_GLF_FUZZED(7.9), _GLF_FUZZED(7.9)))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))))))))), ((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), tan(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.9), min(_GLF_FUZZED(7.9), _GLF_FUZZED(7.9)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) || false)))))))))) | uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), tan(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.9), min(_GLF_FUZZED(7.9), _GLF_FUZZED(7.9)))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))))))))), ((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), tan(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-517.578), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.9), min(_GLF_FUZZED(7.9), _GLF_FUZZED(7.9)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) || false)))))))))) | uvec4(0u, 0u, 0u, 0u)))))))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8477.0807)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(float(110138u)), min(_GLF_IDENTITY(_GLF_FUZZED(float(110138u)), clamp(_GLF_FUZZED(float(110138u)), _GLF_FUZZED(float(110138u)), _GLF_FUZZED(float(110138u)))), _GLF_IDENTITY(_GLF_FUZZED(float(110138u)), max(_GLF_FUZZED(float(110138u)), _GLF_IDENTITY(_GLF_FUZZED(float(110138u)), (_GLF_FUZZED(float(110138u))) / 1.0)))))), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), clamp(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), 1.0, 1.0)), 0.0))), injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(7.0)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), 1.0, 1.0)), 0.0))), injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0, clamp((_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0))), 1.0, 1.0)), 0.0))), injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), float(mat3((1.0), 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), (1.0))) / 1.0)) + 0.0), 1.0, 1.0)), 0.0))), injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x)))))) ^ uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 1.0, 0.0))), injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x)))) - uvec4(0u, 0u, 0u, 0u))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(8633u, 31865u, 155603u, 99828u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(8633u, _GLF_IDENTITY(31865u, (31865u) << 0u), 155603u, 99828u)), min(_GLF_FUZZED(uvec4(8633u, 31865u, 155603u, 99828u)), _GLF_FUZZED(uvec4(8633u, 31865u, 155603u, 99828u))))) | (_GLF_FUZZED(uvec4(8633u, _GLF_IDENTITY(31865u, min(31865u, 31865u)), 155603u, 99828u))))), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(4u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(4u))), uvec4(4u))) ^ ((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-0.9)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), injectionSwitch.x))), clamp(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.7))), 1.0)), 0.0))), injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(62.38)), float(1.0), bool(true))), 0.0))), injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x)))) - uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))), clamp(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.1))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), (1.0) / 1.0)) + 0.0), 1.0, 1.0)), 0.0))), injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x)))) - uvec4(0u, 0u, 0u, 0u))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), clamp(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-49.85))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), injectionSwitch.x))), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), 1.0, 1.0)), 0.0))), injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(6.3))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))))))), injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x)))) - uvec4(0u, 0u, 0u, 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))))), injectionSwitch.x))), clamp(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), 1.0, 1.0)), 0.0))), injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x)))) << uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), (false ? _GLF_FUZZED(uvec4(97811u, 181517u, 182382u, 74158u)) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), clamp(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))))))))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), injectionSwitch.x)))) - uvec4(0u, 0u, 0u, 0u))))))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(8633u, 31865u, 155603u, 99828u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(8633u, 31865u, 155603u, 99828u)), min(_GLF_FUZZED(uvec4(8633u, _GLF_IDENTITY(31865u, (31865u) | (31865u)), 155603u, 99828u)), _GLF_FUZZED(uvec4(8633u, 31865u, 155603u, 99828u))))) | (_GLF_FUZZED(uvec4(8633u, 31865u, 155603u, 99828u)))))))))))).y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id)))), min(~ ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id)))), ~ ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id)))))))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id))), uvec4(0u, 0u, 0u, 0u) ^ ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id))))))), uvec4(0u, 0u, 0u, 0u) | ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_12subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_id))))) - uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << 0u), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(num_workgroup), (true ? 0u : _GLF_FUZZED(num_workgroup)) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))))))).z);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         return;
        }
      }
     else
      {
      }
     return;
    }
  }
 else
  {
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(num_workgroup))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : next_virtual_gid) | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : next_virtual_gid))))], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec4(64, 0, 0, 1)))) / 1), 4);
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) ^ uvec3(0u, 0u, 0u))), uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) ^ uvec3(0u, 0u, 0u)))), (((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) ^ uvec3(0u, 0u, 0u))))) | (((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) ^ uvec3(0u, 0u, 0u)))))) >> uvec3(0u, 0u, 0u))))).x], _GLF_IDENTITY(4, 0 | (4)), 64, _GLF_IDENTITY(0, (0) | 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(1.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y)), (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), true, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(_injected_loop_counter))), int(0))), min(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(79402) : _GLF_IDENTITY(0, max(0, 0))))), int(0))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), 0 ^ (_GLF_IDENTITY(int(0), int(0))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(6), int(6))) | 0), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(6), int(6))) | 0), true && (_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(6), int(6))) | 0))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(6), int(6))) | 0), true && (_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(6), int(6))) | 0))), false, true))))))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                   atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, 0 | (64)), 4);
                  }
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       break;
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), max(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), min(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(0, 1 * (0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.0)), vec2(_GLF_FUZZED(-7592.3443), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), float(mat4x2(float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mix(vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), float(mat4x2(float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[0], _GLF_FUZZED(1367.8712), _GLF_FUZZED(41.68), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), float(mat4x2(float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[3]), vec4(_GLF_FUZZED(550.533), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), float(mat4x2(float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[1], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), float(mat4x2(float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12572))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[2], _GLF_FUZZED(6.9)), bvec4(false, true, true, false)))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, true && _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)), false || ((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, true && _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)), false || ((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter > 0, true && _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)), false || ((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)))))), (bool(_GLF_IDENTITY(_injected_loop_counter > 0, true && _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)), false || ((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false))))))) || false)))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) > 0, (_injected_loop_counter > 0) || false))))) || _GLF_IDENTITY(false, ! (! (false)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bool(! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bool(! (false)))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bool(! (false))))))) && true)) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false)))))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
         return;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
          {
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-492.684)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.71)), float(injectionSwitch.x), bool(true)))), bool(true))) > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        break;
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
