#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 mat2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 mat3 _f1;
 uvec3 _f2;
 bvec4 _f3;
 mat3x2 _f4;
 mat3x2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 vec4 _f1;
 mat3x2 _f2;
 mat3 _f3;
 mat4 _f4;
 vec3 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 uint virtual_gid;
 _GLF_struct_3 _f1;
 int _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.3, 53.05)))), injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, length(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7117.8845) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) : _GLF_FUZZED((vec4(-58.07, -3734.5739, 250.275, -3.2) , 65.69))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-2.1) : float(mat2x4(injectionSwitch.x, length(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true))) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))))), ((_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))))) >> 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && true)) && true), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && true)) && true), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false, false, true))))))))), _GLF_IDENTITY(false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false, false, true)))))))), (_GLF_IDENTITY(false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false, false, true)))))))), (false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false, false, true))))))))) && true)) && true)), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && true)) && true), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && true)) && true), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), false, false, false))))))), false, false, _GLF_IDENTITY(true, false || (true))))))))))), _GLF_IDENTITY(false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false, false, true)))))))), (_GLF_IDENTITY(false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true, false, false))), false, false, true)))))))), (false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false, false, true))))))))) && true)) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec3((false), false, true))), false, true, false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((false), ((false)) && true), true, false)), (bool(bvec3(! _GLF_IDENTITY((false), ((false)) && true), true, false))) || false)))), (injectionSwitch.x > injectionSwitch.y))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((false), ((false)) && true), true, false)), (bool(bvec3(! _GLF_IDENTITY((false), ((false)) && true), true, false))) || false)))), (injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((false), ((false)) && true), true, false)), (bool(bvec3(! _GLF_IDENTITY((false), ((false)) && true), true, false))) || false)))), (injectionSwitch.x > injectionSwitch.y))))) || false)))))) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * workgroup_id;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_2(_GLF_struct_0(bvec2(true), vec4(1.0), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) + 0.0)), mat3(1.0), mat4(1.0), vec3(1.0), uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u))), _GLF_struct_1(mat4x3(1.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) / cos(0.0))), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), uvec3(1u), bvec4(true), mat3x2(1.0), mat3x2(1.0), bvec2(true)), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u)) | 0u)) >> 0u)) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) - 0u) | 0u)) >> _GLF_IDENTITY(0u, max(0u, 0u)))) / 1u) - 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) + 0u)))), (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) + 0u))))) / 1u)), ((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u))))), (~ (_GLF_IDENTITY(1u, (1u) + 0u))) << 0u))))) << 0u) / 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))))) ^ 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup))), min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup))))) + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))))) ^ 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)))) >> 0u), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup))))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))))) ^ 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY((true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)), (false ? _GLF_FUZZED(subgroup_id) : (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup))))), min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup))))) + subgroup_local_id)), _GLF_struct_3(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))), mat4(1.0)), 1);
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(subgroup_id, 1u, 0u))))))) * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), ((subgroup_local_id + 1)) | 0u)) / 1u), ~ (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))))))))) - 0u) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_4.virtual_gid], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) | (0 << _GLF_IDENTITY(int(4), int(4)))))) | (0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) ^ 0)), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), min(int(8), int(8)))), ((_GLF_IDENTITY(int(8), min(int(8), int(8))))) * 1) | (int(8))))))), (true ? 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(8)) : _GLF_FUZZED(_GLF_IDENTITY(95617, ~ (~ (95617)))))) : _GLF_FUZZED(-77704)))), clamp((1) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))), _GLF_IDENTITY((1) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), max(0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) * (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)))), 0 << _GLF_IDENTITY(int(8), int(8))))), ((1) ^ (0 << _GLF_IDENTITY(int(8), int(8)))) << 0), _GLF_IDENTITY((1) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, int(ivec2(8, (0 >> _GLF_IDENTITY(int(8), int(8))))))), int(8))), _GLF_IDENTITY(0 | (_GLF_IDENTITY((1) ^ (0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((1) ^ (0 << _GLF_IDENTITY(int(8), int(8))))))), int(int(0 | ((1) ^ (0 << _GLF_IDENTITY(int(8), int(8))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) ^ 0)), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), min(int(8), int(8)))), ((_GLF_IDENTITY(int(8), min(int(8), int(8))))) * 1) | (int(8))))))), (true ? 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(8)) : _GLF_FUZZED(_GLF_IDENTITY(95617, ~ (~ (95617)))))) : _GLF_FUZZED(-77704)))), clamp((1) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))), _GLF_IDENTITY((1) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), max(0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) * (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)))), 0 << _GLF_IDENTITY(int(8), int(8))))), ((1) ^ (0 << _GLF_IDENTITY(int(8), int(8)))) << 0), _GLF_IDENTITY((1) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, int(ivec2(8, (0 >> _GLF_IDENTITY(int(8), int(8))))))), int(8))), _GLF_IDENTITY(0 | (_GLF_IDENTITY((1) ^ (0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((1) ^ (0 << _GLF_IDENTITY(int(8), int(8))))))), int(int(0 | ((1) ^ (0 << _GLF_IDENTITY(int(8), int(8))))))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) ^ 0)), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), min(int(8), int(8)))), ((_GLF_IDENTITY(int(8), min(int(8), int(8))))) * 1) | (int(8))))))), (true ? 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(8)) : _GLF_FUZZED(_GLF_IDENTITY(95617, ~ (~ (95617)))))) : _GLF_FUZZED(-77704)))), clamp((1) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))), _GLF_IDENTITY((1) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), max(0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) * (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)))), 0 << _GLF_IDENTITY(int(8), int(8))))), ((1) ^ (0 << _GLF_IDENTITY(int(8), int(8)))) << 0), _GLF_IDENTITY((1) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, int(ivec2(8, (0 >> _GLF_IDENTITY(int(8), int(8))))))), int(8))), _GLF_IDENTITY(0 | (_GLF_IDENTITY((1) ^ (0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((1) ^ (0 << _GLF_IDENTITY(int(8), int(8))))))), int(int(0 | ((1) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) ^ 0)), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), min(int(8), int(8)))), ((_GLF_IDENTITY(int(8), min(int(8), int(8))))) * 1) | (int(8))))))), (true ? 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(8)) : _GLF_FUZZED(_GLF_IDENTITY(95617, ~ (~ (95617)))))) : _GLF_FUZZED(-77704)))), clamp((1) ^ (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8)))))), _GLF_IDENTITY((1) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), max(0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) * (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)))), 0 << _GLF_IDENTITY(int(8), int(8))))), ((1) ^ (0 << _GLF_IDENTITY(int(8), int(8)))) << 0), _GLF_IDENTITY((1) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, int(ivec2(8, (0 >> _GLF_IDENTITY(int(8), int(8))))))), int(8))), _GLF_IDENTITY(0 | (_GLF_IDENTITY((1) ^ (0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((1) ^ (0 << _GLF_IDENTITY(int(8), int(8))))))), int(int(0 | ((1) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))))))))))) + 0)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(30.40)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))).y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(30.40)), bool(_GLF_IDENTITY(false, (false) && true)))) > injectionSwitch.y))) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))) && true)))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && true))))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true))) || (_GLF_IDENTITY(false, false || (false)))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bvec4(! (bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true, true)))) || false))))))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && true))))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true))) || (_GLF_IDENTITY(false, false || (false)))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bvec4(! (bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true, true)))) || false))))))), true, true, true))) || _GLF_IDENTITY(false, ! (! (false))))))), false, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (false)))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))))) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))))) && true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))))) && true))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))))) && true))))), false, false))))))))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), true))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(false, true, true, true))), bool(bvec2(bool(bool(bvec4(false, true, true, true))), true)))))), false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))) || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))))), false, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))))), false, false), true))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(false, true, true, true))), bool(bvec2(bool(bool(bvec4(false, true, true, true))), true)))))), false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true, false, false))) || (_GLF_IDENTITY(false, false || (false)))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))))), false, false), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false)))))), false || (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))))))))))))), false, false), true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false)))))), false || (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))))))))))))), false, false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false)))))), false || (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))))))))))))), false, false), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false)))))), false || (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))))))))))))), false, false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false)))))), false || (! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))))))))))))), false, false), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false)), (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, false, false)))))))))) || (_GLF_IDENTITY(false, false || (false)))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))) || false)) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), false || (false || (false))), (false || (false)) || false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))))))))))))) || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (false)))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), false || (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) || false))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))), false, false), true))))))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 0.0) + (normalize(vec3(1.0, 1.0, 1.0))))))))) > injectionSwitch.y))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))) || false)), true))))), false || (false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(6.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(918.153) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.5)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(555.279)), bool(false)))))) + (normalize(vec3(1.0, 1.0, 1.0))))))))) > injectionSwitch.y))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)), true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
