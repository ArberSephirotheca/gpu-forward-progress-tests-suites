#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 ivec2 _f0;
 float _f1;
 bvec3 _f2;
 mat4x2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 _GLF_struct_4 _f1;
 int _f2;
 float _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_6 {
 uint _f0;
 float _f1;
 uint workgroup_id;
 _GLF_struct_5 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 mat3x4 _f1;
 bvec2 _f2;
 mat4x3 _f3;
 bool _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 ivec2 _f1;
 _GLF_struct_0 _f2;
 mat4 _f3;
 uvec4 _f4;
 _GLF_struct_1 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), true, false, true)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true))))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), (bool(bvec3(_GLF_DEAD(false), false, true))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true)))) || false)) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(52.52, -7.5)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), float(_GLF_FUZZED(-350.511)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.5), _GLF_FUZZED(-6.0)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))), bool(bvec4(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), bool(bool((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), bool(bool((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))))))), true, false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)) + (injectionSwitch)).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), true && (bool(bvec4(_GLF_DEAD(false), true, true, true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(bvec4(true), ivec2(1), _GLF_struct_0(mat3x4(1.0), gl_SubgroupSize), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)), uvec4(1u), _GLF_struct_1(_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))), mat3x4(1.0), bvec2(true), mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.5)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 1.0)), 1.0, 0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0, 0.0, 1.0))), 1.0))), true, ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1))), 0))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, 0 | (0)))), 0 ^ ((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, 0 | (0)))))), ((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0)) | (0))))) ^ 0) | (1)))))), mat2x4(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), mix(float(_GLF_FUZZED(-506.428)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))) && true)) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * mat2(1.0)))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(122.268))), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.5) : injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.5) : injectionSwitch.x)) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec3(bvec2(false, false), true))), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false)), bool(bool(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) || false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), false, true), true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, true))))) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y) || false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(bool(bool(false)), false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(bool(bool(false)), false)), false || (_GLF_IDENTITY(bool(bvec2(bool(bool(false)), false)), (bool(bvec2(bool(bool(false)), false))) && true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bvec2(bool(bool(false)), false)), false || (_GLF_IDENTITY(bool(bvec2(bool(bool(false)), false)), (bool(bvec2(bool(bool(false)), false))) && true)))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)))
          barrier();
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(57.04) : 1.0)), 1.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((9.4 - -7.9))), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(386.785))), _GLF_FUZZED(_GLF_IDENTITY(865.912, max(865.912, 865.912)))), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false))).y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.1, 9.6)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-8.3, 3441.8052, -2424.9336, 2.3).a), _GLF_FUZZED(5.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y, mix(float(_GLF_FUZZED(3126.2159)), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.1, 9.6)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-8.3, 3441.8052, -2424.9336, 2.3).a), _GLF_FUZZED(5.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true))), bool(bvec3(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true))), bool(bvec3(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) || false))), true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) || false))), true))))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) || false))), true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) || false)))) || false))), true))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(vec2(0.0, 9.0)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.5) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1176.0117, 36.46)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) || _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) || false))), ((_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true)))) || false))))) && (false))) && true), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! _GLF_IDENTITY((bool(bvec2(false, false))), ((bool(bvec2(false, false)))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y) && true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true, true))), bool(bvec3(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true, true))), false, false)))), (bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true, true))), bool(bvec3(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true, true))), false, false))))) && true))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(1u, 1.0, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))), (false ? _GLF_FUZZED((subgroup_id / uvec3(172078u, 39710u, 7361u))) : _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)))), ~ (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), max(~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID)))))), (~ (gl_WorkGroupID)) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (false ? _GLF_FUZZED(uvec3(21379u, 120792u, 98956u)) : uvec3(5u)))))))))).x, _GLF_struct_5(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.3)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(-5099.5724), ((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[1], ((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED(4502.6052)), vec4(((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_FUZZED(-391.331), _GLF_FUZZED(-577.535), ((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[3]), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true)))) / vec4(1.0, 1.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0)))), max(min(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(-5099.5724), ((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[1], ((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED(4502.6052)), vec4(((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_FUZZED(-391.331), _GLF_FUZZED(-577.535), ((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[3]), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true)))) / vec4(1.0, 1.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0)))), min(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(-5099.5724), ((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[1], ((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED(4502.6052)), vec4(((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_FUZZED(-391.331), _GLF_FUZZED(-577.535), ((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[3]), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true)))) / vec4(1.0, 1.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0)))))))), ((_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.0) : 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.3)))))), min(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))) / vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0), (_GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(-5099.5724), ((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[1], (_GLF_IDENTITY((vec4(1.0)), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(1.0)))) / vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED(4502.6052)), vec4(((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_FUZZED(-391.331), _GLF_FUZZED(-577.535), (_GLF_IDENTITY((vec4(1.0)), min(_GLF_IDENTITY((vec4(1.0)), vec4(0.0, 0.0, 0.0, 0.0) + ((vec4(1.0)))), (vec4(1.0)))) / _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))[3]), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true)))) / vec4(1.0, 1.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0))))))) - sin(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) / vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(_GLF_IDENTITY(mat4(vec4(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.6)), float(1.0), bool(true))), clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0)), clamp(1.0, 1.0, 1.0))) / sqrt(1.0)), 0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(true ? mat4(vec4(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.5) : 0.0)), 0.0)), 0.0)), 1.0, 0.0) : _GLF_FUZZED(mat4(81.87, -9.2, -9.0, 5.8, 89.65, -5.0, _GLF_IDENTITY(-7646.1185, min(-7646.1185, -7646.1185)), -4285.2026, 75.82, -4065.2539, -767.538, 9.8, _GLF_IDENTITY(-9437.8682, 0.0 + (-9437.8682)), 317.316, -917.468, -3854.2397)), (true ? mat4(vec4(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.5) : 0.0)), 0.0)), 0.0)), 1.0, 0.0) : _GLF_FUZZED(mat4(81.87, -9.2, -9.0, 5.8, 89.65, -5.0, _GLF_IDENTITY(-7646.1185, min(-7646.1185, -7646.1185)), -4285.2026, 75.82, -4065.2539, -767.538, 9.8, _GLF_IDENTITY(-9437.8682, 0.0 + (-9437.8682)), 317.316, -917.468, -3854.2397))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? true ? mat4(vec4(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5459.7741) : 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(refract(-995.855, 8.7, 3.0))))) : _GLF_FUZZED(mat4(81.87, -9.2, -9.0, _GLF_IDENTITY(_GLF_IDENTITY(5.8, (5.8) / 1.0), (_GLF_IDENTITY(5.8, (5.8) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(54.40) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))))) + 0.0), 89.65, -5.0, -7646.1185, -4285.2026, 75.82, -4065.2539, -767.538, 9.8, -9437.8682, 317.316, -917.468, -3854.2397)) : _GLF_FUZZED(mat4(72.97, 4459.8081, _GLF_IDENTITY(372.796, min(372.796, 372.796)), -6.4, -4.4, 0.3, 58.33, 9.8, 87.09, -5.4, 9.2, -22.83, -26.70, _GLF_IDENTITY(7.0, (7.0) / 1.0), 2736.8844, _GLF_IDENTITY(38.52, float(vec2(38.52, 0.0))))))))))), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)))), _GLF_struct_4(ivec2(1), 1.0, bvec3(true), mat4x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(floor(8018.5327)) : _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, abs(0.0), 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9946.3013) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0)))))), uvec2(1u)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-69205, 48583, _GLF_IDENTITY(-40281, (-40281) / 1))[_GLF_IDENTITY(1, min(1, 1))]), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec3(-69205, 48583, -40281)[1]), (_GLF_FUZZED(ivec3(-69205, 48583, -40281)[1])) | (_GLF_IDENTITY(_GLF_FUZZED(ivec3(-69205, 48583, _GLF_IDENTITY(-40281, int(_GLF_ONE(1.0, injectionSwitch.y)) * (-40281)))[1]), 0 ^ (_GLF_FUZZED(ivec3(-69205, 48583, -40281)[1]))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec3(-69205, 48583, -40281)[1]), (_GLF_FUZZED(ivec3(-69205, 48583, -40281)[1])) | (_GLF_IDENTITY(_GLF_FUZZED(ivec3(-69205, 48583, _GLF_IDENTITY(-40281, int(_GLF_ONE(1.0, injectionSwitch.y)) * (-40281)))[1]), 0 ^ (_GLF_FUZZED(ivec3(-69205, 48583, -40281)[1]))))), 0 + (_GLF_IDENTITY(_GLF_FUZZED(ivec3(-69205, 48583, -40281)[1]), (_GLF_FUZZED(ivec3(-69205, 48583, -40281)[1])) | (_GLF_IDENTITY(_GLF_FUZZED(ivec3(-69205, 48583, _GLF_IDENTITY(-40281, int(_GLF_ONE(1.0, injectionSwitch.y)) * (-40281)))[1]), 0 ^ (_GLF_FUZZED(ivec3(-69205, 48583, -40281)[1]))))))), 0)))) - 0) : 1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(27835, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), injectionSwitch.x)), 1, 0), (_GLF_IDENTITY(ivec4(27835, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), injectionSwitch.x)), 1, 0), max(_GLF_IDENTITY(ivec4(27835, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), injectionSwitch.x)), 1, 0), (false ? _GLF_FUZZED(ivec4(34328, 68026, -6417, 11374)) : ivec4(27835, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), injectionSwitch.x)), 1, 0))), ivec4(27835, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), injectionSwitch.x)), 1, 0)))) >> ivec4(0, 0, 0, 0))), (int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))) + (0 & -245))), 27835, 27835))) : 1), ((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), 27835, 27835))), (_GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), 27835, 27835)))) >> 0) : 1)) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), _GLF_IDENTITY(27835, clamp(27835, _GLF_IDENTITY(27835, (27835) | (27835)), 27835)), 27835))) : 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, _GLF_IDENTITY(int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)), (int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))) + (0 & -245))), 27835, 27835))) : 1), ((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), 27835, 27835))), (_GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), 27835, 27835)))) >> 0) : 1)) | ((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), 27835, 27835))), max(_GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), 27835, 27835))), _GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), 27835, 27835))))) : 1)))), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, _GLF_IDENTITY(int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)), (int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))) + (0 & _GLF_IDENTITY(-245, min(-245, -245))))), 27835, 27835))) : 1), ((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(27835, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (27835)), clamp(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), 27835, 27835))), (_GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), (_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))) << 0), 27835, 27835)))) >> 0) : 1)) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) | (int(1)))), (int(_GLF_IDENTITY(int(1), (int(1)) | (int(1))))) >> (0 << _GLF_IDENTITY(int(7), int(7))))), 0))), 27835, 27835))) : 1))))))), _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, _GLF_IDENTITY(int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)), (int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))) + (0 & _GLF_IDENTITY(-245, 0 | (_GLF_IDENTITY(-245, (-245) / 1)))))), 27835, 27835))) : 1), ((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(_GLF_IDENTITY(27835, 0 + (27835)), int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), 27835, 27835))), (_GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), _GLF_IDENTITY(27835, clamp(27835, _GLF_IDENTITY(27835, (27835) | (27835)), 27835)), 27835)))) >> 0) : 1)) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(27835, clamp(_GLF_IDENTITY(27835, int(ivec4(27835, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))), 27835, 27835))) : 1)))))), _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - 0)) | ((1))) | 0), 1)))), 1.0, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), clamp(uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(1u, min(1u, 1u)))))))), mat3(1.0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), (clamp(workgroup_size, workgroup_size, workgroup_size)) | 0u)))) * _GLF_struct_replacement_6.workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_struct_replacement_3._f0._f2.subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u);
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u)), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_struct_replacement_3._f0._f2.subgroup_size) / (((0u ^ 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY(_GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((1), ~ (~ ((1)))))), int(ivec2((1), 0))))) | (1)))), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY(_GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((1), ~ (~ ((1)))))), int(ivec2((1), 0))))) | (1))))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY(_GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((1), ~ (~ ((1)))))), int(ivec2((1), 0))))) | (1))))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u)), ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(ivec3(-23478, -49206, -59793)[0]))), 0))) + (1)), 1))))), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0)))), 0))))) | (1))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), 0u | _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) - 0u)) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (1u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | (1))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))) | ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))), ~ (~ ((subgroup_local_id + 1)))) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))), _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | (_GLF_IDENTITY(1, min(1, 1))))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY((1) / 1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1) / 1))), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), int(int((1)))), (1))), 0))))) | (1))))), ((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY((1) / 1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1) / 1))), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), int(int((1)))), (1))), 0))))) | (1)))))) | ((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY((1) / 1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1) / 1))), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), int(int((1)))), (1))), 0))))) | (1))))))) % _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f2.subgroup_size, min(_GLF_struct_replacement_3._f0._f2.subgroup_size, _GLF_struct_replacement_3._f0._f2.subgroup_size)), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size, ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) << 0u)) % _GLF_struct_replacement_3._f0._f2.subgroup_size)))) / 1u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | _GLF_IDENTITY((1), ((1)) | 0))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | _GLF_IDENTITY((1), ((1)) | 0))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | _GLF_IDENTITY((1), ((1)) | 0))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | _GLF_IDENTITY((1), ((1)) | 0))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | _GLF_IDENTITY((1), ((1)) | 0))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | _GLF_IDENTITY((1), ((1)) | 0))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | _GLF_IDENTITY((1), ((1)) | 0))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u)) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), int(ivec2((1), 0))))) | _GLF_IDENTITY((1), ((1)) | 0))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u)))))))))))), _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) | (subgroup_local_id + 1))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), ((0 >> _GLF_IDENTITY(int(7), int(7)))) | ((0 >> _GLF_IDENTITY(int(7), int(7))))))))), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))), max((subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), (false ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_local_id))))) + 1), max((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), 1 * (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))))), 1), min(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), 1 * (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))))), 1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), 1 * (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))))), 1)))))), (subgroup_local_id + 1))))), 1u, 0u))) % _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f2.subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f2.subgroup_size, (_GLF_struct_replacement_3._f0._f2.subgroup_size) - 0u), (1u | (1u & 1u)), 0u)))) / 1u))), 0u | (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) | (subgroup_local_id + 1))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), ((0 >> _GLF_IDENTITY(int(7), int(7)))) | ((0 >> _GLF_IDENTITY(int(7), int(7))))))))), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))), max((subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), (false ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_local_id))))) + 1), max((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), 1 * (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))))), 1), min(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), 1 * (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))))), 1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), 1 * (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))))), 1)))))), (subgroup_local_id + 1))))), 1u, 0u))) % _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f2.subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f2.subgroup_size, (_GLF_struct_replacement_3._f0._f2.subgroup_size) - 0u), (1u | (1u & 1u)), 0u)))) / 1u))), 0u ^ ((workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) | (subgroup_local_id + 1))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), ((0 >> _GLF_IDENTITY(int(7), int(7)))) | ((0 >> _GLF_IDENTITY(int(7), int(7))))))))), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))), max((subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), (false ? _GLF_FUZZED(virtual_gid) : (~ (subgroup_local_id))))) + 1), max((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), 1 * (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))))), 1), min(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), 1 * (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))))), 1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), 1 * (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))))), 1)))))), (subgroup_local_id + 1))))), 1u, 0u))) % _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f2.subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f2.subgroup_size, (_GLF_struct_replacement_3._f0._f2.subgroup_size) - 0u), (1u | (1u & 1u)), 0u)))) / 1u))))))) ^ 0u), workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))) % _GLF_struct_replacement_3._f0._f2.subgroup_size, max((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size))) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size) ^ 0u), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size) >> (0u & _GLF_IDENTITY(30856u, ~ (~ (30856u))))), workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size), (clamp(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size) ^ 0u), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size) >> (0u & _GLF_IDENTITY(30856u, ~ (~ (30856u))))), workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size)) | (clamp(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size) ^ 0u), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size) >> (0u & _GLF_IDENTITY(30856u, ~ (~ (30856u))))), workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size)))), (workgroup_base + subgroup_id * _GLF_struct_replacement_3._f0._f2.subgroup_size) * 1u) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_3._f0._f2.subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, 1u)), uint(uvec3(uint(uvec3(subgroup_local_id, 1u, 1u)), 0u, 1u)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(atomicOr(num_workgroup, subgroup_local_id)) : subgroup_local_id, 0u | (false ? _GLF_FUZZED(atomicOr(num_workgroup, subgroup_local_id)) : subgroup_local_id)))), subgroup_local_id)) + 1), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u ^ (uint(uvec2(0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) | (_GLF_IDENTITY(1u, (1u) * 1u))), 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (uvec4((subgroup_local_id + 1), 0u, 1u, 1u)), (uvec4(0u, 0u, 0u, 0u) | (uvec4((subgroup_local_id + 1), 0u, 1u, 1u))) * uvec4(1u, 1u, 1u, 1u))))), 1u), max(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1), 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4((subgroup_local_id + 1), 0u, 1u, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | (1u))))))))), 1u), uvec2(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id))) ^ 0u) + 1), 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u | (1u)))))))), 0u + (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id))) ^ 0u) + 1), 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u | (1u))))))))))), 1u))))) % _GLF_struct_replacement_3._f0._f2.subgroup_size) / 1u))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) || false))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true)))))), (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), true)))), (! (true)) && true)), ((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ! (! ((! (true)) && true)))))) || false))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))))) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0))) > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, max(4, 4))), (~ (_GLF_IDENTITY(4, max(4, 4)))) | (~ (_GLF_IDENTITY(4, max(4, 4))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, 0 | (1))), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
