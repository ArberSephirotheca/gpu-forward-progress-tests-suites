#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat2 _f0;
 uvec4 _f1;
 mat2x4 _f2;
 mat4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 mat3 _f1;
 mat3 _f2;
 bvec3 _f3;
 float _f4;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 int _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_4 {
 uint subgroup_size;
 mat3 _f0;
 uint _f1;
 _GLF_struct_3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_SubgroupSize, _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0))), (mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(285.786)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (true ? (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) : _GLF_FUZZED(-9.5))) / 1.0))) + mat3(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3702.6781)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - sqrt(0.0)))), 1u, _GLF_struct_3(_GLF_struct_0(mat2x3(1.0), mat3(1.0)), _GLF_struct_1(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.0) : 1.0))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(5.9) : 1.0, max(false ? _GLF_FUZZED(5.9) : 1.0, false ? _GLF_FUZZED(5.9) : 1.0)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(5.9) : 1.0, max(false ? _GLF_FUZZED(5.9) : 1.0, false ? _GLF_FUZZED(5.9) : 1.0)), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(false ? _GLF_FUZZED(5.9) : 1.0, max(false ? _GLF_FUZZED(5.9) : 1.0, false ? _GLF_FUZZED(5.9) : 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3x4(_GLF_IDENTITY(false ? _GLF_FUZZED(5.9) : 1.0, max(false ? _GLF_FUZZED(5.9) : 1.0, false ? _GLF_FUZZED(5.9) : 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 0.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(5.9) : 1.0, max(false ? _GLF_FUZZED(5.9) : 1.0, false ? _GLF_FUZZED(5.9) : 1.0)), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(false ? _GLF_FUZZED(5.9) : 1.0, max(false ? _GLF_FUZZED(5.9) : 1.0, false ? _GLF_FUZZED(5.9) : 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3x4(_GLF_IDENTITY(false ? _GLF_FUZZED(5.9) : 1.0, max(false ? _GLF_FUZZED(5.9) : 1.0, false ? _GLF_FUZZED(5.9) : 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_FUZZED(47.11)), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (float(min(1.0, 1.0))) / 1.0)), (false ? _GLF_FUZZED(radians(-42.75)) : float(_GLF_IDENTITY(float(min(1.0, 1.0)), (float(min(1.0, 1.0))) / 1.0))))))), mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-695.006) : _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-93.60) : 1.0)), 1.0)), max(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-695.006) : 1.0, _GLF_IDENTITY(false ? _GLF_FUZZED(-695.006) : 1.0, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) && true) ? _GLF_FUZZED(-695.006) : 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(11.20), (_GLF_FUZZED(11.20)) + 0.0) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))))))), mix(float((false ? _GLF_FUZZED(-695.006) : 1.0)), float(_GLF_FUZZED(-84.89)), bool(false))))), float(_GLF_FUZZED(-6.9)), bool(false)))), mat3(1.0), bvec3(true), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-402.728) : _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_struct_2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), mat2(1.0) * (transpose(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(6.4, 29.81, 4043.3537, 7129.8874)) : _GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))), mat2(mat3x4(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0))))))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(6.4, 29.81, 4043.3537, 7129.8874)) : _GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))), mat2(mat3x4(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0))))))), (false ? _GLF_FUZZED(mat2(6.4, 29.81, 4043.3537, 7129.8874)) : _GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))), mat2(mat3x4(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-5.3, -5.9, 3989.5236, -5.3, 9.2, 1.3, 4.4, -4.0, 8.2, 7.1, -3.0, 7748.1857, 1466.2403, -70.62, -7.5, 9.5)) : mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(6.4, 29.81, 4043.3537, 7129.8874)) : _GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))), mat2(mat3x4(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0))))))), (false ? _GLF_FUZZED(mat2(6.4, 29.81, 4043.3537, 7129.8874)) : _GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))), mat2(mat3x4(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0)))))), mat2(mat2x3(mat2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(6.4, 29.81, 4043.3537, 7129.8874)) : _GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))), mat2(mat3x4(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0))))))), (false ? _GLF_FUZZED(mat2(6.4, 29.81, 4043.3537, 7129.8874)) : _GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))), mat2(mat3x4(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-5.3, -5.9, 3989.5236, -5.3, 9.2, 1.3, 4.4, -4.0, 8.2, 7.1, -3.0, 7748.1857, 1466.2403, -70.62, -7.5, 9.5)) : mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(6.4, 29.81, 4043.3537, 7129.8874)) : _GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))), mat2(mat3x4(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0))))))), (false ? _GLF_FUZZED(mat2(6.4, 29.81, 4043.3537, 7129.8874)) : _GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))), mat2(mat3x4(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-27.77) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0)))))))))))))), uvec4(1u), mat2x4(1.0), mat4(1.0), vec2(1.0)), 1, _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(1, 1, 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(1, 1, 1))), (~ (_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1)))) / ivec3(1, 1, 1)))) / ivec3(1, 1, 1))))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), (_GLF_IDENTITY(0u, (0u) | (0u)) >> _GLF_IDENTITY(uint(6u), uint(6u))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) << 0u)))), ~ (~ (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), ((_GLF_IDENTITY(0u, (0u) << 0u))) - 0u)))))))), max(uint(_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) << 0u)))), ~ (~ (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), ((_GLF_IDENTITY(0u, (0u) << 0u))) - 0u)))))))), uint(_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) << 0u)))), ~ (~ (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), ((_GLF_IDENTITY(0u, (0u) << 0u))) - 0u)))))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) << 0u)))), ~ (~ (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), ((_GLF_IDENTITY(0u, (0u) << 0u))) - 0u)))))))), max(uint(_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, (0u) << 0u))), (~ (~ (_GLF_IDENTITY(0u, (0u) << 0u)))) | (~ (~ (_GLF_IDENTITY(0u, (0u) << 0u)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), ((_GLF_IDENTITY(0u, (0u) << 0u))) - 0u))))), max(~ (~ (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), ((_GLF_IDENTITY(0u, (0u) << 0u))) - 0u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), ((_GLF_IDENTITY(0u, (0u) << 0u))) - 0u))))), (~ (~ (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), ((_GLF_IDENTITY(0u, (0u) << 0u))) - 0u)))))) | 0u)))))), uint(_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) << 0u)))), ~ (~ (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), ((_GLF_IDENTITY(0u, (0u) << 0u))) - 0u)))))))))))))), (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) ^ 0u)))) - 0u), workgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(workgroup_size, workgroup_size), ~ _GLF_IDENTITY((~ (min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size))), ((~ (min(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (min(workgroup_size, _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))), ((0u | 0u) << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (~ (min(workgroup_size, workgroup_size))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (min(workgroup_size, workgroup_size)), clamp(~ (min(workgroup_size, workgroup_size)), ~ (min(workgroup_size, workgroup_size)), ~ (min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u | (_GLF_FUZZED(subgroup_id)))) << 0u) : (~ (min(workgroup_size, workgroup_size))))), (~ (min(workgroup_size, workgroup_size)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), ((_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) * 1u)) << 0u)) - _GLF_IDENTITY(0u, 0u + (0u)))) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base))))), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base))))), 1u)), (uint(uvec2(uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base))))), 1u))) | (uint(uvec2(uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base))))), 1u))))))))), (true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_local_id))), (~ (_GLF_IDENTITY(uint(uint(subgroup_local_id)), (true ? uint(uint(subgroup_local_id)) : _GLF_FUZZED(workgroup_base))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(uint(subgroup_local_id)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(uint(subgroup_local_id)), 1u * (uint(uint(subgroup_local_id)))))))), ((~ (_GLF_IDENTITY(uint(uint(subgroup_local_id)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(uint(subgroup_local_id)), 1u * (uint(uint(subgroup_local_id))))))))) ^ 0u)))), 0u + (_GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_local_id))), (~ (uint(uint(subgroup_local_id)))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(uint(subgroup_local_id)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(uint(subgroup_local_id)), 1u * (uint(uint(subgroup_local_id)))))))), ((~ (_GLF_IDENTITY(uint(uint(subgroup_local_id)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(uint(subgroup_local_id)), 1u * (uint(uint(subgroup_local_id))))))))) ^ 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uvec3(_GLF_FUZZED(subgroup_local_id), 1u, 0u))))))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), max((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) - 0u)), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), _GLF_FUZZED(subgroup_local_id)))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))))) / 1u))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(0u | (_GLF_FUZZED(subgroup_local_id)), (true ? 0u | (_GLF_FUZZED(subgroup_local_id)) : _GLF_FUZZED(workgroup_id))))))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) * 1u), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) >> 0u)), max((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) - 0u)), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) + 0u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id)))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id)))))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), max((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) - 0u)), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) + 0u), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) + 0u)) | ((subgroup_id))) - 0u, (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) + 0u)) | ((subgroup_id))) - 0u) * 1u))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u)))))))) * _GLF_struct_replacement_4.subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4.subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_4.subgroup_size)), (~ (~ (_GLF_struct_replacement_4.subgroup_size))) >> 0u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_4.subgroup_size)), (~ (~ (_GLF_struct_replacement_4.subgroup_size))) >> 0u))), 0u + ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_4.subgroup_size)), (~ (~ (_GLF_struct_replacement_4.subgroup_size))) >> 0u)))))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_4.subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_struct_replacement_4.subgroup_size)) / 1u);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) - 0))), _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), min(~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))))))), min(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), min(4, _GLF_IDENTITY(4, (4) - 0))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))))), clamp(4, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, ((4) - 0) >> (0 >> _GLF_IDENTITY(int(5), int(5))))))), _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), min(clamp(4, 4, 4), clamp(4, 4, 4)))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), clamp((~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))))) - 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), ((4)) >> 0)), _GLF_IDENTITY((4) + 0, 0 | (_GLF_IDENTITY((4) + 0, ((4) + 0) - 0)))), (false ? _GLF_FUZZED(97296) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), ((4)) >> 0)), _GLF_IDENTITY((4) + 0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY((4) + 0, (_GLF_IDENTITY((4) + 0, ((4) + 0) ^ 0)) | (_GLF_IDENTITY((4) + 0, ((4) + 0) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), ((4) + 0) - 0))))))) * 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-65545) : _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4)), (false ? _GLF_FUZZED(-5179) : _GLF_IDENTITY(4, clamp(4, 4, 4)))))), _GLF_IDENTITY(4, (4) - 0))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), ((4)) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY((4) + 0, ((4) + 0) | (_GLF_IDENTITY((4) + 0, (_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))) + 0, ((4) + 0) / 1)) | 0))), _GLF_IDENTITY(0, ~ (~ (0))) | ((4) + 0)))) * 1) : _GLF_FUZZED(-24458))));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).y)), true)))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y) * 1.0)), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), true && (bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(77.33)), vec2(_GLF_FUZZED(0.2), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y, true)))) || false)))), bvec3(bvec4(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false)))), false)))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-7.7) : injectionSwitch.y, max(false ? _GLF_FUZZED(-7.7) : injectionSwitch.y, false ? _GLF_FUZZED(-7.7) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.7) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-7.7), clamp(_GLF_FUZZED(_GLF_IDENTITY(-7.7, min(-7.7, _GLF_IDENTITY(-7.7, max(-7.7, _GLF_IDENTITY(-7.7, min(-7.7, -7.7))))))), _GLF_FUZZED(-7.7), _GLF_FUZZED(-7.7))) : injectionSwitch.y)), (false ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.7) : injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(float(42314u))), bool(false))) / 1.0))))), false), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).y), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))), _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))))))), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))))))))) && true)))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), false)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.1) : injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) && true)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), false))))))))))) || false), (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(6.2)), bool(false))))), false), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), (! ((false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), (! ((false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), (! ((false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))))))), (injectionSwitch.x > injectionSwitch.y)), false)))))))) || false)) || false))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, ! (! (true))))), true, true, false)))))), false)))))))) || false, true && (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_FUZZED(278.617)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x), bool(true)))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - length(vec3(0.0, 0.0, 0.0))))), false)))))))) || false, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), false), false)))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), true))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || _GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), false)))))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), false))))))))), true && (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), false), false))), false))))))))))))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), false)))))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! (! (! (! (_GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false))))))))), true && (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))))) || false)) || false))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), false, false, false))), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), false, false, false))))))), true))), false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8368.7456)), float(injectionSwitch.y), bool(true))))), true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true))))), false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68243) : 0))], injectionSwitch[1]), clamp(vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)), (false ? _GLF_FUZZED(68243) : 0))], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68243) : 0))], injectionSwitch[1]), (vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68243) : 0))], injectionSwitch[1])) + vec2(0.0, 0.0)), vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68243) : 0))], injectionSwitch[1])))).y)), false)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true))))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true))))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true))))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))), false)))), true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, true), true)))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, (false) && true))))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true))))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true))))), ! (! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(false, (false) && true))))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true)))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true))))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true))))), ! (! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), false || (true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true))))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true)))))))), true, false))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68243) : 0))], injectionSwitch[1]), clamp(vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68243) : 0))], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68243) : 0))], injectionSwitch[1]), (vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68243) : 0))], injectionSwitch[1])) + vec2(0.0, 0.0)), vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68243) : 0))], injectionSwitch[1])))).y)), false)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1766.2930))))) > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))), ! (! (! (false))))))) && true))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true))), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, true), true)))))), false)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-5225.5907), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(5793.9379), (vec2(_GLF_FUZZED(-5225.5907), (injectionSwitch)[1]))[1]), vec2((vec2(_GLF_FUZZED(-5225.5907), (injectionSwitch)[1]))[0], _GLF_FUZZED(-74.23)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-0.1)), bvec2(true, false)))) - vec2(0.0, 0.0)).y)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), bool(bvec4(! (false || (false)), true, false, false))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true))))))), false, true))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true))))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.9)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true)), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))))))), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false), false, _GLF_IDENTITY(true, ! (! (true))), false))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))) || false)), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) && true))))), false, true))), false))))), false, true), false)), true))), false))))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) | (0)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) | (0))) ^ 0)), min((0), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) / 1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) / 1))), ~ (~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) / 1)))))))))))), 1))), (_GLF_IDENTITY(_GLF_IDENTITY((0), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) | (0)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) | (0))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY((0), int(ivec2(_GLF_IDENTITY((0), (_GLF_IDENTITY((0), ~ (~ ((0))))) / 1), 0))), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) | 0)), _GLF_IDENTITY(0, (0) + 0)))))), 1))), (_GLF_IDENTITY(_GLF_IDENTITY((0), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), (1 * (0)) - 0))) | (0))), min((0), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) | 0)), _GLF_IDENTITY(0, (0) + 0)))))), 1))), (_GLF_IDENTITY((0), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1 ^ 1) ^ (1)) * (0))) | (0))), min((0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), min(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), max(_GLF_IDENTITY(0, _GLF_IDENTITY((0), min(_GLF_IDENTITY((0), max(_GLF_IDENTITY((0), ((0)) | 0), (0))), (0))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), min(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), clamp(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (0) + 0)))))) ^ (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) - 0))))))))))), 1)))) << (0 ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY((0), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) | (0))), min((0), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(findMSB(42474)))), (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(findMSB(42474))))) ^ 0)) / 1))) | 0)), _GLF_IDENTITY(0, (0) + 0)))))), 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 + (0)), 0)), max(0, 0))) / 1)), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) | (0))), min((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec2(0, 0)))))), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), _GLF_IDENTITY((min(0, 0)) | 0, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) / 1)) | ((min(0, 0)) | 0)))), _GLF_IDENTITY(0, (0) + 0)))))), 1))), _GLF_IDENTITY((0), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) | (0))), min((0), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), _GLF_IDENTITY((min(0, 0)), ((min(0, 0))) | ((min(0, 0)))) | 0)), _GLF_IDENTITY(0, (0) + 0)))))), 1))), _GLF_IDENTITY((0), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) | (0))), min((0), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) | 0)), _GLF_IDENTITY(0, (0) + 0)))))), 1)))))))) / (1 | 0))), (~ (~ (0))) - 0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))), _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), _GLF_IDENTITY(false || ((false)), ! (! (false || (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))), bool(bvec3((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true) || false))))) && true)))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), true, false)))), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), true))))))))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1))), 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
