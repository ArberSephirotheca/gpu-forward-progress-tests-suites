#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, abs(1.0))), (vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, abs(1.0)))) / vec2(1.0, 1.0))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-88.64), _GLF_FUZZED(-8.5)), bvec2(false, false))).x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) || false) && true))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))).x, (gl_WorkGroupSize.x) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false)))), true))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false)))), true))), true, false))))))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))), false)), false, _GLF_IDENTITY(false, (false) || false))), (bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false)), false, false))) && true))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true))))), false), true)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uvec4(_GLF_FUZZED(subgroup_local_id), 1u, 1u, 0u))) : workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id, (workgroup_size * workgroup_id) >> 0u)) >> 0u), (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, (1u | (0u ^ 1u)), 1u)))) | 0u)) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) ^ 0u, ((workgroup_id) ^ 0u) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), min(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, 0u + (0u)))), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))), clamp((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))))))) << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))), ((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), clamp((0u) | (0u), (0u) | (0u), (0u) | (0u)))))) << _GLF_IDENTITY(uint(2u), uint(2u)))) ^ 0u)) / 1u))) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_id, workgroup_id), _GLF_IDENTITY(uint(uvec2(max(workgroup_id, workgroup_id), 1u)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_size) : uint(uvec2(max(workgroup_id, workgroup_id), 1u))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(max(workgroup_id, workgroup_id), _GLF_IDENTITY(uint(uvec2(max(workgroup_id, workgroup_id), 1u)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_size) : uint(uvec2(max(workgroup_id, workgroup_id), 1u)))))))))))), uint(uint(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), clamp(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), clamp(_GLF_IDENTITY(max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), clamp(_GLF_IDENTITY(max(workgroup_id, workgroup_id), 0u | (max(workgroup_id, workgroup_id))), _GLF_IDENTITY(max(workgroup_id, workgroup_id), _GLF_IDENTITY((max(workgroup_id, workgroup_id)) << 0u, ((max(workgroup_id, workgroup_id)) << 0u) - 0u)), max(workgroup_id, workgroup_id))), max(workgroup_id, workgroup_id), max(workgroup_id, workgroup_id)))))), min(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), clamp(_GLF_IDENTITY(max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), clamp(_GLF_IDENTITY(max(workgroup_id, workgroup_id), 0u | (max(workgroup_id, workgroup_id))), _GLF_IDENTITY(max(workgroup_id, workgroup_id), (max(workgroup_id, workgroup_id)) << 0u), max(workgroup_id, workgroup_id))), max(workgroup_id, workgroup_id), max(workgroup_id, workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), clamp(_GLF_IDENTITY(max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), clamp(_GLF_IDENTITY(max(workgroup_id, workgroup_id), 0u | (max(workgroup_id, workgroup_id))), _GLF_IDENTITY(max(workgroup_id, workgroup_id), (max(workgroup_id, workgroup_id)) << 0u), max(workgroup_id, workgroup_id))), max(workgroup_id, workgroup_id), max(workgroup_id, workgroup_id)))))), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), clamp(_GLF_IDENTITY(max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), clamp(_GLF_IDENTITY(max(workgroup_id, workgroup_id), 0u | (max(workgroup_id, workgroup_id))), _GLF_IDENTITY(max(workgroup_id, workgroup_id), (max(workgroup_id, workgroup_id)) << 0u), max(workgroup_id, workgroup_id))), max(workgroup_id, workgroup_id), max(workgroup_id, workgroup_id))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) ? _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))) - 0u), workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))) : _GLF_FUZZED(_GLF_IDENTITY(138781u, clamp(138781u, 138781u, 138781u))))), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) ? _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))) - 0u), workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))) : _GLF_FUZZED(_GLF_IDENTITY(138781u, clamp(138781u, 138781u, 138781u)))))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), clamp(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), (_GLF_IDENTITY(max(workgroup_id, workgroup_id), uint(uvec3(max(workgroup_id, workgroup_id), 0u, 1u)))) | (26455u & (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), clamp(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), (_GLF_IDENTITY(max(workgroup_id, workgroup_id), uint(uvec3(max(workgroup_id, workgroup_id), 0u, 1u)))) | (26455u & (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), uint(uvec3(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), clamp(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), (_GLF_IDENTITY(max(workgroup_id, workgroup_id), uint(uvec3(max(workgroup_id, workgroup_id), 0u, 1u)))) | (26455u & (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (~ (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), clamp(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), (_GLF_IDENTITY(max(workgroup_id, workgroup_id), uint(uvec3(max(workgroup_id, workgroup_id), 0u, 1u)))) | (26455u & (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), uint(uvec3(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), clamp(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), (_GLF_IDENTITY(max(workgroup_id, workgroup_id), uint(uvec3(max(workgroup_id, workgroup_id), 0u, 1u)))) | (26455u & (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) >> 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (true ? _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) : _GLF_FUZZED(usubBorrow(subgroup_size, subgroup_local_id, workgroup_size)))), (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))) / 1u) * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), 0u | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_size * workgroup_id))))))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u))), max(clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u))), clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))))) << _GLF_IDENTITY(uint(2u), uint(2u))), clamp((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u))), max(clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u))), min(clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u))), (clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) ^ 0u)))))) << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), clamp(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, 0u + (0u))))) - 0u)) / 1u), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u))), ((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u)))) ^ 0u)) / 1u))) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), _GLF_IDENTITY(uint(uvec2(max(workgroup_id, workgroup_id), 1u)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / 1u)) + 0u) : uint(uvec2(max(workgroup_id, workgroup_id), 1u)))))))))), uint(uint(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), clamp(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), clamp(_GLF_IDENTITY(max(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) << 0u), _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), clamp(_GLF_IDENTITY(max(workgroup_id, workgroup_id), 0u | (max(workgroup_id, workgroup_id))), _GLF_IDENTITY(max(workgroup_id, workgroup_id), (max(workgroup_id, workgroup_id)) << 0u), max(workgroup_id, workgroup_id))), max(workgroup_id, workgroup_id), max(workgroup_id, workgroup_id)))))), min(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), clamp(_GLF_IDENTITY(max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))), clamp(_GLF_IDENTITY(max(workgroup_id, workgroup_id), 0u | (max(workgroup_id, workgroup_id))), _GLF_IDENTITY(max(workgroup_id, workgroup_id), (_GLF_IDENTITY(max(workgroup_id, workgroup_id), clamp(max(workgroup_id, workgroup_id), _GLF_IDENTITY(max(workgroup_id, workgroup_id), (max(workgroup_id, workgroup_id)) | 0u), _GLF_IDENTITY(max(workgroup_id, workgroup_id), clamp(max(workgroup_id, workgroup_id), max(workgroup_id, workgroup_id), max(workgroup_id, workgroup_id)))))) << 0u), max(workgroup_id, workgroup_id))), max(workgroup_id, workgroup_id), max(workgroup_id, workgroup_id)))))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), clamp(_GLF_IDENTITY(max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), clamp(_GLF_IDENTITY(max(workgroup_id, workgroup_id), 0u | (max(workgroup_id, workgroup_id))), _GLF_IDENTITY(max(workgroup_id, workgroup_id), (max(workgroup_id, workgroup_id)) << 0u), max(workgroup_id, workgroup_id))), _GLF_IDENTITY(max(workgroup_id, workgroup_id), (max(workgroup_id, workgroup_id)) / 1u), max(workgroup_id, workgroup_id)))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | (~ (workgroup_size))))) * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), true && (bool(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), max(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), min(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), uint(uvec4(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), 1u, 1u, 1u)))) / 1u), (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))) - 0u), workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))) : _GLF_FUZZED(_GLF_IDENTITY(138781u, clamp(138781u, 138781u, 138781u))))), workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), clamp(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), clamp(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), min(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))), clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), (_GLF_IDENTITY(max(workgroup_id, workgroup_id), uint(uvec3(max(workgroup_id, workgroup_id), 0u, 1u)))) | (26455u & (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, min(0u, 0u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (~ (_GLF_IDENTITY(0u, min(0u, 0u))))))) ^ (workgroup_size))) / 1u) * workgroup_id, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_size * workgroup_id)))))))) * 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (~ (workgroup_id)))))))), 0u, 0u, (_GLF_IDENTITY(1u ^ 1u, max(_GLF_IDENTITY(1u ^ 1u, ~ (~ (1u ^ 1u))), 1u ^ 1u)))), _GLF_IDENTITY(clamp(uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))))), 0u, 0u, (1u ^ 1u)), _GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))), min(min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))), min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))))), min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))))))), 0u, 0u, (1u ^ 1u)), min(uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))))), 0u, 0u, (1u ^ 1u)), uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))))), 0u, 0u, (1u ^ 1u)))), uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), workgroup_id, workgroup_id)))) | (~ (workgroup_id)))))))), 0u, 0u, (1u ^ 1u))), (false ? _GLF_FUZZED(bitfieldExtract(uvec4(146585u, 80396u, 11769u, 57925u), 47685, 63530)) : clamp(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_size : _GLF_FUZZED(workgroup_size))) * 1u))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_size : _GLF_FUZZED(workgroup_size))) * 1u))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_size : _GLF_FUZZED(workgroup_size))) * 1u))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id))))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_size : _GLF_FUZZED(workgroup_size))) * 1u))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))))) - 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(workgroup_size)), ((true ? workgroup_size : _GLF_FUZZED(workgroup_size))) * 1u))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))))))) ^ 0u)), 0u, 0u, (1u ^ 1u)), _GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(workgroup_size)), 0u | (_GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(workgroup_size)), 0u | ((true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))))), 0u, 0u, (1u ^ 1u)), min(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u)) ^ 0u), workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))))), 0u, 0u, (1u ^ 1u)), uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), workgroup_size, workgroup_size)))))))) * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), clamp(~ (workgroup_id), ~ (workgroup_id), ~ (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))))))), 0u, 0u, (1u ^ 1u)))), uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) * workgroup_id : _GLF_FUZZED(workgroup_id))), min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), ~ (~ (~ (workgroup_id))))) | (~ (workgroup_id))), (~ (workgroup_id)) | (~ (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 1u))))))))))), 0u, 0u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | 0u), _GLF_IDENTITY(1u, uint(uvec2(1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(bitfieldInsert(workgroup_size, 100259u, 61859, -29995)) : 1u)))) ^ 1u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), min(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))), max(~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), ~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))), ~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))))) * workgroup_id, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u)) ^ 0u)) | 0u)) | (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u)) / 1u)))))))), 0u, 0u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(workgroup_id, subgroup_id)) : _GLF_IDENTITY(1u, (1u) * 1u))) ^ 1u)), (true ? uvec4((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), min(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))), max(~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), ~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))), ~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))))) * workgroup_id, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u)) ^ 0u)) | 0u)) | (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u)) / 1u)))))))), 0u, 0u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(workgroup_id, subgroup_id)) : _GLF_IDENTITY(1u, (1u) * 1u))) ^ 1u)) : _GLF_FUZZED(uvec4(10644u, 71129u, 110568u, 196299u)))), clamp(uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_id), uint(uvec3((workgroup_id), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(uvec4((~ _GLF_IDENTITY((workgroup_id), uint(uvec3((workgroup_id), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (1u & 1u), (1u & 1u), 1u), max(uvec4((~ _GLF_IDENTITY((workgroup_id), uint(uvec3((workgroup_id), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (1u & 1u), (1u & 1u), 1u), uvec4((~ _GLF_IDENTITY((workgroup_id), uint(uvec3((workgroup_id), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (1u & 1u), (1u & 1u), 1u))))) | (~ (workgroup_id)))))))), 0u, 0u, (1u ^ 1u)), _GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))))), 0u, 0u, (_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) - 0u))), min(uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? uint(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(subgroup_local_id))))) | (~ (workgroup_id)))))))), 0u, 0u, (1u ^ 1u)), uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(true, ! (! (true))) ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), ~ (~ (~ (workgroup_id))))) | (~ (workgroup_id)))))))), 0u, 0u, (_GLF_IDENTITY(1u ^ 1u, (_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) << 0u)) >> 0u))))), uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size)))))) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY((~ (workgroup_id)) | (~ (workgroup_id)), clamp((~ (workgroup_id)) | (~ (workgroup_id)), (~ (workgroup_id)) | (~ (workgroup_id)), (~ (workgroup_id)) | (~ (workgroup_id)))))))))), 0u, 0u, (1u ^ 1u)))))) * 1u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.2)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.2, -4.0)))).y))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) / 1u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), false)))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) | 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (~ ((virtual_gid) / 1u)))))))], min(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (~ ((virtual_gid) / 1u)))))))], buf[_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (~ ((virtual_gid) / 1u)))))))])), 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.0)), float(injectionSwitch.y), bool(true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec3(! (bool(false)), false, false)))))) && true))), ((bool(bool(false)))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.7)), float(injectionSwitch.y), bool(true))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(913.308), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? -7.6 : -8.1))), bvec2(true, false)))) + vec2(0.0, 0.0)).y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(195100u) : _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), next_virtual_gid)), clamp(_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) : next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid)), max(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(195100u) : _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (1u ^ 0u)), (next_virtual_gid) / 1u), next_virtual_gid), 0u ^ (clamp(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * (1u ^ 0u)), (next_virtual_gid) / 1u), next_virtual_gid)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), max(~ (next_virtual_gid), ~ (next_virtual_gid))))), clamp(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) / 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((next_virtual_gid) / 1u), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).x)) | ((next_virtual_gid) / 1u)) * 1u)), (_GLF_IDENTITY((next_virtual_gid) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((next_virtual_gid) / 1u))) << 0u)), next_virtual_gid))), _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), max(~ (next_virtual_gid), ~ (next_virtual_gid))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) - 0u), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((next_virtual_gid) / 1u)), (_GLF_IDENTITY((next_virtual_gid) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((next_virtual_gid) / 1u))) << 0u)), next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), max(~ (next_virtual_gid), ~ (next_virtual_gid))))), clamp(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) / 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(read_1))))) | ((next_virtual_gid) / 1u)), (_GLF_IDENTITY((next_virtual_gid) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((next_virtual_gid) / 1u))) << 0u)), next_virtual_gid)))), max(max((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), max(~ (next_virtual_gid), ~ (next_virtual_gid))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) - 0u), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((next_virtual_gid) / 1u)), (_GLF_IDENTITY((next_virtual_gid) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((next_virtual_gid) / 1u))) << 0u)), next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), max(~ (next_virtual_gid), ~ (next_virtual_gid))))), clamp(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) / 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(read_1))))) | ((next_virtual_gid) / 1u)), (_GLF_IDENTITY((next_virtual_gid) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((next_virtual_gid) / 1u))) << 0u)), next_virtual_gid)))), max((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), max(~ (next_virtual_gid), ~ (next_virtual_gid))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) - 0u), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((next_virtual_gid) / 1u)), (_GLF_IDENTITY((next_virtual_gid) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((next_virtual_gid) / 1u))) << 0u)), next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), max(~ (next_virtual_gid), ~ (next_virtual_gid))))), clamp(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) / 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(read_1))))) | ((next_virtual_gid) / 1u)), (_GLF_IDENTITY((next_virtual_gid) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((next_virtual_gid) / 1u))) << 0u)), next_virtual_gid))))))) | 0u), next_virtual_gid)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))) && true)))) ? _GLF_FUZZED(195100u) : _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid))))))], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ~ (~ (_GLF_IDENTITY((read_1), ((read_1)) ^ 0u)))) ^ 0u), (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) * 1u) + _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) << 0))), _GLF_IDENTITY((uint(read_1 + 1)) >> 0u, (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(_GLF_IDENTITY((read_1 / workgroup_id), (true ? (read_1 / workgroup_id) : _GLF_FUZZED(subgroup_id)))) : read_1)) + 1)), ((uint(read_1 + 1))) | ((uint(read_1 + 1)))) >> 0u) * 1u)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
