#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), true && (_GLF_IDENTITY(bool(false), true && (bool(false))))))))) && true))), bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true))
    barrier();
  }
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && true)) || false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))))))) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && true)) || false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))))))) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && true)) || false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))))))) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))))))))), false)))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) || false))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, false)), bvec3(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), bvec2(false, false))).y)))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), bvec2(false, false))).y)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), bvec2(false, false))).y)))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), (vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43))) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), clamp(vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)))))), bvec2(false, false))).y)))), true, false))), false)))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true, false)))))))), true))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) || false))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), true, false))))))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), true, false))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), bvec2(false, false))).y)))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), bvec2(false, false))).y)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), bvec2(false, false))).y)))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), bvec2(false, false))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), bvec2(false, false))).y)), true, false))))), true, false))), false)))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), true, false)))))))), true))))))))), bool(bool((! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) || false))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))) || false)), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), true, false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-85.84, 0.0 + (-85.84))), _GLF_FUZZED(-96.43)), bvec2(false, _GLF_IDENTITY(false, false || (false))))).y)))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), bvec2(false, false))).y)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), bvec2(false, false))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), bvec2(false, false))).y, false, true, false))))))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.84), _GLF_FUZZED(-96.43)), bvec2(false, false))).y)))), true, false))), false)))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true, false)))))))), true))))))))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))) || false), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (~ (~ _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) * uvec3(1u, 1u, 1u)))) << uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), true && (bool(bool((! (false))))))))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x;
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), false, true, true))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)).y)), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), 1.0 * (injectionSwitch.y)))))), false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), 1.0 * (injectionSwitch.y)))))), false, true, true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) + subgroup_id * subgroup_size)) + _GLF_IDENTITY(((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_size) : subgroup_size))) << (1u ^ 1u))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1), min((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x) + 0u) + 1), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid) >> uvec2(0u, 0u)).x + 1), (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1))))) % subgroup_size), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1), min((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x) + 0u) + 1), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid) >> uvec2(0u, 0u)).x + 1), (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1))))) % subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1), min((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x) + 0u) + 1), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid) >> uvec2(0u, 0u)).x + 1), (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1))))) % subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), uint(uvec4(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1), min((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x) + 0u) + 1), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid) >> uvec2(0u, 0u)).x + 1), (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1))))) % subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1), min((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x) + 0u) + 1), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid) >> uvec2(0u, 0u)).x + 1), (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1))))) % subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), 0u, 0u, 0u)))), 1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ (0u & 53386u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u) ^ (0u & 53386u), ((1u) ^ (0u & 53386u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec2((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(35230u)))) ^ (0u & 53386u), 0u)))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid)), 0u ^ (next_virtual_gid)), (next_virtual_gid) ^ 0u), next_virtual_gid, next_virtual_gid))], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0)))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.1)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-136.706)), bool(false))))), injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0)))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))))))), int(7))) ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) >> 0), 1, 1))))))), (false ? _GLF_FUZZED((_GLF_IDENTITY(-61444, ~ (~ (-61444))) + -16417)) : _GLF_IDENTITY(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-712.810)), vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0)))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 & 40848) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0)))))) - 0)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))))))), int(7))) ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) >> 0), 1, 1))))))), (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0)))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0)))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))))))), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0)))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0)))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec4(int(7), 0, 0, 0))))))))), int(7))) ^ 0)) ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(1, 1)))), (1) >> 0), 1, 1)))))))) >> (0 & -89046))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y], _GLF_IDENTITY((buf[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y]) ^ 0u, ((buf[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y]) ^ 0u) / 1u)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_FUZZED(88859), (_GLF_FUZZED(88859)) ^ 0) : 64))) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) >> 0)) | 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(88859), (_GLF_FUZZED(88859)) ^ 0) : 64))) | (64), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)))))) << _GLF_IDENTITY(0, max(0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)))))) << _GLF_IDENTITY(0, max(0, 0)))) ^ (0 | 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(88859), (_GLF_FUZZED(88859)) ^ 0) : 64))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | 0), 0 | (_GLF_IDENTITY(64, (64) | 0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), min(clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)), clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(88859), (_GLF_FUZZED(88859)) ^ 0) : 64))) | (64), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(88859), (_GLF_FUZZED(88859)) ^ 0) : 64))) | (64), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))), ~ (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) << 0)))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(88859), (_GLF_FUZZED(88859)) ^ 0) : 64))) | (64)) | ((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) << 0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(88859), (_GLF_FUZZED(88859)) ^ 0) : 64))) | (64)))))))), 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
