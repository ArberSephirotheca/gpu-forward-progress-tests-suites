#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false))))), true && (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch)))))).x, (false ? _GLF_FUZZED(injectionSwitch[1]) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-52.23, float(mat2(-52.23, 0.0, 1.0, 0.0))))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), true, true, false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec2(-5.3, -84.03).y)), bool(false))) > injectionSwitch.y)) || false)))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true, false)), (_GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true, false)), ! (! (bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))) && (true), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (true))), true)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false)))))) && true), false, true), false)))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, (false ? _GLF_FUZZED(injectionSwitch[1]) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-52.23)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch)).y)))), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-44.08, -9250.1341)), clamp(true ? injectionSwitch : _GLF_FUZZED(vec2(-44.08, -9250.1341)), true ? injectionSwitch : _GLF_FUZZED(vec2(-44.08, -9250.1341)), true ? injectionSwitch : _GLF_FUZZED(vec2(-44.08, -9250.1341))))))))[0], injectionSwitch[1]), vec2(vec3(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-44.08, -9250.1341)), clamp(true ? injectionSwitch : _GLF_FUZZED(vec2(-44.08, -9250.1341)), true ? injectionSwitch : _GLF_FUZZED(vec2(-44.08, -9250.1341)), true ? injectionSwitch : _GLF_FUZZED(vec2(-44.08, -9250.1341))))))))[0], injectionSwitch[1]), abs(1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], (false ? _GLF_FUZZED(63.19) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0] : _GLF_FUZZED(6.2))))), injectionSwitch[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)))))[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, true && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true, false)), (_GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), _GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))) && (true)), true, false)), ! (! (bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true, false)))))) && true), false, true), false)))))))), true, true)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), true && (false || (false)))))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) || false, bool(bvec4(((_GLF_DEAD(false))) || false, false, true, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((false ? -6.4 : vec3(7.3, 5.6, 86.96).g))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.4)))), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-33.70, -68.87)) : injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(1), int(1))))))], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (false))))))))) || false)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) * (injectionSwitch), min(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED((ivec4(74074, -90762, 62169, 82260) , vec2(-50.26, 0.8))) : _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) * vec2(1.0, 1.0))))))).y))))) * (injectionSwitch), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch)))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))), injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(-56.04) : max(1.0, 1.0))), max(1.0, 1.0)))), injectionSwitch.y)) * (injectionSwitch)))).y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y))))) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y)), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) * (injectionSwitch))))) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(57.95)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-3.5, 7.0)) : injectionSwitch)))[1]), bvec2(true, true))))), injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(float(52713))), bool(false)))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(57.95)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-3.5, 7.0)) : injectionSwitch)))[_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 1))))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 1)))))) ^ 0)]), bvec2(true, true))))), injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) - vec2(0.0, 0.0)).y) || false)))))), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(5.9, 33.84)))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.0) : _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))) < injectionSwitch.y)))))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(num_workgroup)))) + 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))))), true, true, true))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) << (1u ^ 1u))))) | (_GLF_IDENTITY((workgroup_base) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (true ? (workgroup_base) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(subgroup_size)))))), clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (false ? _GLF_FUZZED(num_workgroup) : workgroup_base)))), (workgroup_base) + 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), min(~ (workgroup_base), ~ (workgroup_base))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (workgroup_base) << 0u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) << _GLF_IDENTITY(0u, (0u) | (0u))))), 1u, 1u))))), ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 0u, 1u, 1u), ~ _GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u))), (_GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u))), min((~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u))), (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u)))))) | ((~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u ^ (_GLF_FUZZED(subgroup_size)))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u ^ (_GLF_FUZZED(subgroup_size)))))) : _GLF_FUZZED(subgroup_size)))))) + subgroup_id * subgroup_size + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) << (1u ^ 1u))))) | (_GLF_IDENTITY((workgroup_base) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (true ? (workgroup_base) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(subgroup_size)))))), clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (false ? _GLF_FUZZED(num_workgroup) : workgroup_base)))), (workgroup_base) + 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), min(~ (workgroup_base), ~ (workgroup_base))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (workgroup_base) << 0u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) << _GLF_IDENTITY(0u, (0u) | (0u))))), 1u, 1u))))), ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 0u, 1u, 1u), ~ _GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u))), (_GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u))), min((~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u))), (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u)))))) | ((~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u ^ (_GLF_FUZZED(subgroup_size)))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u ^ (_GLF_FUZZED(subgroup_size)))))) : _GLF_FUZZED(subgroup_size)))))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) << (1u ^ 1u))))) | (_GLF_IDENTITY((workgroup_base) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (true ? (workgroup_base) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(subgroup_size)))))), clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (false ? _GLF_FUZZED(num_workgroup) : workgroup_base)))), (workgroup_base) + 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), min(~ (workgroup_base), ~ (workgroup_base))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (workgroup_base) << 0u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) << _GLF_IDENTITY(0u, (0u) | (0u))))), 1u, 1u))))), ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), 0u, 1u, 1u), ~ _GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u))), (_GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u))), min((~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u))), (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u)))))) | ((~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), ~ _GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), min((~ (workgroup_base)), (~ (workgroup_base))))) | ((~ (workgroup_base)))), ~ (~ (workgroup_base))))))) << 0u)), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))))), 0u, 1u, 1u)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u ^ (_GLF_FUZZED(subgroup_size)))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u ^ (_GLF_FUZZED(subgroup_size)))))) : _GLF_FUZZED(subgroup_size)))))) + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1) : _GLF_FUZZED(45703u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup), ~ (_GLF_IDENTITY(~ ((num_workgroup)), (true ? ~ ((num_workgroup)) : _GLF_FUZZED(workgroup_base))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : (true ? (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) >> 0u)), (~ (_GLF_IDENTITY(1u, (1u) >> 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), ((subgroup_local_id) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) >> 0u)), (~ (_GLF_IDENTITY(1u, (1u) >> 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> 0u)), _GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1) : _GLF_FUZZED(_GLF_IDENTITY(45703u, 0u ^ (45703u))))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (false)), bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)) || (bool(bvec4(false, true, true, true))))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, _GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true)))))))) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (false)), bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)) || (bool(bvec4(false, true, true, true))))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, _GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true)))))))) || false)))))))) && true))), (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, false || (false))) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), exp(vec2(0.0, 0.0)) * ((injectionSwitch) - vec2(0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(((injectionSwitch) - vec2(0.0, 0.0))[0], ((injectionSwitch) - vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(392.994), _GLF_FUZZED(25.66)), bvec2(false, false))), vec2(mat2x3(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(((injectionSwitch) - vec2(0.0, 0.0))[0], ((injectionSwitch) - vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(392.994), _GLF_FUZZED(25.66)), bvec2(false, false))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0))), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat3x4(vec2(mat4(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), max(vec2(mat3x4(vec2(mat4(injectionSwitch, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 0.0)))) + 0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), vec2(mat3x4(vec2(mat4(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) / 1.0), 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))).y)), mix(float(_GLF_FUZZED(-93.74)), float(float(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat3x4(vec2(mat4(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), max(vec2(mat3x4(vec2(mat4(injectionSwitch, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 0.0)))) + 0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), vec2(mat3x4(vec2(mat4(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) / 1.0), 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))).y))), bool(true))), (float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.4)), float(injectionSwitch.y), bool(true)))))) + 0.0)))), true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2(_GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0))))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2(_GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0))))))).y, (false ? _GLF_FUZZED(tanh(783.179)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2(_GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0))))).y))), false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(distance(vec2(-6.5, -323.241), injectionSwitch)) : injectionSwitch.x)) > injectionSwitch.y))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2(_GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0))))).y, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(tanh(783.179)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat2(_GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch[1], float(mat2(_GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[_GLF_IDENTITY(1, (1) - 0)], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)))) * 1.0))).y, (false ? _GLF_FUZZED(tanh(783.179)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat2(_GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch[1], float(mat2(_GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[_GLF_IDENTITY(1, (1) - 0)], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)))) * 1.0))).y) - 0.0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(tanh(783.179)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat2(_GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch[1], float(mat2(_GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[_GLF_IDENTITY(1, (1) - 0)], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)))) * 1.0))).y, (false ? _GLF_FUZZED(tanh(783.179)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat2(_GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch[1], float(mat2(_GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[_GLF_IDENTITY(1, (1) - 0)], 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0)))) * 1.0))).y) - 0.0))) * 1.0))), false || ((injectionSwitch.x > injectionSwitch.y)))))))), true, _GLF_IDENTITY(false, bool(bool(false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) | 0)), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (0)) ^ (4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, mix(float(_GLF_FUZZED((-53.18 / -951.338))), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) && true) && (true))))))))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))), false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ((true)) && true))))))))))))))))), false, true), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))), true && (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))))), false, true), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))), false, true), true)), true)), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))))))), bool(bool((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))))))))))) || false)))), bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), (0.0))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0), 0.0, 0.0, 0.0)), max(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(-956.213), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(253.772) : (injectionSwitch)[1])), min(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(253.772) : (injectionSwitch)[1])), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(253.772) : (injectionSwitch)[1])), mix(float(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(253.772) : (injectionSwitch)[1]))), float(_GLF_FUZZED(-269.991)), bool(false)))))), bvec2(false, true))))).x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(-569.691), _GLF_FUZZED(-12.68)), vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(true, true)))))))), injectionSwitch)).x)) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), ((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), ((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))) || false)))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true)))))))))))), false || ((_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))))))))))))), false, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))), false, true), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))), false, true), true)), true)), true))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))), true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0)), max(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(-956.213), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4((injectionSwitch)[1], 0.0, cos(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), exp(0.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), exp(0.0)), vec4(0.0, 0.0, 0.0, 1.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)), mix(float(float(mat4((injectionSwitch)[1], 0.0, cos(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), exp(0.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), exp(0.0)), vec4(0.0, 0.0, 0.0, 1.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0))), float(_GLF_FUZZED(-9.2)), bool(false)))), (false ? _GLF_FUZZED(253.772) : (injectionSwitch)[1]))), bvec2(false, true))))).x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))), (! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))), false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))))), false, true), true)), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), ! (! (! (! (_GLF_IDENTITY(true, true && (true))))))))))))))))))), false, true), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), ! (! (! (! (_GLF_IDENTITY(true, true && (true))))))))))))))))))), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), ! (! (! (! (_GLF_IDENTITY(true, true && (true))))))))))))))))))), false, true), true)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), ! (! (! (! (_GLF_IDENTITY(true, true && (true))))))))))))))))))), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), ! (! (! (! (_GLF_IDENTITY(true, true && (true))))))))))))))))))), false, true), true)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), true)), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))), false))), false))))))))))))), bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0), 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0)))), 0.0)), max(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(8.1)), vec2(mat2(vec2((injectionSwitch)[0], _GLF_FUZZED(8.1)), 0.0, 1.0))), vec2(_GLF_FUZZED(-956.213), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(253.772) : (injectionSwitch)[1]))), bvec2(false, true))))).x, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).x)) > injectionSwitch.y))), false, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))), false, true), _GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true))))))))))))), false, true), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))), false, true)))), true)), true)), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false), false, true))))))), true)))))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))))))))), bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-88.07)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) + 0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0), 0.0, 0.0, 0.0)), max(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(-956.213), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(253.772) : (injectionSwitch)[1]))), bvec2(false, true))))).x, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).x)) > injectionSwitch.y))), false, false)), false))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, _GLF_IDENTITY(min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_base))), read_1), (_GLF_IDENTITY(min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_base))), read_1), 0u ^ (min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_base))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_base)))) * 1u), _GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_base))))), read_1)))) | (min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_base))), read_1)))), read_1)) + 1), _GLF_IDENTITY(4, (4) * 1), _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) - (0 << _GLF_IDENTITY(int(7), int(7)))), min(64, 64))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(64, min(64, 64)))), ~ (~ (0 ^ (~ (_GLF_IDENTITY(64, min(64, 64)))))))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) + abs(vec2(0.0, 0.0)))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
