#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uvec2 GLF_merged2_0_1_6_1_1_14read_1workgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, true && (false)))))), false || (bool(bool(! (! (_GLF_IDENTITY(false, true && (false)))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-5897.5626)), bool(false))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(349.083)), bool(false))))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) || false))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, ! (! (true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), (! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))) && true))))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), false, true, true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, false || (true)) && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))) || (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))))))))))), true && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false)))))))))))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), (! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))) && true))))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), false, true, true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, false || (true)) && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))) || (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))))))))))), true && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false))))))))))))))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), (! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))) && true))))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), false, true, true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, false || (true)) && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))) || (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))))))))))), true && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), (! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))) && true))))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), false, true, true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, false || (true)) && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))) || (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))))))))))), true && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false)))))))))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), (! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), false || (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))))) && true))))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), ! (! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))))), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), false, true, true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))))), false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec4((! _GLF_IDENTITY((false), true && ((false)))), false, true, true))))), true && (false || (_GLF_IDENTITY(false, ! (! (false)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, false || (true)) && (false || (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, false || (true)) && (false || (_GLF_IDENTITY(false, ! (! (false))))))) && true), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))) || (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))))))))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true))))))) || (_GLF_IDENTITY(false, ! (! (false)))))), false, false)))))))))))))))) && true)))))))))), bool(bool(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), true))), false))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), bool(bool(bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.3) : 1.0)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, false || (true)), false)))))), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))), false, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, tan(0.0), 0.0, sqrt(0.0), 1.0, length(log(1.0)), 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.4, 2412.0982)))).x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(1.0), 1.0, 0.0))), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sqrt(0.0)))), (false ? _GLF_FUZZED(mat4(8660.7922, -870.204, 1.9, 6074.8581, -236.729, 7.0, 1.5, -782.917, 1061.4168, -8.3, -414.724, 4.1, 99.98, 9.1, -5038.2618, -982.527)) : _GLF_IDENTITY(mat4(injectionSwitch, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sqrt(0.0)))), (mat4(injectionSwitch, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sqrt(0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sqrt(0.0)))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(mat4(8660.7922, -870.204, 1.9, 6074.8581, -236.729, 7.0, 1.5, -782.917, 1061.4168, -8.3, -414.724, _GLF_IDENTITY(4.1, float(_GLF_IDENTITY(vec3(4.1, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), max(vec3(4.1, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(4.1, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), 99.98, 9.1, -5038.2618, -982.527)) : _GLF_IDENTITY(mat4(injectionSwitch, tan(0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) + 0.0), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))), cos(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-88.87)), float(0.0), bool(true))), log(1.0), 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4806.8055) : 0.0)))))), (mat4(injectionSwitch, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sqrt(0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sqrt(0.0)))), (false ? _GLF_FUZZED(mat4(8660.7922, -870.204, 1.9, 6074.8581, -236.729, 7.0, 1.5, -782.917, 1061.4168, -8.3, _GLF_IDENTITY(-414.724, max(-414.724, -414.724)), 4.1, 99.98, 9.1, -5038.2618, -982.527)) : _GLF_IDENTITY(mat4(injectionSwitch, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), max(determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), mix(float(determinant(mat2(1.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-85.65)), bool(false))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - sqrt(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sqrt(0.0)))), (mat4(injectionSwitch, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 1.0, abs(1.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-573.474))), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.9) : 0.0)), 0.0, 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sqrt(0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4(injectionSwitch, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sqrt(0.0)))), (false ? _GLF_FUZZED(mat4(8660.7922, _GLF_IDENTITY(-870.204, (false ? _GLF_FUZZED(-78.89) : -870.204)), 1.9, 6074.8581, -236.729, 7.0, 1.5, -782.917, 1061.4168, -8.3, -414.724, 4.1, 99.98, 9.1, -5038.2618, -982.527)) : _GLF_IDENTITY(mat4(injectionSwitch, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sqrt(0.0)))), (mat4(injectionSwitch, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(2.0)), float(determinant(mat2(1.0, 1.0, 0.0, 1.0))), bool(true))), 0.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-916.659) : 0.0)), 0.0, 0.0)))), 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sqrt(0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))).y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), false, false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, 0 | (0))], min(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(-2.7) : (injectionSwitch)[_GLF_IDENTITY(0, (0 ^ (0 & -62457)) | (0))], max(_GLF_IDENTITY(false ? _GLF_FUZZED(-2.7) : (injectionSwitch)[_GLF_IDENTITY(0, (0 ^ (0 & -62457)) | (0))], max(false ? _GLF_FUZZED(-2.7) : (injectionSwitch)[_GLF_IDENTITY(0, (0 ^ (0 & -62457)) | (0))], false ? _GLF_FUZZED(-2.7) : (injectionSwitch)[_GLF_IDENTITY(0, (0 ^ (0 & -62457)) | (0))])), _GLF_IDENTITY(false ? _GLF_FUZZED(-2.7) : (injectionSwitch)[_GLF_IDENTITY(0, (0 ^ (0 & -62457)) | (0))], (true ? false ? _GLF_FUZZED(-2.7) : (injectionSwitch)[_GLF_IDENTITY(0, (0 ^ (0 & -62457)) | (0))] : _GLF_FUZZED(-8.3))))))), (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-60.32), _GLF_FUZZED(914.045)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), ! (! (_GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) || false)))))), true && (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)) || false), _GLF_IDENTITY((false) || false, ((false) || false) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), false, false, true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), false, false, true))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.2)))) * 1.0)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))))))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, min(1u, 1u))))), uvec3(1u, 1u, 1u) * (uvec3(1u))))) + _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(110038u, 54683u, 104688u))))).x;
 GLF_merged2_0_1_6_1_1_14read_1workgroup_size.y = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.w = _GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u), ((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u), ((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u)) | ((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u))))))) | (_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u), ((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u), ((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u)) | _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u)), min(((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u)), (((_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size))) | uvec2(0u, 0u))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))) | (_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, clamp(GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size, GLF_merged2_0_1_6_1_1_14read_1workgroup_size)))) - uvec2(0u, 0u)))) | (GLF_merged2_0_1_6_1_1_14read_1workgroup_size)).y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.0) : injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(0.0))), vec2(vec2(vec2(mat4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(0.0))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-810.619) : injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), true)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), true)))), false || (bool(bool(bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), true)))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), true)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), true)))), false || (bool(bool(bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), true)))))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), true)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), true)))), false || (bool(bool(bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), true)))))))))), false), false))))), ((false)) && true) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))) && true)))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), bool(bool(false || (false))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) || false)))))))))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(20087))), bvec2(true, false))).y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.w * workgroup_id, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.w * workgroup_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size) >> uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)).w * workgroup_id, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.w * workgroup_id) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) : _GLF_FUZZED(workgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED(130457u), (_GLF_FUZZED(130457u)) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.w * workgroup_id, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.w * workgroup_id : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size) | uvec4(0u, 0u, 0u, 0u)).w * workgroup_id) >> 0u)) | (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.w * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z) >> _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))) + GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, exp(0.0))), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 1.0, exp(0.0)))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0))).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1712.7550, -89.26)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(73.56), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), vec2((injectionSwitch)[0], _GLF_FUZZED((-45.65))), bvec2(true, false))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << 0u) + subgroup_id * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z + ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + _GLF_IDENTITY(1, (1) | (1))) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << 0u) + subgroup_id * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z + ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << 0u) + subgroup_id * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z + ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << 0u) + subgroup_id * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z + ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << 0u, ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << 0u) / (1u ^ 0u))) + subgroup_id * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z + ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z), ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << 0u) + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size)).z + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z, ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z) / 1u))))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << 0u) + subgroup_id * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z, min((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z, 0u ^ ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z))))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << 0u) + subgroup_id * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z + ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << 0u) + subgroup_id * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z + ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1) % GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.z)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.x = next_virtual_gid;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.x], uint(1), 4, _GLF_IDENTITY(64, (64) << 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], _GLF_IDENTITY(uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) | (max(virtual_gid, virtual_gid))))], 0u)), (uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], 0u))) ^ 0u)), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_size.x = read_1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_1_6_1_1_14read_1workgroup_size.x = read_1 : _GLF_FUZZED(workgroup_id)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_size.x], uint(GLF_merged2_0_1_6_1_1_14read_1workgroup_size.x + 1), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
