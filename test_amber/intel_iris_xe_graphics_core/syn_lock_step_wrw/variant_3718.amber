#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true)), true, true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3967.1220), _GLF_FUZZED(-668.607)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))[1]), bvec2(true, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[0])), injectionSwitch[1])).y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), true, true))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-593.792)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch, injectionSwitch)).y))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch, injectionSwitch)).y)))))))))) || false)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) && true)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(1.0), sin(0.0), sin(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, ! (! (false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(393.605)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-84.78), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((2987.4619 - 9651.6030)), min(_GLF_FUZZED((2987.4619 - 9651.6030)), _GLF_FUZZED((2987.4619 - 9651.6030))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))) / 1.0, ((injectionSwitch.y) / 1.0) + 0.0)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false, false)), true, false), bvec3(bvec4(bvec3(bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false, false)), true, false), false)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), abs(0.0), 0.0)), min(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), abs(0.0), 0.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), abs(0.0), 0.0))))).y, (injectionSwitch.y) - 0.0)))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED((+ 4.5))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), abs(0.0), 0.0)), min(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), abs(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), abs(0.0), 0.0))))).y, (injectionSwitch.y) - 0.0)))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED((+ 4.5))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, false))))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, determinant(mat4(1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat3(injectionSwitch.x, determinant(mat4(1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, determinant(mat4(1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3(injectionSwitch.x, determinant(mat4(1.0, 0.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3(injectionSwitch.x, determinant(mat4(1.0, 0.0, tan(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.6) : 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), true && ((! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, true)))))))))))))), bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y))))) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x), float(_GLF_FUZZED((-68.31 * -4.1))), bool(false))))) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.3)), float(1.0), bool(true))), injectionSwitch.y)) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x), float(_GLF_FUZZED((-68.31 * -4.1))), bool(false))))) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6262.6641), _GLF_FUZZED(-430.040)), bvec2(false, false))).y))))) || false))))))))))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true, false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), false, false)), ! (! (bool(bvec3(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-63.10)), float(injectionSwitch.y), bool(true))), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0, 0.0))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (uvec2(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uvec2(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.0)))))) * 1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, abs(0.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, abs(0.0)))), 1.0, 0.0, 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))).x)))) >> uvec2(0u, 0u), uvec2(0u, 0u) + ((uvec2(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) >> uvec2(0u, 0u))))) / uvec2(1u, 1u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, sqrt(1.0), 1.0, abs(1.0), 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, sin(0.0))), (float(mat4x3(injectionSwitch.y, sqrt(1.0), 1.0, abs(1.0), 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, sin(0.0)))) - abs(0.0)))))))
      return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))), 0u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))), 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))), 0u)))) / 1u), 0u, 0u)), min(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))), 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))), 0u)))) / 1u), 0u, 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))), 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))), 0u)))) / 1u), 0u, 0u))))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), (subgroup_local_id + 1) / 1u)) % subgroup_size), 0u + (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY((_GLF_IDENTITY((0u), ((0u)) + 0u)), uint(uint((_GLF_IDENTITY((0u), ((0u)) + 0u))))) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), 0u + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) * 1u)) | (clamp(subgroup_size, subgroup_size, subgroup_size)))), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u)))), (false ? _GLF_FUZZED(virtual_gid) : clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6451u) : _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))) | (clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) : _GLF_FUZZED(196635u))))) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY((_GLF_IDENTITY((0u), ((0u)) + 0u)), uint(uvec3((_GLF_IDENTITY((0u), ((0u)) + 0u)), 0u, 0u))) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))) + ((subgroup_local_id + 1) % subgroup_size)), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | ((~ (subgroup_size)))), _GLF_IDENTITY(((~ (subgroup_size))), min(_GLF_IDENTITY(((~ (subgroup_size))), (((~ (subgroup_size)))) | 0u), ((~ (subgroup_size))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), ((0u)) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))))))), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))), subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u)))), (false ? _GLF_FUZZED(virtual_gid) : clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))) | (clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY((_GLF_IDENTITY((0u), ((0u)) + 0u)), uint(uvec3((_GLF_IDENTITY((0u), ((0u)) + 0u)), 0u, 0u))) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))) + ((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (true ? clamp(subgroup_size, subgroup_size, subgroup_size) : _GLF_FUZZED(atomicAnd(workgroup_size, subgroup_size))))), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (subgroup_size), 1u), (uvec2(~ (subgroup_size), 1u)) ^ uvec2(0u, 0u))), 0u ^ (uint(_GLF_IDENTITY(uvec2(~ (subgroup_size), 1u), (uvec2(~ (subgroup_size), 1u)) ^ uvec2(0u, 0u))))))), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u)))), (false ? _GLF_FUZZED(virtual_gid) : clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))) | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((77700u >> subgroup_id)) : subgroup_size)), ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(num_workgroup))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY((_GLF_IDENTITY((0u), ((0u)) + 0u)), uint(uvec3((_GLF_IDENTITY((0u), ((0u)) + 0u)), 0u, 0u))) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)) | ((subgroup_local_id + 1) % subgroup_size))))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(subgroup_size))), ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u))))), 0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u))))))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) / 1u), subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)), uint(uint(_GLF_IDENTITY(((0u)), (((0u))) / 1u)))) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + ((subgroup_local_id + 1) % subgroup_size)), uint(uvec3(_GLF_IDENTITY(0u + (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(bitfieldReverse(workgroup_id)) : (subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) ^ 0u)), 0u, 0u)))))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> (1u ^ 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) >> 0u), ((0u)) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + ((subgroup_local_id + 1) % subgroup_size)), (0u + (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)), min((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + ((subgroup_local_id + 1) % subgroup_size))) | (_GLF_IDENTITY(0u + (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))), ~ (~ (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)))))))))) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, 0u | (0u))))))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))), ((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u)))) * 1u)) + 1) % subgroup_size)), (0u + (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u), 0u ^ (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)), (0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u))) - (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec4(_GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) + 0u))) + 0u)) ^ 0u) / 1u))), ~ (~ ((subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)), max(((0u)), ((0u)))) + 0u)) ^ 0u) / 1u)))))), 1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + ((subgroup_local_id + 1) % subgroup_size))) ^ 0u))), 0u, 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(subgroup_size))), ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u))))), 0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u))))))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) / 1u), subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)), uint(uint(_GLF_IDENTITY(((0u)), (((0u))) / 1u)))) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + ((subgroup_local_id + 1) % subgroup_size)), uint(uvec3(_GLF_IDENTITY(0u + (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(bitfieldReverse(workgroup_id)) : (subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) ^ 0u)), 0u, 0u)))))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> (1u ^ 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) >> 0u), ((0u)) + 0u)) ^ 0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + ((subgroup_local_id + 1) % subgroup_size)), (0u + (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)), min((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + ((subgroup_local_id + 1) % subgroup_size))) | (_GLF_IDENTITY(0u + (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))), ~ (~ (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4((_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)))))))))) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, 0u | (0u))))))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))), ((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u)))) * 1u)) + 1) % subgroup_size)), (0u + (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u), 0u ^ (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u)), (0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + 0u)) ^ 0u) / 1u))) - (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec4(_GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) + 0u))) + 0u)) ^ 0u) / 1u))), ~ (~ ((subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)), max(((0u)), ((0u)))) + 0u)) ^ 0u) / 1u)))))), 1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + ((subgroup_local_id + 1) % subgroup_size))) ^ 0u))), 0u, 0u)))))) + 0u)))) * 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u), min(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u))))))) + ((subgroup_local_id + 1) % subgroup_size), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u), clamp(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u), ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u), ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(min(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))), (_GLF_IDENTITY(min(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))), max(min(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))), min(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))))))) / 1u)) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u))))), min(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), (true ? workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(atomicMax(workgroup_size, num_workgroup)))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(atomicMax(workgroup_size, num_workgroup)))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) * 1u), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_size), clamp(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_size), 0u ^ (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_size)) - 0u), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_size))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), uint(_GLF_IDENTITY(uint(subgroup_size), ~ (~ (uint(subgroup_size)))))), uint(uvec2(subgroup_size, 0u)))))) / 1u) : _GLF_FUZZED(workgroup_base))) + ((subgroup_local_id + 1) % subgroup_size)) / 1u), uint(uint(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY((0u) / 1u, clamp((0u) / 1u, (0u) / 1u, _GLF_IDENTITY((0u) / 1u, max((0u) / 1u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) | ((0u) / 1u)))))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), min(~ (clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY((0u) / 1u, clamp((0u) / 1u, (0u) / 1u, _GLF_IDENTITY((0u) / 1u, max((0u) / 1u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) | ((0u) / 1u)))))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), ~ (clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY((0u) / 1u, clamp((0u) / 1u, (0u) / 1u, _GLF_IDENTITY((0u) / 1u, max((0u) / 1u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) | ((0u) / 1u)))))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))), min(~ (~ (clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size)))), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (0u) / 1u)), (33695u & 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (0u) / 1u)), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (0u) / 1u)))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), ~ (~ (clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY((0u) / 1u, (true ? _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) << 0u) : _GLF_FUZZED(subgroup_local_id))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (subgroup_size) | _GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), 0u | ((_GLF_IDENTITY(0u, (0u) / 1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(uvec2(subgroup_size, 0u))))))) + ((subgroup_local_id + 1) % subgroup_size)))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size)))))) | ((~ (subgroup_size))))) - 0u), clamp(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u), ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u), ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) * 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + ((subgroup_local_id + 1) % subgroup_size))))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), 0u | (~ (~ (subgroup_size))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), clamp(~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ~ (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) - 0u)), (subgroup_size)))) | 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size))), ~ (subgroup_size))) : _GLF_FUZZED(subgroup_size))))), 0u))))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size), 0u + (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, 1u * (0u)))) + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), ((0u)) / 1u), (0u))) / 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)), 1u), ~ (~ _GLF_IDENTITY((uvec2((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)), 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(199599u, 104463u)) : (uvec2((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)), 1u))))))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u))))) + ((subgroup_local_id + 1) % subgroup_size), 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 1u, 1u))))) + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(160483u))), 0u ^ (_GLF_IDENTITY(1u, (1u) * 1u))), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, 1u * (0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) - 0u)))))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) << 0u))))), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u) + (_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(160483u)), 0u | ((true ? 1u : _GLF_FUZZED(160483u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), (1u) * 1u))), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, 1u * (0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(160483u))), 0u ^ (_GLF_IDENTITY(1u, (1u) * 1u))), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), max((0u), (0u))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(160483u))), 0u ^ (_GLF_IDENTITY(1u, (1u) * 1u))), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), max((0u), (0u))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))))), 1u * (clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(160483u)), 0u ^ ((true ? 1u : _GLF_FUZZED(160483u))))), 0u ^ (_GLF_IDENTITY(1u, (1u) * 1u))), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), max((0u), (0u))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))))))) - 0u))) >> 0u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(160483u))), 0u ^ (_GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(uvec3(167059u, 155548u, 27799u)[1]) : 1u))))), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, 1u * (0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))))))) + ((subgroup_local_id + 1) % subgroup_size))))))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), (_GLF_IDENTITY(int(ivec2(64, 0)), (int(ivec2(_GLF_IDENTITY(64, int(_GLF_IDENTITY(int(64), clamp(int(64), int(64), int(64))))), 0))) >> 0)) << 0)), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     return;
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 + 1)) / 1u, clamp((uint(read_1 + 1)) / 1u, _GLF_IDENTITY((uint(read_1 + 1)) / 1u, ~ (~ (_GLF_IDENTITY((uint(read_1 + 1)) / 1u, ~ (~ ((uint(_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(next_virtual_gid))) + 1)) / 1u)))))), (uint(read_1 + 1)) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1), (_GLF_IDENTITY(uint(read_1 + 1), uint(uvec4(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1), 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), 0u | (_GLF_IDENTITY(0u, (0u) << 0u)))) ^ (0u | 0u)), 0u)))) * 1u)) / 1u, 0u ^ ((uint(read_1 + 1)) / 1u))) >> 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((uint(_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), (_GLF_IDENTITY(~ (read_1 + 1), clamp(~ (read_1 + 1), ~ (read_1 + 1), ~ (read_1 + 1)))) | (~ (read_1 + 1))))))) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) - 0u)), (~ (_GLF_IDENTITY(1u, (1u) - 0u))) << 0u)))), _GLF_IDENTITY(0u | (~ ((uint(read_1 + 1)) / 1u)), 0u | (_GLF_IDENTITY(0u | (~ _GLF_IDENTITY(((uint(read_1 + 1)) / 1u), clamp(((uint(read_1 + 1)) / 1u), _GLF_IDENTITY(((uint(read_1 + 1)) / 1u), max(((uint(read_1 + 1)) / 1u), ((uint(read_1 + 1)) / 1u))), (_GLF_IDENTITY((uint(read_1 + 1)), ((uint(read_1 + 1))) | 0u) / 1u)))), _GLF_IDENTITY(uint(uvec2(0u | (~ ((_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), uint(uvec4(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), (0u ^ 0u), 1u, 1u)))) / 1u)), 0u)), clamp(uint(uvec2(0u | (~ ((_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), uint(uvec4(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), (0u ^ 0u), 1u, 1u)))) / 1u)), 0u)), _GLF_IDENTITY(uint(uvec2(0u | (~ ((_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), uint(uvec4(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), (0u ^ 0u), 1u, 1u)))) / 1u)), 0u)), ~ (~ (uint(uvec2(0u | (~ ((_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), uint(uvec4(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), (0u ^ 0u), 1u, 1u)))) / 1u)), 0u))))), uint(uvec2(0u | (~ ((_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), uint(uvec4(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), (0u ^ 0u), 1u, 1u)))) / 1u)), 0u)))))))), clamp(_GLF_IDENTITY(~ ((uint(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)))) / 1u), 0u | (~ ((uint(read_1 + 1)) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(read_1 + 1)), ((uint(read_1 + 1))) | 0u) / 1u), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 + 1)), ~ (~ ((uint(read_1 + 1))))), (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, (0u) - 0u), ~ (~ (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, (0u) - 0u), uint(uvec4(_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, (0u) - 0u), min(0u | _GLF_IDENTITY(0u, (0u) - 0u), 0u | _GLF_IDENTITY(0u, (0u) - 0u))), 1u, 0u, 0u))))))) | ((uint(read_1 + 1)))) / 1u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(read_1 + 1)), ((uint(read_1 + 1))) | ((uint(read_1 + 1)))) / 1u), 0u | (~ ((uint(_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))))) + 1)) / 1u)))) << 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(usubBorrow((subgroup_id ^ subgroup_size), 99603u, next_virtual_gid)) : _GLF_IDENTITY(_GLF_IDENTITY(~ ((uint(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))))) / 1u), 0u | (~ ((uint(read_1 + 1)) / 1u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(read_1 + 1)), max(_GLF_IDENTITY((uint(read_1 + 1)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((uint(read_1 + 1)), uint(uvec3((uint(read_1 + 1)), 0u, 1u))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY((uint(read_1 + 1)), uint(uvec3((uint(read_1 + 1)), 0u, 1u))), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))), (uint(read_1 + 1)))) / 1u), 0u | (~ ((uint(read_1 + 1)) / 1u)))) << 0u), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(usubBorrow((subgroup_id ^ subgroup_size), 99603u, next_virtual_gid)) : _GLF_IDENTITY(_GLF_IDENTITY(~ ((uint(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))))) / 1u), 0u | (~ ((uint(read_1 + 1)) / 1u))), (_GLF_IDENTITY(~ ((uint(read_1 + 1)) / 1u), 0u | (~ ((uint(read_1 + 1)) / 1u)))) << 0u)), (false ? _GLF_FUZZED(read_1) : ~ (false ? _GLF_FUZZED(usubBorrow((subgroup_id ^ subgroup_size), 99603u, next_virtual_gid)) : _GLF_IDENTITY(_GLF_IDENTITY(~ ((uint(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))))) / 1u), 0u | (~ ((uint(read_1 + _GLF_IDENTITY(1, (1) << 0))) / 1u))), (_GLF_IDENTITY(~ ((uint(read_1 + 1)) / 1u), 0u | (~ ((uint(read_1 + 1)) / 1u)))) << 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ ((uint(read_1 + 1)) / 1u), 0u | (~ (_GLF_IDENTITY((uint(read_1 + 1)), ((uint(read_1 + 1))) | ((uint(read_1 + 1)))) / 1u))), (_GLF_IDENTITY(~ ((uint(read_1 + 1)) / 1u), 0u | (~ ((uint(read_1 + 1)) / 1u)))) | 0u)))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), false, false, true))) || false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)))))) && true))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
