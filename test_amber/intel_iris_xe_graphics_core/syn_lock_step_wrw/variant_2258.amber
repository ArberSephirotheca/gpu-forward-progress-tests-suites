#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
        }
       else
        {
        }
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(967.011))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / 1.0), injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(967.011))))))), max(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(967.011))))), _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(967.011))))), int(ivec2(_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(967.011))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(967.011))))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(967.011)))))) | 0), 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), int(ivec4((0), 1, 0, 0)))) / 1) | (0)) | 0), (-23269 & 0) | (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), int(ivec4((0), 1, 0, 0)))) / 1) | (0)) | 0), ((_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), int(ivec4((0), 1, 0, 0)))) / 1) | (0)) | 0)) << 0)))); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, 1543.5908, -76.90, 8.4, 463.904, 7.5, -8.4, -52.75, -1429.7915, 5.4, 25.22, -650.621, -5969.6541, -8.8, 44.58, 6114.8061))))), vec2(mat4x3(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, 1543.5908, -76.90, 8.4, 463.904, 7.5, -8.4, -52.75, -1429.7915, 5.4, 25.22, -650.621, -5969.6541, -8.8, 44.58, 6114.8061))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, 1543.5908, -76.90, 8.4, 463.904, 7.5, -8.4, -52.75, -1429.7915, 5.4, 25.22, -650.621, -5969.6541, -8.8, 44.58, 6114.8061))))), vec2(mat4x3(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, 1543.5908, -76.90, 8.4, 463.904, 7.5, -8.4, -52.75, -1429.7915, 5.4, 25.22, -650.621, -5969.6541, -8.8, 44.58, 6114.8061))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))) && true)) && true, false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), (true ? mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 0.0))[0], min(_GLF_IDENTITY((vec2(1.0, 0.0))[0], min((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[0])), (vec2(1.0, 0.0))[0])), _GLF_FUZZED(505.175)), vec2(_GLF_FUZZED(-2970.6242), (vec2(1.0, 0.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, 1543.5908, -76.90, 8.4, 463.904, 7.5, -8.4, -52.75, -1429.7915, 5.4, 25.22, -650.621, -5969.6541, -8.8, 44.58, 6114.8061))))), vec2(mat4x3(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, 1543.5908, -76.90, 8.4, 463.904, 7.5, -8.4, -52.75, -1429.7915, 5.4, 25.22, -650.621, -5969.6541, -8.8, 44.58, 6114.8061)))), (false ? _GLF_FUZZED(mat4(-7.3, 908.435, 30.02, -3.0, 5927.4333, 0.3, 70.09, 2.8, 1.9, -5185.4597, -3.8, 17.41, -90.24, 49.90, -102.086, 9711.2718)) : _GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, sqrt(1.0), 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, 1543.5908, -76.90, 8.4, 463.904, 7.5, -8.4, -52.75, -1429.7915, 5.4, 25.22, -650.621, -5969.6541, -8.8, 44.58, 6114.8061))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.4)), float(0.0), bool(true))), injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), 0.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-8.5) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, 1543.5908, -76.90, 8.4, 463.904, 7.5, -8.4, -52.75, -1429.7915, 5.4, 25.22, -650.621, -5969.6541, -8.8, 44.58, 6114.8061))))), vec2(mat4x3(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 1.0, length(0.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0) : _GLF_FUZZED(mat4(1.7, 1543.5908, -76.90, 8.4, 463.904, 7.5, -8.4, -52.75, -1429.7915, 5.4, 25.22, -650.621, -5969.6541, -8.8, 44.58, 6114.8061))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || (true)))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true))))))) && true)) && true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ _GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), max(_GLF_IDENTITY((gl_WorkGroupID.x), 1u * ((gl_WorkGroupID.x))), (gl_WorkGroupID.x)))))));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))) / 1u), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), subgroup_id * subgroup_size)), subgroup_id * subgroup_size))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))) / _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)) : _GLF_FUZZED(workgroup_size)))), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), subgroup_id * subgroup_size)), subgroup_id * subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))), ~ (~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))), ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size)))) ^ 0u)))) / 1u), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), subgroup_id * subgroup_size)), subgroup_id * subgroup_size))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))) / 1u), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (subgroup_id)))) * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) * 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))) / 1u, max(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))) / 1u, ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))) / 1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))) / 1u))), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), subgroup_id * subgroup_size)), subgroup_id * subgroup_size))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) | 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), (_GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1), 1u * (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : 0u), min((false ? _GLF_FUZZED(num_workgroup) : 0u), (false ? _GLF_FUZZED(num_workgroup) : 0u)))))) | 0u)), clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))) ^ 0u))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u), subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u), subgroup_size)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u), subgroup_size))), (clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u), subgroup_size)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u), subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) ^ 0u), _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) / 1u)))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) % subgroup_size), max(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) - 0)))) + 0), min((1) | 0, (1) | 0)))), ((_GLF_IDENTITY(1, _GLF_IDENTITY((1) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) - 0)))) + 0), min((1) | 0, (1) | 0))))) >> (1 ^ 1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) % subgroup_size))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id))), (subgroup_size) ^ 0u), subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-2812))), ~ (~ (1)))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size) | _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (141023u & 0u) + (((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)), min(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)))), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)), (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)) : _GLF_FUZZED(workgroup_size)))))) + ((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), (subgroup_size) ^ 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, ((subgroup_size) ^ 0u) / (1u & 1u)))))) : _GLF_FUZZED(num_workgroup))), subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), clamp((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))), subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) << 0)) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << (34997u & 0u))), uint(uvec3(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << (34997u & 0u))), 0u, 0u))))) / 1u))), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) % subgroup_size), uint(uint(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size), (subgroup_size))) ^ 0u), subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size))))))));
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 0.0))) > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 | 0) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (int(4)), (~ (int(4))) - 0))), (_GLF_IDENTITY(int(4), max(int(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))), _GLF_IDENTITY(int(4), 0 | _GLF_IDENTITY((int(4)), clamp((int(4)), (int(4)), (int(4)))))))) << 0)) | (int(4)))))); _injected_loop_counter --)
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), _GLF_IDENTITY(max(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) | 0))))), 1, _GLF_IDENTITY(1, min(1, 1)))), 1), (max(1, 1)) / 1))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) / _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, min((1) << 0, (1) << 0)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, 3))) / ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7))))), int(3))) ^ (1)), max(1, 1))), 0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(358.003))))), clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(358.003))))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(358.003))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(358.003)))))) * 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(358.003))))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(358.003))))), 0 + (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(358.003)))))))) - 0))), 1)), (int(ivec4(~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) << 0)), (~ (_GLF_IDENTITY(1, (1) << 0))) << 0))))), 1))), 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(1, (1) << 0)))) / _GLF_IDENTITY(1, (1) << 0))))))), (~ (uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1)), (int(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) / _GLF_IDENTITY(1, (1) << 0))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.1)))), float(_GLF_FUZZED(5764.3299)), bool(false))) < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(_GLF_IDENTITY(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)) << (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(0), ivec4(0)))))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(24788) : 1))))) << 0))) : _GLF_FUZZED(-39659)))))))) >> _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), max(~ (_GLF_IDENTITY(1, max(1, 1))), ~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), max(~ (_GLF_IDENTITY(1, max(1, 1))), ~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), (true ? ~ (_GLF_IDENTITY(1, max(1, 1))) : _GLF_FUZZED(55831))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, (3) - 0)))), 3, 3))), clamp(int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, (3) - 0)))), 3, 3))), int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, (3) - 0)))), 3, 3))), _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, (3) - 0)))), 3, 3))), (int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, (3) - 0)))), 3, 3)))) >> 0))), int(3))) ^ (1)), max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), max(_GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))) ^ (1), ~ (_GLF_IDENTITY(~ ((0 << _GLF_IDENTITY(int(3), int(3))) ^ (1)), (~ ((0 << _GLF_IDENTITY(int(3), int(3))) ^ (1))) ^ 0)))), max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), clamp(_GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (1)), max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (true ? int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))), max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)) : _GLF_FUZZED(_injected_loop_counter))), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (_GLF_IDENTITY(1, int(ivec2(1, 0))))), max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (1)), max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (1)), max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), (int(_GLF_IDENTITY(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1), clamp(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], float(mat3x2(injectionSwitch[1], 1.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[1], injectionSwitch[1])))).x), mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(857.294)))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1), ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-3.5, (-3.5) / 1.0))), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), 1), _GLF_IDENTITY(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) / determinant(mat4(1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1), (ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) / determinant(mat4(1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1)) - ivec4(0, 0, 0, 0)))))) / _GLF_IDENTITY(1, (1) << 0))))))), (~ (uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, max(1, 1))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1, (1) ^ (0 | 0)))), (int(_GLF_IDENTITY(ivec4(~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (_GLF_IDENTITY(ivec4(~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (0 | 0) + (max(1, 1))))) | (1))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (ivec4(~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)) ^ ivec4(0, 0, 0, 0))) | (ivec4(~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))), 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.4))))), 1))))) / _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(34009))))))))))) >> 0u)), max((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) | ((_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), max(int(3), int(3))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), int(3))) ^ (1)), max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), max(int(3), int(3))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), int(3))) ^ (1)), max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)) | ivec4(0, 0, 0, 0))), (int(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(4.7)))), float(_GLF_FUZZED(-7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1))) / _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), min((1), (1)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)), 0 ^ (_GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (1)), max(_GLF_IDENTITY(1, (1) | (1)), 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1))) / _GLF_IDENTITY(1, (1) << 0))))))))), (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), 1)), (int(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) / _GLF_IDENTITY(1, (1) << 0))))))), ((uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), 1)), (int(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) / _GLF_IDENTITY(1, (1) << 0)))))))) | 0u)) >> 0u)), (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (1)), max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), min(int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (1)), max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (1)), max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), (int(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3564.7396, 793.294)))).x))), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1))) / _GLF_IDENTITY(1, (1) << 0))))))), (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(int(ivec4(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), _GLF_IDENTITY(int(ivec4(max(1, 1), (((1 | 1) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 1, 0)), max(_GLF_IDENTITY(int(ivec4(max(1, 1), (((1 | 1) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 1, 0)), 0 | (int(ivec4(max(1, 1), (((1 | 1) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 1, 0)))), int(ivec4(max(1, 1), (((1 | 1) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 1, 0))))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) / _GLF_IDENTITY(1, (1) << 0)))))))) >> 0u))))) - 0u)), 4, 64, 4);
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
  }
 else
  {
  }
 for(int _injected_loop_counter = (((1 | 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((4054 * 53327) & 0)); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) ^ 0))), min(~ (4), ~ (4))))));
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
