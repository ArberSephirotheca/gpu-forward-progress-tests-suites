#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(52.74), _GLF_FUZZED(824.576)), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))))], (injectionSwitch)[1]), bvec2(true, true))).y, float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(52.74), _GLF_FUZZED(824.576)), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))))], (injectionSwitch)[1]), bvec2(true, true))).y, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), sqrt(exp(0.0)), 1.0)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(8.1)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! (! (! (false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), true && (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (! (false))), bool(bvec2((! (! (false))), true))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))) || false, ((_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false)))))))) || false) && true))) || false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), false, true))))))))), false || ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), false, true))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), false, true))))))))), false || ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), false, true)))))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), false, true))))))))), false || ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), false, true)))))))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_IDENTITY(true, (true) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))), false || (! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false)))))), true && (! (! (! (false))))))))))))) || false)) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true && (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), bool(bvec2((! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), _GLF_IDENTITY(true, ! (! (true))) && (! (! (! (false)))))))) || false)) || false)), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), false || (! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (! (! (false)))))), true && (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false)), true), false, true))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_IDENTITY(true, (true) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))), false || (! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false)))))), true && (! (! (! (false))))))))))))) || false)) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true && (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), bool(bvec2((! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), _GLF_IDENTITY(true, ! (! (true))) && (! (! (! (false)))))))) || false)) || false)), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), false || (! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (! (! (false)))))), true && (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false)), true), false, true))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_IDENTITY(true, (true) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))), false || (! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false)))))), true && (! (! (! (false))))))))))))) || false)) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true && (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), bool(bvec2((! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), _GLF_IDENTITY(true, ! (! (true))) && (! (! (! (false)))))))) || false)) || false)), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), false || (! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (! (! (false)))))), true && (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false)), true), false, true))))))))), true && ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_IDENTITY(true, (true) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))), false || (! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false)))))), true && (! (! (! (false))))))))))))) || false)) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true && (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), bool(bvec2((! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), _GLF_IDENTITY(true, ! (! (true))) && (! (! (! (false)))))))) || false)) || false)), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), false || (! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (! (! (false)))))), true && (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))) || false)) || false)), true), false, true)))))))))))) || false))), false || ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))))))))), true && (! (! (! (false)))))))) || false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (! (! (! (false)))))))) || false)) || false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, false || (false))))) || false)) && true), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true)))), true && (! (! (! (false)))))))) || false)) || false)), true), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, false || (false))))) || false)) && true), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true)))), true && (! (! (! (false)))))))) || false)) || false)), true), false, true)))))))))))))))))))))) && true)))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), true, false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u)) + (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))), (uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))) | uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec4(0u ^ (subgroup_id * subgroup_size), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, max(0u, 0u))))) | 0u), 0u, 1u), _GLF_IDENTITY((uvec4(0u ^ (subgroup_id * subgroup_size), 0u, 0u, 1u)) | (uvec4(0u ^ (subgroup_id * subgroup_size), 0u, 0u, 1u)), uvec4(0u, 0u, 0u, 0u) + ((uvec4(_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (_GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), ~ (~ (0u ^ (subgroup_id * subgroup_size))))) + 0u), 0u, 0u, 1u)) | (uvec4(0u ^ (subgroup_id * subgroup_size), 0u, 0u, 1u)))))))), ~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u, 0u, 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((subgroup_id) ^ 0u) >> 0u)) * subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), max(0u ^ (subgroup_id * subgroup_size), 0u ^ (subgroup_id * subgroup_size))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : ((subgroup_local_id + 1) % subgroup_size))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / (1u | 0u))), ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(1, (1) | (1)))), (~ (int(_GLF_IDENTITY(1, (1) | (1))))) - 0))))))) >> 0u) % subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : ((subgroup_local_id + 1) % subgroup_size)))) << 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4939.0993)), vec2(_GLF_FUZZED(-47.81), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 0 ^ (4)), 4))) | (4)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) - 0) | 0), (4) | (4))), max((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | ((4))) | (4))))) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), int(ivec4(_GLF_IDENTITY(int(4), int(4)), 1, 0, 1))), _GLF_IDENTITY(int(4), int(4)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), int(ivec4(_GLF_IDENTITY(int(4), int(4)), 1, 0, 1))), _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), int(ivec4(_GLF_IDENTITY(int(4), int(4)), 1, 0, 1))), _GLF_IDENTITY(int(4), int(4))))))) | (_GLF_IDENTITY(int(4), int(4))))))) | (4)), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 1u)))), clamp(~ (_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 1u)))), ~ (_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 1u)))), ~ (_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 1u)))))))), (read_1) / 1u) + _GLF_IDENTITY(1, max(1, 1))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false || (false)), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) || false), false || ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false, true)))))))))))), true, false))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, false || (false))) || false, false)), ! (! (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, false || (false))) || false, false)), (bool(bvec2((_GLF_IDENTITY(false, false || (false))) || false, false))) || false)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(73.99, -22.23)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), false)))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
