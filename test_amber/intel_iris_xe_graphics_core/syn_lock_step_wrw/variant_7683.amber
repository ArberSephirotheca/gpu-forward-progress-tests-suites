#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, abs(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-47.14)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3x4(injectionSwitch.x, abs(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-47.14)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(true, bool(bool(true))) ? transpose(mat3x4(injectionSwitch.x, abs(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-47.14)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x3(-183.752, -2.8, 2.9, 7.7, -9.0, 0.8, -0.1, 43.93, -4.5, _GLF_IDENTITY(3.3, clamp(3.3, _GLF_IDENTITY(3.3, (3.3) / 1.0), 3.3)), 4303.0357, -4052.1049)))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false))), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.5) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(log2(injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(85.81)), bool(false))))))), (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(log2(injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(85.81)), bool(false)))))))) || false), false, true, false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / exp(vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0)), (float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0))) - 0.0)), max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(1.0, 1.0) * (injectionSwitch)).y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-55.90) : 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-55.90) : 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-55.90) : 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-55.90) : 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(272.102), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), bvec2(true, false))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / exp(0.0), min((injectionSwitch.y) / exp(0.0), (injectionSwitch.y) / exp(0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)), clamp(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0))))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y)) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.3, 1.7)))).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(31.20, 626.524, -1629.4338).s)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / exp(0.0)), injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(272.102), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), bvec2(true, false))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / exp(0.0), min((injectionSwitch.y) / exp(0.0), (injectionSwitch.y) / exp(0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)), clamp(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0))))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y)) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.3, 1.7)))).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(31.20, 626.524, -1629.4338).s)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / exp(0.0)), injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(272.102), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), bvec2(true, false))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / exp(0.0), min((injectionSwitch.y) / exp(0.0), (injectionSwitch.y) / exp(0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)), clamp(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0))))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y)) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.3, 1.7)))).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(31.20, 626.524, -1629.4338).s)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / exp(0.0)), injectionSwitch.y)))))))), (! (! (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(272.102), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), bvec2(true, false))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / exp(0.0), min((injectionSwitch.y) / exp(0.0), (injectionSwitch.y) / exp(0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)), clamp(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0)))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0))))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y)) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.3, 1.7)))).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(31.20, 626.524, -1629.4338).s)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / exp(0.0)), injectionSwitch.y))))))))) && true))))))))) || false)), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0)))))))) || false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || false))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3837.4054) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-875.695) : 1.0)), 1.0)).y) || false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || _GLF_IDENTITY(false, (false) && true)))), (bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, true)))) || false)))) || false))))) && true, bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3837.4054) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-875.695) : 1.0)), 1.0)).y) || false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || _GLF_IDENTITY(false, (false) && true)))), (bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, true)))) || false)))) || false))))) && true, true), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3837.4054) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-875.695) : 1.0)), 1.0)).y) || false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) || _GLF_IDENTITY(false, (false) && true)))), (bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, true)))) || false)))) || false))))) && true, true), true, true))))))), ! (! (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y) || false)))))), bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), true, true, true)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-3.6, -22.95).x)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0))), bool(true)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (false ? _GLF_FUZZED(refract(-9811.8308, -2.4, refract(-5.4, 93.05, 4.1))) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, float(mat3x2(_GLF_IDENTITY((injectionSwitch.x) / 1.0, clamp((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(217.106, 4.9)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) || false)))) || false))))) || false)))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) || false))))), ! (! (bool(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), true && (bool(bvec2(! (false), false))))))), ((injectionSwitch.x > injectionSwitch.y) || false) && _GLF_IDENTITY(true, (true) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) && _GLF_IDENTITY(true, (true) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, sin(0.0)), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(injectionSwitch.y, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, sin(0.0)))))))))))) || false)))))))) && _GLF_IDENTITY(true, ! (! (true))), bool(bool((_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, abs(1.0), 1.0, log(1.0), 1.0, 1.0))), 1.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, abs(1.0), 1.0, log(1.0), 1.0, 1.0))), 1.0, 1.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0))))).x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, abs(1.0), 1.0, log(1.0), 1.0, 1.0))), 1.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, abs(1.0), 1.0, log(1.0), 1.0, 1.0))), 1.0, 1.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0))))).x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bvec3(! (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, abs(1.0), 1.0, log(1.0), 1.0, 1.0))), 1.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, abs(1.0), 1.0, log(1.0), 1.0, 1.0))), 1.0, 1.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0))))).x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, true))))), bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), mat2(mat2(mat2(injectionSwitch, 0.0, 1.0)))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), mat2(mat2(mat2(injectionSwitch, 0.0, 1.0)))))).x) * 1.0), (injectionSwitch.x) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || false)))))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) || false)))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) || false))))) || false)), ! (! (bool(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2376.4370) : injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) && _GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (_GLF_IDENTITY(! ((true) || false), ! (! (! (_GLF_IDENTITY((true), false || ((true))) || false)))))))))) || false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9738.8377) : injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) && _GLF_IDENTITY(true, (true) || false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) && _GLF_IDENTITY(true, (true) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))))) && _GLF_IDENTITY(true, ! (! (true))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true), false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), true)))))))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), true)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(9.4, -7.2, 9461.9855).rb), (true ? _GLF_FUZZED(vec3(9.4, -7.2, 9461.9855).rb) : _GLF_FUZZED(vec2(-30.63, 20.85)))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true)), false)))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-553.493)), float(injectionSwitch.x), bool(true)))) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, false, true)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(true, true && (true)) ? gl_WorkGroupSize.x : _GLF_FUZZED((subgroup_id - num_workgroup)))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, false)))))))) ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(true, true && (true)) ? gl_WorkGroupSize.x : _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) - num_workgroup)))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))) ? gl_WorkGroupSize.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), gl_WorkGroupSize.x))) ^ ((0u ^ 0u) & 70424u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x) << 0u, (true ? (gl_WorkGroupID.x) << 0u : _GLF_FUZZED(uvec4(124031u, 94673u, 124630u, 42672u)[3]))), (_GLF_IDENTITY((gl_WorkGroupID.x) << 0u, (true ? (gl_WorkGroupID.x) << 0u : _GLF_FUZZED(uvec4(124031u, 94673u, 124630u, 42672u)[3])))) | (_GLF_IDENTITY((gl_WorkGroupID.x) << 0u, (true ? (gl_WorkGroupID.x) << 0u : _GLF_FUZZED(uvec4(124031u, 94673u, 124630u, 42672u)[3])))))), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(168001u) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))), max((_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))))))) >> 0u)) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) >> 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | ((gl_WorkGroupID.x))) << 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) >> 0u)))) >> 0u)) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), (_GLF_IDENTITY(~ ((gl_WorkGroupID.x)), max(~ ((gl_WorkGroupID.x)), ~ ((gl_WorkGroupID.x))))) ^ 0u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), 0u | (gl_WorkGroupID.x)), max(gl_WorkGroupID.x, gl_WorkGroupID.x))) >> 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) && true), true))))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY(! (! (bool(bvec2(true, false)))), false || (_GLF_IDENTITY(! (! (bool(bvec2(true, false)))), bool(bool(! (! (bool(bvec2(true, false))))))))))) && (_GLF_IDENTITY(false, true && (false))))), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) - 0u)) / (0u ^ 1u)), uint(uvec2(subgroup_id, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u)))) + 0u) * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u | (subgroup_id)) * subgroup_size) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) | (1u))))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_IDENTITY(_GLF_FUZZED(183223u), max(_GLF_FUZZED(183223u), _GLF_FUZZED(183223u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u))))))) - 0u)), (false ? _GLF_FUZZED(170882u) : max(_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) / 1u)), min((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), min(0u << _GLF_IDENTITY(uint(1u), uint(1u)), 0u << _GLF_IDENTITY(uint(1u), uint(1u))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)), ((true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u))) >> 0u)) | ((true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))))), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u))))))) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u))))))) | 0u), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, ~ (~ (1u)))))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))))))), ((workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), (uint(_GLF_IDENTITY(1u, (1u) | (1u)))) >> 0u)) * 1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicCompSwap(workgroup_base, workgroup_base, subgroup_id)) : _GLF_IDENTITY(1u, (1u) ^ 0u)))), uint(1u))), min((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u)))) + 0u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))) ^ 0u)))))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u))), min(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u))))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))))), max(_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u), uint(1u))), min((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u), 0u | (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))))), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), min((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(uvec4(0u << _GLF_IDENTITY(uint(1u), uint(1u)), 0u, 1u, 1u)))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) / 1u))), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u))))))) - 0u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(uint(true)) : 1u)))) : _GLF_FUZZED(183223u))))))))))) | ((workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) | (1u))))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), max(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicAdd(workgroup_id, virtual_gid)) : 1u))), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), 0u | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u))))))))) - 0u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u))))), (min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(183223u)))))) - 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u))) << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) >> (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (uint(3u))))))))), min((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | 0u)), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(_GLF_IDENTITY(true ? uint(1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))), virtual_gid))), ~ (~ (true ? uint(1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))), virtual_gid)))))), (true ? uint(1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))), virtual_gid)))) - 0u))))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY(max(workgroup_base, workgroup_base), ~ (_GLF_IDENTITY(~ (max(workgroup_base, workgroup_base)), _GLF_IDENTITY((~ (max(workgroup_base, workgroup_base))) | (~ (max(workgroup_base, workgroup_base))), 1u * ((~ (max(workgroup_base, workgroup_base))) | (~ (max(workgroup_base, workgroup_base))))))))) + subgroup_id * subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), ((1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u, clamp((_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u))))) >> 0u))))), (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) ? (0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), ((1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u, clamp((_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u))))) >> 0u))))) : _GLF_FUZZED(atomicMax(subgroup_local_id, workgroup_base)))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) * 1u)))), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, ((0u | 0u) | 0u) + (0u)), 0u + (_GLF_IDENTITY(0u, (0u) | 0u))), 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), 1u)))))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) * 1u)))), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, ((0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u)) | 0u) + (0u)), 0u + (_GLF_IDENTITY(0u, (0u) | 0u))), 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) / 1u, max((uint(1u)) / 1u, (uint(1u)) / 1u))), uint(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), 1u))))))))))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, ~ (~ (1u)))))), (true ? uint(1u) : _GLF_FUZZED((num_workgroup / min(subgroup_id, subgroup_size))))))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_IDENTITY(uvec2(0u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u), (false ? _GLF_FUZZED(uvec2(106012u, 133243u)) : uvec2(0u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u)))))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (false ? _GLF_FUZZED(workgroup_id) : 0u << _GLF_IDENTITY(uint(1u), uint(1u))))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u)))) / 1u)))))) + 0u))))), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY(max(workgroup_base, workgroup_base), ~ (_GLF_IDENTITY(~ (max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))), (~ (max(workgroup_base, workgroup_base))) | (~ (max(workgroup_base, workgroup_base))))))) + subgroup_id * subgroup_size) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), ((1u) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u))) >> 0u))))), min((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u))), _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), min((0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) * 1u)))), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, ((0u | 0u) | 0u) + (0u)), 0u + (_GLF_IDENTITY(0u, (0u) | 0u))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) ^ 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) / 1u, (_GLF_IDENTITY((uint(1u)) / 1u, uint(uvec2(_GLF_IDENTITY((uint(1u)) / 1u, (false ? _GLF_FUZZED(subgroup_id) : (uint(1u)) / 1u)), 1u)))) | (0u ^ 0u))), uint(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), uint(1u)), 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED((num_workgroup / min(subgroup_id, subgroup_size))))))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_IDENTITY(uvec2(0u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(106012u, 133243u)), (false ? _GLF_FUZZED(uvec2(189323u, 147561u)) : _GLF_FUZZED(uvec2(106012u, 133243u)))) : uvec2(0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), 1u, 0u))) ^ 0u)) : _GLF_FUZZED(workgroup_size)))), 1u)))))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (false ? _GLF_FUZZED(workgroup_id) : 0u << _GLF_IDENTITY(uint(1u), uint(1u))))), min((0u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u)))) / 1u)))))) + _GLF_IDENTITY(0u, max(0u, 0u)))))))) - 0u) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) | (_GLF_IDENTITY(1u, 0u ^ (1u)))))))) / 1u) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) && true) ? 1 : _GLF_IDENTITY(_GLF_FUZZED(46435), max(_GLF_IDENTITY(_GLF_FUZZED(46435), (_GLF_IDENTITY(_GLF_FUZZED(46435), (_GLF_FUZZED(46435)) / 1)) | 0), _GLF_FUZZED(46435)))))), _GLF_IDENTITY(clamp((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(46435)), clamp((true ? 1 : _GLF_FUZZED(46435)), (true ? 1 : _GLF_FUZZED(46435)), (true ? 1 : _GLF_FUZZED(46435)))))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435))))))), (subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435))))), min(_GLF_IDENTITY(clamp((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(46435)), clamp((true ? 1 : _GLF_FUZZED(46435)), (true ? 1 : _GLF_FUZZED(46435)), (true ? 1 : _GLF_FUZZED(46435)))))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435))))))), (subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435))))), min(clamp((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(46435)), clamp((true ? 1 : _GLF_FUZZED(46435)), (true ? 1 : _GLF_FUZZED(46435)), (true ? 1 : _GLF_FUZZED(46435)))))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435))))))), (subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435))))), clamp((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(46435)), clamp((true ? 1 : _GLF_FUZZED(46435)), (true ? 1 : _GLF_FUZZED(46435)), (true ? 1 : _GLF_FUZZED(46435)))))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435))))))), (subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435))))))), clamp((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(46435)), clamp((true ? 1 : _GLF_FUZZED(46435)), (true ? 1 : _GLF_FUZZED(46435)), (true ? 1 : _GLF_FUZZED(46435)))))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435))))))), (subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46435)))))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! ((bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).y))))), false, false)))) && true)) || false, ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! ((bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! ((bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false || (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, abs(1.0), 0.0))) : _GLF_FUZZED(round(injectionSwitch)))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).y))))), false, false)))) && true)) || false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(ceil(injectionSwitch[0]))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-77.92)), bool(false)))))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))]) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), int(int(_GLF_IDENTITY(4, (4) / 1))))) >> (1 ^ 1)) : _GLF_FUZZED((-46551 / 64139)))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
