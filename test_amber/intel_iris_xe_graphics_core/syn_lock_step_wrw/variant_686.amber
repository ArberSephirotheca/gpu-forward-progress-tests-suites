#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (_GLF_IDENTITY(1 ^ 0, min(1 ^ 0, _GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, (1 ^ 0) | (1 ^ 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (_GLF_IDENTITY(1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), max(1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), 1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (false))))
          {
           do
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
               if(_GLF_DEAD(false))
                continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) | 0, min(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) | 0, (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))) >> 0) | 0) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> _GLF_IDENTITY((1 ^ 1), 0 | ((1 ^ 1)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bool((false) && true))))))))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))))) || false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             continue;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true)), (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true))) && true)), true, false, false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_IDENTITY(true, ! (! (true))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false)))))))))))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(trunc(825.989)) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8644.6189) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), injectionSwitch.y))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec3(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false, false))))))))))))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))));
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) | 0))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false), ! (! _GLF_IDENTITY((false), ! (! ((false)))))) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), false, true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), false, false, false)))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false)))))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
                    barrier();
                   return;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))) && true))))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, false || (true)))), ! (! (bool(bvec3(false, false, _GLF_IDENTITY(true, false || (true))))))))) || false))) && true));
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false)))
            barrier();
          }
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     else
      {
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 | int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (_GLF_IDENTITY(! (_injected_loop_counter < (1 | int(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec2(! (_injected_loop_counter < (1 | int(_GLF_ZERO(0.0, injectionSwitch.x)))), true)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 do
  {
   for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (1) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) ^ 0), 0, 1, 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6))))))))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, clamp(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, max(6, 6)), 6)), (6) - 0), 6, 6)) : _GLF_FUZZED(59664)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) / (1 ^ 0))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), false))))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))))), true && (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))))))) && true))
                {
                 do
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, true))))))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), false))))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))))
                  barrier();
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(113.443)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y))))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(intBitsToFloat(_injected_loop_counter)))))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
            }
           else
            {
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = (_GLF_IDENTITY(0 & (-14824), clamp(0 & (-14824), 0 & (-14824), _GLF_IDENTITY(0 & (-14824), max(0 & (-14824), 0 & (-14824)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0))) < ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, false))), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-68.53)), vec2(_GLF_FUZZED((9875.0419)), (injectionSwitch)[1]), bvec2(false, true)))[1])).x > injectionSwitch.y))) || false))))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_IDENTITY(ivec2(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0), max(ivec2(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0), ivec2(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)))))), (true ? ~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_IDENTITY(ivec2(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0), max(ivec2(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0), ivec2(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)))))) : _GLF_FUZZED(_injected_loop_counter)))))) >> 0)); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0))))))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-485.870, 16.68)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       barrier();
      }
     else
      {
      }
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & (~ -94187))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))) && true))) && true), true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))), true && (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && _GLF_IDENTITY((false), ((false)) || false)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))), bool(bvec2(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), true))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))), bool(bvec2(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), true))), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))), true && (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && _GLF_IDENTITY((false), ((false)) || false)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))), bool(bvec2(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), true))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))), bool(bvec2(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), true))), false)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.2, -336.514)) : injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 0 | (5))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, int(int(5)))), min(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(int(5), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (int(5)), (_GLF_IDENTITY(~ (int(5)), (true ? ~ (int(5)) : _GLF_FUZZED(-21383)))) >> 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (_GLF_IDENTITY(~ (int(5)), (_GLF_IDENTITY(~ (int(5)), (true ? ~ (int(5)) : _GLF_FUZZED(-21383)))) >> 0))))))), int(5)))); _injected_loop_counter ++)
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0)), float(vec3(float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0)), 1.0, 1.0)))) > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u, 0u | (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, length(0.0), 1.0, 0.0))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, length(0.0), 1.0, 0.0))))).x > injectionSwitch.y))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) | (0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))) || false); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             return;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             return;
             if(_GLF_DEAD(false))
              break;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) + vec2(0.0, 0.0)))).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) + vec2(0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) + vec2(0.0, 0.0)))).y))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true))))) && true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) / (0 ^ 1)), _GLF_IDENTITY(int(6), (int(6)) ^ 0)), 0 ^ ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (! (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, ~ (~ ((subgroup_size) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), max(subgroup_size, subgroup_size)))), (false ? _GLF_FUZZED(102822u) : subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) / 1u), (((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (1u ^ 1u) + (5u))), uint(5u))) * (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), subgroup_size)))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (subgroup_local_id + 1) / 1u)) / 1u))))) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | 0u, ((next_virtual_gid) | 0u) | (_GLF_IDENTITY((next_virtual_gid) | 0u, (_GLF_IDENTITY((next_virtual_gid) | 0u, max((next_virtual_gid) | 0u, (next_virtual_gid) | 0u))) ^ 0u))))) ^ 0u), max(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, 0u | (0u)) ^ (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))))) ^ 0u)], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(89576) : 4)), (4) ^ 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (4) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (4) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(int((4)))) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, ~ (~ ((0) + 0))))))) : _GLF_FUZZED(-3635))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, max((4) ^ 0, _GLF_IDENTITY((4) ^ 0, ((4) ^ 0) ^ 0)))) : _GLF_FUZZED(-3635))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(-3635), min(_GLF_FUZZED(-3635), _GLF_FUZZED(-3635))), min(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635)) | (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) << 0))), _GLF_IDENTITY((4), ((4)) << (1 ^ 1)) ^ 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))), (float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))))) + 0.0), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))), (float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))))) + 0.0)), float(_GLF_FUZZED(vec2(-435.599, -12.35).s)), bool(false))))) - log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, log(1.0)))))))))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635)))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(89576) : 4)), (4) ^ 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (0) * 1)), (4) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, ((4) ^ 0) - 0))) << 0, 0 | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635)))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, (0) + 0)))) : _GLF_FUZZED(-3635))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, max(0, 0))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y)))))))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, clamp((4) ^ 0, (4) ^ 0, (4) ^ 0))) : _GLF_FUZZED(-3635), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, _GLF_IDENTITY((4), int(_GLF_ONE(1.0, injectionSwitch.y)) * ((4))) ^ 0) : _GLF_FUZZED(-3635), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << (1 ^ 1)) ^ 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))), _GLF_IDENTITY((float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))))), float(mat4x2((float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) + 0.0))) - log(1.0)))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))))))) | 0)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(findMSB(subgroup_size)))), _GLF_IDENTITY((4) ^ 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4) ^ 0, ((4) ^ 0) ^ 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((4) ^ 0, ((4) ^ 0) ^ 0)), (~ (_GLF_IDENTITY((4) ^ 0, ((4) ^ 0) ^ 0))) / 1)) << 0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(89576) : 4)), (4) ^ 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (_GLF_IDENTITY(4, (4) ^ 0)) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0), (0 | 0) | ((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(89576) : 4)), (4) ^ 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (_GLF_IDENTITY(4, (4) ^ 0)) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0), (0 | 0) | ((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(89576) : 4)), (4) ^ 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (_GLF_IDENTITY(4, (4) ^ 0)) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0), (0 | 0) | ((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(89576) : 4)), (4) ^ 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (_GLF_IDENTITY(4, (4) ^ 0)) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0), (0 | 0) | ((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(89576) : 4)), (4) ^ 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (_GLF_IDENTITY(4, (4) ^ 0)) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0), (0 | 0) | ((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), true && (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, abs(0.0), 0.0))) < injectionSwitch.y) && true))) ? _GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-36992))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (_GLF_IDENTITY(0, (0) + 0)) * 1)))) : _GLF_FUZZED(-3635))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635)) << 0))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(int(4))))), (4) ^ 0) : _GLF_FUZZED(-3635), min(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(91954) : (4))) ^ 0) : _GLF_FUZZED(-3635), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, (_GLF_IDENTITY((4) ^ 0, ((4) ^ 0) | ((4) ^ 0))) * 1)) : _GLF_FUZZED(-3635), int(int(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(270.302)), float(injectionSwitch.y), bool(true))))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635)) / 1)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << (1 ^ 1)) ^ 0), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, determinant(mat3(sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (injectionSwitch.y))), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))), (float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0))))) + 0.0))) - log(1.0)))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635), 1 * (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, determinant(mat3(sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (injectionSwitch.y))), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))), (float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0))))) + 0.0))) - log(1.0)))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635)))))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(89576) : _GLF_IDENTITY(4, 0 | (4)))), (4) ^ 0), _GLF_IDENTITY(1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (4) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)), 0 | ((_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, clamp((4) ^ 0, (4) ^ 0, (4) ^ 0)))) << 0))) | ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (false ? _GLF_FUZZED(23436) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(4, (4) ^ 0)) * 1)))) << 0)))), ~ (~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (4) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (4) ^ 0)) / 1), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0), 0 + ((_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, _GLF_IDENTITY(0, (0) | (0)) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, 0 + (0)))) << 0)))))), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13663)))), (4) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-36417)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))), min(~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0)))) | (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)) << 0, 0 | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) ^ 0)) << 0))) | ((_GLF_IDENTITY(4, (4) ^ 0)) << 0)))))))))))) * 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, (0) + 0)))) : _GLF_FUZZED(-3635))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, (0) + 0)))) : _GLF_FUZZED(-3635)))) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), (4) ^ 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, 1), max(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), ivec3(4, 1, 1))))), (4) ^ 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) ^ 0))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) | 0)))), 0, 1)))) ^ 0) : _GLF_FUZZED(-3635), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), false || (bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.5)), bool(false)))) < injectionSwitch.y))))))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635), int(int(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), false || (bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.5)), bool(false)))) < injectionSwitch.y))))))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), int(ivec3(_GLF_IDENTITY((4), ~ (~ ((4)))), 0, 0)))) << (1 ^ 1)) ^ 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))), (float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))))) + 0.0))) - log(1.0)))) ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-3635))))))) | 0)))), 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid))], 4, _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), clamp(0, 0, _GLF_IDENTITY(0, (0) ^ 0))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), true && (! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))), false || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true)))))), ! (! (! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec3((true) && true, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3((true) && true, true, true)), true, true), bvec3(bvec3(bvec3(bool(bvec3((true) && true, true, true)), true, true)))))))), true, true)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))), false || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true)))))), ! (! (! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec3((true) && true, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3((true) && true, true, true)), true, true), bvec3(bvec3(bvec3(bool(bvec3((true) && true, true, true)), true, true)))))))), true, true)))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))), false || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true)))))), ! (! (! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec3((true) && true, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3((true) && true, true, true)), true, true), bvec3(bvec3(bvec3(bool(bvec3((true) && true, true, true)), true, true)))))))), true, true))))))))))))))))))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) && true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, ! (! (true))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true)))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY((1 & 1), 1 * ((1 & 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) << 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true));
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(mat3(5.9, 3497.2891, 11.82, -3.9, _GLF_IDENTITY(-688.095, max(-688.095, _GLF_IDENTITY(-688.095, (-688.095) + 0.0))), 623.084, -6.1, -6.4, -2.4))))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(mat3(5.9, 3497.2891, 11.82, -3.9, -688.095, 623.084, _GLF_IDENTITY(-6.1, (-6.1) - 0.0), -6.4, -2.4)))))) - vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (float(float(injectionSwitch.y))) - 0.0))))))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
  }
 do
  {
   do
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      break;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), 0 + (_GLF_IDENTITY((4), clamp((4), (4), (4))))) | 0, (_GLF_IDENTITY((4), 0 + (_GLF_IDENTITY((4), clamp((4), (4), (4))))) | 0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) | 0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) | 0))), clamp(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) | 0))), _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) | 0))), _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) | 0))))))))) | (_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) | 0))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, int(ivec2(64, 0))))), min((~ (_GLF_IDENTITY(64, int(ivec2(64, 0))))), (~ (_GLF_IDENTITY(64, int(ivec2(64, 0)))))))), _GLF_IDENTITY(64, max(64, 64)))), 4);
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), tan(0.0), 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))) && true)) && true));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true && (false))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(24.81)), bool(false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(-8361.2143)), vec2(_GLF_FUZZED(-979.975), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(-68432)), max(_GLF_IDENTITY(_GLF_FUZZED(float(-68432)), float(mat2x3(_GLF_FUZZED(float(-68432)), sqrt(0.0), 0.0, 1.0, sin(0.0), sqrt(0.0)))), _GLF_FUZZED(float(-68432))))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(2208.0662)), bool(false)))), bool(true))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(dot(vec4(93.85, 7066.1226, -9.2, 27.12), vec4(-4.4, -8503.8091, -39.41, -2.7)))))) * 1.0) < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (_GLF_IDENTITY(bool(bvec2(true, true)), (_GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), true, false)))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(mat2x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), min(mat2(1.0) * (vec2(mat2x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), mat2(1.0) * (vec2(mat2x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))))) - vec2(0.0, 0.0)).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y, (injectionSwitch.x < injectionSwitch.y) && true)) && true))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - _GLF_IDENTITY(tan(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-495.280), (tan(vec2(0.0, 0.0)))[1]), vec2((tan(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-585.926)), bvec2(true, false))), mat2(1.0) * ((injectionSwitch) - tan(vec2(0.0, 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - _GLF_IDENTITY(tan(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-495.280), (tan(vec2(0.0, 0.0)))[1]), vec2((tan(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-585.926)), bvec2(true, false))), mat2(1.0) * ((injectionSwitch) - tan(vec2(0.0, 0.0))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - _GLF_IDENTITY(tan(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-495.280), (tan(vec2(0.0, 0.0)))[1]), vec2((tan(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-585.926)), bvec2(true, false))), mat2(1.0) * ((injectionSwitch) - tan(vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - _GLF_IDENTITY(tan(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-495.280), (tan(vec2(0.0, 0.0)))[1]), vec2((tan(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-585.926)), bvec2(true, false))), mat2(1.0) * ((injectionSwitch) - tan(vec2(0.0, 0.0))))))))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((- 9779.3358)), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(1.9)), bvec2(true, false))), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - _GLF_IDENTITY(tan(vec2(0.0, 0.0)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-495.280), mix(float(_GLF_FUZZED(-495.280)), float(_GLF_FUZZED(-4450.9355)), bool(false))), (tan(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))[1]), _GLF_IDENTITY(vec2((tan(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-585.926)), mix(vec2(_GLF_FUZZED(9.3), (vec2((tan(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-585.926)))[1]), vec2((vec2((tan(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-585.926)))[0], _GLF_FUZZED(78.22)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(true, false))), mat2(1.0) * ((injectionSwitch) - tan(vec2(0.0, 0.0))))).y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((- 9779.3358)), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(1.9)), bvec2(true, false))), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - _GLF_IDENTITY(tan(vec2(0.0, 0.0)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-495.280), mix(float(_GLF_FUZZED(-495.280)), float(_GLF_FUZZED(-4450.9355)), bool(false))), (tan(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))[1]), _GLF_IDENTITY(vec2((tan(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-585.926)), mix(vec2(_GLF_FUZZED(9.3), (vec2((tan(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-585.926)))[1]), vec2((vec2((tan(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-585.926)))[0], _GLF_FUZZED(78.22)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(true, false))), mat2(1.0) * ((injectionSwitch) - tan(vec2(0.0, 0.0))))).y)))))))), false, false, false)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true), _GLF_IDENTITY(false, (false) || false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))) < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))) < injectionSwitch.y), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))) < injectionSwitch.y)), bool(bvec2(! (bool(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))) < injectionSwitch.y)), true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, false)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-38.44))) < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5035.3848)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5035.3848)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5035.3848)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5035.3848)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))), true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(false, false || (false))))) && true)), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0), (mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)) * mat2(1.0))), vec2(mat2x4(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0), (mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), length(vec4(0.0, 0.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, sqrt(1.0), 1.0)))).y)), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, ! (! (false))), false))) && true))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true, ! (! ((bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true))), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY((bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true, ! (! ((bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true))), true, true, true)))))))), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (false)), true && (false)), false, false))) && true))) && true)), false || (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false))) && true), (bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, true && (false)), false, false))) && true)), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true))) && true)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false))) && true), (bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, true && (false)), false, false))) && true)), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true))) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false))) && true), (bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), _GLF_IDENTITY(false, true && (false)), false, false))) && true)), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true))) && true)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false))) && true), (bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)))), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))))) || false))), _GLF_IDENTITY(false, true && (false)), false, false))) && true)), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-670.272)), vec2(_GLF_FUZZED(9181.0182), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, ! (! (false))), false))) && true))) && true)))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false))) && true), (bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, true && (false)), false, false))) && true)), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true))) && true)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false))) && true), (bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), _GLF_IDENTITY(false, true && (false)), false, false))) && true)), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), false, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true))) && true)))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(36.33), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(36.33), mix(float(_GLF_FUZZED(36.33)), float(_GLF_FUZZED(-93.38)), bool(false)))), min(float(_GLF_IDENTITY(_GLF_FUZZED(36.33), mix(float(_GLF_FUZZED(36.33)), float(_GLF_FUZZED(-93.38)), bool(false)))), float(_GLF_IDENTITY(_GLF_FUZZED(36.33), mix(float(_GLF_FUZZED(36.33)), float(_GLF_FUZZED(-93.38)), bool(false)))))))))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(282.576, -4540.9220)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x < injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))), _GLF_IDENTITY(false, true && (false)), false, false))) && true), (bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9884.0837)), vec2(_GLF_FUZZED(-10.89), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, true, false))))))))).x < injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))) && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))) && (false))) || false)))), false, false))) && true)), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))), false), false)), false)))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), false))), false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), false))), false, false)))), (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))), false)))), false, false))) && true), (bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.3))) < injectionSwitch.y)))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)))))), _GLF_IDENTITY(false, true && (false)), false, false))) && true)), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), false, true))), true, true, false)))) || false), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))), _GLF_IDENTITY(false, true && (false)), false, false))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))) && true)))))))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))) && true)), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))), false)), _GLF_IDENTITY((bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true, ((bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true)))) && (false)), false, false))) && true) || false))), ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(false, true && (false)), false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true, _GLF_IDENTITY(false || ((bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(5586.5752)), bool(false)))), vec2(_GLF_FUZZED(-398.498), _GLF_FUZZED((+ 71.53))), bvec2(false, false))).x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false))))), false, false))) && true), (_GLF_IDENTITY(false || (_GLF_IDENTITY((bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))), ((bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false)))) && true) && true), false || (false || ((bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))), false, false))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))) || (bool(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), false || (true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), false, false))) && true)) || false)))), true, false)), ! _GLF_IDENTITY((! (bool(bvec3(false || (bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, true)))) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-107.523), _GLF_FUZZED(-6.9)), vec2((vec2(1.0, 1.0))[0], _GLF_IDENTITY((vec2(1.0, 1.0))[1], (true ? _GLF_IDENTITY((vec2(1.0, 1.0))[1], min((vec2(1.0, 1.0))[1], (vec2(1.0, 1.0))[1])) : _GLF_FUZZED(-1.6)))), bvec2(true, true)))).y)))) && true))), _GLF_IDENTITY(false, true && (false)), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY(false, true && (false)), false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-3.7, -10.67))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-3.7, -10.67))), max((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-3.7, -10.67))), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-3.7, -10.67))))), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-3.7, -10.67))))))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), max(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-3.7, -10.67), clamp(vec2(-3.7, -10.67), vec2(-3.7, -10.67), vec2(-3.7, -10.67)))))), clamp(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), _GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), mix(vec2(_GLF_FUZZED(5774.8360), (vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))[1]), vec2((vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))[0], _GLF_FUZZED(_GLF_IDENTITY(3194.7664, float(mat2x3(_GLF_IDENTITY(3194.7664, min(3194.7664, 3194.7664)), log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))), bvec2(true, false))), _GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), max(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, _GLF_IDENTITY(-10.67, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0)), clamp(float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0)), float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0)), float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0))))))))))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-3.7, -10.67), clamp(vec2(-3.7, -10.67), vec2(-3.7, -10.67), vec2(-3.7, -10.67))))), clamp((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-3.7, -10.67), clamp(vec2(-3.7, -10.67), vec2(-3.7, -10.67), vec2(-3.7, -10.67))))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-3.7, -10.67), clamp(vec2(-3.7, -10.67), vec2(-3.7, -10.67), vec2(-3.7, -10.67))))), ((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-3.7, -10.67), clamp(vec2(-3.7, -10.67), vec2(-3.7, -10.67), vec2(-3.7, -10.67)))))) - vec2(0.0, 0.0)), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-3.7, -10.67), clamp(vec2(-3.7, -10.67), vec2(-3.7, -10.67), vec2(-3.7, -10.67)))))))), clamp(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), _GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), clamp(_GLF_FUZZED(vec2(-3.7, -10.67)), _GLF_FUZZED(vec2(-3.7, -10.67)), _GLF_FUZZED(vec2(-3.7, -10.67))))) - vec2(0.0, 0.0)))), mix(vec2(_GLF_FUZZED(5774.8360), (vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))[1]), vec2((vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))[0], _GLF_FUZZED(_GLF_IDENTITY(3194.7664, float(mat2x3(_GLF_IDENTITY(3194.7664, min(3194.7664, 3194.7664)), log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))), bvec2(true, false))), _GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), max(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, _GLF_IDENTITY(-10.67, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0)), clamp(float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0)), float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0)), float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0))))))), mix(vec2(_GLF_FUZZED(16.35), (_GLF_FUZZED(vec2(-3.7, _GLF_IDENTITY(-10.67, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0)), clamp(float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0)), float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0)), float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0))))))))[1]), vec2((_GLF_FUZZED(vec2(-3.7, _GLF_IDENTITY(-10.67, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0)), clamp(float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0)), float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0)), float(mat2x4(_GLF_IDENTITY(-10.67, mix(float(_GLF_IDENTITY(-10.67, float(mat3(-10.67, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(6.4)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0))))))))[0], _GLF_FUZZED(914.371)), bvec2(true, false)))))))))) + vec2(0.0, 0.0))))), abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6511.8057)), bool(_GLF_IDENTITY(false, ! (! (false)))))), abs(1.0), 1.0)), (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-3.7, max(-3.7, _GLF_IDENTITY(-3.7, float(vec3(-3.7, 0.0, 0.0))))), -10.67))))), max(vec2(vec2((_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), _GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), vec2(mat3x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))))), (_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(14607)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(14607)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(14607)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(14607)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).x)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(14607)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false))).x)) < injectionSwitch.y))) && true))) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), max(_GLF_FUZZED(vec2(-3.7, -10.67)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), (_GLF_FUZZED(vec2(-3.7, -10.67))) * _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))) - vec2(0.0, 0.0))))) : _GLF_FUZZED(injectionSwitch)))))), min(vec2(vec2((true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, sqrt(0.0), sqrt(0.0), 0.0))) : _GLF_FUZZED(vec2(-3.7, _GLF_IDENTITY(-10.67, float(mat4(-10.67, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)))))))), vec2(vec2((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)), clamp(true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)), true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)), true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0))))), abs(1.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0), transpose(transpose(mat3(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-3.7, max(-3.7, _GLF_IDENTITY(-3.7, float(vec3(-3.7, 0.0, 0.0))))), -10.67))))), max(vec2(vec2((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), _GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), vec2(mat3x2(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), (_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((- determinant(mat4(-77.96, -5970.7694, 359.557, 44.64, -3.6, 9.2, -5.5, 48.45, 16.79, 1.8, -1.4, -5.3, 5.9, 484.002, -1.6, 97.43)))))))) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), max(_GLF_FUZZED(vec2(-3.7, -10.67)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), (_GLF_FUZZED(vec2(-3.7, -10.67))) * vec2(1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch)))))), min(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-3.7, max(-3.7, -3.7)), _GLF_IDENTITY(-10.67, (true ? -10.67 : _GLF_FUZZED(-4884.0384))))))))))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0))))), abs(1.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))))) * mat2(1.0))))).x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false))), ! (! ((bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x2(vec2(0.0, 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))), _GLF_IDENTITY(vec2(vec2((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-3.7, -10.67))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), max(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), vec2(_GLF_IDENTITY(vec2((true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))) : _GLF_FUZZED(vec2(-3.7, -10.67)))), clamp(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), _GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), mix(vec2(_GLF_FUZZED(5774.8360), _GLF_IDENTITY((_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), clamp(_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), min(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))))[1], mix(float((_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), clamp(_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), min(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))))[1]), float(_GLF_FUZZED(639.154)), bool(false)))), vec2((vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))), 0))], _GLF_FUZZED(3194.7664)), bvec2(true, false))), _GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), max(vec2((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)), mix(vec2(_GLF_FUZZED(-32.69), _GLF_FUZZED(7.5)), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))[0], (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))[1]), bvec2(true, true))))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))))))))), abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6511.8057)), bool(_GLF_IDENTITY(false, ! (! (false)))))), abs(1.0), 1.0)), (vec2(mat3(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-3.7, _GLF_IDENTITY(max(-3.7, _GLF_IDENTITY(-3.7, float(vec3(-3.7, 0.0, 0.0)))), (max(-3.7, _GLF_IDENTITY(-3.7, float(vec3(-3.7, 0.0, 0.0))))) / 1.0)), -10.67))))), max(vec2(vec2((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), mat2(1.0) * (_GLF_FUZZED(vec2(-3.7, -10.67)))))), mix(vec2(_GLF_FUZZED(1.2), (vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), mat2(1.0) * (_GLF_FUZZED(vec2(-3.7, -10.67)))))))[1]), vec2((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), mat2(1.0) * (_GLF_FUZZED(vec2(-3.7, -10.67)))))))[0], _GLF_FUZZED(-460.092)), bvec2(true, false))))))), _GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), vec2(mat3x2(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))), (true ? (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))) : _GLF_FUZZED(injectionSwitch))))), vec2(vec3(vec2(vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))), (true ? (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))) : _GLF_FUZZED(injectionSwitch))))), 0.0))), min(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, _GLF_IDENTITY(-10.67, (-10.67) - 0.0)))))), vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))))) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0))))), abs(1.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0))) * mat2(1.0)), mix(vec2(_GLF_FUZZED(23.80), (_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), max(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), vec2(_GLF_IDENTITY(vec2((true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))) : _GLF_FUZZED(vec2(-3.7, -10.67)))), clamp(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), _GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), mix(vec2(_GLF_FUZZED(5774.8360), _GLF_IDENTITY((_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), clamp(_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), min(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))))[1], mix(float((_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), clamp(_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), min(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))))[1]), float(_GLF_FUZZED(639.154)), bool(false)))), vec2((vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))), 0))], _GLF_FUZZED(3194.7664)), bvec2(true, false))), _GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), max(vec2((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)), mix(vec2(_GLF_FUZZED(-32.69), _GLF_FUZZED(7.5)), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))[0], (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))[1]), bvec2(true, true))))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))))))))), abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6511.8057)), bool(_GLF_IDENTITY(false, ! (! (false)))))), abs(1.0), 1.0)), (vec2(mat3(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-3.7, _GLF_IDENTITY(max(-3.7, _GLF_IDENTITY(-3.7, float(vec3(-3.7, 0.0, 0.0)))), (max(-3.7, _GLF_IDENTITY(-3.7, float(vec3(-3.7, 0.0, 0.0))))) / 1.0)), -10.67))))), max(vec2(vec2((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), mat2(1.0) * (_GLF_FUZZED(vec2(-3.7, -10.67)))))), mix(vec2(_GLF_FUZZED(1.2), (vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), mat2(1.0) * (_GLF_FUZZED(vec2(-3.7, -10.67)))))))[1]), vec2((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), mat2(1.0) * (_GLF_FUZZED(vec2(-3.7, -10.67)))))))[0], _GLF_FUZZED(-460.092)), bvec2(true, false))))))), _GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), vec2(mat3x2(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))), (true ? (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))) : _GLF_FUZZED(injectionSwitch))))), vec2(vec3(vec2(vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))), (true ? (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))) : _GLF_FUZZED(injectionSwitch))))), 0.0))), min(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, _GLF_IDENTITY(-10.67, (-10.67) - 0.0)))))), vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))))) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0))))), abs(1.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0))) * mat2(1.0)))[1]), vec2((_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), max(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), vec2(_GLF_IDENTITY(vec2((true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))) : _GLF_FUZZED(vec2(-3.7, -10.67)))), clamp(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), _GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), mix(vec2(_GLF_FUZZED(5774.8360), _GLF_IDENTITY((_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), clamp(_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), min(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))))[1], mix(float((_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), clamp(_GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), min(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))))[1]), float(_GLF_FUZZED(639.154)), bool(false)))), vec2((vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))), 0))], _GLF_FUZZED(3194.7664)), bvec2(true, false))), _GLF_IDENTITY(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))), max(vec2((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)), mix(vec2(_GLF_FUZZED(-32.69), _GLF_FUZZED(7.5)), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))[0], (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))[1]), bvec2(true, true))))), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))))))))), abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6511.8057)), bool(_GLF_IDENTITY(false, ! (! (false)))))), abs(1.0), 1.0)), (vec2(mat3(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-3.7, _GLF_IDENTITY(max(-3.7, _GLF_IDENTITY(-3.7, float(vec3(-3.7, 0.0, 0.0)))), (max(-3.7, _GLF_IDENTITY(-3.7, float(vec3(-3.7, 0.0, 0.0))))) / 1.0)), -10.67))))), max(vec2(vec2((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), mat2(1.0) * (_GLF_FUZZED(vec2(-3.7, -10.67)))))), mix(vec2(_GLF_FUZZED(1.2), (vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), mat2(1.0) * (_GLF_FUZZED(vec2(-3.7, -10.67)))))))[1]), vec2((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-3.7, -10.67)), mat2(1.0) * (_GLF_FUZZED(vec2(-3.7, -10.67)))))))[0], _GLF_FUZZED(-460.092)), bvec2(true, false))))))), _GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), vec2(mat3x2(_GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))), (true ? (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))) : _GLF_FUZZED(injectionSwitch))))), vec2(vec3(vec2(vec2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))), (true ? (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67))) : _GLF_FUZZED(injectionSwitch))))), 0.0))), min(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, _GLF_IDENTITY(-10.67, (-10.67) - 0.0)))))), vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))))))) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0))))), abs(1.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0))) * mat2(1.0)))[0], _GLF_FUZZED(-911.410)), bvec2(true, false)))))).x < injectionSwitch.y)), _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false)))), false, false)))))) && true)) || false)))), true, false)))), (_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(false, true && (false)) || (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true)))))))), true), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), true)))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, (true) && true), true), true))))))), ! (! (true && (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.8))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), true))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) || false), false))), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), true, false))))), false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))).x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (false)), false, false))) && true, _GLF_IDENTITY(((bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))).x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))).x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))).x < injectionSwitch.y))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true, true)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, ! (! (false))) || (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))), false, false))) && true), ! (! (((bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))).x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))).x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)))).x < injectionSwitch.y))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true, true)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, ! (! (false))) || (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))), false, false))) && true)))) || false))) || false)))), true, false)))), ! (! ((! (bool(bvec3(false || (bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-18.88, -3323.4608, _GLF_IDENTITY(-451.740, (false ? _GLF_FUZZED(-3.2) : -451.740)), -16.99).yx) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(139.358, -8469.5576)) : injectionSwitch)), mix(vec2(_GLF_FUZZED(vec4(2779.6432, _GLF_IDENTITY(-360.042, max(_GLF_IDENTITY(-360.042, clamp(-360.042, _GLF_IDENTITY(-360.042, mix(float(_GLF_FUZZED(-4.2)), float(-360.042), bool(true))), _GLF_IDENTITY(-360.042, mix(float(_GLF_FUZZED(8.7)), float(-360.042), bool(true))))), -360.042)), 76.82, 7.0).w), _GLF_FUZZED((665.605 * 0.7))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(-18.88, -3323.4608, -451.740, -16.99).yx) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(139.358, (139.358) + 0.0), -8469.5576)) : injectionSwitch)), mix(vec2(_GLF_FUZZED(9.2), (false ? _GLF_FUZZED(vec4(-18.88, -3323.4608, -451.740, -16.99).yx) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(139.358, -8469.5576)) : injectionSwitch)))[1]), vec2((false ? _GLF_FUZZED(vec4(-18.88, -3323.4608, -451.740, -16.99).yx) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(139.358, -8469.5576)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(-721.422, -77.82)) : false ? _GLF_FUZZED(vec2(139.358, -8469.5576)) : injectionSwitch)))))[0], _GLF_FUZZED(float(false))), bvec2(true, false))))[0], _GLF_IDENTITY(((false ? _GLF_FUZZED(vec4(-18.88, -3323.4608, -451.740, _GLF_IDENTITY(-16.99, (_GLF_IDENTITY(-16.99, clamp(-16.99, -16.99, -16.99))) * 1.0)).yx) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(139.358, -8469.5576)) : injectionSwitch, vec2(vec2(false ? _GLF_FUZZED(vec2(139.358, -8469.5576)) : injectionSwitch))))))[0]) * 1.0, (true ? ((false ? _GLF_FUZZED(vec4(-18.88, -3323.4608, -451.740, _GLF_IDENTITY(-16.99, (_GLF_IDENTITY(-16.99, clamp(-16.99, -16.99, -16.99))) * 1.0)).yx) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(139.358, mix(float(139.358), float(_GLF_FUZZED(-66.83)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -8469.5576)) : injectionSwitch, vec2(vec2(false ? _GLF_FUZZED(vec2(139.358, -8469.5576)) : injectionSwitch))))))[0]) * 1.0 : _GLF_FUZZED(uintBitsToFloat(num_workgroup))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec4(-18.88, -3323.4608, -451.740, -16.99), (false ? _GLF_FUZZED(mix(vec4(_GLF_IDENTITY(-1.9, max(_GLF_IDENTITY(-1.9, max(-1.9, -1.9)), -1.9)), -9.4, 557.220, -252.248), vec4(-932.003, 18.16, 4088.2538, 2.4), bvec4(true, false, true, true))) : _GLF_IDENTITY(vec4(_GLF_IDENTITY(-18.88, clamp(-18.88, -18.88, -18.88)), -3323.4608, -451.740, -16.99), vec4(mat4x3(vec4(-18.88, -3323.4608, -451.740, -16.99), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0))))).yx) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(139.358, -8469.5576)) : injectionSwitch)))[1]), bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), bool(bvec2((_GLF_IDENTITY(true, (true) && true)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), bool(bvec2((_GLF_IDENTITY(true, (true) && true)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), false)))))))).x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (false)), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)))), false, false)), (bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)), vec2(mat3x4(true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -10.67)), exp(0.0), 1.0, 0.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(sin(0.0), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED((- -7.7)), _GLF_FUZZED((false ? -4087.8116 : 6.9))), bvec2(false, false)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))), vec2(0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(237.978) : dot(vec2(sin(0.0), 1.0), vec2(0.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-6.0), min(_GLF_FUZZED(-6.0), _GLF_IDENTITY(_GLF_FUZZED(-6.0), mix(float(_GLF_FUZZED(-6967.9942)), float(_GLF_FUZZED(-6.0)), bool(true))))) : 0.0))), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(0.0, 0.0) + (vec2(1.0, 0.0)))), clamp(dot(vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 0.0, 0.0, 1.0), (mat2x4(dot(vec2(sin(0.0), 1.0), vec2(0.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))))), vec2(1.0, 0.0)), clamp(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), mix(vec2(_GLF_FUZZED(-439.551), _GLF_FUZZED(vec3(-75.21, -28.69, 7.3).y)), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))[0], ((vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))[0]) + 0.0), (vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 0.0))[0], mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY((vec2(1.0, 0.0))[0], mix(float((vec2(1.0, 0.0))[0]), float(_GLF_FUZZED(-5.0)), bool(false)))), bool(true))), _GLF_FUZZED(859.839)), vec2(_GLF_FUZZED(31.34), (vec2(1.0, 0.0))[1]), bvec2(false, true)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 0.0, 0.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), dot(vec2(sin(0.0), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.0)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.0)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.0)), bool(false))))))), _GLF_IDENTITY(false, true && (false)), false, false))) && true)) || false)))), true, false)))))))) || false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-39.61, -3.6)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))).y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))) && true))))))), false || (false))), bool(bool(_GLF_DEAD(false)))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), min(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(803.750) : clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), min(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) / 1.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(5.0)), float(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) - log(1.0))), bool(true)))))) > injectionSwitch.y))), ((! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(803.750) : clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), min(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) / 1.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(5.0)), float(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) - log(1.0))), bool(true)))))) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))
            continue;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), true, true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(vec2(_GLF_FUZZED(float((false ? false : false))), _GLF_FUZZED(_GLF_IDENTITY(-86.69, mix(float(_GLF_FUZZED(-1952.5800)), float(-86.69), bool(true))))), min(vec2(_GLF_FUZZED(float((false ? false : false))), _GLF_FUZZED(_GLF_IDENTITY(-86.69, mix(float(_GLF_FUZZED(-1952.5800)), float(-86.69), bool(true))))), vec2(_GLF_FUZZED(float((false ? false : false))), _GLF_FUZZED(_GLF_IDENTITY(-86.69, mix(float(_GLF_FUZZED(-1952.5800)), float(-86.69), bool(true))))))), bvec2(false, false))).y)))));
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, false || (false)))), bool(bvec4(false || ((false)), false, false, false)))), bool(bvec4((false), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bvec4(false || _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec4(((false)), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(bvec4(((false)), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-0.8) : injectionSwitch[1])))))).x < injectionSwitch.y)))))))), false, false, false)))), bool(bvec4((false), true, true, false))))))), ! (! (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (_GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))))), true && (_GLF_IDENTITY((false), false || ((false))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), true, true, false)))))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
            {
             do
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-17.74), _GLF_FUZZED((51.76 * 8.0))), bvec2(false, false))).x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))))) < int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))), (_GLF_IDENTITY(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))), ! (! (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))))) && true))), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch), mix(vec2(_GLF_FUZZED(88.04), (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))[1]), vec2((min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))[0], _GLF_FUZZED(-8763.1402)), bvec2(true, false)))).y)), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))))), false, true))))))))
                barrier();
              }
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) && true)))))
              {
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 97929); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) - 0)))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
              {
               do
                {
                 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), true))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, false || (false)))))) || false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - length(vec2(0.0, 0.0))))) || _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), bool(bvec2(! (_GLF_IDENTITY((false), ((false)) || false)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (false))))), ((bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))) || false)), false || (_GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (false))))), ((bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))) || false)), true && ((! _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (false))))), ((bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))) || false)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))) || (false)))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, sqrt(1.0), 0.0)))))))) || false)))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false))))))
            {
             barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4594.5507) : injectionSwitch.y))))));
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-44944, 0 + (_GLF_IDENTITY(-44944, min(-44944, -44944))))) : int(0)), int(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-44944, 0 + (_GLF_IDENTITY(-44944, min(-44944, -44944))))) : int(0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-44944, 0 + (_GLF_IDENTITY(-44944, min(-44944, -44944))))) : int(0)), ((false ? _GLF_FUZZED(_GLF_IDENTITY(-44944, 0 + (_GLF_IDENTITY(-44944, min(-44944, -44944))))) : int(0))) | 0)), (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-44944, 0 + (_GLF_IDENTITY(-44944, min(-44944, -44944))))) : int(0)), ((false ? _GLF_FUZZED(_GLF_IDENTITY(-44944, 0 + (_GLF_IDENTITY(-44944, min(-44944, -44944))))) : int(0))) | 0))) | (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-44944, 0 + (_GLF_IDENTITY(-44944, min(-44944, -44944))))) : int(0)), ((false ? _GLF_FUZZED(_GLF_IDENTITY(-44944, 0 + (_GLF_IDENTITY(-44944, min(-44944, -44944))))) : int(0))) | 0)))))), 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
              {
               do
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(8603.9135, -7.7)) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(vec2(8603.9135, -7.7)) : injectionSwitch))[0], ((false ? _GLF_FUZZED(vec2(8603.9135, -7.7)) : injectionSwitch))[1]), vec2(_GLF_FUZZED(742.456), _GLF_FUZZED(vec2(-43.64, 9.7).y)), bvec2(false, false)))), injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat2(-1477.3444, 9.8, 84.13, -8.0) * vec2(-42.01, -8.5))) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)))))))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((_GLF_IDENTITY(true ? -2147.6172 : 1520.1907, (_GLF_IDENTITY(true ? -2147.6172 : 1520.1907, (false ? _GLF_FUZZED(675.310) : true ? -2147.6172 : 1520.1907))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))))) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat2x4(vec3(1.0, 0.0, 0.0), 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-638.086, 3.9)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(vec2(-638.086, 3.9)))))).y), float(mat2x3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((true ? -2147.6172 : 1520.1907)) : 0.0)), (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) ? -2147.6172 : 1520.1907)) : 0.0)) : _GLF_FUZZED(5728.7000))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), 1.0))))), 0.0, 1.0, 1.0))) : _GLF_FUZZED(vec2(-638.086, 3.9)), (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((true ? _GLF_IDENTITY(-2147.6172, (-2147.6172) / 1.0) : 1520.1907)) : 0.0)), (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((true ? -2147.6172 : 1520.1907)) : 0.0)) : _GLF_FUZZED(5728.7000))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 0.0, 1.0, 1.0))) : _GLF_FUZZED(vec2(-638.086, 3.9))) + vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)))).y), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, cos(0.0), determinant(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(968.815)), float(1.0), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), ((0 << _GLF_IDENTITY(int(1), int(1)))) * 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    return;
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
