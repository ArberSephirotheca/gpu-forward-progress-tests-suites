#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(abs(vec2(1.0, 1.0)), (true ? abs(vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x < injectionSwitch.y)), false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true)))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true)))))))))), true))), false))))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(691.394)), bool(false))), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)) ? injectionSwitch.y : _GLF_FUZZED((- 13.03)), float(mat2x4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (true)) ? injectionSwitch.y : _GLF_FUZZED((- 13.03)), 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0))))) : _GLF_FUZZED(-3980.7291))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))) / exp(0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)) + ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), clamp(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED((asinh(vec4(2324.6876, 196.724, 69.21, -8638.7825)) , vec2(6.2, -5473.1916))))).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED((asinh(vec4(2324.6876, 196.724, 69.21, -8638.7825)) , vec2(6.2, _GLF_IDENTITY(-5473.1916, clamp(-5473.1916, -5473.1916, _GLF_IDENTITY(-5473.1916, min(-5473.1916, -5473.1916))))))))).y)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true)), (false ? _GLF_FUZZED(531.840) : mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.0)), max(float(_GLF_FUZZED(2.0)), float(_GLF_FUZZED(2.0)))), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true))))), float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))))) / exp(0.0)), mix(float(_GLF_FUZZED(6.0)), float(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)) + _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(0.0), bool(true))))), clamp(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), mix(vec4((vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(-812.162), (vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))[2], _GLF_FUZZED(51.29)), vec4(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-8.9, (-8.9) * 1.0), 8807.9043, 570.910), min(vec3(_GLF_IDENTITY(-8.9, (-8.9) * 1.0), 8807.9043, 570.910), vec3(_GLF_IDENTITY(-8.9, (-8.9) * 1.0), 8807.9043, 570.910))).p, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec3(-8.9, 8807.9043, 570.910), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(-8.9, 8807.9043, 570.910), mix(vec3((vec3(-8.9, 8807.9043, 570.910))[0], _GLF_IDENTITY((vec3(-8.9, 8807.9043, 570.910))[1], 1.0 * ((vec3(-8.9, 8807.9043, 570.910))[1])), (vec3(-8.9, 8807.9043, 570.910))[2]), vec3(_GLF_FUZZED(-61.76), _GLF_FUZZED((388.406)), _GLF_FUZZED(-194.617)), bvec3(false, false, false))) : _GLF_FUZZED(vec3(0.9, 7.4, 6.8)))).p, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(mat2x4(vec3(-8.9, 8807.9043, 570.910).p, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), (mat2x4(vec3(-8.9, 8807.9043, 570.910).p, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))) * mat2(1.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))[1], _GLF_FUZZED(-344.969), (vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))[3]), bvec4(false, true, false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), vec4(1.0, 1.0, 1.0, 1.0) * (mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))), mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))), clamp(mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), vec4(1.0, 1.0, 1.0, 1.0) * (mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))), mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true)), (false ? _GLF_FUZZED(531.840) : mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.3) : _GLF_IDENTITY(mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true)), (false ? _GLF_FUZZED(531.840) : mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true))))))), float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))))) / exp(0.0)), (((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(0.0), bool(true))))), clamp(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), mix(vec4((vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(-812.162), (vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))[2], _GLF_FUZZED(51.29)), vec4(_GLF_FUZZED(_GLF_IDENTITY(vec3(-8.9, 8807.9043, 570.910).p, float(_GLF_IDENTITY(mat2x4(vec3(-8.9, 8807.9043, 570.910).p, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(mat2x4(vec3(-8.9, 8807.9043, 570.910).p, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), (mat2x4(vec3(-8.9, 8807.9043, 570.910).p, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))) * mat2(1.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))[1], _GLF_FUZZED(-344.969), (vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))[3]), bvec4(false, true, false, true)))), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), clamp(mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), vec4(1.0, 1.0, 1.0, 1.0) * (mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))), mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true)), (false ? _GLF_FUZZED(531.840) : mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true))))), float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))))) / exp(0.0))) - 0.0), mix(float(_GLF_FUZZED((-337.018))), float(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) + ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), mat4(1.0) * _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(mat2((vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))), (vec4(mat2((vec4(injectionSwitch.y, 1.0, 0.0, 0.0))))) * mat4(1.0))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true)), (false ? _GLF_FUZZED(531.840) : mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true))))), float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))))) / exp(0.0)), clamp(length(vec3(0.0, 0.0, 0.0)) + ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(848.145, 1272.1539, 5.5, 79.28, -57.21, -48.85, 3.0, -399.394, 57.60, 818.112, -551.631, 211.569, 1.3, 6.6, -321.108, 218.624)) : mat4(1.0))) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true)), (false ? _GLF_FUZZED(531.840) : mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-64.79), _GLF_FUZZED(-5840.9427), (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(float(65708))), vec4((vec4(injectionSwitch.y, 1.0, 0.0, 0.0))[0], (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(930.173), _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 0.0))[3], clamp((vec4(injectionSwitch.y, 1.0, 0.0, 0.0))[3], _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 0.0))[3], (false ? _GLF_FUZZED(-521.664) : (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))[3])), (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))[3]))), bvec4(true, true, false, true)))))))) / exp(0.0)), length(vec3(0.0, 0.0, 0.0)) + ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true)), (false ? _GLF_FUZZED(531.840) : mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))))) / exp(0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)) + ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / cos(0.0)), injectionSwitch[1])) : _GLF_FUZZED(vec2(-8.6, -9.3)))).y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 0.0), _GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0)))))) * (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))), mix(vec4((_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))))[0], _GLF_FUZZED(796.389), _GLF_FUZZED(float(43198)), _GLF_FUZZED(-91.10)), vec4(_GLF_FUZZED(vec2(-17.29, 252.995).y), (_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))))[1], (_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))))[2], _GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))))[3], (true ? (_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))))[3] : _GLF_FUZZED(2886.8246)))), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(2.0)), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true)), (false ? _GLF_FUZZED(531.840) : mix(float(_GLF_FUZZED(2.0)), float(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0, 0.0, 0.0))), bool(true))))), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), min(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))))))) / exp(0.0)), 0.0 + (length(vec3(0.0, 0.0, 0.0)) + ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.0)), max(_GLF_IDENTITY(float(_GLF_FUZZED(2.0)), (float(_GLF_FUZZED(2.0))) * 1.0), float(_GLF_FUZZED(2.0)))), float(float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), bool(true)), (false ? _GLF_FUZZED(531.840) : mix(float(_GLF_FUZZED(2.0)), float(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), vec4(mat4(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), tan(0.0), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.3) : 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.3) : 0.0)) : _GLF_FUZZED(41.20)))) - 0.0), 1.0, 1.0, 0.0, 1.0))))), bool(true))))), float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))))) / exp(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))))))))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), 0u | (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(~ (subgroup_size), 0u | (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (true ? _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))) : _GLF_FUZZED(workgroup_id)))) / 1u), 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (true ? _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))) : _GLF_FUZZED(workgroup_id)))) / 1u), 0u)))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (true ? _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))) : _GLF_FUZZED(workgroup_id)))) / 1u), 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (true ? _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))) : _GLF_FUZZED(workgroup_id)))) / 1u), 0u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (true ? _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))) : _GLF_FUZZED(workgroup_id)))) / 1u), 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (true ? _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))) : _GLF_FUZZED(workgroup_id)))) / 1u), 0u))))))), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, 1u * ((subgroup_size) >> 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | 0u))), (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (~ (subgroup_id * subgroup_size)))) / 1u)))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), uint(_GLF_IDENTITY(uvec4((~ (subgroup_local_id)), 1u, 1u, 0u), (uvec4((~ (subgroup_local_id)), 1u, 1u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))))) + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 1u, 0u), _GLF_IDENTITY((uvec3((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 1u, 0u)) * uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY((uvec3((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 1u, 0u)) * uvec3(1u, 1u, 1u), ((uvec3((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 1u, 0u)) * uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u)), (uvec3((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), 0u | (~ (subgroup_local_id)))), 1u * (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | 0u), ~ (subgroup_local_id))), 0u | (~ (subgroup_local_id)))), 0u ^ (~ (_GLF_IDENTITY(~ (subgroup_local_id), 0u | (~ (subgroup_local_id))))))))) + 1), 1u, 0u)) * uvec3(1u, 1u, 1u), (uvec3((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 1u, 0u)) * uvec3(1u, 1u, 1u))))), (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 1u, 0u), (uvec3((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 1u, 0u)) * uvec3(1u, 1u, 1u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, (1) - 0)), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, (1) - 0))) - 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u), 0u), (uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), 0u ^ (~ (subgroup_local_id))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), clamp(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_local_id)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uvec4(0u, 0u, 0u, 0u)), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (_GLF_IDENTITY(0u ^ 1u, ~ (~ (0u ^ 1u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(uvec4(140238u, 163063u, 161119u, 125446u))))), uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uvec4(0u, 0u, 0u, 0u)), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (_GLF_IDENTITY(0u ^ 1u, ~ (~ (0u ^ 1u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(uvec4(140238u, 163063u, 161119u, 125446u))))), 1u), uvec2(0u, 0u) ^ (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uvec4(0u, 0u, 0u, 0u)), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (_GLF_IDENTITY(0u ^ 1u, ~ (~ (0u ^ 1u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(uvec4(140238u, 163063u, 161119u, 125446u))))), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_local_id)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))), ~ (~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id)))))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (~ (subgroup_local_id)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id)))))), min(~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id)))))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? _GLF_IDENTITY((uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id)))))), min(~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id)))))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id)))))), min(~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id)))))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(uvec4(168675u, 144568u, 111897u, 163468u)))) << uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(~ (~ (subgroup_local_id)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(24609u) : subgroup_local_id)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uvec4(0u, 0u, 0u, 0u))))))) | (_GLF_IDENTITY(~ (~ (subgroup_local_id)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_local_id)), uint(uvec4(~ (~ (subgroup_local_id)), 0u, 1u, 0u))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (~ (subgroup_local_id))))))), (0u ^ 1u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uvec4(0u, 0u, 0u, 0u))))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 1), 1u, 0u)) * uvec3(1u, 1u, 1u))), 0u | (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 1u, 0u), (uvec3((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 1u, 0u)) * uvec3(1u, 1u, 1u)))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, true, true)))), ((! (bool(bvec4(false, true, true, true))))) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y)) ? 4 : _GLF_FUZZED(61082))), _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(roundEven(224.307)) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), false || (bool(bool(_GLF_IDENTITY(false, true && (false)))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false, false), false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - determinant(mat2(0.0, 1.0, 0.0, 0.0))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))), (! (! (injectionSwitch.x > injectionSwitch.y))) || false), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))))) && true), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(174)), _GLF_FUZZED(9943.0000)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))) || false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false))))) || false))) || false)))))))))))))))))))
    barrier();
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), abs(_GLF_IDENTITY(1.0, 1.0 * (1.0))), 0.0, 0.0, 1.0, 1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, sin(determinant(mat2(0.0, 1.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, sin(determinant(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(587.636) : 0.0))))))), clamp(float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, sin(determinant(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(587.636) : 0.0))))))), float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, sin(determinant(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(587.636) : 0.0))))))), float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, sin(determinant(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(587.636) : 0.0))))))))), float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0)), 1.0, 1.0, sin(determinant(mat2(0.0, 1.0, 0.0, 0.0))))), float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-611.237))))), (determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-611.237)))))) - 0.0), 1.0, 1.0, sin(determinant(mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / 1.0), 1.0, 0.0, 0.0))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
