#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid;
 uvec4 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, true, _GLF_IDENTITY(true, (true) && true)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5685.0688, 0.6)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.xy = GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), true, true)), true, false))))))))
  return;
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size;
 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.5), _GLF_FUZZED((-2.8 * 2.7))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, mix(float(_GLF_FUZZED(float((24144 / 74302)))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.5), _GLF_FUZZED((-2.8 * 2.7))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), false, false, false)))), bool(bool(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), false, false, false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0)), min(float(mat4x2(injectionSwitch.y, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0)), float(mat4x2(injectionSwitch.y, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, true && (true)), false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), mix(float(_GLF_FUZZED(98.23)), float(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), bool(true)))) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false, false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false))))))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(721.529)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(20.81, 19.55).y)), float(injectionSwitch.y), bool(true)))), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false, _GLF_IDENTITY(false, true && (false)), false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.xy.x = subgroup_id;
uint subgroup_size = 16;
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw.x = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | 0u), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, true)), true))))))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, true)), true))))))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, true)), true))))))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))))) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))))
      return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.y = subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x) >> 0u), 0u + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), (min(gl_NumWorkGroups, gl_NumWorkGroups)) | (min(gl_NumWorkGroups, gl_NumWorkGroups)))).x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_size))) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-54.13)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))) || false)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.z = workgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0)), 0.0, tan(0.0), 0.0, 0.0)), (float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0)), 0.0, tan(0.0), 0.0, 0.0))) - 0.0))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), false))))))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(1u * (gl_WorkGroupID.x), clamp(1u * (gl_WorkGroupID.x), _GLF_IDENTITY(1u * (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ (1u * (gl_WorkGroupID.x)), 0u | (~ (1u * (gl_WorkGroupID.x)))))), _GLF_IDENTITY(1u * (gl_WorkGroupID.x), clamp(1u * (gl_WorkGroupID.x), _GLF_IDENTITY(1u * (gl_WorkGroupID.x), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u * (gl_WorkGroupID.x), (1u * (gl_WorkGroupID.x)) | (1u * (gl_WorkGroupID.x))))), clamp(uint(uint(_GLF_IDENTITY(1u * (gl_WorkGroupID.x), (1u * (gl_WorkGroupID.x)) | (1u * (gl_WorkGroupID.x))))), uint(uint(_GLF_IDENTITY(1u * (gl_WorkGroupID.x), (1u * (gl_WorkGroupID.x)) | (1u * (gl_WorkGroupID.x))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u * (gl_WorkGroupID.x), (1u * (gl_WorkGroupID.x)) | (1u * (gl_WorkGroupID.x))))), uint(uint(uint(uint(_GLF_IDENTITY(1u * (gl_WorkGroupID.x), (1u * (gl_WorkGroupID.x)) | (1u * (gl_WorkGroupID.x))))))))))), 1u * (gl_WorkGroupID.x)))))), (gl_WorkGroupID.x) << (0u & 178600u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))))) && true))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, false)))))))) || false), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(atanh(distance(vec4(685.125, -1.5, 45.37, 791.852), vec4(0.4, 3.0, 4197.3642, 5194.0600)))) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.xy.y = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.z * _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.xy, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.xy), ((GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.xy)) ^ (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u)))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) | (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, uvec4(0u, 0u, 0u, 0u) + (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base))))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).xy), (~ (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.xy)) | uvec2(0u, 0u)))))).y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true, false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw.y = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))) >> uvec2(0u, 0u))) - uvec2(0u, 0u))), clamp(_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(8u), uvec2(_GLF_IDENTITY(uvec4(uvec2(8u), (1u | 1u), 0u), (uvec4(uvec2(8u), (1u | 1u), 0u)) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u))))))) / uvec2(1u, 1u), _GLF_IDENTITY(((uvec2(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) ^ 0u)) / 1u))) / uvec2(1u, 1u)), (((uvec2(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) ^ 0u)) / 1u))) / uvec2(1u, 1u))) >> uvec2(0u, 0u)) | ((uvec2(8u)) / uvec2(1u, 1u))))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))) + uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u) >> _GLF_IDENTITY(uvec2(_GLF_IDENTITY(8u, (8u) >> 0u)), _GLF_IDENTITY(uvec2(8u), (uvec2(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u)))) / _GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(24411u, 30760u)) : _GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 1u * (1u)), 1u))))), (uvec2(1u, 1u)) | (uvec2(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) / 1u)))))))))), uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), uvec2(0u, 0u) + (uvec2(8u))), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))))), ((_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u), 0u)))))) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) * ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(_GLF_IDENTITY(0u, (0u) >> (1u ^ 1u)), 0u))), ((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(8u, max(8u, 8u))), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u)))) / uvec2(1u, 1u)) + uvec2(0u, 0u)), uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), clamp(_GLF_IDENTITY(uvec2(8u), min(uvec2(8u), uvec2(8u))), uvec2(8u), _GLF_IDENTITY(uvec2(8u), clamp(uvec2(8u), uvec2(8u), uvec2(8u))))), (uvec2(8u)) / uvec2(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))))) / (uvec2(1u, 1u) & uvec2(1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY((uvec2(8u)) / uvec2(1u, 1u), _GLF_IDENTITY(((uvec2(8u)) / uvec2(1u, 1u)), max(((uvec2(8u)) / uvec2(1u, 1u)), ((uvec2(8u)) / uvec2(1u, 1u)))) | _GLF_IDENTITY(((uvec2(8u)) / uvec2(1u, 1u)), ~ (~ (((uvec2(8u)) / uvec2(1u, 1u)))))))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))) + uvec2(0u, 0u)), uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(_GLF_IDENTITY(8u, (8u) >> 0u)), _GLF_IDENTITY(uvec2(8u), (uvec2(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u)))) / _GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(24411u, 30760u)) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))))))), uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))))), ((_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), min(uvec2(8u), uvec2(8u))), (uvec2(8u)) / _GLF_IDENTITY(uvec2(1u, 1u), clamp(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) - uvec2(0u, 0u)), uvec2(1u, 1u), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) << uvec2(0u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / _GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))), ~ (~ ((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))))))) / uvec2(1u, 1u)) + uvec2(0u, 0u)), uvec2(0u, _GLF_IDENTITY(0u, (0u) >> 0u)) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(_GLF_IDENTITY(8u, (8u) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) / uvec2(1u, 1u))), uvec2(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u)))), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))))))))) / (uvec2(1u, 1u) & uvec2(1u, 1u)))) ^ (uvec2(16186u, 44405u) & uvec2(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) - uvec4(0u, 0u, 0u, 0u))))).zw, uvec2(uvec4(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 1u, 0u))))).y + GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.xy.x * _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, _GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u)), (uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u))) | (uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u)))), ~ (~ (_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u)), (uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u))) | (uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u)))))))).x + GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.y, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))) >> uvec2(0u, 0u))) - uvec2(0u, 0u))), clamp(_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(8u), uvec2(_GLF_IDENTITY(uvec4(uvec2(8u), (1u | 1u), 0u), (uvec4(uvec2(8u), (1u | 1u), 0u)) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u))))))) / uvec2(1u, 1u), _GLF_IDENTITY(((uvec2(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) ^ 0u)) / 1u))) / uvec2(1u, 1u)), (((uvec2(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) ^ 0u)) / 1u))) / uvec2(1u, 1u))) >> uvec2(0u, 0u)) | ((uvec2(8u)) / uvec2(1u, 1u))))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))) + uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u) >> _GLF_IDENTITY(uvec2(_GLF_IDENTITY(8u, (8u) >> 0u)), _GLF_IDENTITY(uvec2(8u), (uvec2(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u)))) / _GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(24411u, 30760u)) : _GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 1u * (1u)), 1u))))), (uvec2(1u, 1u)) | (uvec2(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) / 1u)))))))))), uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), uvec2(0u, 0u) + (uvec2(8u))), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))))), ((_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u), 0u)))))) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) * ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(_GLF_IDENTITY(0u, (0u) >> (1u ^ 1u)), 0u))), ((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(8u, max(8u, 8u))), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u)))) / uvec2(1u, 1u)) + uvec2(0u, 0u)), uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), clamp(_GLF_IDENTITY(uvec2(8u), min(uvec2(8u), uvec2(8u))), uvec2(8u), _GLF_IDENTITY(uvec2(8u), clamp(uvec2(8u), uvec2(8u), uvec2(8u))))), (uvec2(8u)) / uvec2(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))))) / (uvec2(1u, 1u) & uvec2(1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY((uvec2(8u)) / uvec2(1u, 1u), _GLF_IDENTITY(((uvec2(8u)) / uvec2(1u, 1u)), max(((uvec2(8u)) / uvec2(1u, 1u)), ((uvec2(8u)) / uvec2(1u, 1u)))) | _GLF_IDENTITY(((uvec2(8u)) / uvec2(1u, 1u)), ~ (~ (((uvec2(8u)) / uvec2(1u, 1u)))))))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))) + uvec2(0u, 0u)), uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(_GLF_IDENTITY(8u, (8u) >> 0u)), _GLF_IDENTITY(uvec2(8u), (uvec2(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u)))) / _GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(24411u, 30760u)) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))))))), uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))))), ((_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), min(uvec2(8u), uvec2(8u))), (uvec2(8u)) / _GLF_IDENTITY(uvec2(1u, 1u), clamp(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) - uvec2(0u, 0u)), uvec2(1u, 1u), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) << uvec2(0u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / _GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))), ~ (~ ((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))))))) / uvec2(1u, 1u)) + uvec2(0u, 0u)), uvec2(0u, _GLF_IDENTITY(0u, (0u) >> 0u)) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(_GLF_IDENTITY(8u, (8u) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) / uvec2(1u, 1u))), uvec2(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u)))), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))))))))) / (uvec2(1u, 1u) & uvec2(1u, 1u)))) ^ (uvec2(16186u, 44405u) & uvec2(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) - uvec4(0u, 0u, 0u, 0u))))).zw, uvec2(uvec4(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 1u, 0u))))).y + GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.xy.x * _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, _GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u)), (uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u))) | (uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u)))), ~ (~ (_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u)), (uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u))) | (uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u)))))))).x + GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))) >> uvec2(0u, 0u))) - uvec2(0u, 0u))), clamp(_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(8u), uvec2(_GLF_IDENTITY(uvec4(uvec2(8u), (1u | 1u), 0u), (uvec4(uvec2(8u), (1u | 1u), 0u)) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u))))))) / uvec2(1u, 1u), _GLF_IDENTITY(((uvec2(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) ^ 0u)) / 1u))) / uvec2(1u, 1u)), (((uvec2(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) ^ 0u)) / 1u))) / uvec2(1u, 1u))) >> uvec2(0u, 0u)) | ((uvec2(8u)) / uvec2(1u, 1u))))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))) + uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u) >> _GLF_IDENTITY(uvec2(_GLF_IDENTITY(8u, (8u) >> 0u)), _GLF_IDENTITY(uvec2(8u), (uvec2(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u)))) / _GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(24411u, 30760u)) : _GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 1u * (1u)), 1u))))), (uvec2(1u, 1u)) | (uvec2(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) / 1u)))))))))), uvec2(0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), uvec2(0u, 0u) + (uvec2(8u))), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))))), ((_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u), 0u)))))) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) * ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(_GLF_IDENTITY(0u, (0u) >> (1u ^ 1u)), 0u))), ((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(8u, max(8u, 8u))), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u)))) / uvec2(1u, 1u)) + uvec2(0u, 0u)), uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), clamp(_GLF_IDENTITY(uvec2(8u), min(uvec2(8u), uvec2(8u))), uvec2(8u), _GLF_IDENTITY(uvec2(8u), clamp(uvec2(8u), uvec2(8u), uvec2(8u))))), (uvec2(8u)) / uvec2(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))))) / (uvec2(1u, 1u) & uvec2(1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY((uvec2(8u)) / uvec2(1u, 1u), _GLF_IDENTITY(((uvec2(8u)) / uvec2(1u, 1u)), max(((uvec2(8u)) / uvec2(1u, 1u)), ((uvec2(8u)) / uvec2(1u, 1u)))) | _GLF_IDENTITY(((uvec2(8u)) / uvec2(1u, 1u)), ~ (~ (((uvec2(8u)) / uvec2(1u, 1u)))))))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))) + uvec2(0u, 0u)), uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(_GLF_IDENTITY(8u, (8u) >> 0u)), _GLF_IDENTITY(uvec2(8u), (uvec2(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u)))) / _GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(24411u, 30760u)) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))))))), uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))))), ((_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (_GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), min(uvec2(8u), uvec2(8u))), (uvec2(8u)) / _GLF_IDENTITY(uvec2(1u, 1u), clamp(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) - uvec2(0u, 0u)), uvec2(1u, 1u), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) << uvec2(0u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / _GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))), ~ (~ ((_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u)))) + uvec2(0u, 0u))))))) / uvec2(1u, 1u)) + uvec2(0u, 0u)), uvec2(0u, _GLF_IDENTITY(0u, (0u) >> 0u)) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(_GLF_IDENTITY(8u, (8u) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) / uvec2(1u, 1u))), uvec2(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u)))), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))), _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) / uvec2(1u, 1u))))))))) / (uvec2(1u, 1u) & uvec2(1u, 1u)))) ^ (uvec2(16186u, 44405u) & uvec2(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) - uvec4(0u, 0u, 0u, 0u))))).zw, uvec2(uvec4(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 1u, 0u))))).y + GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.xy.x * _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, _GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u)), (uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u))) | (uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u)))), ~ (~ (_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u)), (uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u))) | (uvec2(uvec3(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, 0u)))))))).x + GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.y) << 0u))));
 uint next_virtual_gid = GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw.y + _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base) / uvec4(_GLF_IDENTITY(1u, (1u) | 0u), 1u, 1u, 1u)).xy.x * GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw.x + ((GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.y + 1) % _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, clamp(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw, GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.zw)).x);
 _GLF_IDENTITY(GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.w = _GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 1u, (1u ^ 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.w = next_virtual_gid, (GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.w = next_virtual_gid) << 0u)), 0u + (~ (_GLF_IDENTITY(GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.w = next_virtual_gid, (GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.w = next_virtual_gid) << 0u))))));
 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.x = _GLF_IDENTITY(GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.w, (GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.w) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), bool(bool(bool(bool((_GLF_DEAD(false))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), bool(bool(bool(bool((_GLF_DEAD(false))))))))), bool(bvec3(! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), bool(bool(bool(bool((_GLF_DEAD(false))))))))), true, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid, uvec4(_GLF_IDENTITY(GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid[0], ~ (~ (GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid[0]))), GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid[1], GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid[2], GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid[3])).xyz) << uvec3(0u, 0u, 0u)).x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.6)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-57.77) : injectionSwitch.y))), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-57.77) : injectionSwitch.y)))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6868.4495)), float(0.0), bool(true))), (0.0) - 0.0), 0.0))).x > injectionSwitch.y))), true && (! (! (bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / cos(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, round(length(normalize(1.0))), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), min(vec2(mat3x4(injectionSwitch, round(length(normalize(1.0))), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), vec2(mat3x4(injectionSwitch, round(length(normalize(1.0))), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), injectionSwitch, injectionSwitch)).y), true, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec3(-3.9, 95.55, -9.5)))))), true, true, true)), true, false, true)), ! _GLF_IDENTITY((! (bool(bvec4(bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), true, true, true)), true, false, true)))), ((! (bool(bvec4(bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), true, true, true)), true, false, true))))) || false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY((mat4((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0)), bool(true))), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((mat4((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0)), bool(true))), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))), (injectionSwitch) / cos(vec2(0.0, 0.0))) : _GLF_FUZZED((-3953.5985 * vec2(3.9, -13.50))))).x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY((mat4((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0)), bool(true))), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((mat4((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0)), bool(true))), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))), (injectionSwitch) / cos(vec2(0.0, 0.0))) : _GLF_FUZZED((-3953.5985 * vec2(3.9, -13.50))))).x > injectionSwitch.y)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (bool(bvec4(false, true, false, true))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.x], uint(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) / 1)))), 4, 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) >> 0))), 4)));
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
