#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, false, true))))) || (false), false || (false || (false))))), (! (false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))), bool(bvec3(bool(_GLF_IDENTITY(false, false || (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec3(bool(_GLF_IDENTITY(false, false || (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec3(bool(_GLF_IDENTITY(false, false || (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), true && (false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(max(injectionSwitch, -80.24)), (_GLF_FUZZED(max(injectionSwitch, -80.24))) - vec2(0.0, 0.0)) : injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(false))))) || false)) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, true, true))) && (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))) && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false, false))))), true && (_GLF_IDENTITY(false, true && (false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(268.167), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(13.39)), bvec2(true, false))).y), ! (! (true && (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(float(75428)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-6.9, 63.14)) : mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(float(75428)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)))))), (false ? _GLF_FUZZED(sin(vec2(-0.3, -3.1))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(float(75428)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-6.9, 63.14)) : mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(float(75428)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)))))), min(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(float(75428)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-6.9, 63.14)) : mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(float(75428)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(float(75428)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-6.9, 63.14)) : mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(float(75428)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)))))), mix(vec2(_GLF_FUZZED(-91.85), _GLF_FUZZED(5.1)), vec2((clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(float(75428)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-6.9, 63.14)) : mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(float(75428)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)))))))[0], (clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(float(75428)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-6.9, 63.14)) : mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-1.5)), vec2(_GLF_FUZZED(float(75428)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)))))))[1]), bvec2(true, true)))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), true && (! (! (true))))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true))), ! (! ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), true, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)), true, true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(64.90)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-553.192)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-220.373, -7.1))))).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.6, 7.4)) : injectionSwitch)).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false, false)), bool(bvec2(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false)), false))))))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), _GLF_IDENTITY(sin(0.0), float(mat3(_GLF_IDENTITY(sin(0.0), (sin(0.0)) - 0.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, sin(0.0), 1.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.x, sin(0.0), 1.0, 0.0), mat2(mat2x3(mat2(injectionSwitch.x, sin(0.0), 1.0, 0.0))))) * mat2(1.0)) : _GLF_FUZZED(mat2(-527.936, -9792.5808, 790.704, -22.28)))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))), false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), false || ((false))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), false || ((false))))), bool(bvec2(! (! (_GLF_IDENTITY((false), false || ((false))))), true))), true, true, false)))), true && (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (_GLF_IDENTITY(false || ((false)), false || (false || ((false)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false), (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), false)))))) || false)))))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), ~ _GLF_IDENTITY((~ (uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), clamp(~ (uvec3(0u, 0u, 0u)), ~ (uvec3(0u, 0u, 0u)), ~ (uvec3(0u, 0u, 0u)))))) | ((~ (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) + 0u)), 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)), 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))))), (uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))))), (uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))))), (uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))))), (false ? _GLF_FUZZED(uvec3(2580u, 19879u, 182457u)) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))))), (uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))))), (uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec2((0u), 0u))) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))))))) << uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)) + (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(uvec4(uvec3(gl_WorkGroupID), 0u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(~ (~ (uvec3(0u, 0u, 0u))), clamp(~ (~ (uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(~ (uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), (_GLF_IDENTITY(~ (uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), (~ (uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u))) | (~ (uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(23994u) : 0u))))))) - uvec3(0u, 0u, 0u))))), ~ (~ (uvec3(0u, 0u, 0u)))))) + (gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) - uvec3(0u, 0u, 0u)), (gl_WorkGroupID)))).x, _GLF_IDENTITY(_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (0u + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) + (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) + uvec3(0u, 0u, 0u))).x) >> 0u))) | (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x)) | (0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x)))) | 0u)) << 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ _GLF_IDENTITY((~ (uvec3(0u, 0u, 0u))), ((~ (uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u))) + (gl_WorkGroupID)).x), (0u + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) + (gl_WorkGroupID)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)))))).x) >> 0u))) | (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u))), 0u, 0u))), ~ (~ (uvec3(0u, 0u, 0u)))) + _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u))).x), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x)) | (0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x)))) | 0u)) << 0u))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) + (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) + (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x) >> 0u)) >> 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((vec3(-7026.9357, -874.187, 8385.4886) , subgroup_id)))), 0u))), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x)) | (0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x)))) | 0u)) << 0u)), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((vec3(-7026.9357, -874.187, 8385.4886) , subgroup_id)))), 0u))), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x)) | (0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x)))) | 0u)) << 0u)))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), max(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), 0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x))), (0u + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) + (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x) >> 0u))) | (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x, max(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x) | 0u)))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x)) | (0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(~ (~ (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (~ (uvec3(0u, 0u, 0u))), uvec3(uvec4(~ (~ (uvec3(0u, 0u, 0u))), 1u)))))) + (gl_WorkGroupID)).x)))) | 0u)) << 0u))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (0u + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) + _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID)))) | uvec3(0u, 0u, 0u))).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x) >> 0u))) | (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))) + (gl_WorkGroupID)).x), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x), (0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)).x)) | (0u + (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u)))) + (gl_WorkGroupID)).x)))) | 0u)) << 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + (gl_WorkGroupID))) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ _GLF_IDENTITY((uvec3(0u, 0u, 0u)), (true ? (uvec3(0u, 0u, 0u)) : _GLF_FUZZED(_GLF_IDENTITY((99304u / uvec3(179413u, 60678u, 103262u)), max((99304u / uvec3(179413u, 60678u, 103262u)), (99304u / uvec3(179413u, 60678u, 103262u))))))))) + (gl_WorkGroupID)).x))) | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) + _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u))).x));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), _GLF_IDENTITY(uint(uvec4(uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_size) : false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) << (0u & (34634u ^ 65008u))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) && true)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) && true)))) || false))) && true))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), false), false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) + 0.0)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))) && true))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-78658) : 1)), 0 + (1))))), subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-78658) : 1)), 0 + (1))))), subgroup_local_id + 1))), min((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-78658) : 1)), 0 + (1))))), subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-78658) : 1)), 0 + (1))))), subgroup_local_id + 1)))))) << 0u), ~ (~ ((subgroup_local_id + 1))))) - 0u) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false))), false, false, false))), ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))) || false)) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) | (0 & -26067))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), min((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) / 1)), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) / 1)), 0 | (~ (_GLF_IDENTITY(4, (4) / 1))))))))), (4))), min((4), _GLF_IDENTITY(_GLF_IDENTITY((4), ~ (~ ((4)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((4), ~ (~ ((4)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((4), _GLF_IDENTITY(~ (~ ((4))), (_GLF_IDENTITY(~ (~ ((4))), (~ (~ ((4)))) - 0)) - 0)), 1)), clamp(int(ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((4), ~ (~ ((4)))), (_GLF_IDENTITY((4), ~ (~ ((4))))) / 1), 1)), int(ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1))))), 1)), (true ? int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((4), ~ (~ _GLF_IDENTITY(((4)), ~ (~ (((4))))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1)), clamp(int(ivec2(_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((4))), (_GLF_IDENTITY(~ (~ ((4))), max(~ (~ (_GLF_IDENTITY((4), min((4), (4))))), ~ (~ ((4)))))) | 0), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ ((4))), min((~ ((4))), _GLF_IDENTITY((~ ((4))), ~ (~ ((~ ((4)))))))), (_GLF_IDENTITY(~ (~ ((4))), max(~ (~ ((4))), ~ (~ ((4)))))) | 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((4), max((4), (4))))), (_GLF_IDENTITY(~ (~ ((4))), max(~ (~ ((4))), ~ (~ ((4)))))) | 0), _GLF_IDENTITY(~ (~ ((4))), (_GLF_IDENTITY(~ (~ ((4))), max(~ (~ ((4))), ~ (~ ((4)))))) | 0)))), 1)), int(ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1)), int(ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1))))), 1)) : _GLF_FUZZED(-46684)))))) | (4))), clamp((_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2((4), 0), (ivec2((4), 0)) | (_GLF_IDENTITY(ivec2((4), 0), clamp(ivec2((4), 0), ivec2((4), 0), ivec2((4), 0))))), ivec2(0, 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(54733))), 4, 4))), 0), (ivec2((4), 0)) | _GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), clamp((4), (4), (4)))) | (_GLF_IDENTITY((4), clamp((4), (4), (4))))), (4))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))), (true ? _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))) : _GLF_FUZZED(59970))), (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4)))) + 0)) | (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))))), 0), clamp(ivec2((_GLF_IDENTITY(4, (4) << (0 << _GLF_IDENTITY(int(8), int(8))))), 0), ivec2((4), 0), ivec2((4), 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), clamp((4), (4), (4)))) | (_GLF_IDENTITY((4), clamp((4), (4), (4))))), (4))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))), (true ? _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))) : _GLF_FUZZED(59970))), (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4)))) + 0)) | (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))))), 0), clamp(ivec2((_GLF_IDENTITY(4, (4) << (0 << _GLF_IDENTITY(int(8), int(8))))), 0), ivec2((4), 0), ivec2((4), 0)))), min((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), clamp((4), (4), (4)))) | (_GLF_IDENTITY((4), clamp((4), (4), (4))))), (4))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))), (true ? _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))) : _GLF_FUZZED(59970))), (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4)))) + 0)) | (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))))), 0), clamp(ivec2((_GLF_IDENTITY(4, (4) << (0 << _GLF_IDENTITY(int(8), int(8))))), 0), ivec2((4), 0), ivec2((4), 0)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), clamp((4), (4), (4)))) | (_GLF_IDENTITY((4), clamp((4), (4), (4))))), (4))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))), (true ? _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))) : _GLF_FUZZED(59970))), (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4)))) + 0)) | (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))))), 0), clamp(ivec2((_GLF_IDENTITY(4, (4) << (0 << _GLF_IDENTITY(int(8), int(8))))), 0), ivec2((4), 0), ivec2((4), 0))))))) | ((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), clamp((4), (4), (4)))) | (_GLF_IDENTITY((4), clamp((4), (4), (4))))), (4))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))), (true ? _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))) : _GLF_FUZZED(59970))), (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4)))) + 0)) | (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))))), 0), clamp(ivec2((_GLF_IDENTITY(4, (4) << (0 << _GLF_IDENTITY(int(8), int(8))))), 0), ivec2((4), 0), ivec2((4), 0))))))), (_GLF_IDENTITY(ivec2((4), 0), (ivec2((4), 0)) | (_GLF_IDENTITY(ivec2((4), 0), clamp(ivec2((4), _GLF_IDENTITY(0, clamp(0, 0, 0))), ivec2((4), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 | (0))))), ~ (~ (0)))), ivec2((4), 0)))))) | (_GLF_IDENTITY(ivec2((4), 0), (ivec2((4), 0)) | (_GLF_IDENTITY(ivec2((4), 0), clamp(ivec2((4), 0), ivec2((4), 0), ivec2(_GLF_IDENTITY((4), min((4), (4))), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0)))))))))))))))))), (_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY(4, (4) | (4))))) + 0), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))))], _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), max(~ (~ (4)), ~ (~ (4))))), _GLF_IDENTITY(64, clamp(64, 64, 64)), 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64))) / 1), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_IDENTITY(vec3(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), 1.0, 1.0), mat3(1.0) * (vec3(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), 1.0, 1.0))))), float(_GLF_FUZZED((-10.98 / 9.7))), bool(false)))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
