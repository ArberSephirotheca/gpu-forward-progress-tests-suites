#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), true, true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) : _GLF_FUZZED(workgroup_size))) * subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) : _GLF_FUZZED(workgroup_size))) * subgroup_size)), (((_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) : _GLF_FUZZED(workgroup_size))) * subgroup_size))) / 1u) - 0u), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) : _GLF_FUZZED(workgroup_size))) * subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) : _GLF_FUZZED(workgroup_size))) * subgroup_size)), (((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) : _GLF_FUZZED(workgroup_size)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) : _GLF_FUZZED(workgroup_size)), min((true ? _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) : _GLF_FUZZED(workgroup_size)), (true ? _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) : _GLF_FUZZED(workgroup_size))))) << 0u)) * subgroup_size))) / 1u) - 0u))) - 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (0)) | (4))), max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), ~ (~ (~ ((0))))))), (~ (0)) ^ 0)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), ~ (~ (~ ((0))))))), (~ (0)) ^ 0)), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), ~ (~ (~ ((0))))))), (~ (0)) ^ 0))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), ~ (~ (~ ((0))))))), (~ (0)) ^ 0)))) : _GLF_FUZZED(-33086)))) | _GLF_IDENTITY((4), ((4)) * 1))))), (false ? _GLF_FUZZED(-91333) : _GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) * 1)))), 0 | (4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (4) * 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), 0 | (_GLF_IDENTITY(4, (4) * 1))) : _GLF_FUZZED(findMSB(subgroup_local_id))))))), 0 | (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) * 1))), ((~ (_GLF_IDENTITY(4, (4) * 1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) >> (0 << _GLF_IDENTITY(int(7), int(7)))) | (4))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), ~ (~ (~ (_GLF_IDENTITY(4, 0 | (4))))))))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))), _GLF_IDENTITY(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1)), ~ (~ (int(ivec3(4, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1)))))))))), 1, (0 ^ 1)), ~ (~ (ivec3(max((_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), 0 | (_GLF_IDENTITY(0 | (4), (0 | (4)) >> 0))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0 | (4), ~ (_GLF_IDENTITY(~ (0 | (4)), 0 + (~ (0 | (4)))))), clamp(0 | (4), 0 | (4), _GLF_IDENTITY(_GLF_IDENTITY(0 | (4), 1 * (0 | (4))), 0 | (0 | (4)))))))), 1, (_GLF_IDENTITY(0 ^ 1, 0 ^ (0 ^ 1)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (0 ^ 1)), ~ (~ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (0 ^ 1)))))), (int(_GLF_IDENTITY(ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (_GLF_IDENTITY(0, min(0, 0)) ^ 1)), ~ _GLF_IDENTITY((~ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (_GLF_IDENTITY(0, int(ivec2(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(67450)))))) ^ 1)))), (false ? _GLF_FUZZED(ivec3(-75060, -66529, -15079)) : _GLF_IDENTITY((~ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (0 ^ 1)))), clamp((~ (_GLF_IDENTITY(ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (0 ^ 1)), (ivec3(0, 0, 0) | ivec3(0, 0, 0)) ^ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (0 ^ 1)))))), (~ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (0 ^ 1)))), (~ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), clamp((4), (4), (4)))))), 1, (0 ^ 1))))))))))) | (int(_GLF_IDENTITY(ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), clamp(0 | (4), 0 | (4), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1) | (4)))))), 1, (0 ^ 1)), ~ (~ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), 0 | (4)))), 1, (0 ^ 1))))))))), ~ (~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1)))), ~ (~ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (0 ^ 1)))))), (int(_GLF_IDENTITY(ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), (_GLF_IDENTITY(0 | (4), (false ? _GLF_FUZZED(-41446) : 0 | (4)))) - (0 & 63398))))), 1, (_GLF_IDENTITY(0, min(0, 0)) ^ 1)), ~ _GLF_IDENTITY((~ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (_GLF_IDENTITY(0, int(ivec2(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(67450)))))) ^ 1)))), (false ? _GLF_FUZZED(ivec3(-75060, -66529, -15079)) : _GLF_IDENTITY((~ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (0 ^ 1)))), clamp((~ (_GLF_IDENTITY(ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (0 ^ 1)), (ivec3(0, 0, 0) | ivec3(0, 0, 0)) ^ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (0 ^ 1)))))), (~ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, 0 | (4)))), 1, (0 ^ 1)))), (~ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (0)) | _GLF_IDENTITY((4), clamp((4), (4), (4)))))), 1, (0 ^ 1))))))))))) | (int(_GLF_IDENTITY(ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), clamp(0 | (4), 0 | (4), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | (0))) / 1) | (4)))))), 1, (0 ^ 1)), ~ (~ (ivec3(max((_GLF_IDENTITY(4, 0 | (4))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), 0 | (4)))), 1, (0 ^ 1)))))))))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-91333, (-91333) >> 0)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) * 1)))), 0 | (4))), ~ _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), min(0 | (4), 0 | (4))))), 0 | ((_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), (0 | (4)) << 0)))))))))), int(int(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))), max((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), max(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (_GLF_IDENTITY(4, 0 | (4))) + 0)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), clamp(0 | (4), 0 | (4), 0 | (4))))))), (false ? _GLF_FUZZED(-91333) : _GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) * 1)))), 0 | (4))), ~ (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) + 0)))) << 0)))))))))))))))), clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) | 0))), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) | 0)))) | (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, min(64, 64)), 64)), _GLF_IDENTITY((64) | 0, ((64) | 0) << 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) | 0))), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) | 0)))) | (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, min(64, 64)), 64)), _GLF_IDENTITY((64) | 0, ((64) | 0) << 0))))))) << 0), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.7) : injectionSwitch.y))))), float(_GLF_FUZZED(-805.422)), bool(false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5496.2042), _GLF_FUZZED(9625.8191)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(9.8)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5496.2042), _GLF_FUZZED(9625.8191)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(9.8)), bool(false)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)), true)))))))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) - 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) - 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | _GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) + 0u)) >> 0u)) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), max((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))), 0u | (((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))))) | 0u))), _GLF_IDENTITY(0u, (0u) | 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(976.451, 3.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y, (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y)))))))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (true ? _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))) : _GLF_FUZZED(workgroup_size))), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u))), 0u)) >> uvec2(0u, 0u)), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), max((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), sqrt(0.0), 1.0, abs(0.0), 0.0, 0.0, 0.0)), (float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), sqrt(0.0), 1.0, abs(0.0), 0.0, 0.0, 0.0))) - 0.0)))))) | _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))), 0u | (((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))))) | 0u))), _GLF_IDENTITY(0u, (0u) | 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) ? _GLF_FUZZED(mod(976.451, 3.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY((false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(9.4)), vec2(_GLF_FUZZED(-87.71), ((injectionSwitch))[1]), bvec2(false, true))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y), clamp((false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(9.4)), vec2(_GLF_FUZZED(-87.71), ((injectionSwitch))[1]), bvec2(false, true))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y), _GLF_IDENTITY((false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(9.4)), vec2(_GLF_FUZZED(-87.71), ((injectionSwitch))[1]), bvec2(false, true))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y), ((false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(9.4)), vec2(_GLF_FUZZED(-87.71), ((injectionSwitch))[1]), bvec2(false, true))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y)) - 0.0), (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(9.4)), vec2(_GLF_FUZZED(-87.71), ((injectionSwitch))[1]), bvec2(false, true))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y)))))))))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))), (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (true ? _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))) : _GLF_FUZZED(workgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u))))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), (virtual_gid) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u))), 0u)) >> _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u)))))) : _GLF_FUZZED((virtual_gid | uvec2(194014u, 142575u)))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(asin(-468.361)) : 1.0)), injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)))))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) ^ (1u ^ 1u)), _GLF_IDENTITY(0u, min(0u, 0u))))) | 0u))), 0u)) >> _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u)))) | _GLF_IDENTITY((uvec2(0u, 0u) | uvec2(0u, 0u)), clamp((uvec2(0u, 0u) | uvec2(0u, 0u)), (uvec2(0u, 0u) | uvec2(0u, 0u)), _GLF_IDENTITY((uvec2(0u, 0u) | uvec2(0u, 0u)), ((uvec2(0u, 0u) | uvec2(0u, 0u))) * uvec2(1u, 1u))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min((_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) - (0u | 0u)), (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) * 1u)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x3(1.0, abs(0.0), 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(925.802)), bool(false)))))), injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u, (((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u) << 0u)))), 0u)) >> uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), min((_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) - (0u | 0u)), (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) * 1u)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x3(1.0, abs(0.0), 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(925.802)), bool(false)))))), injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u, (((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u) << 0u)))), 0u)) >> uvec2(0u, 0u)))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) - 0u))))) ^ 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), (_GLF_IDENTITY((virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)) | (_GLF_IDENTITY((virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (_GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) >> 0u)) >> 0u))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), min((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | _GLF_IDENTITY(0u, min(0u, 0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), min((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | _GLF_IDENTITY(0u, min(0u, 0u)))), (~ ((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), min((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | _GLF_IDENTITY(0u, min(0u, 0u))))) * 1u))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(1.2, -4.3, 3.4, -29.36).s)), bool(false))))))) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), uvec2(uvec4(_GLF_IDENTITY(uvec2(0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), max(uvec2(0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), uvec2(0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))), 1u, 1u))))))), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | _GLF_IDENTITY(0u, min(0u, 0u))) | 0u))), 0u)) >> uvec2(0u, 0u)))))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-763.897)), bool(_GLF_IDENTITY(false, (false) || false))))), float(_GLF_IDENTITY(_GLF_FUZZED(-9307.6435), (_GLF_IDENTITY(_GLF_FUZZED(-9307.6435), 1.0 * (_GLF_FUZZED(-9307.6435)))) - 0.0)), bool(false))) > injectionSwitch.y))))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (false ? _GLF_FUZZED(8647u) : (next_virtual_gid)))))) << (0u << _GLF_IDENTITY(uint(6u), uint(6u))))], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true)), (bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(((! (false))) && true, true && (((! (false))) && true)), false || (_GLF_IDENTITY(((! (false))) && true, true && (((! (false))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), false, false, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, false)), bool(bvec4(bool(bvec3(! (false), false, false)), true, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((! (false))) && true)), (bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true)), ((! (false))) && true))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, ! (! (false)))))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))), false, false, true)))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))), false, false, true))))))) || false)))), bool(bvec2(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), bool(bvec4(! _GLF_IDENTITY((false), false || ((false))), false, true, false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), false || (_GLF_IDENTITY(! (false), (! (false)) || false))))))) && true)), (bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), false || ((false))), false, true)), (bool(bvec3(_GLF_IDENTITY((false), false || ((false))), false, true))) || false))), ((! (false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))), (((! (false)))) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(((! (false))), (((! (false)))) && true))), bool(bvec2(bool(! (_GLF_IDENTITY(((! (false))), (((! (false)))) && true))), false))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) && true, _GLF_IDENTITY(true, (true) && true) && (((! (false))) && true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) && true), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) && true), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) && true), false)))))))))), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(82.94)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))))))))), false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true)))), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), true, false))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(pow(-7367.0316, 9.5)) : injectionSwitch.y)))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), false, false, true))))))))), bool(bvec2(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), ((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), false, false, true))))))))), false)))))), ! (! (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true)))), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), true, false))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(pow(-7367.0316, 9.5)) : injectionSwitch.y)))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), false, false, true))))))))), bool(bvec2(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), ((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), false, false, true))))))))), false)))))), true && ((! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true)))), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), true, false))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(pow(-7367.0316, 9.5)) : injectionSwitch.y)))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), false, false, true))))))))), bool(bvec2(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), ((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), false, false, true))))))))), false)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
