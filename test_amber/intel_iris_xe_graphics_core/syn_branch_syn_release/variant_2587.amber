#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false)))))) || false))))
      {
      }
     else
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter ++)), 0 + (~ (~ _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter ++)), 0 + (~ (~ _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) >> 0)))), 0 + (_GLF_IDENTITY(~ (~ (_injected_loop_counter ++)), 0 + (~ (~ _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) >> 0))))))) >> 0)))))) << 0))
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), true && ((false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0)))[0], injectionSwitch[1])).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter))) >> 0) != (_GLF_IDENTITY(0, (0) | (0)) ^ _GLF_IDENTITY(0, (0) * 1))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, true, true)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0), (mat4x3(injectionSwitch.y, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))))), max(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0), (mat4x3(injectionSwitch.y, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0), (mat4x3(injectionSwitch.y, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))))))))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, cos(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), (true ? mat2x4(injectionSwitch.y, cos(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0) : _GLF_FUZZED(mat2x4(7957.6594, 14.67, 2.2, 6.0, 2.1, 0.4, 1.6, -9.7))))), 0.0 + (float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, cos(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), (true ? mat2x4(injectionSwitch.y, cos(0.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0) : _GLF_FUZZED(mat2x4(7957.6594, 14.67, 2.2, 6.0, 2.1, 0.4, 1.6, -9.7)))))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))), mix(vec4(_GLF_FUZZED(9.4), (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[1], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[2], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[3]), vec4((vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[0], _GLF_FUZZED((-12.38 + -53.44)), _GLF_FUZZED(-4.8), _GLF_FUZZED(-5.4)), bvec4(true, false, false, false))))).y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))), mix(vec4(_GLF_FUZZED(9.4), (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[1], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[2], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[3]), vec4((vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[0], _GLF_FUZZED((-12.38 + -53.44)), _GLF_FUZZED(-4.8), _GLF_FUZZED(-5.4)), bvec4(true, false, false, false))))).y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))), mix(vec4(_GLF_FUZZED(9.4), (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[1], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[2], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[3]), vec4((vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[0], _GLF_FUZZED((-12.38 + -53.44)), _GLF_FUZZED(-4.8), _GLF_FUZZED(-5.4)), bvec4(true, false, false, false))))).y, true && (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))), mix(vec4(_GLF_FUZZED(9.4), (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[1], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[2], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[3]), vec4((vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[0], _GLF_FUZZED((-12.38 + -53.44)), _GLF_FUZZED(-4.8), _GLF_FUZZED(-5.4)), bvec4(true, false, false, false))))).y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))), mix(vec4(_GLF_FUZZED(9.4), (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[1], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[2], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[3]), vec4((vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[0], _GLF_FUZZED((-12.38 + -53.44)), _GLF_FUZZED(-4.8), _GLF_FUZZED(-5.4)), bvec4(true, false, false, false))))).y, true && (injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))), mix(vec4(_GLF_FUZZED(9.4), (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[1], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[2], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[3]), vec4((vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[0], _GLF_FUZZED((-12.38 + -53.44)), _GLF_FUZZED(-4.8), _GLF_FUZZED(-5.4)), bvec4(true, false, false, false))))).y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))), mix(vec4(_GLF_FUZZED(9.4), (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[1], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[2], (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[3]), vec4((vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-969.544)), float(0.0), bool(true)))))[0], _GLF_FUZZED((-12.38 + -53.44)), _GLF_FUZZED(-4.8), _GLF_FUZZED(-5.4)), bvec4(true, false, false, false))))).y, true && (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false, true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), false, true, true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true && (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false) || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0))).y, sin(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7174.7554)), bool(false))), mix(float(_GLF_FUZZED(float(96119))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), float(mat2x4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * cos(0.0)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / round(length(normalize(round(length(normalize(vec2(1.0, 1.0)))))))), min(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 0.0))), 0.0)), 0.0)), 0.0)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(96119))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))), injectionSwitch.y, injectionSwitch.y), (clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(96119))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && (bool(true))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))), injectionSwitch.y, injectionSwitch.y)) - 0.0)), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(36.18)), vec2(_GLF_FUZZED(-31.36), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]) - length(vec4(0.0, 0.0, 0.0, 0.0)))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(96119))), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(float(96119))), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(96119))), float(injectionSwitch.y), bool(true)), float(vec2(mix(float(_GLF_FUZZED(float(96119))), float(injectionSwitch.y), bool(true)), 1.0)))))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) + sqrt(0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))), injectionSwitch.y, injectionSwitch.y)), true)), (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(30.40) : 0.0)), sin(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0)), 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(determinant(mat3(-322.658, 3.3, 3.4, 991.485, _GLF_IDENTITY(5912.2873, (5912.2873) / 1.0), -598.553, -3.3, -2.1, -762.107))), min(true ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(determinant(mat3(-322.658, 3.3, 3.4, 991.485, _GLF_IDENTITY(5912.2873, (5912.2873) / 1.0), -598.553, -3.3, -2.1, -762.107))), true ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(determinant(mat3(-322.658, 3.3, 3.4, 991.485, _GLF_IDENTITY(5912.2873, (5912.2873) / 1.0), -598.553, -3.3, -2.1, -762.107))))))), mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(96119, max(_GLF_IDENTITY(_GLF_IDENTITY(96119, min(_GLF_IDENTITY(96119, 0 | (96119)), 96119)), clamp(_GLF_IDENTITY(96119, min(_GLF_IDENTITY(96119, 0 | (96119)), 96119)), _GLF_IDENTITY(96119, min(_GLF_IDENTITY(96119, 0 | (96119)), 96119)), _GLF_IDENTITY(96119, min(_GLF_IDENTITY(96119, 0 | (96119)), 96119)))), _GLF_IDENTITY(96119, int(ivec4(96119, 0, 0, 1)))))))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-347.772) : _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (false ? _GLF_FUZZED(-347.772) : _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))), injectionSwitch.y, injectionSwitch.y)), true))) || false))) && true, true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.6)), bool(false))))), min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) + 0.0))), 0.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(194.511)), bool(false))), 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-44.88 - -6442.7293))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-44.88 - -6442.7293))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 0.0, 0.0, 1.0, 0.0)), max(float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-44.88 - -6442.7293))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-44.88 - -6442.7293))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), sin(0.0), 1.0, 1.0, cos(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0))))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(96119))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true)))), (mix(float(_GLF_FUZZED(float(96119))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.3)))) / 1.0), injectionSwitch[1])).x < injectionSwitch.y)) && (bool(true))))) - 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, 0.0))), 0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3714.2822))))), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0)), (_GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0))) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0)), (_GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0))) * sqrt(1.0))))), vec2(vec2(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0)), (_GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0))) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0)), (_GLF_IDENTITY(_GLF_FUZZED(36.18), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_FUZZED(36.18), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))) / 1.0))) * sqrt(1.0)))))))), vec2(_GLF_FUZZED(-31.36), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(96119))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (0.0) + sqrt(0.0))), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), mix(vec2(_GLF_FUZZED(86.31), (_GLF_IDENTITY(vec2(1.0, 0.0), clamp(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0), vec2(1.0, 0.0))))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(6.1)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false)))), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 1.0))))), 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3x4(vec2(1.0, 0.0), 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0))))), 0.0))), injectionSwitch.y, injectionSwitch.y)), true)), (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), float(_GLF_FUZZED(8.7)), bool(false))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(99.81)), float(0.0), bool(true))))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(99.81)), float(0.0), bool(true))))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), max(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(99.81)), float(0.0), bool(true))))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(99.81)), float(0.0), bool(true))))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), (false ? _GLF_FUZZED(9757.6001) : _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(99.81)), float(0.0), bool(true))))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))))))), sqrt(0.0), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0)), 0.0))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(determinant(mat3(-322.658, 3.3, 3.4, 991.485, _GLF_IDENTITY(5912.2873, _GLF_IDENTITY(float(mat4x3(5912.2873, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0)), min(float(mat4x3(5912.2873, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0)), float(mat4x3(5912.2873, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(-598.553, (_GLF_IDENTITY(-598.553, float(mat4x3(-598.553, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0)))) / 1.0), min(-598.553, -598.553)), -3.3, -2.1, -762.107))))), mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(96119, max(_GLF_IDENTITY(96119, min(_GLF_IDENTITY(_GLF_IDENTITY(96119, 0 | (96119)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(96119, 0 | (96119)), clamp(_GLF_IDENTITY(96119, 0 | (96119)), _GLF_IDENTITY(96119, 0 | (96119)), _GLF_IDENTITY(96119, 0 | (96119)))))), 96119)), _GLF_IDENTITY(96119, int(ivec4(96119, 0, 0, 1)))))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), false || (bool(_GLF_IDENTITY(true, true && (true))))))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-347.772) : _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), float(mat4x2(_GLF_IDENTITY((false ? _GLF_FUZZED(-347.772) : _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(-347.772) : _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), (true ? (false ? _GLF_FUZZED(-347.772) : _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(3961.8152)))), max((_GLF_IDENTITY((false ? _GLF_FUZZED(-347.772) : _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), (true ? (false ? _GLF_FUZZED(-347.772) : _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(3961.8152)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(-347.772) : _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), (true ? (false ? _GLF_FUZZED(-347.772) : _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(3961.8152)))))) - 0.0), 1.0, sqrt(0.0), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - log(vec2(1.0, 1.0)))).y, injectionSwitch.y)), true))) || false))) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.9, -0.5)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch)).x, float(vec2(injectionSwitch.x, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4117.0853))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4117.0853))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4117.0853))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)).y : _GLF_FUZZED(-8152.8988)))) * 1.0), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(6092.0275, 3.5)))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)).y)), injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(0.0), 0.0)), 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-44.30), (vec3(0.0, 0.0, 1.0))[1], _GLF_FUZZED(-3808.0474)), vec3((vec3(0.0, 0.0, 1.0))[0], _GLF_FUZZED(-200.438), (vec3(0.0, 0.0, 1.0))[2]), bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), sqrt(0.0), 0.0)), 1.0, 0.0)))))), 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), false, false)), (bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (false) || false)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5905.2119))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(1.0, 0.0, 0.0))))), determinant(mat4(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0)), length(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-6801.9874) : dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0), mat3x4(mat4(mat3x4(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(1.0, 0.0, 0.0))))), determinant(mat4(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0)), length(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-6801.9874) : dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0))))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(mat3x2(-863.264, -70.74, -199.116, -34.55, 0.4, 826.567)) : mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(54.88))), 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, tan(0.0), tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-9817.8315, -584.406, -8.5, 17.90, -6371.6084, 7529.8116, -8337.5650, 5176.7586, -860.099)) : mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-863.264, -70.74, -199.116, -34.55, 0.4, 826.567)) : mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0))))), max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-863.264, -70.74, -199.116, -34.55, 0.4, 826.567)) : mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-863.264, -70.74, -199.116, -34.55, 0.4, 826.567)) : mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-863.264, -70.74, -199.116, -34.55, 0.4, 826.567)) : mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-9579.3052)), float(float(mat3x2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-863.264, -70.74, -199.116, -34.55, 0.4, 826.567)) : mat3x2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, length(0.0)), vec4(exp(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 0.0, 0.0))), bool(true)))))), 0.0))))), vec2(1.0, 1.0)), dot(vec2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(int(int(_GLF_ONE(1.0, injectionSwitch.y))), (int(int(_GLF_ONE(1.0, injectionSwitch.y)))) << 0)))); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u * (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 0u))) + subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) | 0)) ^ 0), (subgroup_local_id + 1) * (0u ^ 1u))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(14.70), _GLF_FUZZED(-9.7)), bvec2(false, false))).x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(35.88, (35.88) - 0.0)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(35.88, (35.88) - 0.0))) - 0.0))) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)) || false) || false)) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(886.621, 1.3)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(int(int(8)))), min(_GLF_IDENTITY(int(8), int(int(int(8)))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))), int(int(int(8)))))))) ^ 0), _GLF_IDENTITY((((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(max(_GLF_IDENTITY(8, max(8, 8)), 8), (max(8, 8)) | (max(8, 8))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(int(int(8)))), (true ? _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(int(int(8)), max(int(int(8)), int(int(8)))))) : _GLF_FUZZED(-21974))), min(_GLF_IDENTITY(int(8), int(int(int(8)))), _GLF_IDENTITY(int(8), int(int(int(8)))))))) ^ 0)), ~ (~ (_GLF_IDENTITY((((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(max(8, 8), (max(8, 8)) | (max(8, 8))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(max(8, 8), (max(8, 8)) | (max(8, 8))))), clamp(int(_GLF_IDENTITY(8, _GLF_IDENTITY(max(8, 8), (max(8, 8)) | (max(8, 8))))), int(_GLF_IDENTITY(8, _GLF_IDENTITY(max(8, 8), (max(8, 8)) | (max(8, 8))))), int(_GLF_IDENTITY(8, _GLF_IDENTITY(max(8, 8), (max(8, 8)) | (max(8, 8)))))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(int(int(8)))), (_GLF_IDENTITY(int(8), int(int(int(8))))) / 1), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(int(int(8)))) : _GLF_FUZZED(-21974))), min(_GLF_IDENTITY(int(8), int(int(int(_GLF_IDENTITY(8, (8) | (8)))))), _GLF_IDENTITY(int(8), int(int(int(8)))))))) ^ 0)), int(ivec2((((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(_GLF_IDENTITY(max(8, 8), min(_GLF_IDENTITY(max(8, 8), (max(8, 8)) ^ 0), max(8, 8))), _GLF_IDENTITY((max(8, 8)), ((max(8, 8))) << 0) | (max(8, 8))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(int(int(8)))), (true ? _GLF_IDENTITY(int(8), int(int(int(8)))) : _GLF_FUZZED(-21974))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(int(int(8)))), (true ? _GLF_IDENTITY(int(8), int(int(int(8)))) : _GLF_FUZZED(-21974))))), min(_GLF_IDENTITY(int(8), int(int(int(8)))), _GLF_IDENTITY(int(8), int(int(int(8)))))))) ^ 0)), _GLF_IDENTITY(1, ~ (~ (1))))))))) / _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(_injected_loop_counter))))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) / 1)))))), clamp(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), int(0))), _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) ^ 0)) | (_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), int(0))))) >> _GLF_IDENTITY(int(0), int(0)))), max((((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) ^ 0)) | (_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), int(0))))) >> _GLF_IDENTITY(int(0), int(0)))), (((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) ^ 0)) | (_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), int(0))))) >> _GLF_IDENTITY(int(0), int(0)))))) << 0), ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(0), 1), (ivec2(int(0), 1)) | (ivec2(int(0), 1)))), (int(_GLF_IDENTITY(ivec2(int(0), 1), (ivec2(int(0), 1)) | (ivec2(int(0), 1))))) | (int(_GLF_IDENTITY(ivec2(int(0), 1), (ivec2(int(0), 1)) | (ivec2(int(0), 1))))))), int(0))))) >> _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (_GLF_IDENTITY(int(0), ~ (~ (int(0))))))), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))), clamp(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))), 0 + (((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), clamp(_GLF_IDENTITY(int(0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(int(0), max(int(0), int(0))))), int(0), int(0))), int(0))))) >> _GLF_IDENTITY(int(0), int(0))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), 0 | (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), int(ivec4(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), 1, 1, 0)))))) >> _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), max(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), 1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) / 1), 1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))))) >> _GLF_IDENTITY(int(0), int(0))), min(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), max(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), 1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) / 1), 1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))))) >> _GLF_IDENTITY(int(0), int(0))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), max(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), 1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) / 1), 1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))))) >> _GLF_IDENTITY(int(0), int(0))))))))))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0)), ((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))) / 1) ^ 0))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0))), ((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     buf[virtual_gid] = 1;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) && true))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) + 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(i) : 2)), ~ (~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(i) : 2)))))), 4, _GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) - 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
