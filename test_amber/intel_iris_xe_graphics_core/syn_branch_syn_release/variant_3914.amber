#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_25 {
 mat4 _f0;
 float _f1;
 uint next_virtual_gid;
 mat3x4 _f2;
 ivec4 _f3;
 mat3 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_24 {
 uvec3 _f0;
 mat4x3 _f1;
 vec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_26 {
 mat3x2 _f0;
 _GLF_struct_24 _f1;
 mat2x3 _f2;
 _GLF_struct_25 _f3;
} ;

struct _GLF_struct_27 {
 _GLF_struct_26 _f0;
} ;

struct _GLF_struct_21 {
 bool _f0;
 float _f1;
 mat4x3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_20 {
 mat3x4 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_19 {
 vec2 _f0;
 ivec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_22 {
 _GLF_struct_19 _f0;
 ivec4 _f1;
 _GLF_struct_20 _f2;
 _GLF_struct_21 _f3;
 float _f4;
 int _f5;
} ;

struct _GLF_struct_18 {
 mat3x4 _f0;
 uint _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_16 {
 uvec2 _f0;
} ;

struct _GLF_struct_15 {
 vec2 _f0;
 vec3 _f1;
 bvec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 bool _f1;
 mat2x3 _f2;
 float _f3;
 mat2x3 _f4;
 mat3x4 _f5;
 bool _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 mat3x4 _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_23 {
 mat3 _f0;
 _GLF_struct_17 _f1;
 vec2 _f2;
 _GLF_struct_18 _f3;
 uint workgroup_base;
 _GLF_struct_22 _f4;
 ivec2 _f5;
 bool _f6;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 bool _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 uvec4 _f1;
 float _f2;
 mat3 _f3;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 mat4x3 _f1;
 vec4 _f2;
 mat2x4 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 mat4 _f1;
 mat4 _f2;
 mat3x4 _f3;
 ivec4 _f4;
 ivec2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_5 {
 uint _f0;
 bvec3 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 mat4x2 _f1;
 _GLF_struct_6 _f2;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_2 {
 float _f0;
 mat3 _f1;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat2 _f1;
 uvec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 mat4x3 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_4 _f2;
 int _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_10 _f5;
 uint subgroup_size;
 _GLF_struct_12 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, abs(1.0)))).y)))))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || _GLF_IDENTITY((false), true && ((false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), clamp(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), mat4(1.0) * (mat4(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), clamp(float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(0.0, sqrt(_GLF_IDENTITY(1.0, 0.0 + (1.0))), 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(389.263)), float(1.0), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (vec4(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(389.263)), float(1.0), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - log(vec4(1.0, 1.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, sqrt(1.0), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))))), mix(float(float(mat3(0.0, sqrt(1.0), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(exp(vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(exp(vec4(0.0, 0.0, 0.0, 0.0)), min(exp(vec4(0.0, 0.0, 0.0, 0.0)), exp(vec4(0.0, 0.0, 0.0, 0.0))))) * vec4(1.0, 1.0, 1.0, 1.0)))))))), float(_GLF_FUZZED(-7.7)), bool(false)))), sqrt(1.0), 1.0, 0.0))), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, 1.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat4(1.0)), vec4(0.0, _GLF_IDENTITY(sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))) * (sqrt(1.0))), 1.0, 0.0)), clamp(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat4(1.0)), vec4(0.0, _GLF_IDENTITY(sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))) * (sqrt(1.0))), 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat4(1.0)), vec4(0.0, _GLF_IDENTITY(sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))) * (sqrt(1.0))), 1.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat4(1.0)), vec4(0.0, _GLF_IDENTITY(sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))) * (sqrt(1.0))), 1.0, 0.0)), max(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat4(1.0)), vec4(0.0, _GLF_IDENTITY(sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))) * (sqrt(1.0))), 1.0, 0.0)), mix(float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat4(1.0)), vec4(0.0, _GLF_IDENTITY(sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))) * (sqrt(1.0))), 1.0, 0.0))), float(_GLF_FUZZED(4652.3105)), bool(false))), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * mat4(1.0)), vec4(0.0, _GLF_IDENTITY(sqrt(1.0), round(length(normalize(vec2(1.0, 1.0)))) * (sqrt(1.0))), 1.0, 0.0)))))), dot(vec4(1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, abs(0.0)), max(vec2(0.0, abs(0.0)), vec2(0.0, abs(0.0)))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec4(0.0, sqrt(1.0), 1.0, 0.0), clamp(_GLF_IDENTITY(vec4(0.0, sqrt(1.0), 1.0, 0.0), max(vec4(0.0, sqrt(1.0), 1.0, 0.0), vec4(0.0, sqrt(1.0), 1.0, 0.0))), _GLF_IDENTITY(vec4(0.0, sqrt(1.0), 1.0, 0.0), mat4(1.0) * (vec4(0.0, sqrt(1.0), 1.0, 0.0))), vec4(0.0, sqrt(1.0), 1.0, 0.0))))), 0.0)) * mat2(1.0)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      return;
     barrier();
    }
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(mat3(1.0), _GLF_struct_0(uvec4(1u), mat2(1.0)), _GLF_struct_4(_GLF_struct_1(_GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-71.70, -1.6, -2.4, -8.1, -83.30, 5638.8279, -49.96, 1.7, 3421.0071))))), (true ? transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat3(-71.70, -1.6, -2.4, -8.1, -83.30, 5638.8279, -49.96, 1.7, 3421.0071)), mat3(mat3x4(_GLF_FUZZED(mat3(-71.70, -1.6, -2.4, -8.1, -83.30, 5638.8279, -49.96, 1.7, 3421.0071)))))))) : _GLF_FUZZED(mat3(6276.8666, -4.0, 5.4, -8742.1292, -9541.3573, 1668.1575, 19.83, 0.5, 0.5)))), (true ? transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat3(-71.70, -1.6, -2.4, -8.1, -83.30, 5638.8279, -49.96, 1.7, 3421.0071)), transpose(transpose(_GLF_FUZZED(mat3(-71.70, -1.6, -2.4, -8.1, -83.30, 5638.8279, -49.96, 1.7, 3421.0071)))))))) : _GLF_FUZZED(mat3(-545.056, -994.330, -0.1, 8529.4676, 4.7, 99.58, 266.906, 28.62, 4.3)))))), mat2(1.0), uvec4(1u), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) ^ 0)), (min(1, 1)) | (min(1, _GLF_IDENTITY(1, (1) / 1))))), _GLF_IDENTITY((1), _GLF_IDENTITY(((1)), max(((1)), _GLF_IDENTITY(((1)), (((1))) / 1))) + 0) | _GLF_IDENTITY((1), int(_GLF_IDENTITY(int((1)), 0 | (int((1)))))))), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) ^ 0)), (min(1, 1)) | (min(1, _GLF_IDENTITY(1, (1) / 1))))), _GLF_IDENTITY((1), _GLF_IDENTITY(((1)), max(((1)), _GLF_IDENTITY(((1)), (((1))) / 1))) + 0) | _GLF_IDENTITY((1), int(_GLF_IDENTITY(int((1)), 0 | (int((1)))))))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) ^ 0)), (min(1, 1)) | (min(1, _GLF_IDENTITY(1, (1) / 1))))), _GLF_IDENTITY((1), _GLF_IDENTITY(((1)), max(((1)), _GLF_IDENTITY(((1)), (((1))) / 1))) + 0) | _GLF_IDENTITY((1), int(_GLF_IDENTITY(int((1)), 0 | (int((1))))))))))), _GLF_struct_2(1.0, mat3(1.0)), mat4x3(1.0), _GLF_struct_3(uvec3(1u), mat3(1.0))), 1, _GLF_struct_7(_GLF_struct_5(1u, bvec3(true), mat4x2(1.0), mat2x3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), mat4x2(1.0), _GLF_struct_6(mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-263.026)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(85.57)), bool(false))), (1.0) / 1.0)), bool(true)))), mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0), mix(vec3((vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0))[0], (vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0))[1], _GLF_FUZZED(0.7)), vec3(_GLF_FUZZED(65.53), _GLF_FUZZED(6010.9681), (vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0))[2]), bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3x4(1.0), ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))), ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1)))), ivec2(0, 0) | _GLF_IDENTITY((ivec2(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))))), ivec2(0, 0) ^ ((ivec2(_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), ivec2(ivec2(ivec2(1)))), ivec2(1)))))))))), mat3x4(1.0))), _GLF_struct_10(bvec4(true), _GLF_struct_8(vec2(1.0), mat4x3(1.0), vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-34.71, clamp(_GLF_IDENTITY(-34.71, (-34.71) - 0.0), _GLF_IDENTITY(-34.71, min(-34.71, -34.71)), -34.71)))))), mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) - (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))), uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))) + (uvec4(1u)))), _GLF_struct_9(mat4x2(1.0), uvec4(1u), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0)))), 1.0)), _GLF_IDENTITY(mat3(1.0), (mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 1.0), (true ? mat2x4(1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(-1984.5392, -731.706, -831.078, 738.309, -7.5, 5.4, 5.9, 4.8)))))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u)))), ((_GLF_IDENTITY(uvec4(1u), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (1u) >> 0u)) ^ 0u), 1u, 1u, 1u) * (uvec4(1u))))) | ((_GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u)))))) << uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), max((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), ((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162)))) * 1.0), (true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), ((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162)))) * 1.0), (true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))))), min(_GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), ((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162)))) * 1.0), (true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))))), float(mat2x4(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), ((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162)))) * 1.0), (true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), ((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162)))) * 1.0), (true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))))))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), ((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162)))) * 1.0), (true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))), ((true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162)))) * 1.0), (true ? injectionSwitch.x : _GLF_FUZZED((-6503.3601 + 9472.5162))))))))))), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))), float(_GLF_FUZZED(62.88)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1727.7352)), vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) : _GLF_FUZZED(injectionSwitch))).x)))), gl_SubgroupSize, _GLF_struct_12(_GLF_struct_11(mat4(1.0), true), uvec3(1u)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(660.519)))) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-98.77, 0.0)))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-98.77, 0.0)))), 1.0, abs(0.0), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(4652.1925, 760.377)) : _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec3((true) && true, true, false)))), _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))) : _GLF_FUZZED(injectionSwitch)))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) ? injectionSwitch : _GLF_FUZZED(vec2(-98.77, 0.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) ? injectionSwitch : _GLF_FUZZED(vec2(-98.77, 0.0))), min((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) ? injectionSwitch : _GLF_FUZZED(vec2(-98.77, 0.0))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) ? injectionSwitch : _GLF_FUZZED(vec2(-98.77, 0.0)))))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(90.83, -119.001)))) : _GLF_FUZZED(_GLF_IDENTITY(unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))), (true ? unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))) : _GLF_FUZZED(injectionSwitch))))), min((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))), (unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)))) * vec2(1.0, 1.0)), (true ? unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(33.65), _GLF_FUZZED(vec4(-71.86, -6.0, -6446.5067, -751.628).g)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))), (true ? unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))) : _GLF_FUZZED(injectionSwitch))))), vec2(0.0, 0.0) + (_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))), (true ? unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))) : _GLF_FUZZED(injectionSwitch))))), min((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))), (true ? unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))) : _GLF_FUZZED(injectionSwitch))))), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))), (true ? unpackSnorm2x16(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))) : _GLF_FUZZED(injectionSwitch)))))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), bool(bvec3(! ((_GLF_DEAD(false)) && true), false, true)))))) || false))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), bool(bvec4(_GLF_IDENTITY((! (bool(bool(false)))), ! (! ((! (bool(bool(false))))))), false, true, true))))), true, false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y)))) || false)), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y)))) || false))))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y)))) || false))))), (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y)), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-69.29)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 0.0, 0.0)))), bvec2(true, true))), 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-573.792, -49.32, -22.10, -61.66, -462.421, 345.918)) : _GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-69.29)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 0.0, 0.0)))), bvec2(true, true))), 0.0, 1.0, 1.0, 0.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-69.29)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 0.0, 0.0)))), bvec2(true, true))), 0.0, 1.0, 1.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(51.14), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(44670))), bvec2(true, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-69.29)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 0.0, 0.0)))), bvec2(true, true))), 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-573.792, -49.32, -22.10, -61.66, -462.421, 345.918)) : _GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-69.29)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 0.0, 0.0)))), bvec2(true, true))), 0.0, 1.0, 1.0, 0.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-69.29)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 0.0, 0.0)))), bvec2(true, true))), 0.0, 1.0, 1.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-69.29)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 0.0, 0.0)))), bvec2(true, true))), 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-573.792, -49.32, -22.10, -61.66, -462.421, 345.918)) : _GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-69.29)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 0.0, 0.0)))), bvec2(true, true))), 0.0, 1.0, 1.0, 0.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-69.29)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 0.0, 0.0)))), bvec2(true, true))), 0.0, 1.0, 1.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))).y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))), false || (_GLF_IDENTITY((false), true && ((false)))))))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-219.784, -656.772)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0 + (1.0))), _GLF_struct_17(_GLF_struct_14(vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-982.360)), float(0.0), bool(true)))), 0.0, 0.0, 0.0)))))), true, mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, mat2x3(1.0), mat3x4(1.0), true), _GLF_struct_15(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (false ? _GLF_FUZZED(-17.24) : float(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), vec3(1.0), bvec4(true), ivec3(1)), mat3x4(1.0), _GLF_struct_16(uvec2(1u))), vec2(1.0), _GLF_struct_18(mat3x4(1.0), 1u, mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7462.2107)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), max(float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0)), (float(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), (float(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0))) / 1.0)))), 1.0)))), workgroup_size * workgroup_id, _GLF_struct_22(_GLF_struct_19(vec2(1.0), ivec2(1), mat3x4(1.0)), _GLF_IDENTITY(ivec4(1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (ivec4(1)), ~ (_GLF_IDENTITY(~ (~ (ivec4(1))), (false ? _GLF_FUZZED(ivec4(-14552, 6250, 66812, 75631)) : _GLF_IDENTITY(~ (~ (ivec4(1))), (~ (~ (ivec4(1)))) ^ ivec4(0, 0, 0, 0)))))), (_GLF_IDENTITY(~ (ivec4(1)), ~ (_GLF_IDENTITY(~ (~ (ivec4(1))), (false ? _GLF_FUZZED(ivec4(-14552, 6250, 66812, 75631)) : _GLF_IDENTITY(~ (~ (ivec4(1))), (~ (~ (ivec4(1)))) ^ ivec4(0, 0, 0, 0))))))) << ivec4(0, 0, 0, 0)))), _GLF_struct_20(mat3x4(1.0), bvec2(true)), _GLF_struct_21(true, 1.0, mat4x3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED((true ? -2.1 : -31.20))), bool(false))), 0.0, 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), transpose(transpose(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(0.7) : _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0))))))), mat3x2(1.0)), 1.0, 1), ivec2(1), true);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_23.workgroup_base + subgroup_id * _GLF_struct_replacement_13.subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_23.workgroup_base + subgroup_id * _GLF_struct_replacement_13.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_23.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) >> 0u), (subgroup_id) << 0u) * _GLF_struct_replacement_13.subgroup_size), ((_GLF_struct_replacement_23.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) >> 0u), (subgroup_id) << 0u) * _GLF_struct_replacement_13.subgroup_size)) | (_GLF_IDENTITY((_GLF_struct_replacement_23.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) >> 0u), (subgroup_id) << 0u) * _GLF_struct_replacement_13.subgroup_size), ((_GLF_struct_replacement_23.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) >> 0u), (subgroup_id) << 0u) * _GLF_struct_replacement_13.subgroup_size)) - 0u))) >> 0u), ((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)) / 1u, max(_GLF_IDENTITY(((0u)) / 1u, (((0u)) / 1u) | (((0u)) / 1u)), ((0u)) / 1u)))) - _GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u), clamp(_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u), (true ? (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u), clamp((uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u), (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u), (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))), _GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)) / 1u)))) << 0u), min((6u) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) / 1u)) - (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)) << 0u), (6u) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) / 1u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((0u), ((0u)) / 1u), 0u)), (uint(uvec2(_GLF_IDENTITY((0u), ((0u)) / 1u), 0u))) | (uint(uvec2(_GLF_IDENTITY((0u), ((0u)) / 1u), 0u)))))) - (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)) << _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) - 0u) : _GLF_FUZZED(subgroup_local_id)))))))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), uint(4u))) | (uint(6u))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(6u)))))))) + _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_26(mat3x2(1.0), _GLF_struct_24(uvec3(1u), mat4x3(1.0), vec2(1.0), uvec3(1u)), mat2x3(1.0), _GLF_struct_25(mat4(1.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_23.workgroup_base, min(_GLF_struct_replacement_23.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_23.workgroup_base, clamp(_GLF_struct_replacement_23.workgroup_base, _GLF_struct_replacement_23.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_23.workgroup_base, (true ? _GLF_struct_replacement_23.workgroup_base : _GLF_FUZZED(110899u))))), (_GLF_struct_replacement_23.workgroup_base) | (_GLF_struct_replacement_23.workgroup_base)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((+ _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED((subgroup_local_id << num_workgroup)))), max(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED((subgroup_local_id << num_workgroup)))), _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED((subgroup_local_id << num_workgroup)))))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_23.workgroup_base, 0u ^ (_GLF_struct_replacement_23.workgroup_base)), min(_GLF_struct_replacement_23.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_23.workgroup_base, (_GLF_struct_replacement_23.workgroup_base) | (_GLF_struct_replacement_23.workgroup_base)))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_13.subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_13.subgroup_size, (subgroup_id * _GLF_struct_replacement_13.subgroup_size) << (1u ^ (1u | 1u))), (subgroup_id * _GLF_struct_replacement_13.subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * _GLF_struct_replacement_13.subgroup_size, (subgroup_id * _GLF_struct_replacement_13.subgroup_size) + 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_13.subgroup_size, (subgroup_id * _GLF_struct_replacement_13.subgroup_size) << (_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 1u, 1u, 0u))) ^ (1u | 1u))), _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_13.subgroup_size) | (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_13.subgroup_size, (subgroup_id * _GLF_struct_replacement_13.subgroup_size) + 0u)), (true ? _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_13.subgroup_size) | (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_13.subgroup_size, (subgroup_id * _GLF_struct_replacement_13.subgroup_size) + 0u)), max((subgroup_id * _GLF_struct_replacement_13.subgroup_size) | (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_13.subgroup_size, (subgroup_id * _GLF_struct_replacement_13.subgroup_size) + 0u)), (subgroup_id * _GLF_struct_replacement_13.subgroup_size) | (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_13.subgroup_size, (subgroup_id * _GLF_struct_replacement_13.subgroup_size) + 0u)))) : _GLF_FUZZED(133570u)))))) / 1u))), max(subgroup_id * _GLF_struct_replacement_13.subgroup_size, subgroup_id * _GLF_struct_replacement_13.subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_13.subgroup_size) | 0u, ((_GLF_struct_replacement_13.subgroup_size) | 0u) | ((_GLF_struct_replacement_13.subgroup_size) | 0u))), _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_size, (_GLF_struct_replacement_13.subgroup_size) * 1u), _GLF_struct_replacement_13.subgroup_size))), mat3x4(1.0), _GLF_IDENTITY(ivec4(1), min(ivec4(1), _GLF_IDENTITY(ivec4(1), (ivec4(1)) << ivec4(0, 0, 0, 0)))), mat3(1.0), mat2x3(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false, true)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0)) * mat3(1.0))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0)) * mat3(1.0))), clamp(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0)) * mat3(1.0))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0)) * mat3(1.0))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0)) * mat3(1.0))))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0)) * mat3(1.0)))))).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false, true)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0)) * mat3(1.0))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0)) * mat3(1.0))), clamp(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0)) * mat3(1.0))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0)) * mat3(1.0))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0)) * mat3(1.0))))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[1])), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), sqrt(1.0), 1.0)) * mat3(1.0)))))).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false), true, true, false)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true))), _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(-7412.9128)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))) || false), (((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.6, -2.7)) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2((injectionSwitch) * mat2(1.0), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(-7412.9128)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), int(ivec4(~ (_GLF_IDENTITY(1, max(1, 1))), (0 >> _GLF_IDENTITY(int(1), int(1))), (0 << _GLF_IDENTITY(int(3), int(3))), 1)))))]), bvec2(true, true))))).y))) || false)) || false) && true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-499.989)), bool(false))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-499.989)), bool(false))) > injectionSwitch.y), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-499.989)), bool(false))) > injectionSwitch.y), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-499.989)), bool(false))) > injectionSwitch.y), true), false))), true, false)))))))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)))))))))) && true), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-499.989)), bool(false))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-499.989)), bool(false))) > injectionSwitch.y), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-499.989)), bool(false))) > injectionSwitch.y), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-499.989)), bool(false))) > injectionSwitch.y), true), false))), true, false)))))))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)))))))))) && true), true))) || false), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)), false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, 0u, 1u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u))), (uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, _GLF_IDENTITY(0u, min(0u, 0u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, 0u, 1u), (uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, 0u, 1u)) + uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(167152u, 93153u, 140863u, 28555u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, 0u, 1u), (uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, 0u, 1u)) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, 0u, 1u), (uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, 0u, 1u)) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), (uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, 0u, 1u)) + uvec4(0u, 0u, 0u, 0u))))), uint(uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, 0u, 1u)), uint(uvec4(_GLF_struct_replacement_13.subgroup_size, 1u, 0u, 1u))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-24.52, 69.97)))).x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
   int i = 0;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || _GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), ! (! _GLF_IDENTITY((false), ! (! ((false)))))), false, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, false, true))))) || false), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false, false, true)), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), (bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))), true, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[_GLF_struct_replacement_27._f0._f3.next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(2, 0 ^ (2))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))) << int(_GLF_ZERO(0.0, injectionSwitch.x)), int(int((_GLF_IDENTITY(2, 0 ^ (2))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), true)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), (bool(bvec4(_GLF_DEAD(false), false, true, false))) || false)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5364.0067)))), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), false)), bool(bvec4(bool(bvec2(! (_GLF_DEAD(false)), false)), false, false, true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), 1.0))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (true && (_GLF_IDENTITY(false, (false) || false)))))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (true && (_GLF_IDENTITY(false, (false) || false)))))))))))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[_GLF_struct_replacement_27._f0._f3.next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), (min(4, 4)) << (1 ^ 1)), int(ivec2(min(4, 4), 1)))) / 1)), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), (min(4, 4)) << (1 ^ 1)), int(ivec2(min(4, 4), 1)))) / 1)) : _GLF_FUZZED(56730))));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), (bool(bvec4(true, false, false, true))) || false)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), false, false)))), false || (((injectionSwitch.x > injectionSwitch.y)) && true))) || false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))), (vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))) / vec2(1.0, 1.0))).y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))), (vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))) / vec2(1.0, 1.0))).y)))))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (false)) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! (! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))), true, false), bvec3(bvec3(bvec3(true, true, false))))))))), false, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0)) - 0.0))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-7.6), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(79.35)), bvec2(true, false))))), 0.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-7.6), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(79.35)), bvec2(true, false))))), 0.0) : _GLF_FUZZED(vec3(-987.600, 5.2, -89.65)))))), injectionSwitch)).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x) - 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-7.6), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(79.35)), bvec2(true, false))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(float(71017)), _GLF_FUZZED((-96.60))), vec2(_GLF_IDENTITY((vec2(injectionSwitch))[0], max((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[0])), (vec2(injectionSwitch))[1]), bvec2(true, true))), mix(vec2(_GLF_FUZZED(-7.6), (vec2(injectionSwitch))[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))]), vec2((_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0)))[0], _GLF_FUZZED(79.35)), bvec2(true, false)))))) / vec2(1.0, 1.0)), 0.0), _GLF_IDENTITY((true ? vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-7.6), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(79.35)), bvec2(true, false))))), 0.0) : _GLF_FUZZED(vec3(-987.600, 5.2, -89.65))), (_GLF_IDENTITY((true ? vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-7.6), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(79.35)), bvec2(true, false))))), 0.0) : _GLF_FUZZED(vec3(-987.600, 5.2, -89.65))), (_GLF_IDENTITY((true ? vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-7.6), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(79.35)), bvec2(true, false))))), 0.0) : _GLF_FUZZED(vec3(-987.600, 5.2, -89.65))), min((true ? vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-7.6), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(79.35)), bvec2(true, false))))), 0.0) : _GLF_FUZZED(vec3(-987.600, 5.2, -89.65))), (true ? vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-7.6), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(79.35)), bvec2(true, false))))), 0.0) : _GLF_FUZZED(vec3(-987.600, 5.2, -89.65)))))) - vec3(0.0, 0.0, 0.0))) * vec3(1.0, 1.0, 1.0))))), injectionSwitch)).y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-7.6), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(79.35)), bvec2(true, false))))), 0.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-7.6), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(79.35)), bvec2(true, false))))), 0.0) : _GLF_FUZZED(vec3(-987.600, 5.2, -89.65)))))), injectionSwitch)).y)), false, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
