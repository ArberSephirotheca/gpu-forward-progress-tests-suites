#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
  {
   do
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(6), int(6))) | 0)); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), ! (! (true && (true)))))), ! (! (_GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), ! (! (true && (true)))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.y), min(_GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.y), clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.y))))))) / 1.0)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true && (false)), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(411.874))), 1.0 * (injectionSwitch.y))) / 1.0)))))), bool(bool(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(411.874))), 1.0 * (injectionSwitch.y))) / 1.0))))))))))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))))), (true ? float(float(_GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))))) : _GLF_FUZZED(-1669.5922))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(803.110)))) / 1.0))), mix(float(float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))))), (true ? float(float(_GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))))) : _GLF_FUZZED(-1669.5922))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(803.110)))) / 1.0)))), float(_GLF_FUZZED((0.8 + 2.4))), bool(false)))))))), false, false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)), false || (bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0)))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1908.9121)), bool(false))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1908.9121)), bool(false))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0) : _GLF_FUZZED(mat2(-2.1, -3.8, 750.981, 8930.7619))))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1908.9121)), bool(false))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1908.9121)), bool(false))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0) : _GLF_FUZZED(mat2(-2.1, -3.8, 750.981, 8930.7619))))))))))))), true, false)))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false)))))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), float(mat3x4(_GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))) / 1.0))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), float(mat3x4(_GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))) / 1.0))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), float(mat3x4(_GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))) / 1.0))))))), false))), true, true)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat4x3(injectionSwitch, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), vec2(mat4x3(injectionSwitch, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) / 1.0)))))))), false, false))))))), false || (! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true))) || false)), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), mix(float(_GLF_FUZZED((+ -6.0))), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0)))))))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / 1.0)))))))), false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 barrier();
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                }
              }
             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))));
                }
               else
                {
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6919.2534, 5.6)) : injectionSwitch)).y, ! (! (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) > injectionSwitch.y)), false)))), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6919.2534, 5.6)) : injectionSwitch)).y, ! (! (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) > injectionSwitch.y)), false)))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6919.2534, 5.6)) : injectionSwitch)).y, ! (! (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) > injectionSwitch.y)), false))))) && true), true, true)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0), injectionSwitch[1])))))).y))))
        {
        }
       else
        {
         GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w = subgroup_size;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (1 ^ (1 ^ (0 | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(-77.31, -2.5, -3.6, -7.9)[1]) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(795.409))))) > injectionSwitch.y))))))))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, false)))), false, false, true)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true && (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, false)))), _GLF_IDENTITY(false, (false) && true), false, true))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! _GLF_IDENTITY((_GLF_IDENTITY((false) || false, ! _GLF_IDENTITY((! ((false) || false)), bool(bvec2((! ((false) || false)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((false) || false, ! _GLF_IDENTITY((! ((false) || false)), bool(bvec2((! ((false) || false)), true))))), ! (! ((_GLF_IDENTITY((false) || false, ! _GLF_IDENTITY((! ((false) || false)), bool(bvec2((! ((false) || false)), true))))))))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), vec2(vec4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), 1.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.1))))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.z = subgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.z = subgroup_local_id) + 0u);
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, 1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, 1.0)))))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, 1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, 1.0)))))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))))), 0.0, 1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, 1.0))))))) + mat2(0.0, 0.0, 0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, 1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, 1.0)))))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec4((! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, 1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 0.0, 1.0)))))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false, false, false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) - 0.0) < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) - 0.0) < injectionSwitch.y))), false, true, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(-9514.6243), ((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 | (1))))), 0 ^ (~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 | (1)))))))))]), vec2(_GLF_IDENTITY(((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[0], (((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))[0]) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_FUZZED(-2.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z = GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.z;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED((9699.6600 + -4.8)), _GLF_FUZZED(6044.7019)), bvec2(false, false))).x > injectionSwitch.y)))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.y = num_workgroup;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-30.73)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(1.4)), vec2(_GLF_FUZZED(-55.45), (injectionSwitch)[1]), bvec2(false, true))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-630.110), _GLF_FUZZED(-428.029)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-630.110), _GLF_FUZZED(-428.029)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), (false ? _GLF_FUZZED(-2539.2442) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-630.110), _GLF_FUZZED(-428.029)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-630.110), _GLF_FUZZED(-428.029)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)))), true && (false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-630.110), _GLF_FUZZED(-428.029)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))))))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.y = GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.y;
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.w = workgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), true))) || false))) && true))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)).x > injectionSwitch.y) || false), _GLF_IDENTITY(false, ! (! (false))), true, false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.w * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))))) + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), false || (bool(bvec4(true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))) ? GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size : _GLF_FUZZED((uvec4(81867u, 179840u, 136849u, _GLF_IDENTITY(198049u, (198049u) | 0u)) >> workgroup_base)))).z;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w) << 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u), uint(uvec4(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u), 1u, 1u, 0u))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u), (~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u)) | (~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY(clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u)), (clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))) | (_GLF_IDENTITY(clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u)), (true ? clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u)) : _GLF_FUZZED(subgroup_size)))))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))))) / _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), min((1u), (1u)))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (true ? (~ (subgroup_id)) : _GLF_FUZZED(workgroup_id))))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w) << 0u))) : _GLF_FUZZED((workgroup_id + subgroup_id)))) + ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, (_GLF_IDENTITY((1) >> 0, (false ? _GLF_FUZZED((~ 93473)) : _GLF_IDENTITY((1) >> 0, ((1) >> 0) - 0)))) << 0))))))), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1) | 0u)) % GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w) << 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u), uint(uvec4(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u), 1u, 1u, 0u))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u), (~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u)) | (~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY(clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u)), (clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))) | (_GLF_IDENTITY(clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u)), (true ? clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u)) : _GLF_FUZZED(subgroup_size)))))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))))) / _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), min((1u), (1u)))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (true ? (~ (subgroup_id)) : _GLF_FUZZED(workgroup_id))))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w) << 0u))) : _GLF_FUZZED((workgroup_id + subgroup_id)))) + ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, (_GLF_IDENTITY((1) >> 0, (false ? _GLF_FUZZED((~ 93473)) : _GLF_IDENTITY((1) >> 0, ((1) >> 0) - 0)))) << 0))))))), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1) | 0u)) % GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w) << 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u), uint(uvec4(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u), 1u, 1u, 0u))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u), (~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u)) | (~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY(clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u)), (clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))) | (_GLF_IDENTITY(clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u)), (true ? clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u)) : _GLF_FUZZED(subgroup_size)))))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))))) / _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), min((1u), (1u)))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (true ? (~ (subgroup_id)) : _GLF_FUZZED(workgroup_id))))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w) << 0u))) : _GLF_FUZZED((workgroup_id + subgroup_id)))) + ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, (_GLF_IDENTITY((1) >> 0, (false ? _GLF_FUZZED((~ 93473)) : _GLF_IDENTITY((1) >> 0, ((1) >> 0) - 0)))) << 0))))))), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1) | 0u)) % GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w)) - 0u)) | (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w) << 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u), uint(uvec4(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u), 1u, 1u, 0u))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u), (~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u)) | (~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY(clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u)), (clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u))) | (_GLF_IDENTITY(clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u)), (true ? clamp((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) - 0u)) : _GLF_FUZZED(subgroup_size)))))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) + 0u))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) ^ 0u))))) / _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), min((1u), (1u)))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, ((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (true ? (~ (subgroup_id)) : _GLF_FUZZED(workgroup_id))))) / 1u) - 0u))), 1u, 0u)))) * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w) << 0u))) : _GLF_FUZZED((workgroup_id + subgroup_id)))) + ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, (_GLF_IDENTITY((1) >> 0, (false ? _GLF_FUZZED((~ 93473)) : _GLF_IDENTITY((1) >> 0, ((1) >> 0) - 0)))) << 0))))))), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1) | 0u)) % GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w)));
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.x = next_virtual_gid, 0u ^ (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.x = next_virtual_gid));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (false)) && true)) || false))))), (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 do
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, false)))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.x = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.x, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))) + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.x, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_size.x) ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), (true ? (0 << _GLF_IDENTITY(int(5), int(5))) : _GLF_FUZZED(ivec3(14678, -65920, 34537).x)))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false)), true)), _GLF_IDENTITY(! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), bool(bvec4(! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))))))), true, true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   buf[virtual_gid] = 1;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) && true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1 < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size)).w)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           barrier();
          }
         else
          {
          }
        }
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(_GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(int(0), (int(0)) + 0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-95310))), _GLF_IDENTITY(0, (0 | 1) * (0)))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 54141)); _injected_loop_counter --)
              {
               barrier();
              }
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(mix(vec2((vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(3627.9645)), vec2(_GLF_FUZZED(57.44), (vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[1]), bvec2(false, true)), clamp(mix(vec2((vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(3627.9645)), vec2(_GLF_FUZZED(57.44), (vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[1]), bvec2(false, true)), mix(vec2((vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(3627.9645)), vec2(_GLF_FUZZED(57.44), (vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[1]), bvec2(false, true)), mix(vec2((vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(3627.9645)), vec2(_GLF_FUZZED(57.44), (vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[1]), bvec2(false, true)))))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), false || (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))).y))))
                barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))) || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), true && (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))), true, true)))))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)) && true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (false)) && true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2((! (false)) && true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((! (false)) && true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, true && (true)))))), false, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))), false, true))))), true)))))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2((! (false)) && true, true))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), true && (bool(bool((! (false))))))) && true, true))))))), false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))), true))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))), false, false)), true, true)))))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true)))))))))))))), ! (! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true)))))))))))))), ! (! (! (! (bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (false)) && true, ((! (false)) && true) || false), _GLF_IDENTITY(true, ! (! (true)))))))))))))))))))))))), (bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)))) && true, true), bvec2(bvec2(bvec2((! (false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))), true))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))))))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true))))))))))))), bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true))))))))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true)))))))))))))), bool(bvec4(! (! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true)))))))))))))), false, false, true))))), true, true))))))))) || _GLF_IDENTITY(false, bool(bool(false))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2((! (false)) && true, true))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), true && (bool(bool((! (false))))))) && true, true))))))), false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))), true))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))), false, false)), true, true)))))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true)))))))))))))), ! (! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true)))))))))))))), ! (! (! (! (bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (false)) && true, ((! (false)) && true) || false), _GLF_IDENTITY(true, ! (! (true)))))))))))))))))))))))), (bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)))) && true, true), bvec2(bvec2(bvec2((! (false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))), true))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))))))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true))))))))))))), bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true))))))))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true)))))))))))))), bool(bvec4(! (! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true)))))))))))))), false, false, true))))), true, true))))))))) || _GLF_IDENTITY(false, bool(bool(false))))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2((! (false)) && true, true))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), true && (bool(bool((! (false))))))) && true, true))))))), false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))), true))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))), false, false)), true, true)))))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true)))))))))))))), ! (! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true)))))))))))))), ! (! (! (! (bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (false)) && true, ((! (false)) && true) || false), _GLF_IDENTITY(true, ! (! (true)))))))))))))))))))))))), (bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)))) && true, true), bvec2(bvec2(bvec2((! (false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))), true))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, true)))))))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true))))))))))))), bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true))))))))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true)))))))))))))), bool(bvec4(! (! (bool(_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (false)) && _GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec4(bvec2((! (false)) && true, true), false, true))))))), true && (bool(_GLF_IDENTITY(bvec2((! (false)) && true, true), bvec2(bvec2(bvec2((! (false)) && true, _GLF_IDENTITY(true, ! (! (true)))))))))))))), false, false, true))))), true, true))))))))) || _GLF_IDENTITY(false, bool(bool(false))))))))))))) || false))))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                  }
                }
              }
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(_injected_loop_counter))), (false ? _GLF_FUZZED(-12627) : 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))));
        }
      }
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size) >> _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u)))).x], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 0, 0), (ivec3(4, 0, 0)) >> ivec3(0, 0, 0))), (int(_GLF_IDENTITY(ivec3(4, 0, 0), (ivec3(4, 0, 0)) >> ivec3(0, 0, 0)))) + 0)), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), clamp((4), (4), (4)))) | 0)) | 0) | 0), 64, 4);
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(81.38, -5.8)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9770.3218) : injectionSwitch[0])), injectionSwitch[1])))))).y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | 0), int(7)))); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 | 0))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(401.500) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1], injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))).y, (false ? _GLF_FUZZED(sin(4.0)) : injectionSwitch.y)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(401.500) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(4.0)) : injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(401.500) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(4.0)) : injectionSwitch.y))))), float(_GLF_FUZZED(-9.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(401.500) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(_GLF_IDENTITY(4.0, mix(float(4.0), float(_GLF_FUZZED(7.1)), bool(false))))) : injectionSwitch.y))))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
          barrier();
        }
      }
     else
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? _GLF_IDENTITY(int(7), max(int(7), int(7))) : _GLF_FUZZED(_injected_loop_counter))), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, _GLF_IDENTITY(7, (7) + 0)))), int(7)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | 0), _GLF_IDENTITY(int(7), int(7))))))) >> _GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(36215)))))), ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(36215))))))) >> 0) >> _GLF_IDENTITY(int(7), int(7)), 0 ^ ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
          }
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(68.04), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3863.3497)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x)) > injectionSwitch.y))))
    barrier();
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.x], uint(2), 4, 64, 4);
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(4336.8283)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x > injectionSwitch.y))), false, false, false)))))))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-9051.3435)), 1.0 * (_GLF_IDENTITY(float(_GLF_FUZZED(-9051.3435)), float(mat4(float(_GLF_FUZZED(-9051.3435)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), float(injectionSwitch.y), bool(true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9051.3435)), float(injectionSwitch.y), bool(true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), int(6)))); _GLF_IDENTITY(_injected_loop_counter --, 0 + _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --))), ((_GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))) | 0)))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-559.347)), vec2(_GLF_FUZZED(4.9), (injectionSwitch)[1]), bvec2(false, true))).y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 40463)); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))) && true)))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
