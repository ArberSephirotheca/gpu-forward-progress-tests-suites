#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x, (_GLF_IDENTITY(true, (true) && true) ? gl_WorkGroupID.x : _GLF_FUZZED(num_workgroup)));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))), (subgroup_id) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)))), clamp(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec3(subgroup_id, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(subgroup_id, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)))) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size))) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_id * subgroup_size) >> 0u), max(_GLF_IDENTITY(~ ((subgroup_id * subgroup_size) >> 0u), min(_GLF_IDENTITY(~ ((subgroup_id * subgroup_size) >> 0u), (~ ((subgroup_id * subgroup_size) >> 0u)) - 0u), ~ ((subgroup_id * subgroup_size) >> 0u))), _GLF_IDENTITY(~ ((subgroup_id * subgroup_size) >> 0u), 0u | (~ ((subgroup_id * subgroup_size) >> 0u)))))), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, min(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ((subgroup_id * subgroup_size) >> 0u) + 0u), (subgroup_id * subgroup_size) >> 0u)))), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))), (true ? _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ((subgroup_id * subgroup_size) >> 0u) >> 0u))), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))) : _GLF_FUZZED(123281u)))) | (_GLF_IDENTITY((subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, max(0u, 0u)))), ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | (_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / 1u)) - 0u))) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u ^ ((subgroup_id * subgroup_size))))) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) + 0u), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, uint(uint((subgroup_id * subgroup_size) >> 0u))), ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))), (true ? _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), 0u + ((~ ((subgroup_id * subgroup_size) >> 0u)))), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u)))), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))) : _GLF_FUZZED(123281u)))) | (_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) | ((~ ((subgroup_id * subgroup_size) >> 0u)))), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u)) ^ 0u), (~ ((subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (0u) / 1u))), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, uint(uvec2((subgroup_id * subgroup_size) >> 0u, 1u))), ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u)))))))))))) : _GLF_FUZZED(123281u)))) | (_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))), ~ (~ (clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))))) | (clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u)))))))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id * subgroup_size))) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) | (subgroup_id)) * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_id * subgroup_size) >> 0u), 0u ^ (((subgroup_id * subgroup_size) >> 0u)))), clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, 0u ^ ((subgroup_id * subgroup_size) >> 0u)))), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) >> 0u))))))), (true ? _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size))) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u))))))) : _GLF_FUZZED(123281u)))) | (_GLF_IDENTITY((subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, min(0u, 0u)), ~ _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, (true ? _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, (true ? (subgroup_id * subgroup_size) >> 0u : _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(mix(atomicOr(workgroup_base, subgroup_size), subgroup_local_id, true)))))), ((~ ((subgroup_id * subgroup_size) >> 0u))) / 1u), (~ ((subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))) >> 0u))))))))))))), (0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, ~ _GLF_IDENTITY((~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) >> 0u)), clamp(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), ((_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_id * subgroup_size) >> 0u), 0u | (((subgroup_id * subgroup_size) >> 0u))), (~ _GLF_IDENTITY(((subgroup_id * subgroup_size) >> 0u), 0u | (((subgroup_id * subgroup_size) >> 0u)))) - 0u))) / 1u), (~ ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id)) * subgroup_size) >> 0u)), _GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), min(_GLF_IDENTITY((~ ((subgroup_id * subgroup_size) >> 0u)), clamp((~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)), (~ ((subgroup_id * subgroup_size) >> 0u)))), (~ ((subgroup_id * subgroup_size) >> 0u)))))))))) >> 0u)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) * (1u | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))))) | (subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)) ^ (subgroup_size)), 0u, 1u))) + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) | (uint(subgroup_local_id)))), (uint(_GLF_IDENTITY(uint(subgroup_local_id), _GLF_IDENTITY((uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)))), clamp((uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) : subgroup_local_id)))), _GLF_IDENTITY((uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (true ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(virtual_gid))) : subgroup_local_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (true ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(virtual_gid))) : subgroup_local_id) | (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (true ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(virtual_gid))) : subgroup_local_id)))))), ((uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)))), 0u, 1u)))))) >> 0u), (uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))))))))) * _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(179971u) : uint(6u))), uint(6u)))))) | (1u)))) + 1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) | (uint(subgroup_local_id)))), (uint(_GLF_IDENTITY(uint(subgroup_local_id), _GLF_IDENTITY((uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)))), clamp((uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) | (uint(subgroup_local_id)))) | (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)))), ((uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))))) >> 0u), (uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))))))))) * _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, min(6u, 6u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(179971u) : uint(6u))), uint(6u)))))) | (1u)))) + 1), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) | (uint(subgroup_local_id)))), (uint(_GLF_IDENTITY(uint(subgroup_local_id), _GLF_IDENTITY((uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)))), clamp(_GLF_IDENTITY((uint(subgroup_local_id)), uint(uvec2((uint(subgroup_local_id)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)))), _GLF_IDENTITY((uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id, clamp(false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id, false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id, false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)))))), ((uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))))) >> 0u), (uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))))))))) * _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(179971u) : uint(6u))), uint(6u)))))) | (1u)))) + 1)) | 0u) : _GLF_FUZZED(42404u))) | 0u)) % subgroup_size);
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) << 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))), (2) << 0)))))), min(_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) << 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(2, (2) << 0)))))), _GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (true ? _GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 | ((2))) << 0) : _GLF_FUZZED(-95850)))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) ^ ((_GLF_IDENTITY(2, (2) << 0)))))))), (2) >> 0)), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(int(_GLF_IDENTITY(int(1), int(1)))))) << 0)))), min(uint(2), uint(2)))))), min(_GLF_IDENTITY(uint(2), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))) - 0u)))), _GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), max(uint(2), uint(2)))))), min(~ (_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), max(uint(2), uint(2)))))), ~ (_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), max(uint(2), uint(2)))))))))))), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(8.1)), bool(false)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) && true)))))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(705.770) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(51.67) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-229.521), _GLF_FUZZED(-4314.9760)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))) && true)))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(705.770) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(51.67) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-229.521), _GLF_FUZZED(-4314.9760)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))) && true))))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (injectionSwitch.x > injectionSwitch.y))))))))) && true)))))))))))), false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y))))))))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.7)), float(injectionSwitch.y), bool(true))))), true)), bool(bool(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))))) || false), (injectionSwitch.x > injectionSwitch.y))))))))) && true), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))))) && true)))) && true)))) || false), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, cos(0.0))), vec2(mat4x2(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, cos(0.0))), 1.0, abs(1.0), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))).x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))))) && true)))) && true)))) || false), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, cos(0.0))), vec2(mat4x2(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, cos(0.0))), 1.0, abs(1.0), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))).x > injectionSwitch.y)))))))) || false))) && true)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4308.0866)), bool(false))) > injectionSwitch.y) && true)))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1016.4145))) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_IDENTITY(true, true && (true)))))), false, false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y))))) || false)), _GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true)))), false, false, false))), ((bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y))))) || false)), _GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true)))), false, false, false)))) || false) || false))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(578.108)))) / round(length(normalize(vec2(1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.0, -1618.5774)) : injectionSwitch)).y))))), bool(bvec2(! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, false || (true)))))))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))))))), _GLF_IDENTITY(false, true && (false)), false, true)))) && true)) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 0.0, length(sin(vec2(0.0, 0.0))), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(-698.617, -7896.4946, 69.61, -31.60, -4.4, 7.3, 27.51, 196.544, 5.2)) : mat3(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 0.0, length(sin(vec2(0.0, 0.0))), 1.0, 1.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 0.0, length(sin(vec2(0.0, 0.0))), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(-698.617, -7896.4946, 69.61, -31.60, -4.4, 7.3, 27.51, 196.544, 5.2)) : mat3(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 0.0, length(sin(vec2(0.0, 0.0))), 1.0, 1.0, 0.0)))) : _GLF_FUZZED(vec2(7.2, -2.4))))).x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))))))))), false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, false || (false)), false)), (bool(bvec3(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false))) || false)), ! (! ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(vec3(-2.2, 5.5, 6.4).p)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-247.316, mix(float(_GLF_FUZZED(-905.038)), float(-247.316), bool(true)))), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), false)), (bool(bvec3(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(78462u))), float(0.0), bool(true)))), vec2(mat3(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(78462u))), float(0.0), bool(true)))), mix(vec2(_GLF_FUZZED(-434.276), _GLF_FUZZED(-6.5)), vec2((vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(78462u))), float(0.0), bool(true)))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(78462u))), float(0.0), bool(true)))))[1]), bvec2(true, true))), 0.0, 0.0, 0.0, 1.0, sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0)))).y)))))))), false, false))) || false))))) || false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY((bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(bvec2(false, false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-237.893), _GLF_FUZZED(94.17)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y))) || false)))))) ? _GLF_FUZZED(6.8) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-285.581), (true ? _GLF_FUZZED(-285.581) : _GLF_FUZZED(-543.703))) : injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))).x, (false ? _GLF_FUZZED(-285.581) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))).x, (false ? _GLF_FUZZED(-285.581) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))).x, (false ? _GLF_FUZZED(-285.581) : injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))).x, (false ? _GLF_FUZZED(-285.581) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))).x, (false ? _GLF_FUZZED(-285.581) : injectionSwitch.x))))))), float(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, false)), ! (! (bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, false)))))), true && (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true)))))))), (injectionSwitch.x < injectionSwitch.y))))))))) ? _GLF_FUZZED(6.8) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))).x, (false ? _GLF_FUZZED(-285.581) : injectionSwitch.x))), _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(_GLF_IDENTITY(6.8, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(6.8, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(6.8, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 1.0 * (float(_GLF_IDENTITY(mat3x4(6.8, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(6.8, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(3.4, -90.93), vec2(mat4(vec2(3.4, -90.93), 0.0, tan(sqrt(0.0)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0)))))).x, (false ? _GLF_FUZZED(-285.581) : injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(6.8) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-285.581), min(_GLF_IDENTITY(_GLF_FUZZED(-285.581), clamp(_GLF_FUZZED(-285.581), _GLF_IDENTITY(_GLF_FUZZED(-285.581), clamp(_GLF_FUZZED(-285.581), _GLF_FUZZED(-285.581), _GLF_FUZZED(-285.581))), _GLF_FUZZED(-285.581))), _GLF_FUZZED(-285.581))) : injectionSwitch.x)))), (true ? max((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), ! (! (! (bool(bvec2(false, false))))))))) || false), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))) || false)) ? _GLF_FUZZED(6.8) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, -90.93)))))))).x, (false ? _GLF_FUZZED(-285.581) : injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), ((bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY((bool(bvec2(false, false))), ! (! (_GLF_IDENTITY((bool(bvec2(false, false))), ((bool(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(6.8) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, _GLF_IDENTITY(-90.93, (_GLF_IDENTITY(-90.93, max(-90.93, _GLF_IDENTITY(-90.93, (false ? _GLF_FUZZED(9435.1780) : -90.93))))) - 0.0))))).x, (false ? _GLF_FUZZED(-285.581) : injectionSwitch.x)))) : _GLF_FUZZED(8.2)))), 1.0, 1.0, 1.0, 1.0, 1.0)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-975.819), (false ? _GLF_FUZZED(6.1) : _GLF_IDENTITY(_GLF_FUZZED(-975.819), min(_GLF_FUZZED(-975.819), _GLF_FUZZED(-975.819)))))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(2.2, -1.0, -9.5, -4.9).z)), bool(false)))), float(_GLF_FUZZED(47.32)), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(1.0), log(1.0)), mix(vec4(_GLF_FUZZED(75.57), _GLF_FUZZED(-1.9), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(1.0), log(1.0)))[2], (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(1.0), log(1.0)))[3]), vec4((vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(1.0), log(1.0)))[0], (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(1.0), log(1.0)))[1], _GLF_FUZZED(73.65), _GLF_FUZZED(0.6)), bvec4(true, true, false, false))))).x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY((false), false || _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false))))))))))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(2.2, -1.0, -9.5, -4.9).z)), bool(false)))), float(_GLF_FUZZED(47.32)), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(1.0), log(1.0)), mix(vec4(_GLF_FUZZED(75.57), _GLF_FUZZED(-1.9), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(1.0), log(1.0)))[2], (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(1.0), log(1.0)))[3]), vec4((vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(1.0), log(1.0)))[0], (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sqrt(1.0), log(1.0)))[1], _GLF_FUZZED(73.65), _GLF_FUZZED(0.6)), bvec4(true, true, false, false))))).x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY((false), false || _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false))))))))))))), false, false))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))) && true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
