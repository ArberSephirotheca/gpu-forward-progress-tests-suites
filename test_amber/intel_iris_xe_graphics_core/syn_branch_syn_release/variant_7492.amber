#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       do
        {
         do
          {
           GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = subgroup_id;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-5.0, min(-5.0, _GLF_IDENTITY(-5.0, clamp(-5.0, -5.0, -5.0)))))), vec2(_GLF_FUZZED(-245.652), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), true))).y))));
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), false, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.y = num_workgroup;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), true, true, false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
          barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (1 ^ 0))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 9847.9849))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            {
            }
           else
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = (72802 & _GLF_IDENTITY(0, 0 + (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupSize.x, 0u, 0u, 1u))) - 0u));
 for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) + int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), length(vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(0.0, 1.0))), length(vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), length(vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(vec4(-77.68, -2.0, 516.414, 8.0), vec4(-3.9, 9.1, -4447.1492, 1.4), vec4(-6353.1486, 7.9, -253.097, 9.8), vec4(556.388, -95.95, 2.4, 5.9))) : (_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) / 1.0), 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(0.0, 1.0)), max(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(0.0, 1.0)), (dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(0.0, 1.0))) - 0.0), dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(0.0, 1.0))))), length(vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec2(0.0, 1.0))), length(vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-6.8, 6.1), mix(vec2(_GLF_FUZZED(9.7), (vec2(-6.8, 6.1))[1]), vec2((vec2(-6.8, 6.1))[0], _GLF_FUZZED((+ 7.9))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : injectionSwitch)))).x))))) >> _GLF_IDENTITY(int(1), int(1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) + int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.5) : 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), length(vec2(0.0, 0.0)), sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(0.0, 1.0))), length(vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), length(vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0)))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(0.0, 1.0))), length(vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), length(vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0)))), (_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(0.0, 1.0))), length(vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), length(vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(65.32)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.8, 6.1)) : injectionSwitch)))).x))))) >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(64036))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, 1 * (_GLF_IDENTITY(7, min(7, 7))))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec2(int(7), 0))), (true ? _GLF_IDENTITY(int(7), int(ivec2(int(7), 0))) : _GLF_FUZZED(-74455)))))); _injected_loop_counter --)
  {
   _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.w = workgroup_size, 0u + (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.w = workgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.w = workgroup_size, 0u + (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.w = workgroup_size))) << 0u);
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), clamp(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), clamp(uvec4(gl_WorkGroupID, 0u), uvec4(gl_WorkGroupID, 0u), uvec4(gl_WorkGroupID, 0u))), uvec4(gl_WorkGroupID, 0u), uvec4(gl_WorkGroupID, 0u))))).x;
 uint workgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.w * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-18.51)), float(injectionSwitch.y), bool(true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false), true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)))) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)))) || false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)))) || false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))
            barrier();
          }
         else
          {
          }
        }
       do
        {
         GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = workgroup_base;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y, 0u | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y)) + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size + subgroup_local_id;
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((1 & 1) ^ 1, ((1 & 1) ^ 1) << 0))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, clamp(1, 1, 1)) | (0 ^ 1))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
              {
               GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.z = virtual_gid;
              }
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size)));
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.x = next_virtual_gid;
 for(int _injected_loop_counter = (0 | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
 buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.z] = 1;
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-46950, (_GLF_IDENTITY(-46950, 0 ^ (-46950))) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0))) : 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-46950, (_GLF_IDENTITY(-46950, 0 ^ (-46950))) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0))) : 1)), max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-46950, (_GLF_IDENTITY(-46950, 0 ^ (-46950))) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0))) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-46950, (_GLF_IDENTITY(-46950, 0 ^ (-46950))) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0))) : 1))))) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-46950, (_GLF_IDENTITY(-46950, 0 ^ (-46950))) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0))) : 1)))) < subgroup_size)
  {
   int i = 0;
   do
    {
     for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.x], uint(2), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, clamp(4, 4, 4)))), 64, 4);
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0), 0 ^ (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)))))
      {
      }
     else
      {
       atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupvirtual_gidworkgroup_size.x], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6162.0756)), bool(false))), injectionSwitch.y)), 0))))), 4)), max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), 0))))), 4)), (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 0))))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0), mat3x2(mat3(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0)))))), injectionSwitch.y)), 0)))))))), 4))) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0), 0)), 0 ^ (_GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), max(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), clamp(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), min(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> (0 | 0)), (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))))), _GLF_IDENTITY(4, (35895 & 0) ^ (_GLF_IDENTITY(4, (4) ^ 0)))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (_GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))) | 0)))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) ^ 0)))))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) / abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))))))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(2.0))))))), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), max(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), _GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ~ (~ (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), 0))), _GLF_IDENTITY(_GLF_IDENTITY(4, (35895 & 0) ^ (4)), max(_GLF_IDENTITY(4, (35895 & 0) ^ (4)), _GLF_IDENTITY(4, (35895 & 0) ^ (4))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), clamp(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), 0))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(35895, clamp(35895, _GLF_IDENTITY(35895, clamp(35895, 35895, 35895)), 35895)) & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), _GLF_IDENTITY(0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), (0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))) + 0)), (true ? ~ (_GLF_IDENTITY(0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), (0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))) + 0)) : _GLF_FUZZED(-32397))))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | 0) : _GLF_FUZZED(-66694)))))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(fma(91.88, 1996.6306, 5.0)) : _GLF_ONE(1.0, injectionSwitch.y)))), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) >> 0))) ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ _GLF_IDENTITY((int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), (_GLF_IDENTITY((int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), max((int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), clamp(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), clamp(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), clamp(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))))))))), min(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), clamp(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), clamp(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))))))))) ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), clamp(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(0, 0, 0) ^ (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ _GLF_IDENTITY((4), ((0 & -47071) & -33308) ^ ((4))))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(false))), bool(false))))), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, max(4, 4)))), _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), _GLF_IDENTITY(0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), int(ivec4(0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), min((_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ _GLF_IDENTITY((4), ((0 & -47071) & -33308) ^ ((4))))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(false))), bool(false))))), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, max(4, 4)))), _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), _GLF_IDENTITY(0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), int(ivec4(0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ _GLF_IDENTITY((4), ((0 & -47071) & -33308) ^ ((4))))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(false))), bool(false))))), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, max(4, 4)))), _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), _GLF_IDENTITY(0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), int(ivec4(0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), _GLF_IDENTITY(0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), min(0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4)))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, clamp(4, 4, 4)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (35895 & 0) ^ (4)), int(ivec4(_GLF_IDENTITY(4, (35895 & 0) ^ (4)), 0, 1, 1)))), clamp(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 0)), 0 ^ _GLF_IDENTITY((int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), ((int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))) | 0))), _GLF_IDENTITY(4, (35895 & 0) ^ (4))))))))))))), max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) ^ 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).y)), 0)))))))), 4), (min(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), 0, 1)), (int(ivec4(4, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), 0, 1))) | (int(ivec4(4, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), 0, 1))))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) - ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ivec3(ivec3(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))) / ivec3(1, 1, 1)), _GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ~ (~ (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), _GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0))))), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) << ivec3(0, 0, 0)))))))), (_GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, 0 | (0))), clamp(~ (0), _GLF_IDENTITY(~ (0), (~ (0)) | 0), ~ (0)))))))) ^ 0)) >> 0), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), 4)) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))))), 4)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))))), 4)), (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 1 * (4))))), _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))))), 4))) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))), (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ _GLF_IDENTITY((int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), ((int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))) ^ 0))), 4))) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 1 * (_GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))) >> 0))), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(35895, clamp(35895, 35895, 35895)) & 0) ^ (4)))), max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (true ? ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0) : _GLF_FUZZED((ivec3(-65029, -28755, 74533) << _injected_loop_counter)))))))), 4), (min(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, abs(0.0), 0.0))))), 0), (_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), _GLF_IDENTITY(~ (~ (ivec3(4, int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 0))), ivec3(0, 0, 0) + (~ (~ (_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 0), (ivec3(4, int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 0)) - ivec3(0, 0, 0)))))))) | (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, max(4, 4)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))) ^ 0)) >> 0), _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, max(0, 0)))) ^ (int(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) >> ivec3(0, 0, 0)), 1))))))), 4)) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, 0 ^ (0))))))), 4)), (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0) + (_GLF_ONE(1.0, injectionSwitch.y)))), 0)), 0 ^ (int(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), 4))) << 0)))) - 0)) - (0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) - 0))))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), int(ivec4((4), 1, 1, 0)))) >> 0) | (4)));
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
