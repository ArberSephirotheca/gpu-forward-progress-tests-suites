#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)) > injectionSwitch.y))) && true), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(3.6)), bool(false)))) * (injectionSwitch.x)) > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)) > injectionSwitch.y) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))))) && true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))).x), ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))).x)) + 0.0) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_IDENTITY(_GLF_FUZZED(916.519), min(_GLF_IDENTITY(_GLF_FUZZED(916.519), (_GLF_IDENTITY(_GLF_FUZZED(916.519), mix(float(_GLF_FUZZED(-274.710)), float(_GLF_FUZZED(916.519)), bool(true)))) / 1.0), _GLF_FUZZED(916.519))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(135.215), _GLF_FUZZED(101.049)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)) || ((true))) || false), true)), bool(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), true)), false, false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29))), mat2(1.0) * ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))))).x), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), float(_GLF_FUZZED(-45.62)), bool(false))) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))), max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))))).x)) + 0.0) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) - 0.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(916.519), min(_GLF_FUZZED(916.519), _GLF_FUZZED(916.519))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(916.519), _GLF_IDENTITY(min(_GLF_FUZZED(916.519), _GLF_FUZZED(916.519)), max(min(_GLF_FUZZED(916.519), _GLF_FUZZED(916.519)), min(_GLF_FUZZED(916.519), _GLF_FUZZED(916.519))))), mix(float(_GLF_FUZZED(9.1)), float(_GLF_IDENTITY(_GLF_FUZZED(916.519), _GLF_IDENTITY(min(_GLF_FUZZED(916.519), _GLF_FUZZED(916.519)), (min(_GLF_FUZZED(916.519), _GLF_FUZZED(916.519))) - 0.0))), bool(true)))), float(_GLF_FUZZED(-63.91)), bool(false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((true)), ! (_GLF_IDENTITY(! (((true))), ! (! (! (((true))))))))) || false), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((true)), ! (_GLF_IDENTITY(! (((true))), ! (! (! (((true))))))))) || false), true))), true)), (bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((true)), ! (_GLF_IDENTITY(! (((true))), ! (! _GLF_IDENTITY((! (((true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (((true))))))))))) || false), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), true)), false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(4.7, -84.29)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(4.7, -84.29)), vec2(mat4(_GLF_FUZZED(vec2(4.7, -84.29)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0))), 1.0, 0.0), (false ? _GLF_FUZZED(vec3(5.8, 7.6, 40.98)) : vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0))), 1.0, 0.0))))), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(54.46)))), float(_GLF_FUZZED(-1394.4147)), bool(false))), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(4.7, -84.29)), _GLF_IDENTITY((_GLF_FUZZED(vec2(4.7, -84.29))) * mat2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((_GLF_FUZZED(vec2(4.7, -84.29))) * mat2(1.0), vec2(mat4x2((_GLF_FUZZED(vec2(4.7, -84.29))) * mat2(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))), mix(vec2((_GLF_FUZZED(vec2(4.7, -84.29)))[0], (_GLF_FUZZED(vec2(4.7, -84.29)))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(633.600, mix(float(_GLF_FUZZED(-991.652)), float(_GLF_IDENTITY(633.600, (false ? _GLF_FUZZED(1.8) : 633.600))), bool(true)))), _GLF_FUZZED(4153.2096)), bvec2(false, false))))))).x), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))).x)), abs(sqrt(1.0)) * (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))).x)), (((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))).x))) / 1.0))) + 0.0) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_IDENTITY(_GLF_FUZZED(916.519), min(_GLF_FUZZED(_GLF_IDENTITY(916.519, float(vec4(916.519, 1.0, 1.0, 1.0)))), _GLF_FUZZED(916.519))))))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) || false), true)), bool(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), true)), false, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) || false), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(true, true, _GLF_IDENTITY(true, false || (true))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(true, true, _GLF_IDENTITY(true, false || (true))))))), (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(true, true, _GLF_IDENTITY(true, false || (true)))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(true, true, _GLF_IDENTITY(true, false || (true))))))), (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(true, true, _GLF_IDENTITY(true, false || (true)))))))) && true)), false))))))))) || false))), true)), bool(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), true)), _GLF_IDENTITY(false, ! (! (false))), false)))), bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) || false), bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)), bool(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), true)), false, false)))), false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) || false), true)), bool(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), true)), false, false)))), bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-64.78)), bool(false)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-64.78)), bool(false)))))), true && (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-64.78)), bool(false)))))))))) || ((true))) || false), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(true, (true) || false), true)), false, false)))), false))), false, true), true)))))))), bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))).x), ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))).x)) + 0.0), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))).x), ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))).x)) + 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))).x), ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -84.29)))).x)) + 0.0))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_IDENTITY(_GLF_FUZZED(916.519), min(_GLF_FUZZED(916.519), _GLF_FUZZED(916.519))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)))))) || false), true)), bool(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), true)), false, false)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(0u, 0u)))), 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), false, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), mix(float(_GLF_FUZZED(-51.87)), float(1.0 * (injectionSwitch.x)), bool(true)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size)), 0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), min(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1u, (false ? _GLF_FUZZED(packUnorm4x8(vec4(-0.1, 9.5, 18.91, -27.64))) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), min(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1u, uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), min(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) - 0u)), (~ _GLF_IDENTITY((~ (workgroup_size)), ~ (~ (_GLF_IDENTITY((~ (workgroup_size)), ((~ (workgroup_size))) ^ 0u))))) | (~ (~ (workgroup_size)))), min(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_size)), _GLF_IDENTITY((~ (~ (workgroup_size))), max((~ (~ (workgroup_size))), (~ (~ (workgroup_size))))) | (~ (~ (workgroup_size)))), min(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))).x))))))) / 1u) | (1u ^ 1u))) / 1u)), (_GLF_IDENTITY(~ (~ (workgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_size), (true ? (workgroup_size) : _GLF_FUZZED(workgroup_size)))), (~ (_GLF_IDENTITY(~ (workgroup_size), clamp(~ (workgroup_size), _GLF_IDENTITY(~ (workgroup_size), max(~ (workgroup_size), ~ (workgroup_size))), ~ (workgroup_size))))) | (~ (~ (workgroup_size)))), min(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), min(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), min(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), min(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), min(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), min(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), min(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))))))) | (~ (~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) + (_GLF_IDENTITY(~ (workgroup_size), uint(uvec4(_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | 0u), 0u, 0u, 0u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) / 1u) | (1u ^ 1u))) / 1u))) | 0u)), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) + 0u), (_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) + 0u)) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_size), ~ (~ (~ (workgroup_size))))), min(~ (~ (workgroup_size)), ~ (~ (workgroup_size))))) / 1u, 0u | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_size), ~ (~ (~ (workgroup_size))))), min(~ (~ (workgroup_size)), ~ (~ (workgroup_size))))) / 1u))))) | _GLF_IDENTITY(0u, max(0u, 0u))) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 1u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 1u, 1u, 0u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), 1u, 0u))) << 0u), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 0u))))) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size)) + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (false ? _GLF_FUZZED(75875u) : (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))) * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) : _GLF_FUZZED(subgroup_id))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))) | (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size)), (true ? max((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) * 1u) * subgroup_size), (subgroup_id * subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (true ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) : _GLF_FUZZED((virtual_gid | subgroup_local_id)))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), min((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))))) * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size))), (false ? _GLF_FUZZED(75875u) : (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), (true ? (subgroup_id * subgroup_size) : _GLF_FUZZED(139902u)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))) | 0u))) * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) : _GLF_FUZZED(subgroup_id))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))) | (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size)), (true ? max((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) * 1u) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) + (0u ^ 0u))))), (subgroup_id * subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (true ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) : _GLF_FUZZED((virtual_gid | subgroup_local_id)))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | 0u)))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))), 0u | ((subgroup_local_id + 1))) << 0u)) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))), 0u | ((subgroup_local_id + 1))) << 0u)) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))), 0u | ((subgroup_local_id + 1))) << 0u)) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), injectionSwitch), max(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)))))).y)), (injectionSwitch.y) - 0.0), injectionSwitch.y))) || false)) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(691.780)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))))) || (false))) && _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec4(0.0, exp(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, log(1.0))), dot(vec4(0.0, exp(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, log(1.0))))), min(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec4(0.0, exp(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, log(1.0))), dot(vec4(0.0, exp(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, log(1.0))))), vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec4(0.0, exp(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, log(1.0))), dot(vec4(0.0, exp(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, log(1.0))))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true && (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0)), 1.0, log(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0))), injectionSwitch.y)))) || false)) && true)))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0))), float(_GLF_FUZZED(-431.870)), bool(false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(99.91), _GLF_FUZZED(-38.22)), bvec2(false, false))).x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(false, true && (false)))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))) && true, bool(bool(((_GLF_IDENTITY(false, true && (false)))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)) && true)), ((_GLF_IDENTITY(false, true && (false)))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), ! (! (((_GLF_IDENTITY(false, true && (false))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), ! (! (((_GLF_IDENTITY(false, true && (false))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true)))))))), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), ! (! (((_GLF_IDENTITY(false, true && (false))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true)))))))), true, false, true)))))) && true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0)))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)) && true)), ((_GLF_IDENTITY(false, true && (false)))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), ! (! (((_GLF_IDENTITY(false, true && (false))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), ! (! (((_GLF_IDENTITY(false, true && (false))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true)))))))), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), ! (! (((_GLF_IDENTITY(false, true && (false))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true)))))))), true, false, true)))))) && true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0)))))) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)) && true)), ((_GLF_IDENTITY(false, true && (false)))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), ! (! (((_GLF_IDENTITY(false, true && (false))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), ! (! (((_GLF_IDENTITY(false, true && (false))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true)))))))), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), ! (! (((_GLF_IDENTITY(false, true && (false))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true)))))))), true, false, true)))))) && true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0)))))) > injectionSwitch.y)))), true, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)) && true)), ((_GLF_IDENTITY(false, true && (false)))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), ! (! (((_GLF_IDENTITY(false, true && (false))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), ! (! (((_GLF_IDENTITY(false, true && (false))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true)))))))), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), ! (! (((_GLF_IDENTITY(false, true && (false))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true)))))))), true, false, true)))))) && true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0)))))) > injectionSwitch.y)))), true, true))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec4(bool(bvec4(false, true, false, false)), false, false, false)))) && true)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true))) && true), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))))) + 1, _GLF_IDENTITY(0u, max(0u, 0u)))), min(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))))) + 1, _GLF_IDENTITY(0u, max(0u, 0u)))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))))) + 1, _GLF_IDENTITY(0u, max(0u, 0u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(workgroup_base))))) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(workgroup_base))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(workgroup_base))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(workgroup_base))))) + 1)), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(workgroup_base))))) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(workgroup_base))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(workgroup_base))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(workgroup_base))))) + 1)), 0u)) << uvec2(0u, 0u))), clamp(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) << 0u)))))), 0u | (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))))))))) + _GLF_IDENTITY(1, max(1, 1)), 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))) + 1, 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), min(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))))))))) * 1u) + 1, 0u)) / uvec2(1u, 1u)), uvec2(uvec4(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), min(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))))))) + 1, 0u), (uvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))) + 1, 0u)) / uvec2(1u, 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))) + 1, 0u), (uvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))) + 1, 0u)) / uvec2(1u, 1u)), uvec2(uvec4(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))) + 1, 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, 0u), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, 0u)))) / uvec2(1u, 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, 0u)))) / uvec2(1u, 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))) << 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))) + 1, 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))) + 1, 0u), ~ (~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))) + 1, 0u))))) - uvec2(0u, 0u))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)) | (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))) | (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))) << 0u))) + 1, 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) << 0u), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)) | (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))) | (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)))) << 0u))) + 1, 0u))) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))) + 1, 0u))))) < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (138105u & 0u)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 0.0, 1.0)), vec2(vec2(vec2(mat3x2(vec2(0.0, 0.0), 1.0, 1.0, 0.0, 1.0)))))) + _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))), (true ? _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5043.4341, (-5043.4341) / 1.0)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(_GLF_IDENTITY(-5043.4341, (-5043.4341) / 1.0)), (injectionSwitch)[1])) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), (true ? _GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), vec2(_GLF_IDENTITY(mat4x3(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x3(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat4x2(-6.6, -2.9, -3.2, -777.787, -9568.1221, -39.19, -139.897, 787.767)[2]))), vec2(_GLF_FUZZED(-65.86), ((injectionSwitch))[1]), bvec2(false, true)), _GLF_IDENTITY((mix(_GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), (true ? _GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), vec2(_GLF_IDENTITY(mat4x3(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x3(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat4x2(-6.6, -2.9, -3.2, -777.787, -9568.1221, -39.19, -139.897, 787.767)[2]))), vec2(_GLF_FUZZED(-65.86), ((injectionSwitch))[1]), bvec2(false, true))) * mat2(1.0), max((mix(_GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), (true ? _GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), vec2(_GLF_IDENTITY(mat4x3(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x3(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat4x2(-6.6, -2.9, -3.2, -777.787, -9568.1221, -39.19, -139.897, 787.767)[2]))), vec2(_GLF_FUZZED(-65.86), ((injectionSwitch))[1]), bvec2(false, true))) * mat2(1.0), _GLF_IDENTITY((mix(_GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), (true ? _GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), vec2(_GLF_IDENTITY(mat4x3(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x3(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat4x2(-6.6, -2.9, -3.2, -777.787, -9568.1221, -39.19, -139.897, 787.767)[2]))), vec2(_GLF_FUZZED(-65.86), ((injectionSwitch))[1]), bvec2(false, true))) * mat2(1.0), min((mix(_GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), (true ? _GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), vec2(_GLF_IDENTITY(mat4x3(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x3(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat4x2(-6.6, -2.9, -3.2, -777.787, -9568.1221, -39.19, -139.897, 787.767)[2]))), vec2(_GLF_FUZZED(-65.86), ((injectionSwitch))[1]), bvec2(false, true))) * mat2(1.0), (mix(_GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), (true ? _GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), vec2(_GLF_IDENTITY(mat4x3(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x3(vec2(((injectionSwitch))[0], _GLF_FUZZED((909.899 + -1.2))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat4x2(-6.6, -2.9, -3.2, -777.787, -9568.1221, -39.19, -139.897, 787.767)[2]))), vec2(_GLF_FUZZED(-65.86), ((injectionSwitch))[1]), bvec2(false, true))) * mat2(1.0)))))))[0], _GLF_FUZZED(-8.6)), bvec2(true, false))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-8.4, -311.865), min(_GLF_IDENTITY(vec2(-8.4, -311.865), (vec2(-8.4, -311.865)) * mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0))), vec2(-8.4, -311.865)))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0)) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (injectionSwitch.y))))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(i), (_GLF_FUZZED(i)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 | (_GLF_IDENTITY(_GLF_FUZZED(i), 0 | (_GLF_FUZZED(i))))) : 4)), 4)), 64, 4);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false), false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-0.8, 1.4, -4233.7625, 767.623).w)), vec2(_GLF_FUZZED(-291.151), (injectionSwitch)[1]), bvec2(false, true))).y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(false || (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false || (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec4((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch[0]), bool(true))), injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)), true))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true, false, true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, true))) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)) || false))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)) || false))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)) || false)))))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(697.039)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), bool(true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.1) : injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.y), bool(true))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true), _GLF_IDENTITY(! (! (bool(bvec4(false, false, true, false)))), true && (! (! (bool(bvec4(false, false, true, false)))))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (injectionSwitch), max(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (injectionSwitch), vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (injectionSwitch)))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (vec2(0.0, 0.0)), abs(1.0), 1.0), transpose(transpose(mat2(mat2(1.0) * (vec2(0.0, 0.0)), abs(1.0), 1.0))))))) + (injectionSwitch)).y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))) && true), true && (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, true), false)), true)))))))) && true))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))) && true))), bool(bvec2(! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false, false))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))))))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), 0u + ((next_virtual_gid))), (0u ^ _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)))) * ((next_virtual_gid))))], _GLF_IDENTITY(uint(2), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(2), 0u | (uint(2)))), ((_GLF_IDENTITY(uint(2), 0u | (uint(2))))) * 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), 0u ^ (uint(2)))) >> 0u)), 0u | (~ (uint(2))))) / 1u))))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (_GLF_IDENTITY(uint(2), 0u | (uint(2)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2)))), (_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2))))) / 1u))))), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (_GLF_IDENTITY(uint(2), 0u | (uint(2)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2)))), (_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2))))) / 1u))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (_GLF_IDENTITY(uint(2), 0u | (uint(2)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2)))), (_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2))))) / 1u))))), ~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (_GLF_IDENTITY(uint(2), 0u | (uint(2)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2)))), (_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2))))) / 1u))))))))) / 1u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (_GLF_IDENTITY(uint(2), 0u | (uint(2)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2)))), (_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2))))) / 1u))))))))))), (1u ^ (127018u & 0u)) * ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(2), min(uint(2), uint(2))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(2), min(uint(2), uint(2))))), 0u | (~ (~ (_GLF_IDENTITY(uint(2), min(uint(2), uint(2)))))))) + 0u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (_GLF_IDENTITY(uint(2), 0u | (uint(2)))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2)))), (_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2))))) / 1u))))), (false ? _GLF_FUZZED(next_virtual_gid) : (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (_GLF_IDENTITY(uint(2), 0u | (uint(2)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2)))), (_GLF_IDENTITY(~ (uint(2)), 0u | (~ (uint(2))))) / 1u)))))))))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, (0) | (0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (4) - 0), 0, 0), (ivec3(0, 0, 0) | ivec3(0, 0, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) >> 0))))) ^ (ivec3(_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, (0) / 1)))), 0, 0))))), (4) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> (86564 & 0)), (4) << 0), (_GLF_IDENTITY(4, (4) << 0)) / 1)))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))))) && true, ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), ! (! (! ((_GLF_DEAD(false)) && true))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), ! (! (! ((_GLF_DEAD(false)) && true))))))))), ! (! ((_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), ! (! (! ((_GLF_DEAD(false)) && true))))))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
