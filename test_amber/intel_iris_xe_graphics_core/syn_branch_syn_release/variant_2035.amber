#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, int(int(3)))) << 0), clamp(_GLF_IDENTITY(3, int(ivec2(3, int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, _GLF_IDENTITY(3, clamp(3, 3, 3))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED((_injected_loop_counter | -82868)) : 3), min((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED((_injected_loop_counter | -82868)) : 3), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED((_injected_loop_counter | -82868)) : 3), min((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED((_injected_loop_counter | -82868)) : 3), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED((_injected_loop_counter | -82868)) : 3))))))), int(_GLF_IDENTITY(3, (3) * 1))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.5)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = ((0 | 0) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0)); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)), bool(bvec3((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)), false, false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false), true && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)))) && true))))))), bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false)))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false), bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))), false))))))))), false, true, true))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) || false))))
        {
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), bool(bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))), (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp2(vec2(4.5, -1.5))) : injectionSwitch))))).x < injectionSwitch.y)) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (vec2(vec2(injectionSwitch))))) - vec2(0.0, 0.0))).x < injectionSwitch.y)) && true))), true && (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))) - vec2(0.0, 0.0))).x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(29.97), _GLF_FUZZED(-8949.0320)), bvec2(false, false))).y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)) && true, bool(bvec3(((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED((-96.86 - mat2(13.99, -65.52, 894.663, -2868.2904)))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED((-96.86 - mat2(13.99, -65.52, 894.663, -2868.2904)))))), (vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED((-96.86 - mat2(13.99, -65.52, 894.663, -2868.2904))))))) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED((-96.86 - mat2(13.99, -65.52, 894.663, -2868.2904))))))))).y), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x, max(false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x, false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x)))) < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x, max(false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x, false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x)))) < injectionSwitch.y))))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))) && true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6160.1406) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), false || (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))) && true, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) < injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))) && true, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) < injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))) && true, (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) < injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))) && true) && true), false), true, true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) < injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))) && true, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) < injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))) && true, (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) < injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))) && true) && true), false), true, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) < injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))) && true, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) < injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))) && true, (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6160.1406) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) < injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))) && true) && true), false), true, true)))))))))))))))))))))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
                        {
                        }
                       else
                        {
                         barrier();
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.3, 38.84)))).x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? 1 : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true)))))), false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), false), false))), _GLF_IDENTITY(true, true && (true)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false))), true)), true))))))))))), (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                          barrier();
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) || false)))));
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch), _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch)) * mat2(1.0), (_GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch)) * mat2(1.0), min((min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch)) * mat2(1.0), (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch)) * mat2(1.0)))) * vec2(1.0, 1.0))))))).x), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x) : _GLF_FUZZED(69.88)))))), float(_GLF_FUZZED(-433.159)), bool(false))), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(float(138386u))), float(float(mat3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), bool(true)))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))))).x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / round(length(normalize(vec2(1.0, 1.0))))) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), float(mat4x2(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, tan(0.0))))))) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (_GLF_FUZZED(injectionSwitch))))).x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), 0.0 + (float(vec3(injectionSwitch.y, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(850.900)), bool(false))))), float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(850.900)), bool(false))))), float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0))).x))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))) ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, exp(0.0) * (0.0)), 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x) : _GLF_FUZZED(_GLF_IDENTITY(69.88, mix(float(69.88), float(_GLF_FUZZED(-1.2)), bool(false))))))))), float(_GLF_FUZZED(_GLF_IDENTITY(-433.159, (true ? -433.159 : _GLF_FUZZED(-7.0))))), bool(false)))) / determinant(mat2(1.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(64.69)), bool(false)))) / 1.0), 1.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, 1.0), mat3x2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))) / 1.0), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))) && true)), false, true, true))), (! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, true)))) || false))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (false ? _GLF_FUZZED(63.16) : float(float(1.0))))), 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2(_GLF_FUZZED(7.2), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED((-378.708 * vec3(5.6, -0.8, -402.144)).p)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(floor(injectionSwitch)))).x < injectionSwitch.y)), false))).x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(injectionSwitch.x, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), mix(float(_GLF_FUZZED(-3.4)), float(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, 1.0), mat3x2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))) / 1.0), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))) && true)), false, true, true))), (! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, true)))) || false))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (false ? _GLF_FUZZED(63.16) : float(float(1.0))))), 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2(_GLF_FUZZED(7.2), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED((-378.708 * vec3(5.6, -0.8, -402.144)).p)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(floor(injectionSwitch)))).x < injectionSwitch.y)), false))).x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(injectionSwitch.x, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))), bool(true)))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), clamp(sqrt(1.0), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), (true ? _GLF_IDENTITY(sqrt(1.0), float(mat4x3(sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(940.449))))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(injectionSwitch.x, abs(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(((true != true) ? -6264.7006 : 59.95))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 0.0))))), 1.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, sqrt(1.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0))), (false ? _GLF_FUZZED(mat3x2(-8.4, 774.575, 749.713, -31.18, -1677.5658, 57.03)) : mat3x2(1.0, 1.0, 0.0, sqrt(1.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, abs(0.0), 1.0))))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(557.741) : 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(28.82, 9734.3518)) : injectionSwitch)).y)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), true)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(28.82, 9734.3518)) : injectionSwitch)).y)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), true)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x) - 0.0)), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)) - 0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-298.448))))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, sin(0.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, sin(0.0), 1.0))), sin(0.0)))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))) * 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), abs(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0))))), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x) / 1.0))) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) + (mat3x2(injectionSwitch.x, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))))) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && (_GLF_WRAPPED_LOOP(false))));
    }
   else
    {
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(clamp(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), clamp(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 0u))), (gl_WorkGroupSize), (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u)), max(gl_WorkGroupSize, gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize))), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), clamp(_GLF_IDENTITY(clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) | (clamp(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), clamp(clamp(clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)), gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))), clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), min(_GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(_GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), ~ _GLF_IDENTITY((~ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(uvec3((~ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))), uvec3(uvec3(uvec3(uvec3((~ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))))))))), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(clamp(clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))), gl_WorkGroupSize)), clamp(clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize))), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), min(_GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(uvec3(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(42990u, 3216u, 66229u) / subgroup_id)) : gl_WorkGroupSize))), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), (clamp(clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))), gl_WorkGroupSize)), clamp(clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize))), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), _GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), min(_GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), uvec3(uvec3(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(42990u, 3216u, 66229u) / subgroup_id)) : gl_WorkGroupSize))), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), clamp(clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))))), _GLF_IDENTITY((gl_WorkGroupID.x) >> 0u, (_GLF_IDENTITY((gl_WorkGroupID.x) >> 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x) >> 0u, (true ? _GLF_IDENTITY((gl_WorkGroupID.x) >> 0u, min((gl_WorkGroupID.x) >> 0u, (gl_WorkGroupID.x) >> 0u)) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ (_GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), gl_WorkGroupID, gl_WorkGroupID))) + uvec3(0u, 0u, 0u)).x))))))), min(_GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ (_GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), gl_WorkGroupID, gl_WorkGroupID))) + uvec3(0u, 0u, 0u)).x))))))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ (_GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), gl_WorkGroupID, gl_WorkGroupID))) + uvec3(0u, 0u, 0u)).x))))))), (_GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ (_GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), gl_WorkGroupID, gl_WorkGroupID))) + uvec3(0u, 0u, 0u)).x)))))))) >> 0u))) >> 0u)) : _GLF_FUZZED(45785u)))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), true)))), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(65.44, 9.6)) : (injectionSwitch) * mat2(1.0)))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(39.26), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch)), mat2(1.0) * (((injectionSwitch))))[0], _GLF_FUZZED((0.7 * -3561.8508))), vec2(_GLF_FUZZED(25.37), ((injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).y))))), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(9845.3504)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) >> 0u) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))), subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ ((subgroup_id * subgroup_size)))) ^ _GLF_IDENTITY(0u, 0u ^ (0u))))), uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))), subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), (~ ((subgroup_id * subgroup_size))) | (~ ((subgroup_id * subgroup_size)))))), ~ (~ ((subgroup_id * subgroup_size)))) ^ _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u))), min((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u))), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u))))))))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) - 0u), 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) : _GLF_FUZZED(subgroup_id))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)))))), 0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u | 0u) ^ (subgroup_id)) * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))), 0u | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)))))), 0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u | 0u) ^ (subgroup_id)) * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))))), uint(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | 0u)), 0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size)))))))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), subgroup_size)))))), _GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), clamp(0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (_GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), max(0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), 0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))))) | 0u), 0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))))), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))), uint(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), 0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))))))))), (uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))) >> 0u), ~ (~ (subgroup_id * subgroup_size)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), 0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))), uint(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), 0u ^ (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))))))))) / 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size)))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) | (subgroup_local_id)), subgroup_local_id)), _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), clamp(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) >> 0u), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) << 0u))) + 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) << 0u))) + 0u))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) << 0u))) + 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) << 0u))) + 0u)))))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) << 0u))) + 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) << 0u))) + 0u))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) << 0u))) + 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) << 0u))) + 0u)))))))))), (uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) << 0u))) + 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) << 0u))) + 0u))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) << 0u))) + 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) << 0u)), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) << 0u))) + 0u))))))))))) >> 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u)))))))) >> 0u) : _GLF_FUZZED(subgroup_local_id))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(0u, (0u) << 0u)))))))))))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))))) : _GLF_FUZZED(num_workgroup))) + _GLF_IDENTITY(1, (1) >> 0)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) - uvec2(0u, 0u)))) : _GLF_FUZZED(num_workgroup), ~ (~ _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup)))), ~ (~ ((true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))))))))), max(true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup), true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup))))))) + 1)) << 0u, min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup), ~ (~ (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup)))), max(true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup), true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup))))))) + 1)) << 0u, (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | (0u))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup), ~ (~ (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup)))), max(true ? _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), clamp(uvec2(subgroup_local_id, 0u), _GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) >> uvec2(0u, 0u)), uvec2(subgroup_local_id, 0u))))) : _GLF_FUZZED(num_workgroup), true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup))))))) + 1)) << 0u) + 0u), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)), (_GLF_FUZZED(num_workgroup)) | 0u)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)), (_GLF_FUZZED(num_workgroup)) | 0u)), ((true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)), (_GLF_FUZZED(num_workgroup)) | 0u))) << 0u), (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)), (_GLF_FUZZED(num_workgroup)) | 0u)), (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)), (_GLF_FUZZED(num_workgroup)) | 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup), ~ (~ (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(max(true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup), true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup)), (max(true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup), true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) : _GLF_FUZZED(num_workgroup))) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))))) + 1)) << 0u))) % subgroup_size);
 buf[virtual_gid] = _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1)))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(trunc(intBitsToFloat(35650))) : 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(trunc(intBitsToFloat(35650))) : 0.0), max(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(trunc(intBitsToFloat(35650))) : 0.0), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(trunc(intBitsToFloat(35650))) : 0.0)) - 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(trunc(intBitsToFloat(35650))) : 0.0)))), injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(trunc(intBitsToFloat(35650))) : 0.0)), injectionSwitch.x)), 1, 1)))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) >> 0)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) | 0) != _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), max(ivec2(1, 1), ivec2(1, 1)))))) >> 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), max(ivec2(1, 1), ivec2(1, 1)))))) >> 0)) ^ 0)), min((_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0)))) << 0))) || false); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), (_injected_loop_counter) + 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), (_injected_loop_counter) + 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(1, (1) - 0) * (_injected_loop_counter)), (_injected_loop_counter) + 0) : _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-63961, min(_GLF_IDENTITY(-63961, (_GLF_IDENTITY(-63961, (false ? _GLF_FUZZED(_injected_loop_counter) : -63961))) ^ 0), -63961))) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), (_injected_loop_counter) + 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), (_injected_loop_counter) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) >> 0)) : _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter))))))))), (true ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) : _GLF_FUZZED(545)))) | (_injected_loop_counter)) != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), int(8))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(max(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (max(_GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), min(int(8), int(8))), int(8))), _GLF_IDENTITY(int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (max(_GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), min(int(8), int(8))), int(8))), 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (max(_GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), min(int(8), int(8))), int(8))), 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (max(_GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), min(int(8), int(8))), int(8))), 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, (false ? _GLF_FUZZED(_injected_loop_counter) : 8))), _GLF_IDENTITY(_GLF_IDENTITY(0 | (int(8)), int(int(0 | (int(8))))), ~ (~ (0 | (int(8))))))) | (int(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, ~ (~ _GLF_IDENTITY((8), ((8)) * 1))), 8))))), _GLF_IDENTITY(int(8), (int(8)) | (int(8)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(max(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (max(_GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), min(int(8), int(8))), int(8))), _GLF_IDENTITY(int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (max(_GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), min(int(8), int(8))), int(8))), 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (max(_GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), min(int(8), int(8))), int(8))), 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (max(_GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), min(int(8), int(8))), int(8))), 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, (false ? _GLF_FUZZED(_injected_loop_counter) : 8))), _GLF_IDENTITY(_GLF_IDENTITY(0 | (int(8)), int(int(0 | (int(8))))), ~ (~ (0 | (int(8))))))) | (int(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, ~ (~ _GLF_IDENTITY((8), ((8)) * 1))), 8))))), _GLF_IDENTITY(int(8), (int(8)) | (int(8))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(9618.2142, -15.90).x)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec4(int(7), 1, 1, 1))), (int(7)) >> 0)))) | (int(7))), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, int(_GLF_IDENTITY(ivec2(7, 0), clamp(ivec2(7, 0), ivec2(7, 0), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(7, 0), max(ivec2(7, 0), ivec2(7, 0))), clamp(_GLF_IDENTITY(ivec2(7, 0), max(ivec2(7, 0), ivec2(7, 0))), _GLF_IDENTITY(ivec2(7, 0), max(ivec2(7, 0), ivec2(7, 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(7, 0), max(ivec2(7, 0), ivec2(7, 0))), clamp(_GLF_IDENTITY(ivec2(7, 0), max(ivec2(7, 0), ivec2(7, 0))), _GLF_IDENTITY(ivec2(7, 0), max(ivec2(7, 0), ivec2(7, 0))), _GLF_IDENTITY(ivec2(7, 0), max(ivec2(7, 0), ivec2(7, 0))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(7, int(ivec2(7, 0))), (_GLF_IDENTITY(7, int(ivec2(7, 0)))) << 0)) + 0)), int(7)))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec3(0, 0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++)))) | 0))
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     barrier();
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (1 ^ 1)), int(ivec2(0, 0))), 0, _GLF_IDENTITY(0, int(int(0)))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), ((int(0))) | (_GLF_IDENTITY((int(_GLF_IDENTITY(0, 0 ^ (0)))), int(int((int(0))))))) >> 0))), ~ (~ ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec2(0, 0))), 0, _GLF_IDENTITY(0, int(int(0)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(_GLF_IDENTITY(int(0), (int(0)) | 0), int(0), int(0))), _GLF_IDENTITY((int(0)), ((int(0))) | (_GLF_IDENTITY((int(0)), int(int((int(0))))))) >> 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                    barrier();
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))));
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(0, max(0, 0))), (0 ^ (_GLF_IDENTITY(0, max(0, 0)))) << (0 << _GLF_IDENTITY(int(2), int(2)))))); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), true && (_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7222.7266) : _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, false)), false))))))); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
                      barrier();
                    }
                   else
                    {
                     if(subgroup_local_id + 1 < subgroup_size)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       for(int _injected_loop_counter = (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(5), int(5))), (true ? (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(5), int(5))) : _GLF_FUZZED(-52797))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (-71639 & 0)); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))))) << 0))
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                              barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, 0, 1)), (int(ivec4(0, 1, 0, 1))) >> 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                {
                                 barrier();
                                }
                              }
                             do
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(bool(bool(true)), false))))))
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       int i = _GLF_IDENTITY(0, _GLF_IDENTITY(0, int(ivec3(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))) | (0));
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, int(ivec3(0, 0, 0))) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), clamp((0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, max(0, 0)))) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), clamp((0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))), (0 ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (54428 & 0))), (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))), (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, ~ (~ (0))) ^ int(_GLF_ONE(1.0, injectionSwitch.y))))), (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY((0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))), ((0 ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) << 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY((0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(0 ^ int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), ~ (~ (0 ^ int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-44.99)), bool(false))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-967.850) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-967.850) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))) ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-967.850) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), clamp(((_GLF_IDENTITY(0, ~ (~ (0))) ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-967.850) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), ((_GLF_IDENTITY(0, ~ (~ (0))) ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-967.850) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), ((_GLF_IDENTITY(0, ~ (~ (0))) ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-967.850) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))), ((_GLF_IDENTITY(0, ~ (~ (0))) ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-967.850) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))))) ^ 0) << 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * exp(0.0))), 0 | (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * exp(0.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), (0 ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-8709.1963)), bool(false))))) | (_GLF_IDENTITY(0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), (0 ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-8709.1963)), bool(false))))) | (_GLF_IDENTITY(0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)))), 0, 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), cos(0.0), 0.0, 0.0, 1.0, 1.0)), min(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), cos(0.0), 0.0, 0.0, 1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), cos(0.0), 0.0, 0.0, 1.0, 1.0)))))))), (ivec4((_GLF_IDENTITY(0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), (0 ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_IDENTITY(_GLF_FUZZED(-8709.1963), (false ? _GLF_FUZZED(mix(9188.7675, -436.329, true)) : _GLF_IDENTITY(_GLF_FUZZED(-8709.1963), (_GLF_FUZZED(-8709.1963)) - tan(0.0))))), bool(false))))) | (_GLF_IDENTITY(0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)))), 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (ivec4((_GLF_IDENTITY(0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), (0 ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-8709.1963)), bool(false))))) | (_GLF_IDENTITY(0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)), (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)))), _GLF_IDENTITY(0, int(ivec3(0, 0, 1))), 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))))))), (_GLF_IDENTITY((0 ^ int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * 1.0), (false ? _GLF_FUZZED(inversesqrt(142.964)) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0)), injectionSwitch.y)))) * 1.0))))), ((0 ^ int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) << 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(0 ^ int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(int(int(0 ^ int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))) * (injectionSwitch.y)), injectionSwitch.y)))))), 0 | (int(int(0 ^ int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(ivec4(_GLF_IDENTITY(0, min(0, 0)), 1, 0, 0))), _GLF_IDENTITY(0, min(0, 0))), min(min(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(ivec4(_GLF_IDENTITY(0, min(0, 0)), 1, 0, 0))), _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) - 0))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(ivec4(_GLF_IDENTITY(0, min(0, 0)), 1, 0, 0))), _GLF_IDENTITY(0, min(0, 0))), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(ivec4(_GLF_IDENTITY(0, min(0, 0)), 1, 0, 0))), _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(ivec4(_GLF_IDENTITY(0, min(0, 0)), 1, 0, 0))), _GLF_IDENTITY(0, min(0, 0))), max(min(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(ivec4(_GLF_IDENTITY(0, min(0, 0)), 1, 0, 0))), _GLF_IDENTITY(0, min(0, 0))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(ivec4(_GLF_IDENTITY(0, min(0, 0)), 1, 0, 0))), _GLF_IDENTITY(0, min(0, 0))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(ivec4(_GLF_IDENTITY(0, min(0, 0)), 1, 0, 0))), _GLF_IDENTITY(0, min(0, 0))), (min(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(ivec4(_GLF_IDENTITY(0, min(0, 0)), 1, 0, 0))), _GLF_IDENTITY(0, min(0, 0)))) + 0)))))) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(((0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))) << 0, ~ (~ (((0 ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(10.04))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) / vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * _GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)), min((_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_ONE(1.0, injectionSwitch.y)))))))))))), _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((-2717.6838 * -6.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)))))), int(_GLF_ONE(1.0, injectionSwitch.y)))))) << 0))))) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-32.22), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(94.70)), bvec2(true, false))).x)))))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(51.72)))))))
                                barrier();
                               barrier();
                              }
                            }
                          }
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                              {
                               do
                                {
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                  {
                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                    {
                                     barrier();
                                    }
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                            }
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & (1 & 1))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & (1 & 1)))))); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                          }
                        }
                       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))) * (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0))) != _GLF_IDENTITY((1 & 1), ((1 & 1)) >> 0)); _injected_loop_counter ++)
                        {
                         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), 4, 64, 4);
                        }
                      }
                     else
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
                          barrier();
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter --), 0 ^ (~ (_injected_loop_counter --)))), (~ (_GLF_IDENTITY(~ (_injected_loop_counter --), 0 ^ (~ (_injected_loop_counter --))))) - 0))))))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                              barrier();
                             barrier();
                            }
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false)))))))))
                            {
                            }
                           else
                            {
                             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                              barrier();
                            }
                          }
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_WRAPPED_IF_FALSE(false)))) && true))
                          {
                          }
                         else
                          {
                           atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), 4, 64, 4);
                          }
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - log(1.0)), (false ? _GLF_FUZZED(-82.74) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - log(1.0)), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - log(1.0)))))) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), true))), false)))))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                          }
                         else
                          {
                          }
                         do
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = ((1 ^ 0) & (int(_GLF_ONE(1.0, injectionSwitch.y)) & (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(7), int(7)))) | ((1 << _GLF_IDENTITY(int(7), int(7))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), int(7))), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                        }
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)))) != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (false)))), (_GLF_IDENTITY(false, false || (false))) || false)))) || false))), (_GLF_IDENTITY(false, false || (false))) && true)))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)]))[0], injectionSwitch[1])))[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(3.7), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(3.7), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 1.0, cos(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, sin(0.0)))))), mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat2x3(_GLF_FUZZED(3.7), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3.7), (false ? _GLF_FUZZED((-48.25 - 251.405)) : _GLF_FUZZED(3.7))), mix(float(_GLF_FUZZED(-220.495)), float(_GLF_IDENTITY(_GLF_FUZZED(3.7), mix(float(_GLF_FUZZED(3.7)), float(_GLF_FUZZED(-9.7)), bool(false)))), bool(true))), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)))))))))), bvec2(true, false))), injectionSwitch)).x)), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + determinant(mat3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))))), 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(1.9), float(mat3(_GLF_FUZZED(1.9), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, cos(0.0), 0.0, sin(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])))[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(3.7), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(3.7), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, sin(0.0))), 0.0 + (float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, sin(0.0)))))))), mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat2x3(_GLF_FUZZED(3.7), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(3.7), mix(float(_GLF_FUZZED(-220.495)), float(_GLF_IDENTITY(_GLF_FUZZED(3.7), mix(float(_GLF_FUZZED(3.7)), float(_GLF_FUZZED(-9.7)), bool(false)))), bool(true))), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)))))))))), bvec2(true, false))), injectionSwitch)).x)), int(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])))[_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(3.7), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(3.7), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), float(mat3x2(injectionSwitch.y, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, sin(0.0)))))), mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat2x3(_GLF_FUZZED(3.7), sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((591.559 - (- -7.5)))), bool(false))), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(3.7), mix(float(_GLF_FUZZED(-220.495)), float(_GLF_IDENTITY(_GLF_FUZZED(3.7), mix(float(_GLF_FUZZED(3.7)), float(_GLF_FUZZED(-9.7)), bool(false)))), bool(true))), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)))))))))), bvec2(true, false))), injectionSwitch)).x)), 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec4(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(vec2(-25.36, -604.912)) : vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0)))))), vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0)), vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(1.9), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])))[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(3.7), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(3.7), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, sin(0.0)))))), mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat2x3(_GLF_FUZZED(3.7), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(3.7), mix(float(_GLF_FUZZED(-220.495)), float(_GLF_IDENTITY(_GLF_FUZZED(3.7), mix(float(_GLF_FUZZED(3.7)), float(_GLF_FUZZED(-9.7)), bool(false)))), bool(true))), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)))))))))), bvec2(true, false)), (true ? mix(vec2(_GLF_FUZZED(1.9), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), mat2(1.0) * (vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], injectionSwitch[1])))[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(3.7), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(3.7), sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED((- -49.31))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.8) : 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, sin(0.0)))))), mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-737.582))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat2x3(_GLF_FUZZED(3.7), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), transpose(transpose(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(3.7), mix(float(_GLF_FUZZED(-220.495)), float(_GLF_IDENTITY(_GLF_FUZZED(3.7), mix(float(_GLF_FUZZED(3.7)), float(_GLF_FUZZED(-9.7)), bool(false)))), bool(true))), sqrt(1.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)))))))))), bvec2(true, false)) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch)).x)), 0, 1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(normalize(86.33)) : 0.0)), injectionSwitch.x)))) - ivec4(0, 0, 0, 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                }
               for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (((0 >> _GLF_IDENTITY(int(3), int(3))) & -42741) ^ 0)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 & -85539, clamp(0 & _GLF_IDENTITY(-85539, (true ? -85539 : _GLF_FUZZED(_injected_loop_counter))), 0 & -85539, 0 & -85539)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 & -85539, clamp(0 & _GLF_IDENTITY(-85539, (true ? -85539 : _GLF_FUZZED(_injected_loop_counter))), 0 & -85539, 0 & -85539)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 & -85539, clamp(0 & _GLF_IDENTITY(-85539, (true ? -85539 : _GLF_FUZZED(_injected_loop_counter))), 0 & -85539, 0 & -85539))))) && true)) || false); _injected_loop_counter --)
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true), false)))), false, true)))))
                    barrier();
                  }
                }
              }
            }
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), bool(bvec3(! (_GLF_WRAPPED_LOOP(false)), false, false))), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.8)), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(52542u)), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1]), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(float(52542u)), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1]))), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))).y))))))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), bool(bvec3(! (_GLF_WRAPPED_LOOP(false)), false, false))), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.8)), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(52542u)), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1]), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(float(52542u)), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1]))), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))).y))))))) || false)), false)))));
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), cos(0.0))))))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * 1.0), 1.0))))), cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), cos(0.0))))))).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))) || false), true, true)), false, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), cos(0.0))))))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * 1.0), 1.0))))), cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), cos(0.0))))))).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))) || false), true, true)), false, false, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), cos(0.0))))))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * 1.0), 1.0))))), cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), cos(0.0))))))).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))) || false), true, true)), false, false, false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), cos(0.0))))))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * 1.0), 0.0 + (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-43.75)), float(1.0), bool(true))))) * 1.0))), 1.0))))), cos(_GLF_IDENTITY(0.0, abs(1.0) * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))), transpose(transpose(mat3x2(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), cos(0.0))))))).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))) || false), true, true)), false, false, false))))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, round(length(normalize(1.0))), 0.0, 1.0, abs(0.0), tan(0.0), 0.0)), (vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(round(length(normalize(1.0))), max(round(length(normalize(1.0))), round(length(normalize(1.0))))), 0.0, 1.0, abs(0.0), tan(0.0), 0.0))) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4974.0473)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4974.0473)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * abs(1.0)), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4974.0473)), float(injectionSwitch.y), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-4974.0473)), float(injectionSwitch.y), bool(true)), (true ? mix(float(_GLF_FUZZED(-4974.0473)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(2608.6274)))) - 0.0)), _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, true)), false || (bool(bvec3(bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4974.0473)), float(injectionSwitch.y), bool(true))), true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true)), false, true))))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(446.660)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true)))) / 1.0)))))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-5.2))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-5.2))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-5.2))) > injectionSwitch.y) && true), false, true, false))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-5.2))) > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-5.2))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))), false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), false)))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
