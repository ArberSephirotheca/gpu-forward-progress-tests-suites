#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) && true))), true && (bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true, false))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true, false))) && true))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true, false))) && true)))) || false)) && true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.5))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, abs(0.0), exp(0.0), 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))) || false))))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (gl_WorkGroupID))) * uvec3(1u, 1u, 1u))) | uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) ^ 0u)), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(5u))), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) - (0u | 0u)) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) | 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(5u))))), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, ~ (~ (2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (0u)) >> _GLF_IDENTITY(uint(5u), uint(5u))))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))))) * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(23.81) : 0.0)), injectionSwitch.x)))))), max((_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED((workgroup_size)) : uint(5u))), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 1u * (2u))), uint(_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, max(2u, _GLF_IDENTITY(2u, (2u) / 1u))), 2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) ^ 0u)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))) >> 0u))))), (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ((subgroup_id * subgroup_size)) | ((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(_GLF_IDENTITY(5u, 0u | (_GLF_IDENTITY(5u, (5u) - 0u)))))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, min(5u, 5u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u | (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) >> 0u)) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | (_GLF_IDENTITY(2u, clamp(_GLF_IDENTITY(2u, uint(uint(2u))), 2u, 2u)))))))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, min(5u, 5u))) >> 0u)))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))), 0u + ((_GLF_IDENTITY(uint(5u), uint(5u))))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, uint(uvec2(5u, 1u))), 5u)))))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), uint(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | (_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), max(_GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))), (subgroup_id * subgroup_size)))) - 0u))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(5u, 0u), ~ (~ (uvec2(5u, 0u))))), (uint(_GLF_IDENTITY(uvec2(5u, 0u), ~ (~ (uvec2(5u, 0u)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(5u, 0u), ~ (~ (uvec2(5u, 0u))))), (uint(_GLF_IDENTITY(uvec2(5u, 0u), ~ (~ (uvec2(5u, 0u)))))) | (uint(_GLF_IDENTITY(uvec2(5u, 0u), ~ (~ (uvec2(5u, 0u))))))))))), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u + (1u << _GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), 1u)))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? 0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(subgroup_id)))) << (0u | 0u)), 0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 0u | (_GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(uint(5u), uint(5u))))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - (125166u & 0u))) | (0u)))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) + 0u))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | (_GLF_IDENTITY(2u, max(2u, 2u)))))))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), uint(uvec2((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), 1u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint(uvec3(clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 0u, 0u))))), _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), ((subgroup_id * subgroup_size)) | (_GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec3((subgroup_id * subgroup_size), 1u, (0u ^ 1u)))))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u)))), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size)), (_GLF_IDENTITY(((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) | (((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))))) - 0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), ~ (~ (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), max(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) | (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) ^ 0u)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (uint(5u)))), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 0u | (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ~ (~ (((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(workgroup_id)))))), max(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), max((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))) | 0u)) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), min(((subgroup_id * subgroup_size)), ((subgroup_id * subgroup_size)))) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) - 0u)))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))), ((_GLF_IDENTITY(uint(5u), 0u + (uint(5u))))) | 0u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ (1u ^ 1u)))), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size))) ^ 0u)))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) >> 0u), (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) >> 0u), (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) >> 0u), (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) >> 0u), (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + (86505u & 0u)))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) * 1u)), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, 0u ^ (_GLF_IDENTITY(2u, (2u) | (2u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | _GLF_IDENTITY(((subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(uvec2(((subgroup_id * subgroup_size)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec2(((subgroup_id * subgroup_size)), (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))) | (uint(uvec2(((subgroup_id * subgroup_size)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))))) ^ _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(max(uint(5u), uint(5u)), (_GLF_IDENTITY(max(uint(5u), uint(5u)), (_GLF_IDENTITY(max(uint(5u), uint(5u)), ~ (~ (max(uint(5u), uint(5u)))))) * 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(5u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(max(uint(5u), uint(5u)), (_GLF_IDENTITY(max(uint(5u), uint(5u)), (_GLF_IDENTITY(max(uint(5u), uint(5u)), ~ (~ (max(uint(5u), uint(5u)))))) * 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(5u))), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(max(uint(5u), uint(5u)), (_GLF_IDENTITY(max(uint(5u), uint(5u)), (_GLF_IDENTITY(max(uint(5u), uint(5u)), ~ (~ (max(uint(5u), uint(5u)))))) * 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(5u)))) / (1u & 1u)))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)), (false ? _GLF_FUZZED(workgroup_id) : max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))), (true ? (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) : _GLF_FUZZED(uint(8169)))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))))) | 0u))), 0u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))))) | 0u))), (true ? (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))))) | 0u))) : _GLF_FUZZED(81075u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) * 1u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))) ^ 0u), max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) - 0u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), clamp(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (max((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) / 1u)), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u)))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), clamp((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), (1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), (1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))) >> 0u)) : _GLF_FUZZED((++ subgroup_local_id)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (false))) && true)))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, ! (! (((injectionSwitch.x < injectionSwitch.y)) && true))))) || false)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)) || false))))) ? buf[virtual_gid] = 1 : _GLF_FUZZED(num_workgroup)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 | 0)), (0 & ivec2(-73288, 46567).g) ^ (_GLF_IDENTITY(1, (1) | (0 | 0)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (1u ^ 0u)))) : _GLF_FUZZED(subgroup_size))) + _GLF_IDENTITY(1, (1) | (0 | 0)), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (0 | 0)), subgroup_local_id + _GLF_IDENTITY(1, (1) | (0 | 0)), subgroup_local_id + _GLF_IDENTITY(1, (1) | (0 | 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (1u ^ 0u)))) : _GLF_FUZZED(subgroup_size))) + _GLF_IDENTITY(1, (1) | (0 | 0)), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (0 | 0)), subgroup_local_id + _GLF_IDENTITY(1, (1) | (0 | 0)), subgroup_local_id + _GLF_IDENTITY(1, (1) | (0 | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (1u ^ 0u)))) : _GLF_FUZZED(subgroup_size))) + _GLF_IDENTITY(1, (1) | (0 | 0)), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (0 | 0)), subgroup_local_id + _GLF_IDENTITY(1, (1) | (0 | 0)), subgroup_local_id + _GLF_IDENTITY(1, (1) | (0 | 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (1u ^ 0u)))) : _GLF_FUZZED(subgroup_size))) + _GLF_IDENTITY(1, (1) | (0 | 0)), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (0 | 0)), subgroup_local_id + _GLF_IDENTITY(1, (1) | (0 | 0)), subgroup_local_id + _GLF_IDENTITY(1, (1) | (0 | 0))))) / 1u))))), 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (0 | 0)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 | 0)), ~ (~ (_GLF_IDENTITY(1, (1) | (0 | 0))))), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((0 | 0), ((0 | 0)) / 1)), subgroup_local_id + _GLF_IDENTITY(1, (1) | (0 | 0)), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) | (0 | 0)))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))) && true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false))))) && true)), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false))))) && true)))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(abs(vec2(1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x > injectionSwitch.y) || false))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(abs(vec2(1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x > injectionSwitch.y) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY((bool(bvec2(! (false), true))), true && ((bool(bvec2(! (false), true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -3.8))), bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), false))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY((! (! (_GLF_DEAD(false)))), ((! (! (_GLF_DEAD(false))))) || false))))) || false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2343.3550)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))) || false)))))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true))))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(325.772)), bool(false))), _GLF_FUZZED(-754.967)), bvec2(true, false))))).y))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
