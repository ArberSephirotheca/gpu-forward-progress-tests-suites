#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
  }
 uvec3 GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1))))) != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), (false ? _GLF_FUZZED(92875) : _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1)))) | 0))) >> _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))) != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(ivec4(int(1), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), ~ (~ (ivec2(0, 1))))))), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0)), (_GLF_IDENTITY(ivec4(int(1), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0)), ~ (~ (ivec4(int(1), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0, _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0)))))))) | ivec4(0, 0, 0, 0)))), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1))))))) != (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) << 0), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), 0 + (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) << 0)), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))))))))))), true && (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / _GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) - 0) : _GLF_FUZZED(_injected_loop_counter))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) | (1), max((1) | (1), (1) | (1))))))) != (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << 0), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1)))))))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(1), 0, 0, 1), (ivec4(int(1), 0, 0, 1)) << ivec4(0, 0, 0, 0))), 0 + (int(_GLF_IDENTITY(ivec4(int(1), 0, 0, 1), (ivec4(int(1), 0, 0, 1)) << ivec4(0, 0, 0, 0))))))))) * 1) >> _GLF_IDENTITY(int(1), int(1))))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) / 1)) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1)))) ^ ((- -51488) & 0)))))))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))) != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(ivec4(int(1), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), ~ (~ (ivec2(0, 1))))))), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0)), (_GLF_IDENTITY(ivec4(int(1), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0)), ~ (~ (ivec4(int(1), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0, _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0)))))))) | ivec4(0, 0, 0, 0)))), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1))))))) != (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) << 0), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), 0 + (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) << 0)), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))))))))))), true && (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / _GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) - 0) : _GLF_FUZZED(_injected_loop_counter))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) | (1), max((1) | (1), (1) | (1))))))) != (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << 0), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1)))))))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(1), 0, 0, 1), (ivec4(int(1), 0, 0, 1)) << ivec4(0, 0, 0, 0))), 0 + (int(_GLF_IDENTITY(ivec4(int(1), 0, 0, 1), (ivec4(int(1), 0, 0, 1)) << ivec4(0, 0, 0, 0))))))))) * 1) >> _GLF_IDENTITY(int(1), int(1))))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) / 1)) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1)))) ^ ((- -51488) & 0)))))))))))))))), true && ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))) != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(ivec4(int(1), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), ~ (~ (ivec2(0, 1))))))), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0)), (_GLF_IDENTITY(ivec4(int(1), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0)), ~ (~ (ivec4(int(1), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0, _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) << 0)))))))) | ivec4(0, 0, 0, 0)))), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1))))))) != (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) << 0), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), 0 + (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) << 0)), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))))))))))), true && (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / _GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) - 0) : _GLF_FUZZED(_injected_loop_counter))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) | (1), max((1) | (1), (1) | (1))))))) != (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << 0), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1)))))))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(1), 0, 0, 1), (ivec4(int(1), 0, 0, 1)) << ivec4(0, 0, 0, 0))), 0 + (int(_GLF_IDENTITY(ivec4(int(1), 0, 0, 1), (ivec4(int(1), 0, 0, 1)) << ivec4(0, 0, 0, 0))))))))) * 1) >> _GLF_IDENTITY(int(1), int(1))))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) / 1)) >> _GLF_IDENTITY(int(1), int(1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) * 1) >> _GLF_IDENTITY(int(1), int(1)))) ^ ((- -51488) & 0)))))))))))))))))))) && true); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        continue;
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ((0 << _GLF_IDENTITY(int(5), int(5)))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), clamp((0 << _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ~ (~ ((0 << _GLF_IDENTITY(int(5), int(5)))))), (0 << _GLF_IDENTITY(int(5), int(5))))))), _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ((0 << _GLF_IDENTITY(int(5), int(5)))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), clamp((0 << _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ~ (~ ((0 << _GLF_IDENTITY(int(5), int(5)))))), (0 << _GLF_IDENTITY(int(5), int(5))))))), true, true, false)), (bool(bvec4(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ((0 << _GLF_IDENTITY(int(5), int(5)))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), clamp((0 << _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ~ (~ ((0 << _GLF_IDENTITY(int(5), int(5)))))), (0 << _GLF_IDENTITY(int(5), int(5))))))), true, true, false))) || false))); _injected_loop_counter --)
  {
   GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.x = _GLF_IDENTITY(num_workgroup, (num_workgroup) << (0u ^ (1u ^ 1u)));
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
     return;
    }
   else
    {
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))), true, false, false))))))))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, sin(0.0)))).x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
        }
       else
        {
         GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z = workgroup_size;
        }
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED((- -3206.8609))), float(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.3)), bool(false))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-71.11) : 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), bool(true)))), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4092.2443)))))), 0.0, determinant(_GLF_IDENTITY(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat3(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0), (true ? mat3(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(-57.26, -100.660, -0.6, 2107.2942, 4449.5931, 6.2, 11.79, 3815.4798, -3.1))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(mat3(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(797.814)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), 0.0)), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0)), float(mat3(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0), mat2(1.0) * (mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat3(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0), (true ? mat3(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(-57.26, -100.660, -0.6, 2107.2942, 4449.5931, 6.2, 11.79, 3815.4798, -3.1))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(mat3(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(797.814)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), 0.0)), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0)), float(mat3(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0)))), abs(1.0), sqrt(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))))) : injectionSwitch)), injectionSwitch)).x), exp(0.0))), float(mat2(float(mat4(injectionSwitch.y, 1.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0)), _GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(mat3(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0))), transpose(transpose(_GLF_IDENTITY(transpose(mat3(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0), 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0))), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4x3(transpose(mat3(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0)))), (false ? _GLF_FUZZED(mat4x3(8.7, -2.2, 2548.5584, -29.33, -5.1, -5.0, 54.81, -1.4, -46.64, 0.1, 8297.2367, -193.868)) : _GLF_IDENTITY(mat4x3(transpose(mat3(1.0, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0)))), (true ? mat4x3(transpose(mat3(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0)))) : _GLF_FUZZED(mat4x3(-9.0, 5.9, 4.9, 361.800, 7.3, 7.6, -2657.1523, -92.50, -1560.6899, 8586.7275, 8173.6370, -155.244))))))), transpose(transpose(mat3(_GLF_IDENTITY(mat4x3(transpose(mat3(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0)))), (false ? _GLF_FUZZED(mat4x3(8.7, -2.2, 2548.5584, -29.33, -5.1, -5.0, 54.81, -1.4, -46.64, 0.1, 8297.2367, -193.868)) : _GLF_IDENTITY(mat4x3(transpose(mat3(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0)))), (true ? mat4x3(transpose(mat3(1.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(sqrt(1.0), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), tan(0.0)))), _GLF_IDENTITY((mat2x3(sqrt(1.0), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), tan(0.0))))) * mat2(1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat2x3(sqrt(1.0), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), tan(0.0))))) * mat2(1.0))))), (float(_GLF_IDENTITY(mat2x3(sqrt(1.0), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), tan(0.0)))), _GLF_IDENTITY((mat2x3(sqrt(1.0), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), tan(0.0))))) * mat2(1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((mat2x3(sqrt(1.0), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), tan(0.0))))) * mat2(1.0)))))) - determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0)))) : _GLF_FUZZED(mat4x3(-9.0, 5.9, 4.9, 361.800, 7.3, 7.6, -2657.1523, -92.50, -1560.6899, 8586.7275, 8173.6370, -155.244))))))))))))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(_GLF_IDENTITY(transpose(mat3(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0))), transpose(transpose(_GLF_IDENTITY(transpose(mat3(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0))), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4x3(transpose(mat3(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), exp(0.0), sqrt(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)))))), (false ? _GLF_FUZZED(mat4x3(8.7, -2.2, 2548.5584, -29.33, -5.1, -5.0, 54.81, -1.4, -46.64, 0.1, 8297.2367, -193.868)) : _GLF_IDENTITY(mat4x3(transpose(mat3(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / 1.0)))), (true ? mat4x3(transpose(mat3(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0)))) : _GLF_FUZZED(mat4x3(-9.0, 5.9, 4.9, _GLF_IDENTITY(361.800, clamp(361.800, 361.800, 361.800)), 7.3, 7.6, -2657.1523, -92.50, -1560.6899, 8586.7275, 8173.6370, -155.244))))))), transpose(transpose(mat3(_GLF_IDENTITY(mat4x3(transpose(mat3(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), sqrt(1.0)))), (false ? _GLF_FUZZED(mat4x3(8.7, -2.2, 2548.5584, -29.33, -5.1, -5.0, 54.81, -1.4, -46.64, 0.1, _GLF_IDENTITY(8297.2367, clamp(8297.2367, _GLF_IDENTITY(8297.2367, mix(float(8297.2367), float(_GLF_FUZZED(-8510.9369)), bool(false))), _GLF_IDENTITY(8297.2367, float(mat4(8297.2367, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -193.868)) : _GLF_IDENTITY(mat4x3(transpose(mat3(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0), exp(0.0), sqrt(1.0)))), (true ? mat4x3(transpose(mat3(1.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0)), clamp(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0)), float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0)), float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0))))), 1.0, 0.0, exp(0.0), sqrt(1.0)))) : _GLF_FUZZED(mat4x3(-9.0, 5.9, _GLF_IDENTITY(4.9, (4.9) * 1.0), 361.800, 7.3, 7.6, -2657.1523, -92.50, -1560.6899, 8586.7275, 8173.6370, -155.244)))))))))))))))))))), 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.5) : 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5370.2847) : 0.0)), _GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))))), vec3(1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.0)), float(0.0), bool(true))), clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-503.550)), bool(false))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(13.47) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(7.7)), float(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0)), abs(1.0), sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), exp(0.0))), 0.0, 0.0, log(1.0)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))
                continue;
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
        }
       else
        {
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true))))
      return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-877.442) : _GLF_ZERO(0.0, injectionSwitch.x))))))))); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))))
              {
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) + 0) < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) * 1)); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             else
              {
              }
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(615.863)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(615.863)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))));
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(695.441) : injectionSwitch.y)))))), injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), min(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), 0 | (int(3))))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), int(ivec2(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 1))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))) | (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))))) << (0 << _GLF_IDENTITY(int(1), int(1)))), clamp(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))) | (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))))) << (0 << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))) | 0)) | 0)))), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), 0 | (int(3))), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), _GLF_IDENTITY((int(3)), (_GLF_IDENTITY((int(3)), clamp((int(3)), (int(3)), (int(3))))) ^ 0) | (int(3)))))) | (((_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))) / 1))))))))) << (0 << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(84896) : _GLF_IDENTITY(3, min(_GLF_IDENTITY(3, ~ (~ (3))), 3))))), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))) | (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))))) << (0 << _GLF_IDENTITY(int(1), int(1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5531.9131)), float(injectionSwitch.x), bool(true)))))))); _injected_loop_counter --)
    {
     GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.y = workgroup_id;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 uint workgroup_base = GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size.z * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size[0], (GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size[0]) | 0u), GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size[1], GLF_merged3_0_1_13_1_1_12_2_1_14num_workgroupworkgroup_idworkgroup_size[2])).y;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), 0u ^ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))), 0u, 0u))), (subgroup_id) / 1u)) / 1u)))))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) | 0u), max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))))))))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (subgroup_local_id + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size))), 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_FUZZED(subgroup_id))), _GLF_FUZZED(subgroup_id))) : (subgroup_local_id + 1) % subgroup_size)))), uint(uvec3(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_FUZZED(subgroup_id))), _GLF_FUZZED(subgroup_id))) : (subgroup_local_id + 1) % subgroup_size)))), 0u, 1u))))))))) | _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (_GLF_IDENTITY(~ (((subgroup_local_id + 1) % subgroup_size)), (~ (((subgroup_local_id + 1) % subgroup_size))) | 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, true))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))))))
            {
             return;
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) || false), true && (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true))), true))))))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)), false))))) && true)))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.9), _GLF_FUZZED(-0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) / 1), 0)) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, int(ivec2(5, 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
        {
         buf[virtual_gid] = 1;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ 0), false || (_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ 0)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(92657) : _injected_loop_counter ++)))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   return;
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
     else
      {
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(6)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
     if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(7679), (_GLF_FUZZED(7679)) | (_GLF_FUZZED(7679))) : 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(7679, min(7679, 7679))) : 1) ^ 0))))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)) < subgroup_size)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)), 0.0 + (injectionSwitch.x))) - 0.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7566.2889)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))) || false, ! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(fract(-0.1)))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))) || false)))) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mix(dot(-61.36, _GLF_IDENTITY(-7.6, (-7.6) - determinant(mat3(sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), -8.5, 5.3), (mix(dot(-61.36, _GLF_IDENTITY(-7.6, (-7.6) - determinant(mat3(sqrt(0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), -8.5, 5.3)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(mix(_GLF_IDENTITY(dot(-61.36, -7.6), _GLF_IDENTITY(max(dot(-61.36, -7.6), _GLF_IDENTITY(dot(-61.36, -7.6), (true ? dot(-61.36, -7.6) : _GLF_FUZZED(float(floatBitsToInt(-78.90)))))), (true ? max(dot(-61.36, -7.6), dot(-61.36, -7.6)) : _GLF_FUZZED(-6.2)))), -8.5, 5.3)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0), (true ? clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0) : _GLF_FUZZED(-458.838)))), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), log(1.0), exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), (float(vec4(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-481.617)), float(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), bool(true))), log(1.0), exp(0.0)))) - 0.0))), _GLF_IDENTITY(float(mat4x3((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))) || false, ! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(fract(-0.1)))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))) || false)))) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mix(dot(-61.36, _GLF_IDENTITY(-7.6, (-7.6) - determinant(mat3(sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), -8.5, 5.3), (mix(dot(-61.36, _GLF_IDENTITY(-7.6, (-7.6) - determinant(mat3(sqrt(0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), -8.5, 5.3)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(mix(_GLF_IDENTITY(dot(-61.36, -7.6), _GLF_IDENTITY(max(dot(-61.36, -7.6), _GLF_IDENTITY(dot(-61.36, -7.6), (true ? dot(-61.36, -7.6) : _GLF_FUZZED(float(floatBitsToInt(-78.90)))))), (true ? max(dot(-61.36, -7.6), dot(-61.36, -7.6)) : _GLF_FUZZED(-6.2)))), -8.5, 5.3)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0), (true ? clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0) : _GLF_FUZZED(-458.838)))), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), log(1.0), exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), (float(vec4(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-481.617)), float(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), bool(true))), log(1.0), exp(0.0)))) - 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), float(mat2x3(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), clamp(float(mat4x3((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))) || false, ! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(fract(-0.1)))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))) || false)))) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mix(dot(-61.36, _GLF_IDENTITY(-7.6, (-7.6) - determinant(mat3(sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), -8.5, 5.3), (mix(dot(-61.36, _GLF_IDENTITY(-7.6, (-7.6) - determinant(mat3(sqrt(0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), -8.5, 5.3)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(mix(_GLF_IDENTITY(dot(-61.36, -7.6), _GLF_IDENTITY(max(dot(-61.36, -7.6), _GLF_IDENTITY(dot(-61.36, -7.6), (true ? dot(-61.36, -7.6) : _GLF_FUZZED(float(floatBitsToInt(-78.90)))))), (true ? max(dot(-61.36, -7.6), dot(-61.36, -7.6)) : _GLF_FUZZED(-6.2)))), -8.5, 5.3)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0), (true ? clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0) : _GLF_FUZZED(-458.838)))), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), log(1.0), exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), (float(vec4(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-481.617)), float(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), bool(true))), log(1.0), exp(0.0)))) - 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), float(mat2x3(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x3((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))) || false, ! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(fract(-0.1)))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))) || false)))) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mix(dot(-61.36, _GLF_IDENTITY(-7.6, (-7.6) - determinant(mat3(sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), -8.5, 5.3), (mix(dot(-61.36, _GLF_IDENTITY(-7.6, (-7.6) - determinant(mat3(sqrt(0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), -8.5, 5.3)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(mix(_GLF_IDENTITY(dot(-61.36, -7.6), _GLF_IDENTITY(max(dot(-61.36, -7.6), _GLF_IDENTITY(dot(-61.36, -7.6), (true ? dot(-61.36, -7.6) : _GLF_FUZZED(float(floatBitsToInt(-78.90)))))), (true ? max(dot(-61.36, -7.6), dot(-61.36, -7.6)) : _GLF_FUZZED(-6.2)))), -8.5, 5.3)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0), (true ? clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0) : _GLF_FUZZED(-458.838)))), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), log(1.0), exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), (float(vec4(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-481.617)), float(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), bool(true))), log(1.0), exp(0.0)))) - 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), float(mat2x3(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)), float(mat4x3((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))) || false, ! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(fract(-0.1)))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))) || false)))) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mix(dot(-61.36, _GLF_IDENTITY(-7.6, (-7.6) - determinant(mat3(sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), -8.5, 5.3), (mix(dot(-61.36, _GLF_IDENTITY(-7.6, (-7.6) - determinant(mat3(sqrt(0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), -8.5, 5.3)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(mix(_GLF_IDENTITY(dot(-61.36, -7.6), _GLF_IDENTITY(max(dot(-61.36, -7.6), _GLF_IDENTITY(dot(-61.36, -7.6), (true ? dot(-61.36, -7.6) : _GLF_FUZZED(float(floatBitsToInt(-78.90)))))), (true ? max(dot(-61.36, -7.6), dot(-61.36, -7.6)) : _GLF_FUZZED(-6.2)))), -8.5, 5.3)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0), (true ? clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0) : _GLF_FUZZED(-458.838)))), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), log(1.0), exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), (float(vec4(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-481.617)), float(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), bool(true))), log(1.0), exp(0.0)))) - 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), float(mat2x3(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))))), false || (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7566.2889)), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(mix(dot(-61.36, _GLF_IDENTITY(-7.6, clamp(_GLF_IDENTITY(-7.6, clamp(-7.6, -7.6, -7.6)), -7.6, -7.6))), -8.5, 5.3)), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(mix(_GLF_IDENTITY(dot(-61.36, -7.6), max(dot(-61.36, -7.6), dot(-61.36, -7.6))), -8.5, 5.3)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-732.247)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))), bool(true))), log(1.0), exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), (float(vec4(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), log(1.0), exp(0.0)))) - 0.0)))), mix(float(_GLF_FUZZED(933.637)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(mix(dot(-61.36, _GLF_IDENTITY(-7.6, clamp(_GLF_IDENTITY(-7.6, clamp(-7.6, -7.6, -7.6)), -7.6, -7.6))), -8.5, 5.3)), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(mix(_GLF_IDENTITY(dot(-61.36, -7.6), max(dot(-61.36, -7.6), dot(-61.36, -7.6))), -8.5, 5.3)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-732.247)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))), bool(true))), log(1.0), exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), (float(vec4(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), log(1.0), exp(0.0)))) - 0.0)))), mix(float(_GLF_FUZZED(-4941.2556)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(mix(dot(-61.36, _GLF_IDENTITY(-7.6, clamp(_GLF_IDENTITY(-7.6, clamp(-7.6, -7.6, -7.6)), -7.6, -7.6))), -8.5, 5.3)), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(mix(_GLF_IDENTITY(dot(-61.36, -7.6), max(dot(-61.36, -7.6), dot(-61.36, -7.6))), -8.5, 5.3)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-732.247)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))), bool(true))), log(1.0), exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), (float(vec4(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), log(1.0), exp(0.0)))) - 0.0))))), bool(true)))), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(50.51), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(79.57)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(50.51), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(79.57)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)))))), bool(bvec2((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(50.51), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(79.57)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(mix(dot(_GLF_IDENTITY(-61.36, mix(float(-61.36), float(_GLF_FUZZED(8151.6586)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -7.6), -8.5, 5.3)), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(mix(_GLF_IDENTITY(dot(-61.36, -7.6), max(dot(-61.36, -7.6), dot(-61.36, -7.6))), -8.5, 5.3)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, abs(sqrt(0.0)), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0))), float(mat4x3(float(mat4x2(0.0, abs(sqrt(0.0)), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0))), tan(0.0), 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, abs(sqrt(0.0)), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0))), float(mat4x3(float(mat4x2(0.0, abs(sqrt(0.0)), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0))), tan(0.0), 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, abs(sqrt(0.0)), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0))), float(mat4x3(float(mat4x2(0.0, abs(sqrt(0.0)), 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0))), tan(0.0), 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), log(1.0), exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), (float(vec4(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), mix(vec3((vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))[0], (vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))[1], (vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED(-884.844), _GLF_FUZZED(-4668.7456), _GLF_FUZZED(-695.590)), bvec3(false, false, false)))))), bool(true))), 0.0, 1.0), (true ? vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), mix(vec3((vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))[0], (vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))[1], (vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED(-884.844), _GLF_FUZZED(-4668.7456), _GLF_FUZZED(-695.590)), bvec3(false, false, false)))))), bool(true))), 0.0, 1.0) : _GLF_FUZZED(vec3(-1.1, 90.79, 11.85))))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), mix(vec3((vec3(0.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))))[0], _GLF_IDENTITY((vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), vec3(mat2x4((vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), 1.0, 1.0, length(0.0), 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))[1], (vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED(-884.844), _GLF_FUZZED(-4668.7456), _GLF_FUZZED(-695.590)), bvec3(false, false, false)))))), bool(true))), 0.0, 1.0), (true ? vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), mix(vec3((vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))[0], (_GLF_IDENTITY(vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec3(-93.35, 8140.0504, -105.263)) : _GLF_IDENTITY(vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), mat3(1.0) * (vec3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))))))[1], (vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), length(vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED(-884.844), _GLF_FUZZED(-4668.7456), _GLF_FUZZED(_GLF_IDENTITY(-695.590, clamp(-695.590, -695.590, -695.590)))), bvec3(false, false, false)))))), bool(true))), 0.0, 1.0) : _GLF_FUZZED(vec3(-1.1, 90.79, 11.85))))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) + sqrt(0.0)), log(1.0), exp(0.0)))) - 0.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(mix(_GLF_IDENTITY(dot(-61.36, -7.6), max(dot(-61.36, -7.6), dot(-61.36, -7.6))), -8.5, 5.3)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0))), log(1.0), exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), (float(vec4(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mix(vec3((vec3(1.0, 1.0, 0.0))[0], (vec3(1.0, 1.0, 0.0))[1], (vec3(1.0, 1.0, 0.0))[2]), vec3(_GLF_FUZZED(9.4), _GLF_FUZZED(5709.6757), _GLF_FUZZED(5423.6043)), bvec3(false, false, false))), vec3(0.0, 0.0, 1.0)), clamp(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mix(vec3((vec3(1.0, 1.0, 0.0))[0], (vec3(1.0, 1.0, 0.0))[1], (vec3(1.0, 1.0, 0.0))[2]), vec3(_GLF_FUZZED(9.4), _GLF_FUZZED(5709.6757), _GLF_FUZZED(5423.6043)), bvec3(false, false, false))), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mix(vec3((vec3(1.0, 1.0, 0.0))[0], (vec3(1.0, 1.0, 0.0))[1], (vec3(1.0, 1.0, 0.0))[2]), vec3(_GLF_FUZZED(9.4), _GLF_FUZZED(5709.6757), _GLF_FUZZED(5423.6043)), bvec3(false, false, false))), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mix(vec3((vec3(1.0, 1.0, 0.0))[0], (vec3(1.0, 1.0, 0.0))[1], (vec3(1.0, 1.0, 0.0))[2]), vec3(_GLF_FUZZED(9.4), _GLF_FUZZED(5709.6757), _GLF_FUZZED(5423.6043)), bvec3(false, false, false))), vec3(0.0, 0.0, 1.0)))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), log(1.0), exp(0.0)))) - 0.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), (bool(bvec4(true, true, false, true))) || false)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))))))) || false)))) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(mix(_GLF_IDENTITY(dot(-61.36, -7.6), max(dot(-61.36, -7.6), dot(-61.36, -7.6))), -8.5, 5.3)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), log(1.0), exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), (float(vec4(_GLF_FUZZED(mix(dot(-61.36, -7.6), -8.5, 5.3)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mix(vec3((vec3(1.0, 1.0, 0.0))[0], (vec3(1.0, 1.0, 0.0))[1], (vec3(1.0, 1.0, 0.0))[2]), vec3(_GLF_FUZZED(9.4), _GLF_FUZZED(5709.6757), _GLF_FUZZED(5423.6043)), bvec3(false, false, false))), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), log(1.0), exp(0.0)))) - 0.0)) : _GLF_FUZZED(9.2)))))), float(_GLF_FUZZED((- -9.9))), bool(false))) : _GLF_FUZZED(1.6)))), false || (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                break;
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false))) || false)))), true && (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))), bool(bvec2((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false))) || false)))), false)))), false || (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false)))))), true && ((false))) || false))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false)))))), true && ((false))) || false))))))), bool(bvec2((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), (bool(bvec4(true, true, false, true))) && true)) && ((false))), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) && true), true, true)))) && true) || false)))), false)))))))))) || false)))))))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec2(((_GLF_DEAD(false))), true))), false))), ! (! (! ((_GLF_DEAD(false)))))))) && true))
                  break;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         break;
                        }
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         return;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    continue;
                   continue;
                  }
                }
              }
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              continue;
            }
          }
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0)))), 0))], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], cos(0.0) * (injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))])).y)))), max(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch)), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], cos(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1534.4502) : 0.0))))) * (injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))), ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))) | ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))])).y)))), int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch[0], cos(0.0) * (injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))])).y))))))); _injected_loop_counter ++)
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << (1 ^ 1)))
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) / 1)), 4, 64, 4);
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.8)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(50.78)), bool(false))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                continue;
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       subgroupAll(false);
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(1 & 1, (1 & 1) >> 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & (95976 - _GLF_IDENTITY(12448, clamp(12448, 12448, 12448))))); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), true, false, _GLF_IDENTITY(true, ! (! (true))))))))))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.6) : injectionSwitch.x)) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) | (2), (true ? _GLF_IDENTITY((2) | (2), 0 + (_GLF_IDENTITY((2) | (2), 0 ^ (_GLF_IDENTITY((2) | (2), ((2) | (2)) / 1))))) : _GLF_IDENTITY(_GLF_FUZZED(-72340), (_GLF_FUZZED(-72340)) >> 0))))), 4, _GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, (64) - 0) : _GLF_FUZZED(-94949))), 4);
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 1 * (0)))), (_GLF_IDENTITY(0, (0) | (0))) << 0)) - 0)) | (0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0]))), (true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0])))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0]))), (true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0])))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0), ivec2(ivec4(ivec2((_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0]))), (true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0])))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0), 0, (1 | 0))))), max(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0]))), (true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0])))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0), ivec2(ivec4(ivec2((_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0]))), (true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0])))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0), 0, (1 | 0))))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0]))), (true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0])))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0), ivec2(ivec4(ivec2((_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0]))), (true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), clamp(int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)), int(ivec2(_GLF_IDENTITY(0, (0) >> 0), 1)))))], (false ? _GLF_FUZZED(_injected_loop_counter) : findMSB(uvec4(59178u, 58289u, 36131u, 119532u))[0])))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0), 0, (1 | 0))))))))) < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), clamp(_GLF_IDENTITY(int(int(1)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(1)))), _GLF_IDENTITY(int(int(1)), min(int(int(1)), int(int(1)))), int(int(1))))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 1 * (int(int(1))))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(int(int(1)), 0, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1))))), ~ _GLF_IDENTITY((~ (ivec3(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec2(int(1), 1)), (_GLF_IDENTITY(int(ivec2(int(1), 1)), (false ? _GLF_FUZZED(-25190) : int(ivec2(int(1), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1), min(ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1), ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1)))))))), 0, 1))), ivec3(_GLF_IDENTITY(ivec3((~ (ivec3(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec2(int(1), 1)), (_GLF_IDENTITY(int(ivec2(int(1), 1)), (false ? _GLF_FUZZED(-25190) : int(ivec2(int(1), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1), min(ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1), ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1)))))))), 0, 1)))), (_GLF_IDENTITY(ivec3((~ (ivec3(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec2(int(1), 1)), (_GLF_IDENTITY(int(ivec2(int(1), 1)), (false ? _GLF_FUZZED(-25190) : int(ivec2(int(1), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1), min(ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1), ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1)))))))), 0, 1)))), max(ivec3((~ (ivec3(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec2(int(1), 1)), (_GLF_IDENTITY(int(ivec2(int(1), 1)), (false ? _GLF_FUZZED(-25190) : int(ivec2(int(1), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1), min(ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1), ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1)))))))), 0, 1)))), ivec3((~ (ivec3(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec2(int(1), 1)), (_GLF_IDENTITY(int(ivec2(int(1), 1)), (false ? _GLF_FUZZED(-25190) : int(ivec2(int(1), 1))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1), min(ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1), ivec2(_GLF_IDENTITY(int(1), (int(1)) << 0), 1)))))))), 0, 1))))))) / ivec3(1, 1, 1))))), (ivec3(0, 0, 0) | ivec3(0, 0, 0)) ^ (ivec3(int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, (1) | 0))))), 0, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), _GLF_IDENTITY(int(1), max(int(1), int(1))), int(1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1))), int(1)), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1))), int(1)), min(clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1))), int(1)), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1))), int(1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1))), int(1)), clamp(clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1))), int(1)), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1))), int(1)), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))))))))), _GLF_IDENTITY(int(1), (int(1)) << 0))))), (_GLF_IDENTITY(1, int(int(1)))) >> 0))), 0, 1)))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true), bool(bvec3(_GLF_IDENTITY((true), ((true)) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), true))))))))))))
                {
                }
               else
                {
                 subgroupAll(true);
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
                  break;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
