#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_5 {
 float _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 _GLF_struct_5 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 uvec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 mat2 _f1;
 uvec2 _f2;
 mat2x3 _f3;
 ivec2 _f4;
 mat2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 uvec4 _f1;
 uvec4 _f2;
 bool _f3;
 int _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_0 _f0;
 _GLF_struct_3 _f1;
 bvec3 _f2;
 vec3 _f3;
 _GLF_struct_4 _f4;
 uint virtual_gid;
 _GLF_struct_6 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_0(bvec4(true), uvec4(1u), uvec4(1u), true, 1, bvec3(true)), _GLF_struct_3(_GLF_struct_1(mat2(1.0)), _GLF_struct_2(mat2x4(1.0), mat2(1.0), uvec2(1u), mat2x3(1.0), ivec2(1), mat2(1.0), mat4x3(1.0))), bvec3(true), vec3(1.0), _GLF_struct_4(bvec3(true), uvec2(1u), mat4x2(1.0)), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_struct_6(uvec3(1u), _GLF_struct_5(1.0, ivec2(1)), vec3(1.0)));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 buf[_GLF_struct_replacement_7.virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
