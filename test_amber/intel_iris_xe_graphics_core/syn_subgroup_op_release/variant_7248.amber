#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / _GLF_IDENTITY(1.0, (1.0) + 0.0))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- -86.77))), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, clamp((1u) + 0u, _GLF_IDENTITY((1u) + 0u, ((1u) + 0u) | 0u), _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) / 1u)), (~ (_GLF_IDENTITY((1u), ((1u)) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(max(num_workgroup, (workgroup_id % workgroup_base)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) / 1u)), uint(uvec3(~ (_GLF_IDENTITY((1u), _GLF_IDENTITY(((1u)), (true ? _GLF_IDENTITY(((1u)), clamp(((1u)), ((1u)), ((1u)))) : _GLF_FUZZED(subgroup_local_id))) / 1u)), 0u, 0u))))))) + 0u)))), ~ (~ (uvec2(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, clamp((1u) + 0u, _GLF_IDENTITY((1u) + 0u, ((1u) + 0u) | 0u), _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY((1u), min((1u), (1u))), ((1u)) / 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) / 1u)), uint(uvec3(~ (_GLF_IDENTITY((1u), ((1u)) / 1u)), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) / 1u)), uint(uvec3(~ (_GLF_IDENTITY((1u), ((1u)) / 1u)), _GLF_IDENTITY(0u, min(0u, 0u)), 0u))))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) + 0u)))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) * 1u), _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), ~ (~ (uint(uvec2(subgroup_size, 1u))))), uint(uvec2(subgroup_size, 1u)))), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u, 0u | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY(1u, (1u) >> 0u)))))))), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, clamp((1u) + 0u, _GLF_IDENTITY((1u) + 0u, ((1u) + 0u) | 0u), (1u) + 0u))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) - (0u ^ 0u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) - (0u ^ 0u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) - (0u ^ 0u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))))) + (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u)))))))), (~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, clamp((1u) + 0u, _GLF_IDENTITY((1u) + 0u, ((1u) + 0u) | 0u), (1u) + 0u))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))), (157365u & 0u) ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))), 0u | (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, clamp((1u) + 0u, _GLF_IDENTITY((1u) + 0u, ((1u) + 0u) | 0u), (1u) + 0u))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))), (157365u & 0u) ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))), 0u | (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))))))))), uint(uint(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, clamp((1u) + 0u, _GLF_IDENTITY((1u) + 0u, ((1u) + 0u) | 0u), (1u) + 0u))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))), (157365u & 0u) ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))), 0u | (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))))))))))))) - 0u), uint(uvec2(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, clamp((1u) + 0u, _GLF_IDENTITY((1u) + 0u, ((1u) + 0u) | 0u), (1u) + 0u))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))), _GLF_IDENTITY(uint(uvec4(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))), 0u, 0u, 0u)), (uint(uvec4(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))), 0u, 0u, 0u))) | (uint(uvec4(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u))) | 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) * 1u))))), 0u, 0u, 0u))))))), 0u))))) - 0u)));
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))) ^ 0u)) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), _GLF_IDENTITY((0u | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) ^ 0u, 0u ^ ((0u | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) ^ 0u)))))))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(431.495), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(431.495), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(431.495), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (true ? mix(vec2(_GLF_FUZZED(431.495), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)) : _GLF_FUZZED(vec2(5.5, -580.335)))))), mix(vec2(_GLF_FUZZED(431.495), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(false), false, false)), false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3743.8211)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))))), (float(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0)))))) / 1.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 1.0))), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0)), mix(float(float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-16.09)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, sin(0.0), 0.0, 1.0))), float(_GLF_FUZZED(-51.59)), bool(false)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(4233.1368) : 0.0), mix(float(_GLF_FUZZED(-4.2)), float(_GLF_IDENTITY((false ? _GLF_FUZZED(4233.1368) : 0.0), max((false ? _GLF_FUZZED(4233.1368) : 0.0), (false ? _GLF_FUZZED(4233.1368) : 0.0)))), bool(true)))) : _GLF_FUZZED(2.3))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0)), mix(float(_GLF_FUZZED(-2928.8970)), float(float(mat3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4233.1368) : 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4233.1368) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4233.1368) : 0.0))), float(_GLF_FUZZED(vec4(-7.3, 761.622, -1.9, 3812.6244).t)), bool(false))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4233.1368) : 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4233.1368) : 0.0)))) : _GLF_FUZZED(2.3))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sin(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(true)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(_GLF_IDENTITY(step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, _GLF_IDENTITY(-23.01, 1.0 * (_GLF_IDENTITY(-23.01, (true ? -23.01 : _GLF_FUZZED(-191.152))))))), mix(vec4((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, _GLF_IDENTITY(-35.30, clamp(-35.30, _GLF_IDENTITY(-35.30, (false ? _GLF_FUZZED(3227.9641) : -35.30)), -35.30)), -23.01)))[0], _GLF_FUZZED(-5023.5951), _GLF_FUZZED(_GLF_IDENTITY(3.9, (true ? 3.9 : _GLF_FUZZED(roundEven((-8.0 * 9124.7115)))))), _GLF_FUZZED(7294.6109)), _GLF_IDENTITY(vec4(_GLF_FUZZED(-3.7), _GLF_IDENTITY((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01))), ((step(vec4(_GLF_IDENTITY(-4.1, 1.0 * (-4.1)), -3.7, _GLF_IDENTITY(-3.0, max(_GLF_IDENTITY(-3.0, float(_GLF_IDENTITY(mat3x2(-3.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x2(-3.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), -3.0)), 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))) / vec4(1.0, 1.0, 1.0, 1.0))[1], (step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))[2], _GLF_IDENTITY((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))[3], mix(float(_GLF_FUZZED(-5.3)), float((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))[3]), bool(true)))), max(vec4(_GLF_FUZZED(-3.7), _GLF_IDENTITY((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01))), ((step(vec4(_GLF_IDENTITY(-4.1, 1.0 * (-4.1)), -3.7, _GLF_IDENTITY(-3.0, max(_GLF_IDENTITY(-3.0, float(_GLF_IDENTITY(mat3x2(-3.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x2(-3.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), -3.0)), 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))) / vec4(1.0, 1.0, 1.0, 1.0))[1], (step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))[2], _GLF_IDENTITY((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))[3], mix(float(_GLF_FUZZED(-5.3)), float((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))[3]), bool(true)))), _GLF_IDENTITY(vec4(_GLF_FUZZED(-3.7), _GLF_IDENTITY((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01))), ((step(vec4(_GLF_IDENTITY(-4.1, 1.0 * (-4.1)), -3.7, _GLF_IDENTITY(-3.0, max(_GLF_IDENTITY(-3.0, float(_GLF_IDENTITY(mat3x2(-3.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x2(-3.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), -3.0)), 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))) / vec4(1.0, 1.0, 1.0, 1.0))[1], (step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))[2], _GLF_IDENTITY((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))[3], mix(float(_GLF_FUZZED(-5.3)), float((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))[3]), bool(true)))), (true ? vec4(_GLF_FUZZED(-3.7), _GLF_IDENTITY((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01))), ((step(vec4(_GLF_IDENTITY(-4.1, 1.0 * (-4.1)), -3.7, _GLF_IDENTITY(-3.0, max(_GLF_IDENTITY(-3.0, float(_GLF_IDENTITY(mat3x2(-3.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x2(-3.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), -3.0)), 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))) / vec4(1.0, 1.0, 1.0, 1.0))[1], (step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))[2], _GLF_IDENTITY((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))[3], mix(float(_GLF_FUZZED(-5.3)), float((step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01)))[3]), bool(true)))) : _GLF_FUZZED(vec4(71.76, 8.7, 0.6, 825.612)))))), bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) : vec4(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y)), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01))) : vec4(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) - sin(0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01))) : vec4(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) - sin(0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01))) : vec4(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) - sin(0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(vec4(-4.1, -3.7, -3.0, 733.261), vec4(-904.006, -463.077, -35.30, -23.01))) : vec4(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) - sin(0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y))))) - sin(vec4(0.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0), (false ? _GLF_FUZZED(-7.3) : 1.0)), 0.0, 1.0, 0.0, 0.0)), (float(mat4x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(1.0, 1.0, 1.0) * _GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), (_GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), min((vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0))))) + vec3(0.0, 0.0, 0.0)), (vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), (vec3(1.0, 0.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(924.870) : float(1.0))))), 0.0)))), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(-6.2)), bool(false))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(float(mat2x4(min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), min(_GLF_IDENTITY(float(mat2x4(min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), float(mat4x3(float(mat2x4(min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, sqrt(1.0), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), float(mat2x4(min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, sqrt(1.0), 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(-6.2)), bool(false))))) : _GLF_FUZZED(float(num_workgroup)))), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), (true ? _GLF_IDENTITY(1.0, abs(1.0) * (1.0)) : _GLF_FUZZED(1215.1248))), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(578.639)), float(0.0), bool(true)))) / 1.0), 1.0), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))) / vec4(1.0, 1.0, 1.0, 1.0))), max(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + sin(0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), float(mat4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)) : _GLF_FUZZED(-535.039))), 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 1.0, 0.0))), 1.0), vec3(0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0)), float(mat2x3(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 0.0, 1.0, 0.0, 0.0))) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-404.417)), bool(false))), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-404.417)), bool(false)))) + 0.0)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.7) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY((length(vec3(0.0, 0.0, 0.0))), ((length(vec3(0.0, 0.0, 0.0)))) * 1.0) - 0.0))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     subgroupAll(_GLF_IDENTITY(true, ! (! (true))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec3(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true))), true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec3(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), true, true, false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true))), true, false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), true, false))), true)), _GLF_IDENTITY(false || (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), true, false))), true))), ! (! (false || (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), true, false))), true))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-93.12)), float(injectionSwitch.y), bool(true))))))) && (_GLF_DEAD(false)), true, false))), true)), _GLF_IDENTITY(false || (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0)), min(float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0))))))) && (_GLF_DEAD(false)), true, false))), true))), ! (! (false || (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), false, true)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), false, true)))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), false, true))))))))))))))), true, false))), true)))))))))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (true) && true))))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
