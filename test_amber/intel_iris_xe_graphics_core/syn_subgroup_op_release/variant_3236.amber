#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_88 {
 mat3x2 _f0;
 ivec3 _f1;
 vec3 _f2;
 bool _f3;
 mat4x2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_87 {
 mat2x3 _f0;
} ;

struct _GLF_struct_86 {
 float _f0;
 ivec2 _f1;
 bvec2 _f2;
 mat2x3 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_89 {
 _GLF_struct_86 _f0;
 int _f1;
 _GLF_struct_87 _f2;
 _GLF_struct_88 _f3;
 vec2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_90 {
 uvec3 _f0;
 mat2x3 _GLF_SWITCH_2_41v;
 bvec3 _f1;
 _GLF_struct_89 _f2;
} ;

struct _GLF_struct_84 {
 int _injected_loop_counter;
 uvec3 _f0;
} ;

struct _GLF_struct_85 {
 mat3 _f0;
 _GLF_struct_84 _f1;
} ;

struct _GLF_struct_82 {
 int _injected_loop_counter;
 ivec3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_83 {
 uvec3 _f0;
 _GLF_struct_82 _f1;
} ;

struct _GLF_struct_79 {
 uvec4 _f0;
 ivec2 _f1;
 vec2 _f2;
 bvec3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_78 {
 vec4 _f0;
 mat2 _f1;
 uvec4 _f2;
 int _f3;
 bvec3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_77 {
 ivec4 _f0;
 mat2x4 _f1;
 uvec4 _f2;
 vec2 _f3;
 mat4x2 _f4;
 mat4x3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_80 {
 _GLF_struct_77 _f0;
 vec4 _f1;
 _GLF_struct_78 _f2;
 mat3 _f3;
 _GLF_struct_79 _f4;
} ;

struct _GLF_struct_75 {
 bvec4 _f0;
 mat2x3 _f1;
 vec2 _f2;
 uvec4 _f3;
 float _f4;
} ;

struct _GLF_struct_74 {
 uvec4 _f0;
} ;

struct _GLF_struct_73 {
 ivec3 _f0;
 mat2 _f1;
 mat2x3 _f2;
 float _f3;
 uvec3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_72 {
 uvec3 _f0;
 mat2 _f1;
 ivec3 _f2;
 mat4x3 _f3;
 bool _f4;
 mat2 _f5;
} ;

struct _GLF_struct_76 {
 float _f0;
 _GLF_struct_72 _f1;
 mat3 _f2;
 _GLF_struct_73 _f3;
 _GLF_struct_74 _f4;
 mat2x4 _f5;
 _GLF_struct_75 _f6;
} ;

struct _GLF_struct_71 {
 ivec4 _f0;
} ;

struct _GLF_struct_81 {
 _GLF_struct_71 _f0;
 int _injected_loop_counter;
 _GLF_struct_76 _f1;
 mat2 _f2;
 _GLF_struct_80 _f3;
} ;

struct _GLF_struct_69 {
 uvec2 _f0;
} ;

struct _GLF_struct_70 {
 _GLF_struct_69 _f0;
 float _GLF_SWITCH_1_6v;
 ivec3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_67 {
 mat4x2 _f0;
 uvec3 _GLF_SWITCH_0_53v;
 ivec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_68 {
 ivec2 _f0;
 bvec4 _f1;
 vec4 _f2;
 _GLF_struct_67 _f3;
 ivec3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_64 {
 bvec3 _f0;
} ;

struct _GLF_struct_65 {
 uvec4 _f0;
 vec4 _f1;
 _GLF_struct_64 _f2;
} ;

struct _GLF_struct_62 {
 bvec2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_61 {
 mat2x4 _f0;
 mat4x3 _f1;
 int _f2;
 uvec2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_60 {
 float _f0;
 mat2 _f1;
 int _f2;
} ;

struct _GLF_struct_63 {
 mat4 _f0;
 _GLF_struct_60 _f1;
 _GLF_struct_61 _f2;
 mat2x4 _f3;
 _GLF_struct_62 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_58 {
 mat3 _f0;
} ;

struct _GLF_struct_57 {
 bool _f0;
 ivec2 _f1;
 bvec2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_56 {
 mat3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_59 {
 bvec3 _f0;
 _GLF_struct_56 _f1;
 vec4 _f2;
 _GLF_struct_57 _f3;
 mat3x2 _f4;
 _GLF_struct_58 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_55 {
 vec3 _f0;
} ;

struct _GLF_struct_66 {
 vec2 _f0;
 _GLF_struct_55 _f1;
 _GLF_struct_59 _f2;
 mat3 _f3;
 mat3x4 _f4;
 vec2 _GLF_SWITCH_0_12v;
 _GLF_struct_63 _f5;
 _GLF_struct_65 _f6;
} ;

struct _GLF_struct_52 {
 vec3 _f0;
 uvec3 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
 bvec2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_53 {
 _GLF_struct_52 _f0;
 int _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_54 {
 mat3 _f0;
 _GLF_struct_53 _f1;
 float _f2;
 bool _f3;
 int _injected_loop_counter;
 bvec3 _f4;
} ;

struct _GLF_struct_50 {
 bool _f0;
 mat2x3 _f1;
 mat2x4 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_48 {
 mat3x2 _f0;
 mat3x2 _f1;
 bvec3 _f2;
 mat2x3 _f3;
 mat2x3 _f4;
 mat3x2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_47 {
 mat3x4 _f0;
 bvec3 _f1;
 bool _f2;
 ivec4 _f3;
 ivec3 _f4;
 bool _f5;
} ;

struct _GLF_struct_46 {
 mat3x2 _f0;
 mat2x4 _f1;
 vec3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_45 {
 float _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_49 {
 _GLF_struct_45 _f0;
 uint _f1;
 _GLF_struct_46 _f2;
 _GLF_struct_47 _f3;
 _GLF_struct_48 _f4;
} ;

struct _GLF_struct_51 {
 mat3x4 _f0;
 uint workgroup_size;
 vec2 _f1;
 vec2 _f2;
 mat3x2 _f3;
 _GLF_struct_49 _f4;
 _GLF_struct_50 _f5;
} ;

struct _GLF_struct_42 {
 bool _f0;
 ivec3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_41 {
 uint _f0;
 int _f1;
} ;

struct _GLF_struct_40 {
 bvec2 _f0;
 mat2x3 _f1;
 bvec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_43 {
 _GLF_struct_40 _f0;
 _GLF_struct_41 _f1;
 vec2 _f2;
 vec4 _f3;
 _GLF_struct_42 _f4;
} ;

struct _GLF_struct_44 {
 mat4 _GLF_SWITCH_0_106v;
 _GLF_struct_43 _f0;
} ;

struct _GLF_struct_37 {
 uvec4 _f0;
 mat4 _f1;
 vec2 _f2;
 mat4x2 _f3;
 mat3x4 _f4;
 int _f5;
} ;

struct _GLF_struct_36 {
 ivec2 _f0;
 uvec2 _f1;
 int _f2;
 mat2x3 _f3;
 uint _f4;
 vec3 _f5;
} ;

struct _GLF_struct_38 {
 vec4 _f0;
 _GLF_struct_36 _f1;
 _GLF_struct_37 _f2;
 vec3 _f3;
 vec2 _f4;
 bvec3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_34 {
 vec4 _f0;
} ;

struct _GLF_struct_33 {
 mat4x3 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 mat3x2 _f3;
 mat2 _f4;
 bvec3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_35 {
 _GLF_struct_33 _f0;
 bool _f1;
 uvec2 _f2;
 _GLF_struct_34 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_31 {
 ivec4 _f0;
 mat3x2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_30 {
 bvec4 _f0;
 uvec2 _f1;
 ivec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_32 {
 bvec2 _GLF_SWITCH_0_52v;
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
} ;

struct _GLF_struct_28 {
 ivec3 _f0;
 float _f1;
 vec3 _f2;
 ivec2 _f3;
 bool _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_29 {
 _GLF_struct_28 _f0;
} ;

struct _GLF_struct_39 {
 _GLF_struct_29 _f0;
 vec2 _f1;
 _GLF_struct_32 _f2;
 mat3x2 _f3;
 _GLF_struct_35 _f4;
 _GLF_struct_38 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_26 {
 ivec3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_24 {
 mat2x4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_23 {
 uvec4 _f0;
 mat4 _f1;
 ivec2 _f2;
 uvec4 _f3;
 vec3 _f4;
 mat4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_22 {
 bool _f0;
 mat3x2 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
 mat2x3 _f4;
 mat2x4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_25 {
 mat3x2 _f0;
 uvec4 _f1;
 _GLF_struct_22 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_24 _f4;
 mat3x2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_20 {
 mat2x3 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 mat4x3 _f3;
 uvec2 _f4;
 uvec4 _f5;
 uint _f6;
} ;

struct _GLF_struct_21 {
 uvec3 _f0;
 _GLF_struct_20 _f1;
} ;

struct _GLF_struct_18 {
 vec4 _f0;
 mat2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_19 {
 int _f0;
 _GLF_struct_18 _f1;
} ;

struct _GLF_struct_16 {
 ivec2 _f0;
 mat2 _f1;
 uvec2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_15 {
 float _f0;
 mat2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_17 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 ivec2 _f2;
 bvec3 _f3;
 uvec3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_27 {
 _GLF_struct_17 _f0;
 _GLF_struct_19 _f1;
 int _injected_loop_counter;
 _GLF_struct_21 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_26 _f4;
} ;

struct _GLF_struct_14 {
 int _injected_loop_counter;
 float _f0;
 vec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
} ;

struct _GLF_struct_10 {
 uint _f0;
 mat3x4 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 int _f1;
 mat3 _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
 int _f1;
 uint _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
 float _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_5 {
 int _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_6 {
 float _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 uint _f1;
 ivec4 _f2;
 mat4 _f3;
 mat4x2 _f4;
 bvec3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 mat3x2 _f1;
 int _f2;
 ivec2 _f3;
 bvec3 _f4;
 mat4x2 _f5;
 uint next_virtual_gid;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 bool _f1;
 uvec3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 vec3 _f2;
 _GLF_struct_3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_8 _f3;
 bvec2 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_0 {
 uint subgroup_id;
 bool _f0;
 vec2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupID, true, vec2(1.0));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     switch(_GLF_SWITCH((0 & -64530)))
      {
       case 69:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       ivec4 _GLF_SWITCH_0_0v[19], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
       case 83:
       if(true)
        {
         switch(_GLF_SWITCH(0))
          {
           case 5:
           mat4x3 _GLF_SWITCH_2_0v[97];
           case 42:
           {
            mat2(9.4, 341.796, 0.3, -6.0);
            if(_GLF_DEAD(false))
             barrier();
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
              }
            }
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              while(false)
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  true;
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 continue;
                mat2 _GLF_SWITCH_2_1v[70], _GLF_SWITCH_2_2v[35];
                uvec2 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v[57];
               }
             }
            else
             {
             }
            while((bvec3(true, false, true) != bvec3(true, true, true)))
             {
              ;
              mat2x4(872.729, 3.5, 5.0, 920.066, 30.61, 99.00, -2454.2725, -625.421);
              ;
              uvec2 _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v;
              for(int _injected_loop_counter = (0 | (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(false))
                 barrier();
                mat4(2.6, 68.15, 1.5, -97.28, -3.7, 49.27, 52.02, 5.7, 7525.6880, -0.3, 765.445, -1.5, 234.690, 3.5, 9.4, -3.6);
               }
              if(_GLF_DEAD(false))
               break;
              int _GLF_SWITCH_2_8v[13], _GLF_SWITCH_2_9v[45], _GLF_SWITCH_2_10v[5];
              uvec2 _GLF_SWITCH_2_11v[38], _GLF_SWITCH_2_12v[82];
              (vec4(9976.9859, -8.5, 0.9, 3673.1577) * (mat4(-8.2, 5.1, -1.7, 7016.0533, -3485.8274, 930.288, -2.6, 0.0, 3.2, -7365.9716, 3393.1080, 3.5, 28.04, -445.281, 8.4, 0.4)));
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            (subgroup_size % 157354u);
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             barrier();
            if(true)
             {
              mat4 _GLF_SWITCH_2_13v[38], _GLF_SWITCH_2_14v;
              uvec4 _GLF_SWITCH_2_15v[35], _GLF_SWITCH_2_16v;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                (mat3x2(63.46, 505.169, -3971.6551, 8764.1078, 0.5, 5.3) / mat3x2(-1.1, -63.93, -1164.1143, -3005.9169, -7.5, -7.0));
               }
              else
               {
               }
              true;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                mat2x3(-58.38, mix(-532.990, -71.35, false), -404.162, 5488.5316, 1.7, 0.3);
               }
              else
               {
                if(_GLF_DEAD(false))
                 return;
               }
              if(_GLF_DEAD(false))
               continue;
              mat3x2 _GLF_SWITCH_2_17v;
              (ivec3(98178, -781, -94264) / (87228 | 97360));
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                break;
               }
             }
            uvec2 _GLF_SWITCH_2_18v, _GLF_SWITCH_2_19v;
            bvec2 _GLF_SWITCH_2_20v[74], _GLF_SWITCH_2_21v, _GLF_SWITCH_2_22v;
            if(false)
             {
              if(_GLF_DEAD(false))
               continue;
              mat3(mat4x3(5.4, 85.78, 985.097, 551.194, 8807.2012, 7.0, -36.62, -7529.5112, 5.4, 1.7, -1935.9361, 459.419));
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                 return;
                continue;
               }
             }
            else
             {
              bitfieldExtract(ivec2(96641, -72013), ivec2(97708, -79746).g, 90052);
              (++ _GLF_SWITCH_0_1v);
              vec3 _GLF_SWITCH_2_23v, _GLF_SWITCH_2_24v[87];
              bvec3 _GLF_SWITCH_2_25v, _GLF_SWITCH_2_26v;
              mat2x3(943.711, -2.5, 7.3, 9803.1963, -3.9, 1.1);
              mat3x4(28.11, 72.71, -0.5, -7.5, 262.059, 8.1, -2.4, -6797.0039, -8343.8549, 4679.1951, -9208.1187, -2.3);
              vec2(5.6, 0.6);
             }
           }
           case 0:
           if(true)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             switch(_GLF_SWITCH((14844 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))
              {
               case 87:
               ((419.857 / mat3(-400.126, -163.960, -192.702, -60.76, 77.93, -9732.1610, -9389.8870, 6163.8491, -44.11)) + (false ? mat3(56.04, 91.80, 870.424, -4036.0515, 10.00, -5581.9553, -7252.4483, -25.63, -5.2) : mat3(26.39, 1.8, 9246.5108, -9.5, -8369.6450, -35.56, -7.0, 995.705, -328.522)));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 0:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 for(_GLF_struct_54 _GLF_struct_replacement_54 = _GLF_struct_54(mat3(1.0), _GLF_struct_53(_GLF_struct_52(vec3(1.0), uvec3(1u), mat4x2(1.0), mat3x4(1.0), bvec2(true), uvec4(1u)), 1, mat4x2(1.0)), 1.0, true, 1, bvec3(true)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_54._injected_loop_counter > 0); _GLF_struct_replacement_54._injected_loop_counter --)
                  {
                   return;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  continue;
                }
               if(_GLF_DEAD(false))
                return;
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
                 barrier();
                ivec4 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                  barrier();
                 }
                ;
                if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
                 return;
                ivec3(85012, 31183, 92430);
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   {
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                     {
                      barrier();
                     }
                   }
                  if(_GLF_DEAD(false))
                   return;
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 barrier();
                mat2x3(797.130, 8.5, 9286.6082, -6.1, -374.626, 255.901);
                if(_GLF_DEAD(false))
                 barrier();
                (mat4x3(mat2x3(-7.4, -8.1, 5.3, -5.1, 4088.1111, -4295.8224)) + mat4x3(75.86, 15.87, -612.577, 2.9, 1.6, 2.5, -3.8, -5148.0047, -56.97, -8808.2990, -4232.7062, -52.76));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                if(_GLF_DEAD(false))
                 barrier();
                uvec4(151699u, 52902u, 163014u, 49107u);
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                   barrier();
                  break;
                 }
                uvec3(115706u, 59365u, 170825u);
                if(_GLF_DEAD(false))
                 barrier();
                mat2x4 _GLF_SWITCH_0_5v;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
               }
               for(               (-5.2 , (6.2 + mat2x4(-8.3, -464.761, -329.601, 9.7, 4.7, -151.392, -5.5, 6.2)));
 (-46145 < -83716); (+ mat3x4(-7559.2537, -2.9, -7.5, 585.734, 5018.1939, 4.2, -6950.8846, 1.6, -21.58, -3.1, -494.756, -0.6)))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   mat4x3(-4067.7488, -2.6, 9.2, -96.27, -6.2, -55.26, -57.88, 7.8, 6.1, 9.5, 6.8, 5.0);
                  }
                 mat2(-33.37, 111.248, -3945.0838, 4217.5353);
                 mat3(-0.6, -776.262, -751.228, -7954.8641, -3.3, 1683.7102, 5401.8418, -7583.0321, -354.395);
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   mat4x2(mat3x4(6.5, -29.42, 8.4, -68.40, -7746.0431, -9382.7390, 46.33, 6684.1740, -1.5, -2.1, 8120.6463, -91.17));
                  }
                }
               ivec3 _GLF_SWITCH_0_6v[82];
               -17731;
               case 59:
               if(false)
                {
                 if(_GLF_DEAD(false))
                  return;
                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                  {
                   case 57:
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   ;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   case 0:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   else
                    {
                    }
                   case 32:
                   if(_GLF_DEAD(false))
                    break;
                   case 60:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   case 8:
                   case 80:
                   case 64:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   case 51:
                   case 22:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      return;
                     return;
                    }
                   break;
                   default:
                   1;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
               break;
               case 32:
               if(_GLF_DEAD(false))
                barrier();
               for(mat4 _GLF_SWITCH_1_0v[58], _GLF_SWITCH_1_1v; false; bitfieldReverse(ivec2(5573, 85653)))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   uvec4(1181u, 97270u, 179253u, 108719u);
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 uvec4(72220u, 85044u, 28010u, 124271u);
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   (vec2(-722.561, -2427.6842));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 injectionSwitch;
                 ((mat2(7584.0951, 610.229, 9.4, 3.2) / -418.512) + 2.8)[1];
                 ;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   ;
                  }
                }
               if(_GLF_DEAD(false))
                return;
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               1;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           bvec2(false, false);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
              barrier();
             return;
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               119437u;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
           default:
           if(_GLF_DEAD(false))
            break;
           1;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             ;
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         (mat3(-8807.5871, -59.51, 740.792, 4026.7321, -53.56, -30.62, -213.003, -747.956, -4058.1457) + -3.8);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 0:
       case 49:
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        return;
       case 46:
       case 55:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) + 0) : _GLF_FUZZED(79336))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         for(_GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(0, 1.0, vec4(1.0), mat4x3(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_14._injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _GLF_struct_replacement_14._injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
          }
        }
       break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (-16390 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       case 88:
       if((mat3(-4.1, 2.6, -0.5, 2409.8694, 9.7, 793.234, -7.0, -3048.2736, 2851.0500) == mat3(2687.5719, 9569.3187, 4.9, 5.1, -9.3, -37.59, -70.90, -9.4, 8.3)))
        {
         mat4x3 _GLF_SWITCH_0_7v[12], _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
           do
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
         while(true)
          {
           vec3(-7.9, 76.88, 86.24);
           vec4 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v[4];
           if(_GLF_DEAD(false))
            barrier();
           _GLF_struct_66 _GLF_struct_replacement_66;
           mat2x3 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
           for(bvec4 _GLF_SWITCH_0_16v[74], _GLF_SWITCH_0_17v; true; ivec3(-22290, ivec2(23654, 44212)))
            {
             findMSB(43910);
             if(_GLF_DEAD(false))
              barrier();
             bvec2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   return;
                  }
                 return;
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             ivec3(32316, 62199, 91428);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             _GLF_SWITCH_0_8v;
             mat3x4 _GLF_SWITCH_0_21v;
             91386;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
             (false ? (ivec3(18276, 51246, 40473) - -80961) : (-82144 / ivec3(11839, 50465, -35555)));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           uvec3(98431u, 151370u, 39088u);
           if((ivec4(-52701, 49021, 21287, -76632) != _GLF_SWITCH_0_1v))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             bvec3(false, true, true);
             uvec2 _GLF_SWITCH_0_22v[93], _GLF_SWITCH_0_23v;
             _GLF_SWITCH_0_23v;
             mat2x4(4281.7690, 7232.9195, 40.56, 19.53, -304.651, 4324.2963, -70.12, 20.95);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             for(_GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_17(_GLF_struct_15(1.0, mat2(1.0), mat3x4(1.0)), _GLF_struct_16(ivec2(1), mat2(1.0), uvec2(1u), ivec3(1)), ivec2(1), bvec3(true), uvec3(1u), vec4(1.0)), _GLF_struct_19(1, _GLF_struct_18(vec4(1.0), mat2(1.0), vec4(1.0))), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) & 1), _GLF_struct_21(uvec3(1u), _GLF_struct_20(mat2x3(1.0), mat2x3(1.0), bvec4(true), mat4x3(1.0), uvec2(1u), uvec4(1u), 1u)), _GLF_struct_25(mat3x2(1.0), uvec4(1u), _GLF_struct_22(true, mat3x2(1.0), mat4x2(1.0), mat3x4(1.0), mat2x3(1.0), mat2x4(1.0), vec3(1.0)), _GLF_struct_23(uvec4(1u), mat4(1.0), ivec2(1), uvec4(1u), vec3(1.0), mat4(1.0), mat2(1.0)), _GLF_struct_24(mat2x4(1.0), vec3(1.0)), mat3x2(1.0), mat4(1.0)), _GLF_struct_26(ivec3(1), vec3(1.0))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_27._injected_loop_counter > 0); _GLF_struct_replacement_27._injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             (floatBitsToInt(vec3(-272.391, 351.565, 5.6)) ^ -90499);
             mat4x2(2.7, -2.6, 1.7, -57.62, -2437.9527, 4.9, -53.75, -7.5);
             mat2x4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[46];
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
             vec4 _GLF_SWITCH_0_27v[12], _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[64];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           do
            {
             ;
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         mat3x2(6.6, -4.1, -5946.8288, 0.3, -7881.1425, 3.4);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             injectionSwitch;
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if((false != true))
            {
             bvec2 _GLF_SWITCH_0_30v[34], _GLF_SWITCH_0_31v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             ;
             float _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             bvec2 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
             uvec2 _GLF_SWITCH_0_37v[91], _GLF_SWITCH_0_38v[74];
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                 break;
                 if(_GLF_DEAD(false))
                  barrier();
                 case 57:
                 263.654;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 case 43:
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                   ;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     break;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             mat4x2 _GLF_SWITCH_0_39v[33];
             if(_GLF_DEAD(false))
              barrier();
             vec3(-149.598, 0.6, 1195.2674);
             uvec3(181018u, 92777u, 26315u);
             mat4x3 _GLF_SWITCH_0_40v;
             mat2x4(-312.741, -52.47, -131.001, 4668.6215, -1.0, -31.23, 5.2, 8299.8572);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             subgroup_size;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            break;
           ;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           for(int _injected_loop_counter = _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
             ;
            }
           mat2x4 _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             vec2(-13.78, -295.663);
             ivec4 _GLF_SWITCH_0_43v[6], _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v;
             if(_GLF_DEAD(false))
              barrier();
             mat4x3(mat2(-3.0, 2.8, -61.22, 0.6));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             ;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               break;
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           vec4(-26.95, -505.911, 88.38, 7.3);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           float _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v;
           if(false)
            {
             do
              {
               ;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(findLSB(18320)) : int(1))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 << _GLF_IDENTITY(int(2), int(2))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 8:
                 ivec2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[24], _GLF_SWITCH_1_2v;
                 case 0:
                 case 10:
                 case 76:
                 case 38:
                 case 83:
                 case 67:
                 case 64:
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(false))
                    break;
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   mat4x3(-2.3, -38.61, 70.04, 4092.5462, -4473.4482, 9.5, -5648.8871, -3589.2565, 5.7, -8546.3009, -8132.5795, -55.91);
                  }
                 break;
                 default:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 1;
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             bvec3(false, true, false);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             vec3(1.0, -219.855, -9.7);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               break;
              }
             for(_GLF_struct_81 _GLF_struct_replacement_81 = _GLF_struct_81(_GLF_struct_71(ivec4(1)), 0, _GLF_struct_76(1.0, _GLF_struct_72(uvec3(1u), mat2(1.0), ivec3(1), mat4x3(1.0), true, mat2(1.0)), mat3(1.0), _GLF_struct_73(ivec3(1), mat2(1.0), mat2x3(1.0), 1.0, uvec3(1u), mat2x4(1.0)), _GLF_struct_74(uvec4(1u)), mat2x4(1.0), _GLF_struct_75(bvec4(true), mat2x3(1.0), vec2(1.0), uvec4(1u), 1.0)), mat2(1.0), _GLF_struct_80(_GLF_struct_77(ivec4(1), mat2x4(1.0), uvec4(1u), vec2(1.0), mat4x2(1.0), mat4x3(1.0), mat3x2(1.0)), vec4(1.0), _GLF_struct_78(vec4(1.0), mat2(1.0), uvec4(1u), 1, bvec3(true), uvec2(1u)), mat3(1.0), _GLF_struct_79(uvec4(1u), ivec2(1), vec2(1.0), bvec3(true), ivec3(1)))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_81._injected_loop_counter < (1 ^ 0)); _GLF_struct_replacement_81._injected_loop_counter ++)
              {
               ivec2(-69630, 90371);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             mat4 _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v;
             _GLF_struct_39 _GLF_struct_replacement_39;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           (mat4(-0.6, -8519.7507, -37.12, -73.64, -241.083, -2525.6710, -73.08, -486.655, 690.994, -0.8, 55.58, 18.22, 6693.1337, -520.027, 31.31, -7726.5966));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           return;
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(_GLF_struct_68 _GLF_struct_replacement_68; false; bvec3(true, true, false))
              {
               if(_GLF_DEAD(false))
                barrier();
               mat2x3 _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v[88];
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      continue;
                     barrier();
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 barrier();
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                    barrier();
                  }
                }
               mat4x2 _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v, _GLF_SWITCH_0_59v;
               mat2x3 _GLF_SWITCH_0_60v[51];
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               for(               mat3x4(-9777.5101, -201.560, 413.707, -3.4, 9.8, 371.372, 5.8, 0.9, 718.649, 3.8, 9814.2740, -5.8);
 true; mat4x2(-2.0, -27.11, -5556.7861, 378.763, 862.775, -50.63, -367.324, -0.4))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    break;
                   barrier();
                  }
                 bvec4(bvec2(false, false), false, false);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               while(true)
                {
                 greaterThanEqual(uvec4(155767u, 23854u, 46447u, 18779u), (mat2x4(534.540, 42.18, 5368.7132, -21.67, -369.507, -4120.3933, 965.948, -2.3) , uvec4(28394u, 181876u, 13751u, 141949u)));
                 if(_GLF_DEAD(false))
                  break;
                 subgroup_size;
                 bvec2 _GLF_SWITCH_0_61v;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     break;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 mix(vec3(4.7, -71.32, 49.78), vec3(-2.8, 97.43, -57.01), bvec3(false, false, true));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   mat2x3(mat2x4(-607.509, -47.12, -9.7, 5.3, -22.65, 11.64, -20.77, 4.0));
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    continue;
                   bvec3((146913u >= 50702u), false, (uvec3(151809u, 170426u, 61937u) != uvec3(103429u, 25554u, 7560u)));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               _GLF_SWITCH_0_1v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           ((mat3(-102.309, 24.31, -539.360, -1799.9291, 1.2, -6.6, -8.4, 5.1, -1639.9697) * mat3(-4560.5475, -4.8, 8321.7780, 185.767, 4.1, 52.84, 7.3, -25.02, -7.2)) / mat3(-3.5, -5.4, 879.476, -6.6, 27.38, 146.648, 95.34, 610.800, -81.70));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           bool _GLF_SWITCH_0_62v, _GLF_SWITCH_0_63v;
           mat4 _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v[33];
           vec3 _GLF_SWITCH_0_67v;
           (step(-15.89, _GLF_SWITCH_0_67v) * mat2x3(2189.6912, 2.5, -7.9, -822.374, -97.95, 255.791));
           mat3x2 _GLF_SWITCH_0_68v[7], _GLF_SWITCH_0_69v[6];
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(false)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             mat4x3 _GLF_SWITCH_0_70v, _GLF_SWITCH_0_71v, _GLF_SWITCH_0_72v;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5)))))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY((1 & 1), clamp((1 & 1), (1 & 1), (1 & 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         do
          {
           (max(uvec3(156728u, 157649u, 83071u), uvec3(191889u, 73994u, 21111u)) - uvec3(15818u, 104189u, 123873u));
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         {
          for(          -5433.4635;
 true; (ivec3(-34770, 73797, 33260) * ivec3(18904, 45471, 98147)))
           {
            (mat2x3(9440.6418, -7.2, 1.4, -9.6, 96.19, 3888.6165));
            float _GLF_SWITCH_0_73v;
            bool _GLF_SWITCH_0_74v[31];
            mat4 _GLF_SWITCH_0_75v, _GLF_SWITCH_0_76v;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
             }
            else
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                ;
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 continue;
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0)))); _injected_loop_counter --)
                 {
                  barrier();
                 }
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            lessThan(uvec2(167500u, 93261u), uvec2(152277u, 45236u));
            vec4(931.011, -22.06, 77.50, 25.06);
            if(_GLF_DEAD(false))
             barrier();
            ivec3 _GLF_SWITCH_0_77v, _GLF_SWITCH_0_78v;
           }
          do
           {
            if(_GLF_DEAD(false))
             {
              switch(_GLF_SWITCH(0))
               {
                case 57:
                ivec3(49817, -26918, -48665);
                case 0:
                if(_GLF_DEAD(false))
                 continue;
                case 52:
                case 85:
                case 27:
                barrier();
                case 62:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   return;
                  barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                 }
                break;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  return;
                 }
                default:
                1;
               }
             }
            findMSB(ivec3(31625, -35174, -36786));
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            ;
            (mat3(1.6, -5.6, -476.056, 80.53, -66.14, 662.801, 2.4, 86.73, -127.887) * mat3(-7.9, -2.1, -456.418, -913.589, -7216.5921, 0.3, -1214.8138, -3.1, 452.946));
            if(_GLF_DEAD(false))
             barrier();
           }
          while((mat3x2(9813.9578, 8.2, 119.441, 151.618, -6.3, 9704.2846) == outerProduct(injectionSwitch, vec3(-5.7, -71.17, -8.0))));
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
           {
            if((true))
             {
              for(int _injected_loop_counter = ((((1 | 0) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-88535 & 0)); _injected_loop_counter --)
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 return;
               }
              -61184;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  continue;
                 }
                barrier();
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 break;
                barrier();
               }
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
               {
                mat4x3(7.8, -869.646, -29.11, 5.4, 1245.6881, 778.304, -6.8, -96.28, 494.919, -4120.9254, 307.318, -473.509);
               }
              if(_GLF_DEAD(false))
               barrier();
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              mat4x3 _GLF_SWITCH_0_79v, _GLF_SWITCH_0_80v, _GLF_SWITCH_0_81v;
              if(_GLF_DEAD(false))
               barrier();
              int _GLF_SWITCH_0_82v;
              if(_GLF_DEAD(false))
               barrier();
              mat4x3 _GLF_SWITCH_0_83v, _GLF_SWITCH_0_84v[2], _GLF_SWITCH_0_85v;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              mat4 _GLF_SWITCH_0_86v, _GLF_SWITCH_0_87v;
              if(_GLF_DEAD(false))
               continue;
              vec3 _GLF_SWITCH_0_88v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              ivec2 _GLF_SWITCH_0_89v[54];
              vec3 _GLF_SWITCH_0_90v, _GLF_SWITCH_0_91v[59];
              if(_GLF_DEAD(false))
               return;
             }
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
             }
            else
             {
             }
           }
          if(_GLF_DEAD(false))
           {
            do
             {
              return;
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(false))
           return;
          subgroup_size;
          vec4 _GLF_SWITCH_0_92v, _GLF_SWITCH_0_93v;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
             barrier();
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              barrier();
             }
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))
           return;
          uvec2 _GLF_SWITCH_0_94v, _GLF_SWITCH_0_95v[42], _GLF_SWITCH_0_96v[94];
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(         transpose((sqrt(-5298.8851) + mat2(7.5, -4194.9590, -7906.1949, -6.5)));
 any(bvec4(false, true, true, false)); mat2x3(length(vec3(590.389, 112.641, 783.952))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat4x3 _GLF_SWITCH_0_97v[54], _GLF_SWITCH_0_98v;
           if(_GLF_DEAD(false))
            break;
           vec4 _GLF_SWITCH_0_99v[88];
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           {
            if(_GLF_DEAD(false))
             barrier();
            vec2 _GLF_SWITCH_0_100v;
            mat4x3 _GLF_SWITCH_0_101v, _GLF_SWITCH_0_102v;
            mat4 _GLF_SWITCH_0_103v[91], _GLF_SWITCH_0_104v, _GLF_SWITCH_0_105v;
            if(_GLF_DEAD(false))
             barrier();
            _GLF_struct_44 _GLF_struct_replacement_44;
            ;
            if(_GLF_DEAD(false))
             {
              do
               {
                return;
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            if(_GLF_DEAD(false))
             return;
            ;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
           }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   return;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             continue;
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
               if(_GLF_DEAD(false))
                break;
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             mat4x2(3.6, 7283.3201, 50.22, 695.847, -6425.1495, 15.40, -2.0, -4.3);
            }
           while(_GLF_WRAPPED_LOOP(false));
           injectionSwitch;
          }
         if(_GLF_DEAD(false))
          barrier();
         while(false)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(true)
            {
             subgroup_size;
             -66407;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             ivec4 _GLF_SWITCH_0_107v;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
              }
            }
           {
            if(_GLF_DEAD(false))
             barrier();
            mat2x3 _GLF_SWITCH_0_108v, _GLF_SWITCH_0_109v;
           }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           for(_GLF_struct_83 _GLF_struct_replacement_83 = _GLF_struct_83(uvec3(1u), _GLF_struct_82(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ivec3(1), ivec4(1))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_83._f1._injected_loop_counter != 0); _GLF_struct_replacement_83._f1._injected_loop_counter --)
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       continue;
                      }
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               _GLF_SWITCH_0_1v;
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             bool _GLF_SWITCH_0_110v[97];
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           mat2 _GLF_SWITCH_0_111v, _GLF_SWITCH_0_112v, _GLF_SWITCH_0_113v[31];
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               ((ivec4(10212, -26324, -16205, -78355) | -29032) + min(ivec4(22304, 28493, 7688, -26602), 83015));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
           ivec4 _GLF_SWITCH_0_114v, _GLF_SWITCH_0_115v, _GLF_SWITCH_0_116v;
           for(           outerProduct(vec2(-54.77, 2.7), vec4(70.97, 1.8, -6147.6529, -35.05));
 (-74262 < 17402); lessThanEqual(ldexp(vec3(-7.7, 4.8, -2.5), ivec3(-88638, -92351, -44629)), vec3(-61.17, 3.8, -672.705)))
            {
             mat2(-25.45, 952.129, 9816.6041, 9.1);
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(           mat2x3(979.899, -1.2, -8556.6738, -7.0, -8159.5767, 8.6);
 true; bvec2(false, true))
            {
             mat4x3(-3.9, 893.844, 92.95, -0.1, 8.6, 24.08, -4.0, 47.45, 279.295, 594.852, 7.4, 6264.7060);
             vec3(-549.685, -9.7, 282.014);
             vec4 _GLF_SWITCH_0_117v[85], _GLF_SWITCH_0_118v[23];
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               do
                {
                 ;
                 if(_GLF_DEAD(false))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              break;
             (_GLF_SWITCH_0_111v / _GLF_SWITCH_0_112v);
             mat4x3 _GLF_SWITCH_0_119v, _GLF_SWITCH_0_120v;
             ivec3 _GLF_SWITCH_0_121v, _GLF_SWITCH_0_122v, _GLF_SWITCH_0_123v[1];
             ;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         ;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         {
          mat3x4((mat4x3(1.5, -947.385, 7.7, -3.1, 4.7, 8709.6484, 2.2, 5816.3734, 78.04, -64.65, 38.88, -232.165) - smoothstep(-12.56, 118.003, 5.1)));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             {
              do
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(false))
               barrier();
             }
            barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
          ivec3 _GLF_SWITCH_0_124v;
          for(bvec3 _GLF_SWITCH_0_125v, _GLF_SWITCH_0_126v[14], _GLF_SWITCH_0_127v; (196467u != subgroup_size); uvec4(195792u, 89168u, 69424u, 41761u))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            (4.7 / mat3x2(-644.909, -7.2, -4.3, 78.72, -7.5, -9.4));
            do
             {
              (+ mat3x4(2.2, -692.412, -3.3, -944.000, -7.1, 0.6, -9660.3256, -9308.8021, -0.2, 0.9, 6802.6637, -6.9));
             }
            while(_GLF_WRAPPED_LOOP(false));
            float _GLF_SWITCH_0_128v;
            ivec2 _GLF_SWITCH_0_129v, _GLF_SWITCH_0_130v[85];
            if(_GLF_DEAD(false))
             break;
            uint _GLF_SWITCH_0_131v[82], _GLF_SWITCH_0_132v[37], _GLF_SWITCH_0_133v;
            mat2x4(-5.0, -898.768, 95.63, 21.87, 258.115, -3862.5458, -587.388, -3085.4241);
            if(_GLF_DEAD(false))
             barrier();
            ivec4 _GLF_SWITCH_0_134v, _GLF_SWITCH_0_135v;
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             continue;
           }
          mat4x3 _GLF_SWITCH_0_136v, _GLF_SWITCH_0_137v[62];
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                return;
               }
              else
               {
               }
             }
            continue;
           }
          if(false)
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                break;
               }
              barrier();
             }
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                barrier();
               }
              else
               {
               }
             }
            mat2x4(-455.192, -636.216, 9.6, -1915.2774, 2.5, 1.8, 5183.4832, 61.86);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              for(int _injected_loop_counter = (0 ^ (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                if(_GLF_DEAD(false))
                 continue;
                do
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               }
              if(_GLF_DEAD(false))
               return;
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
               }
             }
            vec3(613.023, -700.903, 7350.9462);
            ;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
            mat3 _GLF_SWITCH_0_138v, _GLF_SWITCH_0_139v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               continue;
              barrier();
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
             {
             }
            else
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              continue;
             }
           }
          else
           {
            (- vec3(-7.0, 948.053, -492.099));
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true))))))))))
                 return;
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
             }
            ((subgroup_size >> (20791u << subgroup_size)) * uvec4(121427u, 38918u, 96336u, 196625u));
            (78970u / uvec3(91459u, 26097u, 90672u));
            if(_GLF_DEAD(false))
             barrier();
            mat2x3 _GLF_SWITCH_0_140v, _GLF_SWITCH_0_141v, _GLF_SWITCH_0_142v;
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          do
           {
            (_GLF_SWITCH_0_124v == abs(_GLF_SWITCH_0_124v));
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
              do
               {
                return;
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            (820.319 + mat2x4(-90.30, -7.3, -963.909, -61.47, -431.166, -9.7, 2761.9117, -3.7));
           }
          while((true || (ivec3(-44617, 79605, -4414) == ivec3(-2302, -19722, -62239))));
          if(_GLF_DEAD(false))
           return;
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))
               {
                return;
               }
              else
               {
               }
             }
            if(_GLF_DEAD(false))
             break;
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          bvec2(false, true);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          do
           {
            for(bvec4 _GLF_SWITCH_0_143v, _GLF_SWITCH_0_144v[37], _GLF_SWITCH_0_145v[59]; (-9.6 < -878.617); uvec2(1112u, 112045u))
             {
              mat4(9.4, 29.69, 8339.7647, -113.902, -41.55, -9.2, 5.8, 43.25, -572.518, 9717.1588, 151.578, -1252.6712, -2156.3797, 179.698, -184.458, 8.4);
             }
           }
          while(_GLF_WRAPPED_LOOP(false));
          bvec2 _GLF_SWITCH_0_146v, _GLF_SWITCH_0_147v, _GLF_SWITCH_0_148v[88];
         }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       default:
       1;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_51 _GLF_struct_replacement_51 = _GLF_struct_51(mat3x4(1.0), gl_WorkGroupSize.x, vec2(1.0), vec2(1.0), mat3x2(1.0), _GLF_struct_49(_GLF_struct_45(1.0, mat2x4(1.0), mat3x2(1.0), mat3x4(1.0), bvec4(true)), 1u, _GLF_struct_46(mat3x2(1.0), mat2x4(1.0), vec3(1.0), bvec2(true)), _GLF_struct_47(mat3x4(1.0), bvec3(true), true, ivec4(1), ivec3(1), true), _GLF_struct_48(mat3x2(1.0), mat3x2(1.0), bvec3(true), mat2x3(1.0), mat2x3(1.0), mat3x2(1.0), vec2(1.0))), _GLF_struct_50(true, mat2x3(1.0), mat2x4(1.0), uvec4(1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     break;
    }
   switch(_GLF_SWITCH(0))
    {
     case 98:
     mat3x2(7763.7594, -8.8, 2.3, -53.41, -0.3, -3.6);
     case 0:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      break;
     case 21:
     case 55:
     if(_GLF_DEAD(false))
      return;
     case 30:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     case 49:
     case 53:
     if(_GLF_DEAD(false))
      barrier();
     case 62:
     case 95:
     if(_GLF_DEAD(false))
      break;
     case 96:
     case 48:
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       switch(_GLF_SWITCH(0))
        {
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         break;
         case 22:
         for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               do
                {
                 for(mat2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v; (0.3 > 2188.1441); mat4(558.097, 7.9, -77.42, 106.498, 196.593, 5.2, 0.3, 2.6, 3.0, 236.727, 5.4, -60.29, -9.5, 2.7, 8.6, -47.58))
                  {
                   ivec2 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    barrier();
                   bool _GLF_SWITCH_1_5v;
                   vec4(693.101, -0.3, 6.8, 37.20);
                   mat2x3(-8330.5122, -1.1, -7.1, 5139.2196, -551.465, -36.32);
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                   _GLF_struct_70 _GLF_struct_replacement_70;
                   if(_GLF_DEAD(false))
                    barrier();
                   mat3x2(-1.7, -4.1, -6597.1927, 903.030, 79.68, -7419.9783);
                   uvec4(uvec2(150376u, 78313u), _GLF_struct_replacement_51.workgroup_size, atomicAdd(_GLF_struct_replacement_51.workgroup_size, subgroup_size));
                   mat3x4 _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v[31];
                   uvec2 _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))
                barrier();
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (int(4)))))); _injected_loop_counter --)
                {
                 ivec3(-25439, -83204, -81464);
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               (mat4(-37.03, 2.7, 4.2, 33.83, -5572.8357, -0.2, 993.933, 0.4, 555.679, 289.417, -279.701, 5.6, -5.9, -3.6, 9.9, -199.791) * mat3x4(57.89, -7.7, -2.3, 8.9, -3787.9183, 3.5, 90.07, 7.7, 175.023, -6.2, 3057.2302, 88.50));
               {
                bvec4 _GLF_SWITCH_1_12v[94];
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                ;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 break;
                lessThan(vec3(0.9, 11.71, -0.3), vec3(-32.71, 5.5, -71.01)).pp;
                bvec2 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v, _GLF_SWITCH_1_15v;
                if(_GLF_DEAD(false))
                 barrier();
                uvec3(11371u, 138766u, 190780u);
                uvec2(147076u, 68200u);
                int _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v[18], _GLF_SWITCH_1_18v;
               }
              }
             while((9822u == packSnorm4x8(vec4(-538.814, -854.540, -5483.9743, 51.73))));
             if(_GLF_DEAD(false))
              barrier();
             bvec4(true, false, true, true);
             injectionSwitch;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             (mat3x2(-41.79, 1.6, 0.8, 7.6, -6.1, -9594.6576) / mat3x2(508.387, 3251.0780, 8857.9666, 9.4, 4.7, 38.50));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         default:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           1;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false)))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     break;
     case 19:
     for(ivec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[36]; bool(subgroup_size); bvec3(true, false, false))
      {
       if(bvec2(false, false).s)
        {
         while(false)
          {
           mat2(213.659, 4119.9821, -2541.3624, 65.87);
          }
         for(_GLF_struct_85 _GLF_struct_replacement_85 = _GLF_struct_85(mat3(1.0), _GLF_struct_84(int(_GLF_ONE(1.0, injectionSwitch.y)), uvec3(1u))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_85._f1._injected_loop_counter > (0 ^ 0)); _GLF_struct_replacement_85._f1._injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           do
            {
             bvec3 _GLF_SWITCH_2_3v;
             vec4 _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              return;
             uvec4 _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v;
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 mat3(-315.220, 1735.7917, -5937.6840, 5.7, -301.968, 0.8, 47.46, 5404.3149, 42.76);
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             _GLF_SWITCH_2_7v;
             if(_GLF_DEAD(false))
              barrier();
             normalize(injectionSwitch[1]);
             ivec2 _GLF_SWITCH_2_8v, _GLF_SWITCH_2_9v, _GLF_SWITCH_2_10v[44];
            }
           while(true);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
          }
         if((ivec4(57194, 41025, 52654, 63709) != ivec4(-25562, 72352, 58492, -29438)))
          {
           ivec4 _GLF_SWITCH_2_11v, _GLF_SWITCH_2_12v[3];
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
            barrier();
           cos(vec4(287.816, 229.011, -138.435, 8.8));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           mat4(3.2, 2667.9492, 3630.0841, -2.2, -2170.0631, 66.23, 60.93, 4882.0894, 60.67, 1.9, -6.1, 1.9, 4320.0190, 8.0, 3.9, -1639.3524);
           (mat3x2(-6.4, -4.5, 631.103, -7.5, -95.55, 5.7) / mat3x2(mat2x3(-7538.4239, -45.38, -565.421, 386.454, -2.9, 19.95)));
           if(_GLF_DEAD(false))
            barrier();
           ivec2 _GLF_SWITCH_2_13v[7], _GLF_SWITCH_2_14v;
           (bvec2(true, false));
           greaterThan(vec4(-406.439, 3623.9711, 8.4, 1.7), vec4(-2093.1662, -23.77, -9.1, 5.3));
           if(_GLF_DEAD(false))
            barrier();
          }
         exp(vec2(16.25, -14.77));
         if(_GLF_DEAD(false))
          break;
         581;
         mat2x4(90.10, 977.751, -23.38, 215.144, 70.65, -902.079, -7636.0914, 42.09);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         {
          if(_GLF_DEAD(false))
           barrier();
          bool _GLF_SWITCH_2_15v, _GLF_SWITCH_2_16v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            continue;
           }
          mat2(-83.41, 1.9, 6.8, 48.57);
          ;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          ;
          ((uvec2(112328u, 67730u) >> uvec2(136917u, 157113u)) == uvec3(169844u, 69993u, 127235u).pp);
          ivec4 _GLF_SWITCH_2_17v, _GLF_SWITCH_2_18v, _GLF_SWITCH_2_19v[89];
          mat3x4(617.353, 6.4, -3.4, 9.4, -56.23, -18.76, -5.6, -9.6, -7287.9448, -5922.2929, -7.9, -456.227);
         }
         if(true)
          {
           if(_GLF_DEAD(false))
            continue;
           bool _GLF_SWITCH_2_20v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
            barrier();
           bvec2 _GLF_SWITCH_2_21v, _GLF_SWITCH_2_22v[54], _GLF_SWITCH_2_23v;
           ((- mat4x3(-2273.0715, -6025.0605, -2.6, -7809.3629, 4.7, 7.8, -2078.3020, -86.87, 301.208, -617.729, -3.0, -6.6)) * (152.882 / mat4(-912.782, 7831.5315, 1184.5211, 930.584, 72.54, -4.1, -1.6, 3583.8687, 6.7, -9.6, 1.7, 5.1, -4284.2486, 4.2, 755.151, 28.24)));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           mat3(-5.6, 994.443, 5107.4205, 942.683, -61.97, -947.948, -32.79, -1.1, 9552.0297);
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             mat3x4(-536.357, 3.4, -16.59, -63.80, -39.44, -2.5, -879.442, -284.598, -4638.9791, -1.5, 5.9, -44.06);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           ;
          }
         else
          {
           -74099;
           (53228 & clamp(-39663, -15067, 72617));
           (uvec4(63255u, 115594u, 17452u, 32228u) % (subgroup_size >> subgroup_local_id));
           vec4(-0.1, 6888.4800, 9.4, 5.0);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
          }
         -6056;
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         ivec2 _GLF_SWITCH_2_24v, _GLF_SWITCH_2_25v;
         {
          vec3 _GLF_SWITCH_2_26v, _GLF_SWITCH_2_27v;
          mat3x2 _GLF_SWITCH_2_28v, _GLF_SWITCH_2_29v, _GLF_SWITCH_2_30v;
          mat4x3 _GLF_SWITCH_2_31v[41], _GLF_SWITCH_2_32v;
          _GLF_SWITCH_2_0v;
          if(_GLF_DEAD(false))
           barrier();
          bool _GLF_SWITCH_2_33v, _GLF_SWITCH_2_34v;
          (5.2 < 108.803);
          do
           {
            true;
            if(_GLF_DEAD(false))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(false));
          if(_GLF_DEAD(false))
           barrier();
         }
        }
       {
        if(true)
         {
          ;
          uvec2 _GLF_SWITCH_2_35v[14], _GLF_SWITCH_2_36v[38], _GLF_SWITCH_2_37v;
         }
       }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
          }
         while((-13757 != (-70640 ^ -41247)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           asin(vec2(1449.1609, -99.80));
           (injectionSwitch - 73.11);
           {
            do
             {
              -43147;
             }
            while(_GLF_WRAPPED_LOOP(false));
            ivec2 _GLF_SWITCH_2_38v, _GLF_SWITCH_2_39v, _GLF_SWITCH_2_40v;
            _GLF_struct_90 _GLF_struct_replacement_90;
            for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
             {
              9.7;
             }
            mat3(-0.8, 429.706, acosh(-4562.4671), 9.5, 971.955, -1639.4006, float(num_workgroup), float(mix(-60174, 95084, false)), degrees(-1321.0057));
            mat4x2 _GLF_SWITCH_2_42v[80], _GLF_SWITCH_2_43v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            vec2 _GLF_SWITCH_2_44v[59], _GLF_SWITCH_2_45v, _GLF_SWITCH_2_46v[55];
            bvec2 _GLF_SWITCH_2_47v[25];
            do
             {
              if(_GLF_DEAD(false))
               return;
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
             barrier();
            mat3x2(-6.8, 3085.6142, 1.1, 34.82, 94.66, 46.17);
           }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         while(false)
          {
           mat3 _GLF_SWITCH_2_48v[70];
          }
         int _GLF_SWITCH_2_49v;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             mat2x3(1734.2587, -898.657, -45.52, -4.6, -0.6, 7248.9705);
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         do
          {
           ;
          }
         while(true);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           ;
           uvec2 _GLF_SWITCH_2_50v[53], _GLF_SWITCH_2_51v[27], _GLF_SWITCH_2_52v[77];
           if(_GLF_DEAD(false))
            barrier();
           mat3x2(-8.9, 728.081, -204.973, -464.943, -4.4, 818.567);
           ;
           _GLF_SWITCH_2_0v;
           (59704 % _GLF_SWITCH_2_49v);
           ivec3 _GLF_SWITCH_2_53v[44], _GLF_SWITCH_2_54v[68];
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             (mat2x4(32.32, 1.6, -342.288, -7481.8786, 4693.2517, 53.01, 5.9, 64.14) , ivec4(73358, 45161, -85103, 10903));
             if(_GLF_DEAD(false))
              break;
            }
           mat4 _GLF_SWITCH_2_55v[40], _GLF_SWITCH_2_56v, _GLF_SWITCH_2_57v[98];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(false);
         for(mat2x3 _GLF_SWITCH_2_58v, _GLF_SWITCH_2_59v; true; vec2(-3.1, -180.641))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           ;
          }
        }
       while(true);
       ;
       mat3 _GLF_SWITCH_2_60v[78];
       ;
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(false)
          {
           mat3x2(mat4x2(4.6, -2150.8185, 63.28, -72.62, -4097.5555, 7.3, -2.8, 574.890));
           for(mat2x4 _GLF_SWITCH_2_61v, _GLF_SWITCH_2_62v; (bvec4(false, true, false, false) == equal(floatBitsToUint(vec4(-51.58, -21.14, 5644.4529, -2169.7678)), uvec4(11492u, 26773u, 15760u, 134615u))); bvec2(false, true))
            {
             if(_GLF_DEAD(false))
              continue;
            }
           for(mat4 _GLF_SWITCH_2_63v[45], _GLF_SWITCH_2_64v, _GLF_SWITCH_2_65v; true; mat3x4(-44.18, 9.7, -8.2, 6014.9821, 238.939, -0.7, 8.2, 13.27, 1491.6372, 3282.6884, 97.72, 536.052))
            {
            }
           ;
           ;
           bvec2 _GLF_SWITCH_2_66v, _GLF_SWITCH_2_67v[75], _GLF_SWITCH_2_68v;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     1;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     break;
    }
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = _GLF_struct_replacement_51.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_0.subgroup_id * subgroup_size + subgroup_local_id;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(mat2(1.0), _GLF_struct_4(_GLF_struct_1(mat2(1.0), true, uvec3(1u), mat2x3(1.0)), _GLF_struct_2(mat2x4(1.0), mat3x2(1.0), 1, ivec2(1), bvec3(true), mat4x2(1.0), workgroup_base + _GLF_struct_replacement_0.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), vec3(1.0), _GLF_struct_3(mat4x2(1.0), 1u, ivec4(1), mat4(1.0), mat4x2(1.0), bvec3(true), mat4x2(1.0)), mat2(1.0)), _GLF_struct_6(1.0, _GLF_struct_5(1, mat2x3(1.0), mat4x2(1.0), uvec3(1u))), _GLF_struct_8(_GLF_struct_7(ivec4(1), 1, 1u, bvec4(true)), 1.0, mat4x2(1.0)), bvec2(true), _GLF_struct_12(_GLF_struct_9(bvec2(true), 1, mat3(1.0)), _GLF_struct_10(1u, mat3x4(1.0), vec4(1.0)), _GLF_struct_11(mat4x3(1.0))));
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[_GLF_struct_replacement_13._f1._f1.next_virtual_gid], uint(2), 4, 64, 4);
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(0))
      {
       case 98:
       if(_GLF_DEAD(false))
        return;
       mat3x4 _GLF_SWITCH_2_0v;
       case 18:
       vec2(-191.750, 3.8);
       case 0:
       case 88:
       case 39:
       case 26:
       case 66:
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
                return;
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         else
          {
          }
        }
       break;
       if(_GLF_DEAD(false))
        barrier();
       case 48:
       uvec4 _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
       if(_GLF_DEAD(false))
        barrier();
       default:
       1;
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     return;
    }
   atomicStore(buf[_GLF_struct_replacement_13._f1._f1.next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
