#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)), bvec2(bvec2(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(vec2(-2688.1695, -8.3)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x)) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 1.0, 1.0, 1.0, cos(0.0), 0.0, exp(0.0), cos(0.0))))).x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(7.3, 4.0).s)), vec2(_GLF_FUZZED(-888.697), (injectionSwitch)[1]), bvec2(false, true))).y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true)))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID), clamp(_GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID), (((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID)) | (((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), (false ? _GLF_FUZZED(uvec3(169246u, 124085u, 1281u)) : _GLF_IDENTITY(uvec3(0u), clamp(uvec3(0u), uvec3(0u), uvec3(0u))))), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID))))[0], (true ? _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID), clamp(_GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID), (((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID)) | (((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), (false ? _GLF_FUZZED(uvec3(169246u, 124085u, 1281u)) : _GLF_IDENTITY(uvec3(0u), clamp(uvec3(0u), uvec3(0u), uvec3(0u))))), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupID))))[0] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u))) | (workgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u))) | (workgroup_id)), min(_GLF_IDENTITY(workgroup_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u))) | (workgroup_id)), _GLF_IDENTITY(workgroup_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u))) | (workgroup_id)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u)), 0u, 0u)))) | (workgroup_id))), 0u ^ ((_GLF_IDENTITY(workgroup_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u)), 0u, 0u)))) | (workgroup_id))))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))) : _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) / _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(atomicCompSwap(workgroup_id, subgroup_size, subgroup_local_id)) : workgroup_id))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))) / 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) / 1u), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))) && true) ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup))) : _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))))))), workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(true && (false)), ! (! (bool(true && (false))))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(bool(true && (false)), ! (! (bool(true && (false))))), false)), true)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 _GLF_IDENTITY(buf[virtual_gid] = 1, 0u ^ _GLF_IDENTITY((buf[virtual_gid] = 1), (false ? _GLF_FUZZED(virtual_gid) : (buf[virtual_gid] = 1))));
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(int(64)))) / 1))), _GLF_IDENTITY(64, clamp(64, 64, 64)), 64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) || false)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec2(bool(bvec4(false, true, true, true)), false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))))))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, true, true)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, true, true)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), true, false))))), (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, true, true)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), true, false)))))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, true, true)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), true, false))))), (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, true, true)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), true, false)))))) && true)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, true, true)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), true, false))))), (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, true, true)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(false, true, true, true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec4(false, true, true, true)), false))))), false, false)))), true, false)))))) && true))) || false))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))))), true, false, true))))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false)))))))))))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7497.6771), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5173.8326)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y, length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7497.6771), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5173.8326)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y)))), true, false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))), ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false))))))) || false)) || false))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))) && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false)))))))))))) || false)) && true))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))), false, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), false)))) || false))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), false)))) || false))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), false)))) || false))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), false)))) || false))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false))))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false)))))))))))) || false)))))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false)))))))))))) || false))))))), (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), bool(bool(false))), true, true, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), bool(bool(false))), true, true, false)))))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false))), (! (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false)))) || false)))), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false)))))))))))) || false)))))))) && true)))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9786.9836), _GLF_FUZZED(-7327.5130)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) : _GLF_FUZZED(injectionSwitch))))).y)), true, false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), false)))) || false))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), false)))) || false))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), false)))) || false))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), false)))) || false))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false))))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false)))))))))))) || false)))))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false)))))))))))) || false))))))), (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), bool(bool(false))), true, true, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), bool(bool(false))), true, true, false)))))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false))), (! (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false)))) || false)))), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false)))))))))))) || false)))))))) && true)))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9786.9836), _GLF_FUZZED(-7327.5130)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) : _GLF_FUZZED(injectionSwitch))))).y)), true, false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), false)))) || false))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), false)))) || false))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), false)))) || false))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), false)))) || false))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), true, false)))))))))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false))))))))))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false)))))))))))) || false)))))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false)))))))))))) || false))))))), (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), bool(bool(false))), true, true, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), bool(bool(false))), true, true, false)))))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false))), (! (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, false)))) || false)))), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false))))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true, false)))))))))))) || false)))))))) && true)))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9786.9836), _GLF_FUZZED(-7327.5130)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) : _GLF_FUZZED(injectionSwitch))))).y)), true, false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y)) * (2))), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
