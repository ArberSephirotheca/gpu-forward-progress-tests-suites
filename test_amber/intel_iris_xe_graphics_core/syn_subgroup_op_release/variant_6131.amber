#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0)), 1.0 * (float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0))))), injectionSwitch.y, injectionSwitch.y))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((0 ^ 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), int(6))), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(6), int(6))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(int(6), int(6))), min((_GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(int(6), int(6))))) : _GLF_FUZZED(_injected_loop_counter))), min(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(6), int(6))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(int(6), int(6))), min((_GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(int(6), int(6))))) : _GLF_FUZZED(_injected_loop_counter))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(6), int(6))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(int(6), int(6))), min((_GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(int(6), int(6))))) : _GLF_FUZZED(_injected_loop_counter))))), min(0 ^ (_GLF_IDENTITY(int(6), int(6))), 0 ^ (_GLF_IDENTITY(int(6), int(6)))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec2(1, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))));
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(round(injectionSwitch))))) - vec2(0.0, 0.0)).y))), false)))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                }
              }
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-858.698)), float(injectionSwitch.y), bool(true)))) / 1.0)))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, false || (false))))) && true)))))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! (false)))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) != _GLF_IDENTITY(((0 ^ 0) << _GLF_IDENTITY(int(0), int(0))), ~ (~ (((0 ^ 0) << _GLF_IDENTITY(int(0), int(0))))))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(7763.4754), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-6275.4872, (true ? -6275.4872 : _GLF_FUZZED(682.865)))), min(_GLF_FUZZED(_GLF_IDENTITY(-6275.4872, (true ? -6275.4872 : _GLF_FUZZED(682.865)))), _GLF_FUZZED(_GLF_IDENTITY(-6275.4872, (true ? -6275.4872 : _GLF_FUZZED(682.865)))))), (_GLF_FUZZED(_GLF_IDENTITY(-6275.4872, (true ? -6275.4872 : _GLF_FUZZED(682.865))))) - 0.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0))))), 0))], max(_GLF_IDENTITY((injectionSwitch), min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(4.8), _GLF_FUZZED(-40.64)), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))))), (injectionSwitch)))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0])), 0.0, 0.0, 0.0))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-5.9)))), bvec2(true, true))).y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), determinant(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(86.88))), mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(86.88)))), float(_GLF_FUZZED(4.3)), bool(false))), tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), float(float((0.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0))))), 1.0, 0.0, 1.0)))))))))
              {
              }
             else
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 ^ 0), min((0 ^ _GLF_IDENTITY(0, (0) ^ 0)), (0 ^ 0)))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(false))))))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) || false)); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9705.5994), _GLF_FUZZED(-81.71)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))) && true, bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))) && true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                  barrier();
                 barrier();
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + (0 << _GLF_IDENTITY(int(6), int(6)))))) > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true, true, false))))))
              barrier();
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, sqrt(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), (float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) / 1.0))), vec3(tan(0.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(tan(0.0), 0.0, 1.0))), _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(0.0, 0.0)))), 1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))) * uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), uint(uvec2(1u * (gl_NumWorkGroups.x), 1u))))))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id)))), 1u))) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), uint(uvec2(1u * (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(197309u, 47261u, 7223u)))).x), 1u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u) * (gl_NumWorkGroups.x), uint(uvec2(1u * (gl_NumWorkGroups.x), 1u))))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u) * (gl_NumWorkGroups.x), uint(uvec2(1u * (gl_NumWorkGroups.x), 1u))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), min(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), ~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))))) * (gl_NumWorkGroups.x), uint(uvec2(1u * (gl_NumWorkGroups.x), 1u)))))))) | ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), uint(uvec2(1u * (gl_NumWorkGroups.x), 1u)))))))), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), uint(uvec2(1u * (gl_NumWorkGroups.x), 1u)))))), (false ? _GLF_FUZZED(9422u) : _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), uint(uvec2(1u * (gl_NumWorkGroups.x), 1u)))))))))) | ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), uint(uvec2(1u * (gl_NumWorkGroups.x), 1u))), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), uint(uvec2(1u * (gl_NumWorkGroups.x), 1u)))) << 0u)))))) : _GLF_FUZZED((~ atomicOr(subgroup_local_id, subgroup_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), uint(uvec2(1u * (gl_NumWorkGroups.x), 1u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), uint(uvec2(1u * (gl_NumWorkGroups.x), 1u)))))))) | ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), uint(uvec2(1u * (gl_NumWorkGroups.x), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED((subgroup_size --)))))))))))))) ^ (1u ^ 1u)))), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))) | (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? ~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), (true ? ~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) >> 0u)), ((true ? ~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), max(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (_GLF_IDENTITY(true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id), 0u | (_GLF_IDENTITY(true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id), 0u ^ (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))))))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (1u * (gl_NumWorkGroups.x)) ^ 0u)) | (1u * (gl_NumWorkGroups.x)))))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), (false ? _GLF_FUZZED(subgroup_local_id) : (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u)))))))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), 0u | ((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u)))))))) << 0u)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))), clamp((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), (false ? _GLF_FUZZED(subgroup_local_id) : (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u)))))))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), 0u | ((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u)))))))) << 0u)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), (false ? _GLF_FUZZED(subgroup_local_id) : (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u)))))))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), 0u | ((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u)))))))) << 0u)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), (false ? _GLF_FUZZED(subgroup_local_id) : (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u)))))))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u))))), 0u | ((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), min(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x)))) * 1u)))))))) << 0u)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))), uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))), 1u, 0u))), 1u, 0u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))), uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))), 1u, 0u))), 1u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_size))) : _GLF_FUZZED(subgroup_id))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : gl_NumWorkGroups.x))) ^ 0u), 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), 0u + (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), (_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), ~ (~ (1u * (gl_NumWorkGroups.x))))) - 0u)))))))) : _GLF_FUZZED(subgroup_id))) + 0u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u), 1u)))))), 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))))))) << (0u ^ 0u)) : _GLF_FUZZED(subgroup_id))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))), min(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))))))) ^ 0u), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size))), gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(1u, (1u) | 0u) * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(floatBitsToUint(-2402.3217)) : gl_NumWorkGroups.x)))))))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec4(gl_NumWorkGroups.x, 1u, 0u, 1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (gl_NumWorkGroups.x)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x))))), clamp((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x)))))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))), clamp((_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (gl_NumWorkGroups.x)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x))))), clamp((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x)))))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (gl_NumWorkGroups.x)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x))))), clamp((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x)))))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (gl_NumWorkGroups.x)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x))))), clamp((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, ~ (~ (1u))) * (gl_NumWorkGroups.x)))))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u)))))))))) - 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)).x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (_GLF_IDENTITY(true, false || (true)) ? ~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))))))) - 0u) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), uint(uvec4((gl_NumWorkGroups.x), 1u, (1u & 1u), 1u)))) << 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u))), (_GLF_IDENTITY(true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u))), ~ (~ (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u))))))) | (_GLF_IDENTITY(true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u)))) >> 0u)))), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_FUZZED(subgroup_id))))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), 0u ^ (_GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))))))) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY(true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))))) : _GLF_FUZZED(subgroup_id), (true ? true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))))) : _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(subgroup_size)))), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)), uint(_GLF_IDENTITY(uvec4(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)), 0u, 0u, 0u), (uvec4(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)), 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u)))))))) : _GLF_FUZZED(subgroup_id))) + 0u))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], uint(uvec3(gl_NumWorkGroups[1], 1u, 0u))), gl_NumWorkGroups[2])).x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size))), 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), gl_NumWorkGroups.x)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (_GLF_IDENTITY(true, (true) || false) ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(120512u, 171706u, 71919u)) : uvec3(uvec3(gl_NumWorkGroups))))))).x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u, max(((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u, ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) >> 0u))) + 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u))), (1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))) + 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))) | 0u))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (true ? uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u) : _GLF_FUZZED(uvec4(24405u, 128198u, 132576u, 80968u))))))))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id))), 1u * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x)))))), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(subgroup_id)), ((true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(72336u) : subgroup_id))))) + 0u))))))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 1u * (_GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 1u * (_GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec2(gl_NumWorkGroups.x, 1u)))))))))))), (true ? ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * (gl_NumWorkGroups.x), max(_GLF_IDENTITY(1u * (gl_NumWorkGroups.x), clamp(1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x), 1u * (gl_NumWorkGroups.x))), 1u * (gl_NumWorkGroups.x)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))))))))))) ^ 0u)) + _GLF_IDENTITY(0u, 1u * (0u)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false)))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))), true, false)), bool(bool(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((563.984))), float(injectionSwitch[1]), bool(true))))).y), false, true, false)))), true, false))))))))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) ? ~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 1u, 0u, 1u))))))))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) ? ~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(true, false || (true)) ? workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 0u)) : _GLF_FUZZED(workgroup_size)))))) | (workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2308.7062), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-12.56)), bvec2(true, false))).x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)) ? ~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))) + 0u)) : _GLF_FUZZED(workgroup_size)))))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(true, ! (! (true))), true, false))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (_GLF_IDENTITY(bool(bvec4(true, false, true, true)), bool(bool(bool(bvec4(true, false, true, true)))))) && true)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0)))), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0)))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0)))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0))))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size)))) | ((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) << 0)))) % subgroup_size)));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, true)))), false)))))))), (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           else
            {
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   _GLF_IDENTITY(buf[virtual_gid] = 1, 0u | (buf[virtual_gid] = 1));
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))
  {
   for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(-64227) : int(2))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(subgroup_local_id + 1 < subgroup_size)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          barrier();
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), uint(uvec2(uint(2), 1u))), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(int(_GLF_IDENTITY(64, int(ivec2(64, int(_GLF_ONE(1.0, injectionSwitch.y)))))), (int(64)) - 0))), 4);
         do
          {
           subgroupAll(_GLF_IDENTITY(false, (false) && true));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec4(int(2), 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), int(2)))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(int(_GLF_IDENTITY(int(2), int(2)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(ivec2(_GLF_IDENTITY(int(2), int(2)), 1))), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1)))) || false); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           subgroupAll(true);
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (87592 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
