#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 float _f0;
} ;

struct _GLF_struct_8 {
 uint _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_7 {
 float _f0;
 int _f1;
} ;

struct _GLF_struct_6 {
 bool _f0;
 vec3 _f1;
 mat2 _f2;
 ivec3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_5 {
 int _f0;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 uvec4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_3 {
 int _f0;
 bool _f1;
 mat2x3 _f2;
 mat2x4 _f3;
 mat4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 int _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_4 {
 float _f0;
 _GLF_struct_2 _f1;
 vec2 _f2;
 bool _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 mat3 _f1;
 mat2x4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 _GLF_struct_0 _f1;
 uint virtual_gid;
 bool _f2;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_10 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true))))))), ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)))))))) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), ! (! _GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false))))))))))) || false))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (((0 >> _GLF_IDENTITY(int(2), int(2))) & -88311) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -9661)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                barrier();
              }
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32567))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(88.49), _GLF_FUZZED(-84.08)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))))) | (gl_WorkGroupSize)).x));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = (51959 & _GLF_IDENTITY(0, clamp(0, 0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(! (_GLF_IDENTITY(false, (false) && true))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(! (_GLF_IDENTITY(false, (false) && true))))))), ! (! (bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(! (_GLF_IDENTITY(false, (false) && true)))))))))), true, true))))))))))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), max(int(1), int(1)))))), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), max(int(1), int(1)))))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), max(int(1), int(1))))))) ^ 0), 0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), max(int(1), int(1)))))))), clamp(0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)))), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), ~ (~ (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1))))))), 0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))))), min(1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), min(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 | (_GLF_IDENTITY(int(1), int(1)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 | (_GLF_IDENTITY(int(1), int(1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 | (_GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 | (_GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 | (_GLF_IDENTITY(int(1), int(1))))))))) >> 0)))))) >> _GLF_IDENTITY(int(1), int(1))))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat4(1.0), _GLF_struct_1(mat4x2(1.0), _GLF_struct_0(uvec4(1u), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5168.9284) : 1.0))), transpose(transpose(mat3(1.0)))), mat2x4(1.0), mat3(1.0)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)) + subgroup_local_id, true), _GLF_struct_4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(505.932)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_struct_2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))), false)))))), ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false))))))))))))), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(859.215)), float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), true && (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.0)), float(1.0), bool(true))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-1051.5157))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 0.0, cos(0.0), 1.0, determinant(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.0)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 0.0, _GLF_IDENTITY(1.0, (1.0) * exp(0.0)))), 1.0 * _GLF_IDENTITY((float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, 1.0), (mat2(0.0, 1.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), float(mat3x4((float(mat2(0.0, 1.0, 0.0, 1.0))), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0)))))), 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(86.64)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(750.902)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, sqrt(abs(1.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec4(float(mat4(1.0, 0.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(9.9) : 1.0)))), determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0))), 0.0, 0.0, 0.0)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0))), 0.0, 0.0, 0.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0))), 0.0, 0.0, 0.0)))))[0], _GLF_FUZZED(4.2)), vec2(_GLF_FUZZED((-2.7 * -72.84)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0))), 0.0, 0.0, 0.0)))))[1], clamp(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0))), 0.0, 0.0, 0.0)))))[1], ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0))), 0.0, 0.0, 0.0)))))[1], ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0))), 0.0, 0.0, 0.0)))))[1]))), bvec2(false, true)))) - vec2(0.0, 0.0)), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))) - 0.0)))), 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)).x), 0.0, 0.0), (mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), 0.0, 0.0, 0.0)))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + abs(length(vec3(0.0, 0.0, 0.0))))) * ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)).x), 0.0, 0.0)) * mat3(1.0)), (mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-219.357))), bool(false))), 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(45.50, 52.80)))), determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0)))), dot(vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-608.125) : 1.0))) + 0.0), 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(280.153)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-219.357))), bool(false))), 0.0), vec3(mat2x4(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-219.357))), bool(false))), 0.0), 0.0, 1.0, 1.0, 0.0, 1.0))), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0)))), dot(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)).x : _GLF_FUZZED(-69.98)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-219.357))), bool(false))), 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.6)), float(0.0), bool(true))), 1.0))), 0.0, 0.0, 0.0)))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0)))), dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(mat2x3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-219.357))), bool(false))), 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, sin(0.0), 0.0, exp(0.0), 0.0, 0.0, 1.0, cos(sin(0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))), 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(false))), (float(_GLF_FUZZED(float(false)))) * cos(0.0)), float(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), bool(true)))), 0.0, 0.0, 0.0)))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0)))), dot(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true)))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)).x : _GLF_FUZZED(-69.98)))))), 0.0, 0.0)) * mat3(1.0))), 0.0, 1.0, 0.0, 1.0, sqrt(abs(1.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, exp(0.0)), (vec4(_GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), min(cos(0.0), _GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0)))) * 1.0))), 1.0, _GLF_IDENTITY(determinant(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), (determinant(mat3(0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0 + (0.0)))), 0.0 + (determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (0.0) / 1.0), exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(-7.7, -62.75, 93.20, -2.3).q) : 0.0)), exp(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(log(-5.4)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(sign(vec4(-6.7, 5293.9200, -526.504, -6.4)[2]))))) - 0.0)) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, _GLF_IDENTITY(-262.346, (false ? _GLF_FUZZED(-0.6) : -262.346)))))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(-5.0))))))))) + 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((3.1 + 2.9))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.2))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.2)))) - sqrt(0.0)), sqrt(abs(1.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(float(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), cos(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(determinant(mat3(0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(mat4(mat2x4(-3.1, -524.720, -1723.0914, 42.27, -6743.5441, 1.6, -3.9, -36.10)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.0)), bool(false)))), float(_GLF_FUZZED((float(-54155)))), bool(false))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), tan(0.0)))))), mix(float(_GLF_FUZZED(2551.0493)), float(determinant(mat3(0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(mat4(mat2x4(-3.1, -524.720, -1723.0914, 42.27, -6743.5441, 1.6, -3.9, -36.10)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), tan(0.0))))))), bool(true)))), max(_GLF_IDENTITY((_GLF_IDENTITY(determinant(mat3(0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(mat4(mat2x4(-3.1, -524.720, -1723.0914, 42.27, -6743.5441, 1.6, -3.9, -36.10)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.0)), bool(false)))), float(_GLF_FUZZED((float(-54155)))), bool(false))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), tan(0.0)))))), mix(float(_GLF_FUZZED(2551.0493)), float(determinant(mat3(0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(mat4(mat2x4(-3.1, -524.720, -1723.0914, 42.27, -6743.5441, 1.6, -3.9, -36.10)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), tan(0.0))))))), bool(true)))), clamp((_GLF_IDENTITY(determinant(mat3(0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(mat4(mat2x4(-3.1, -524.720, -1723.0914, 42.27, -6743.5441, 1.6, -3.9, -36.10)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.0)), bool(false)))), float(_GLF_FUZZED((float(-54155)))), bool(false))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), tan(0.0)))))), mix(float(_GLF_FUZZED(2551.0493)), float(determinant(mat3(0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(mat4(mat2x4(-3.1, -524.720, -1723.0914, 42.27, -6743.5441, 1.6, -3.9, -36.10)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), tan(0.0))))))), bool(true)))), (_GLF_IDENTITY(determinant(mat3(0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(mat4(mat2x4(-3.1, -524.720, -1723.0914, 42.27, -6743.5441, 1.6, -3.9, -36.10)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.0)), bool(false)))), float(_GLF_FUZZED((float(-54155)))), bool(false))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), tan(0.0)))))), mix(float(_GLF_FUZZED(2551.0493)), float(determinant(mat3(0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(mat4(mat2x4(-3.1, -524.720, -1723.0914, 42.27, -6743.5441, 1.6, -3.9, -36.10)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), tan(0.0))))))), bool(true)))), (_GLF_IDENTITY(determinant(mat3(0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(mat4(mat2x4(-3.1, -524.720, -1723.0914, 42.27, -6743.5441, 1.6, -3.9, -36.10)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.0)), bool(false)))), float(_GLF_FUZZED((float(-54155)))), bool(false))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), tan(0.0)))))), mix(float(_GLF_FUZZED(2551.0493)), float(determinant(mat3(0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(mat4(mat2x4(-3.1, -524.720, -1723.0914, 42.27, -6743.5441, 1.6, -3.9, -36.10)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), tan(0.0))))))), bool(true)))))), (_GLF_IDENTITY(determinant(mat3(0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(mat4(mat2x4(-3.1, -524.720, -1723.0914, 42.27, -6743.5441, 1.6, -3.9, -36.10)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.0)), bool(false)))), float(_GLF_FUZZED((float(-54155)))), bool(false))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), tan(0.0)))))), mix(float(_GLF_FUZZED(2551.0493)), float(determinant(mat3(0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), (true ? mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))) : _GLF_FUZZED(mat4(mat2x4(-3.1, -524.720, -1723.0914, 42.27, -6743.5441, 1.6, -3.9, -36.10)))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), tan(0.0))))))), bool(true)))))) + 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED((3.1 + 2.9))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED((3.1 + 2.9))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(mix(float(_GLF_FUZZED((_GLF_IDENTITY(3.1 + 2.9, mix(float(_GLF_FUZZED(-82.81)), float(3.1 + 2.9), bool(true)))))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED((3.1 + 2.9))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED((3.1 + 2.9))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(abs(1.0)), clamp(sqrt(abs(1.0)), sqrt(abs(1.0)), sqrt(abs(1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)), min(float(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(mat2x3(cos(0.0), sqrt(1.0), 0.0, 1.0, 1.0, 1.0)), min(float(mat2x3(cos(0.0), sqrt(1.0), 0.0, 1.0, 1.0, 1.0)), float(mat2x3(cos(0.0), sqrt(1.0), 0.0, 1.0, 1.0, 1.0))))), 1.0, _GLF_IDENTITY(determinant(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), (determinant(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(801.244)), bool(false))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.0)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 0.0))), clamp(exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.0)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 0.0))), exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.0)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 0.0))), exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.0)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 0.0))))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + 0.0)), 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), float(mat3x2(abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))), tan(0.0))), float(mat2x4(float(mat4x2(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(((-540.052 + 4.7) / -854.610)))), 0.0, 1.0, abs(0.0), tan(0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 0.0, determinant(mat4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(length(0.0), (length(0.0)) / exp(0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))))))) + 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((3.1 + 2.9), float(_GLF_IDENTITY(float((3.1 + 2.9)), (true ? float((3.1 + 2.9)) : _GLF_FUZZED(9.6))))), mix(float(_GLF_FUZZED(3.3)), float(_GLF_IDENTITY((3.1 + 2.9), float(_GLF_IDENTITY(float((3.1 + 2.9)), (true ? float((3.1 + 2.9)) : _GLF_FUZZED(9.6)))))), bool(true))))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(abs(1.0), clamp(abs(1.0), _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(83.29) : abs(1.0))), _GLF_IDENTITY(abs(1.0), min(abs(1.0), _GLF_IDENTITY(abs(1.0), 0.0 + (abs(1.0)))))))), 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(float(983u))), float(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0)), _GLF_IDENTITY((determinant(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-5033.9829) : 1.0)), 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(0.9)), mix(float(float(_GLF_FUZZED(0.9))), float(_GLF_FUZZED(-9.1)), bool(false))), bool(false))), 0.0, 1.0, abs(0.0), tan(0.0))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))) ? _GLF_FUZZED(step(-1841.1977, injectionSwitch.t)) : (_GLF_IDENTITY(determinant(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(0.9)), mix(float(float(_GLF_FUZZED(0.9))), float(_GLF_FUZZED(-9.1)), bool(false))), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, abs(0.0), tan(0.0)))))), 0.0 + (determinant(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.94) : 1.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(0.9)), mix(float(float(_GLF_FUZZED(0.9))), float(_GLF_FUZZED(-9.1)), bool(false))), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, abs(0.0), tan(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(true)))))))))))))))))) + 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((3.1 + 2.9))), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), clamp(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))), 1.0, 0.0, 1.0, sqrt(abs(1.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(float(983u))), float(determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bool(true))), mix(float(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(float(983u))), float(determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bool(true)))), float(_GLF_FUZZED(4.5)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), _GLF_IDENTITY((determinant(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(0.9)), mix(float(float(_GLF_FUZZED(0.9))), float(_GLF_FUZZED(-9.1)), bool(false))), bool(false))), 0.0, 1.0, abs(0.0), tan(0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_FUZZED(_GLF_IDENTITY(step(-1841.1977, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).t), (step(-1841.1977, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).t)) * 1.0)) : (determinant(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346))))), mix(float(float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), float(_GLF_FUZZED(-6293.2473)), bool(false)))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2x4(5.3, 4.0, 3.2, -1578.4541, 9.1, -316.791, 2.7, -2.8))))), 0.0 + (float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2x4(5.3, 4.0, 3.2, -1578.4541, 9.1, -316.791, 2.7, -2.8))))))))))), _GLF_IDENTITY(float(_GLF_FUZZED(0.9)), mix(float(float(_GLF_FUZZED(0.9))), float(_GLF_FUZZED(-9.1)), bool(false))), bool(false))), 0.0, 1.0, abs(0.0), tan(0.0))))))))) + 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((3.1 + 2.9))), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4442.5833)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), clamp(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), 1.0, 0.0, 1.0, sqrt(abs(1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(0.0, (0.0) + 0.0))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(determinant(mat3(-63.85, -2349.7725, 616.657, 6.2, -597.563, -7.5, -6664.0203, 3.2, 53.39))) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.4) : float(mat4(1.0, 0.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(0.0, _GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(float(983u))), float(determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(635.203)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), _GLF_IDENTITY((determinant(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(0.9)), mix(float(float(_GLF_FUZZED(0.9))), float(_GLF_FUZZED(_GLF_IDENTITY(-9.1, (-9.1) * 1.0))), bool(false))), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.5)), bool(false))), 1.0, abs(0.0), tan(0.0))))))), (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))) ? _GLF_FUZZED(step(-1841.1977, injectionSwitch.t)) : (determinant(mat3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (0.0)), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, determinant(mat4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(0.9)), mix(float(float(_GLF_FUZZED(0.9))), float(_GLF_FUZZED(-9.1)), bool(false))), bool(false))), 0.0, 1.0, abs(0.0), tan(0.0))))))))) + 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((3.1 + 2.9))), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), clamp(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0))), 1.0)), _GLF_IDENTITY(sqrt(abs(1.0)), (_GLF_IDENTITY(sqrt(abs(1.0)), min(sqrt(abs(1.0)), sqrt(abs(1.0))))) / 1.0), 1.0, 0.0, 1.0, 0.0, 1.0))))) / 1.0))), float(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))), cos(0.0))), 1.0, _GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), (determinant(mat3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) * (0.0)), 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), max(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0))), clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (0.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(989.199)), bool(false))))), 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346))))), mix(float(_GLF_FUZZED(-12.71)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(989.199)), bool(false))))), 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346))))), (float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(989.199)), bool(false))))), 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))) - 0.0)), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(989.199)), bool(false))))), 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346))))), (float(_GLF_IDENTITY(mat2x3(0.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(989.199)), bool(false))))), 1.0), (true ? mat2x3(0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-2.2, 6949.8089, -68.17, -456.125, -583.636, -262.346)))))) - 0.0))) * 1.0), bool(true)))), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(determinant(mat3(1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-17.04))))), max(mat3(1.0) * (vec3(1.0, 1.0, 1.0)), mat3(1.0) * (vec3(1.0, 1.0, 1.0)))))))), 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) - 0.0), 1.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, tan(0.0), 1.0))))), 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.68)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 0.0, abs(0.0), 1.0))))), 0.0, 0.0))) + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, abs(1.0), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0))))), 1.0, 0.0, 1.0, abs(0.0), tan(0.0))))))) + 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((3.1 + 2.9))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, 1.0, sqrt(abs(_GLF_IDENTITY(1.0, float(mat2(1.0, _GLF_IDENTITY(tan(log(1.0)), (tan(log(1.0))) / 1.0), 0.0, 1.0))))), 1.0, 0.0, 1.0, 0.0, 1.0)))), 0.0, 1.0, exp(0.0))) * mat4(1.0)))))), mat2x3(1.0), 1, mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(743.730, -63.65, 1.3).t)), float(1.0), bool(true))))), vec2(1.0), true, _GLF_struct_3(1, _GLF_IDENTITY(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))) && true) && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, bool(bvec2(false, true)))), true, true))))))), mat2x3(1.0), mat2x4(1.0), mat4(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat4x2((1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(float(mat4x2((1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), min(float(mat4x2((1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(mat4x2((1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), 0.0, 0.0, 0.0)))))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat4x2((1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(float(mat4x2((1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), min(float(mat4x2((1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(mat4x2((1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), 0.0, 0.0, 0.0)))))), 1.0 * (_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat4x2((1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(float(mat4x2((1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), min(float(mat4x2((1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(mat4x2((1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), 0.0, 0.0, 0.0)))))))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), sin(length(0.0)), 1.0, 0.0))))), ivec2(1))), _GLF_struct_10(uvec4(1u), uvec4(1u), _GLF_struct_5(1), _GLF_struct_6(true, vec3(1.0), mat2(1.0), ivec3(1), ivec4(1)), _GLF_struct_7(1.0, 1), _GLF_struct_8(1u, mat3x2(1.0)), _GLF_struct_9(1.0)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, false)), true))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bool(true))), false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true, _GLF_IDENTITY(bool(bvec3((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true, true, false)), bool(bvec4(bool(bvec3((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true, true, false)), true, false, true)))))))))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false))) && true))
  {
   buf[_GLF_struct_replacement_11._f1.virtual_gid] = 1;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))))), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1 < subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << 0) < subgroup_size) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), (true ? (~ (4)) : _GLF_FUZZED(32729)))), 4, 4)));
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.7), _GLF_FUZZED(-9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-59139) : 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * 1.0) > injectionSwitch.y)), false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false))))) || _GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, 0 | (2))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true), true, true))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))))))))))), false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), mix(vec2(_GLF_FUZZED(8537.2738), (vec2(injectionSwitch.y, 1.0))[1]), vec2((vec2(injectionSwitch.y, 1.0))[0], _GLF_FUZZED(-37.42)), bvec2(true, false)))))))))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     do
      {
       subgroupAll(true);
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y) || false), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))) || false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, sqrt(1.0))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, true && (false)))) && true), bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, false || (true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))), ! (! ((false))))) && _GLF_IDENTITY(true, false || (true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_IDENTITY(true, false || (true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_IDENTITY(true, false || (true)))), bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_IDENTITY(true, false || (true)))), true, false))))) && true)) || false)) && true), false)))))) || false)))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)), true))))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (! (bool(bvec3(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-246.340), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(931.741)), bvec2(true, false))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
