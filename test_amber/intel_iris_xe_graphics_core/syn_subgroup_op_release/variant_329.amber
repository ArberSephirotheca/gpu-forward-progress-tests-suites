#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))))) || false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0))) > injectionSwitch.y) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) && true)) && true))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((3908.6765 * -64.03))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((-2.1 / 5247.2130))), float(injectionSwitch[1]), bool(true))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((-2.1 / 5247.2130))), float(injectionSwitch[1]), bool(_GLF_IDENTITY(true, (true) && true)))))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((-2.1 / 5247.2130))), float(injectionSwitch[1]), bool(true))))).y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) || false)))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(-6452.3743))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, true), true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool((false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), true && (bool(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(_GLF_IDENTITY(! (false), (! (false)) && true))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (bool(_GLF_IDENTITY(! (false), (! (false)) && true))))))), (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)))))))) || false))))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.8))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-12615), max(_GLF_FUZZED(-12615), _GLF_FUZZED(-12615))) : 0)), 0))], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(1.9)), bool(false))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), true), false)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-98.31)), bool(false))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-63.37, 0.8)))))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.7)), vec2(_GLF_FUZZED(2.3), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.7)), vec2(_GLF_FUZZED(2.3), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.7)), vec2(_GLF_FUZZED(2.3), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[1]), vec2(_GLF_FUZZED((-8271.4516)), _GLF_FUZZED(90.05)), bvec2(false, false)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(4569.8614)), bool(false))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false)), ! (! (bool(bvec2(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)))))))))))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(650.193, 5.9)) : injectionSwitch)).x > injectionSwitch.y)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.3)), float(injectionSwitch.y), bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))))).y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((6628.7191 - -694.089)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.8)), bvec2(true, false))).y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.3)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], max(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-753.381, -4.7, 4822.9350, 7985.5853, 100.599, -830.141, 5979.2452, -130.140, -2.5)) : mat3(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], max(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0))))), _GLF_FUZZED(-2.5)), vec2(_GLF_FUZZED(2.4), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], float(vec4(((injectionSwitch) * mat2(1.0))[1], 0.0, 1.0, 1.0)))), bvec2(false, true)))), injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(length(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-5.3)))), (length(0.0)) / 1.0), log(1.0), 1.0))).y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.7)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true))) && true, bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y, (injectionSwitch.y) - 0.0))) || false)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(622.987)), bool(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0), mat4x2(mat4x2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0), (true ? mat4x2(injectionSwitch, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x2(-643.243, 7.7, -2.8, -5.5, -1781.3699, 3.6, 9848.1287, -63.25))))))))).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.3)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (bool(true))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(151341u) : subgroup_id)), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))) | 0u) * subgroup_size, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) - _GLF_IDENTITY(0u, (0u) | (0u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size))) >> 0u))) : _GLF_FUZZED(subgroup_size))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))))))) || false))), true)))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), abs(vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, exp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0)), abs(1.0), 0.0, 0.0, 0.0))))), 0.0)) + _GLF_IDENTITY((vec2(0.0, 0.0)), clamp((_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)), ((vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(32.63), _GLF_FUZZED(_GLF_IDENTITY(61.23, 1.0 * (61.23)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-856.802)), bool(false)))), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)))), ((vec2(0.0, 0.0))) - vec2(0.0, 0.0)))[0], max((_GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-856.802)), bool(false)))), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)))), ((vec2(0.0, 0.0))) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-856.802)), bool(false)))), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)))), ((vec2(0.0, 0.0))) - vec2(0.0, 0.0)))[0])), (true ? _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-856.802)), bool(false)))), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7705.3990)), float(0.0), bool(true))), 0.0)))), ((vec2(0.0, 0.0))) - vec2(0.0, 0.0)))[0], max((_GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-856.802)), bool(false)))), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)))), ((vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)))))[0], (_GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-856.802)), bool(false)))), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)))), ((vec2(0.0, 0.0))) - vec2(0.0, 0.0)))[0])) : _GLF_FUZZED(733.509))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), min(0.0, 0.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(82.82, (82.82) - 0.0))), bool(false))), 0.0))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(9.8)), float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), bool(true)))), (true ? _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(9.8)), float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), bool(true)))) : _GLF_FUZZED(48.30))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.8, (false ? _GLF_FUZZED(_GLF_IDENTITY(-787.543, clamp(-787.543, _GLF_IDENTITY(-787.543, max(-787.543, -787.543)), -787.543))) : 9.8)))), float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), bool(true)))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / 1.0)), min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec3(7687.9971, -3.2, -60.35))) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(30.37) : 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(30.37) : 0.0), max((false ? _GLF_FUZZED(30.37) : 0.0), (false ? _GLF_FUZZED(30.37) : 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(30.37) : 0.0), max((false ? _GLF_FUZZED(30.37) : 0.0), (false ? _GLF_FUZZED(30.37) : 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(4.1, 199.781, 54.66, 4.9, 7.5, -7257.6119, 8.4, -3.1, 7061.5853, -5360.6946, -517.348, -4656.7180, -72.26, 9.4, 53.54, -9.1))))), max(float(mat4(_GLF_IDENTITY((false ? _GLF_FUZZED(30.37) : 0.0), max((_GLF_IDENTITY(false ? _GLF_FUZZED(30.37) : 0.0, mix(float(_GLF_FUZZED(47.92)), float(false ? _GLF_FUZZED(30.37) : 0.0), bool(true)))), (false ? _GLF_FUZZED(30.37) : 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(30.37) : 0.0), min((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(30.37) : 0.0), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(30.37) : 0.0))), _GLF_IDENTITY(max((false ? _GLF_FUZZED(30.37) : 0.0), (false ? _GLF_FUZZED(30.37) : 0.0)), (max((false ? _GLF_FUZZED(30.37) : 0.0), (false ? _GLF_FUZZED(30.37) : 0.0))) * sqrt(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(reflect(-806.771, 447.730)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.1)), bool(false))))), 1.0)))))))))), 0.0)), 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(vec2(-96.75, -4267.5054)) : vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))), ((vec2(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-100.496)), bool(false))), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-100.496)), bool(false)))) * _GLF_ONE(1.0, injectionSwitch.y)), sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-715.978)), float(0.0), bool(true))), (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-715.978)), float(0.0), bool(true))) : _GLF_FUZZED(distance(vec3(-6.4, 9.1, -1792.1691), vec3(-64.07, -7.9, 6037.1207))))), 0.0, 1.0, 0.0))), 0.0))) - vec2(0.0, 0.0))), vec2(mat2x4((_GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.1)))))), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec3(7687.9971, -3.2, -60.35))) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8783.0195))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(30.37) : 0.0))), float(mat4x2(max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8783.0195))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(30.37) : 0.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 1.0))), mix(float(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8783.0195))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(30.37) : 0.0))), (max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8783.0195))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(30.37) : 0.0)))) / 1.0)), float(_GLF_FUZZED(-2.4)), bool(false))))), (true ? (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec3(7687.9971, -3.2, -60.35))) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8783.0195))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(30.37) : 0.0))), float(mat4x2(max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8783.0195))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(30.37) : 0.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 1.0))), mix(float(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8783.0195))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(30.37) : 0.0))), (max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8783.0195))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(30.37) : 0.0)))) / 1.0)), float(_GLF_FUZZED(-2.4)), bool(false))))) : _GLF_FUZZED(-7336.4727)))), 0.0)), 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(vec2(-96.75, -4267.5054)) : vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))), _GLF_IDENTITY(((vec2(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-100.496)), bool(false))), sin(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-715.978)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(float(_GLF_FUZZED((false ? 405.725 : -19.51))), float(float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), bool(true))), bool(true))), 0.0, 1.0, 0.0))), 0.0))) - vec2(0.0, 0.0), min(((vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8242.3924)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), max(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)))), bool(true))), float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-100.496)), float(vec3(_GLF_IDENTITY(float(_GLF_FUZZED(-100.496)), float(vec4(float(_GLF_FUZZED(-100.496)), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))), 0.0, 0.0))), bool(false))), sin(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-715.978)), float(0.0), bool(true))), 0.0, 1.0, 0.0))), 0.0))) - vec2(0.0, 0.0), ((vec2(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-100.496), (false ? _GLF_FUZZED(-34.56) : _GLF_FUZZED(_GLF_IDENTITY(-100.496, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(-100.496, (false ? _GLF_FUZZED(249.153) : -100.496))), bool(true))))))), bool(false))), sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0, max(_GLF_IDENTITY((_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0, float(mat2x4((_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-715.978)), float(0.0), bool(true))), 0.0, 1.0, 0.0))), 0.0))) - vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.3) : 0.0)), 0.0, 0.0, 1.0, 1.0, log(1.0))))) - 0.0), 0.0))))), 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-8.3, _GLF_IDENTITY(-42.58, float(_GLF_IDENTITY(vec4(-42.58, 0.0, 1.0, 1.0), min(vec4(-42.58, 0.0, 1.0, 1.0), vec4(-42.58, 0.0, 1.0, 1.0)))))).x)), float(1.0), bool(true))) : _GLF_FUZZED(dot(-5.0, -9128.1529)))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(351.443)), bool(false))), 0.0, 1.0)), 0.0)))[1]), bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec3(vec2(0.0, 0.0), 0.0))), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))))) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) * 1)])), 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0)), (true ? vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) * 1)])), 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0)) : _GLF_FUZZED(injectionSwitch))))) - vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), abs(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)) + (vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], round(length(normalize(1.0))), 0.0)))), clamp(vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)]))))) - vec2(0.0, 0.0)))).x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * (injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true))), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u | (~ (subgroup_id))))) * subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), 1u))), ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), 1u))), ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), 1u))), ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) / 1u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), 1u))), ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), 1u))), ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ (subgroup_id)), subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size))), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) - 0u)) >> 0u)))) / 1u), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size), _GLF_IDENTITY(uint(uint(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) - 0u)) >> 0u)))) / 1u), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))), (uint(uint(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) - 0u)) >> 0u)))) / 1u), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))) | (uint(uint(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) - 0u)) >> 0u)))) / 1u), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))))))), min(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), ~ (~ (~ (~ (subgroup_id)))))) * subgroup_size))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u ^ (_GLF_IDENTITY(~ (subgroup_id), clamp(~ (subgroup_id), ~ (subgroup_id), ~ (subgroup_id))))))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) * 1u) * subgroup_size))), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))))))))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(workgroup_size))))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))) ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (false ? _GLF_FUZZED(virtual_gid) : subgroup_size))), uint(_GLF_IDENTITY(uvec3(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (false ? _GLF_FUZZED(virtual_gid) : subgroup_size))), 1u, 0u), (uvec3(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (false ? _GLF_FUZZED(virtual_gid) : subgroup_size))), 1u, 0u)) + uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) - 0u) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) : subgroup_size)))), (false ? _GLF_FUZZED(bitfieldExtract(83714u, -73650, 65999)) : (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) : subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : subgroup_size) << 0u))))))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (false ? _GLF_FUZZED(virtual_gid) : subgroup_size))), 0u, 1u, (0u | 0u)), ~ (~ (uvec4(_GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (false ? _GLF_FUZZED(workgroup_size) : (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), min(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(virtual_gid))), _GLF_FUZZED(virtual_gid))) : subgroup_size))), 0u, 1u, (0u | 0u)))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (false ? _GLF_FUZZED(virtual_gid) : subgroup_size))), 0u, 1u, (0u | 0u)), ~ (~ (uvec4(_GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (false ? _GLF_FUZZED(virtual_gid) : subgroup_size))), 0u, 1u, (0u | 0u))))))) >> 0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-9.1), _GLF_FUZZED(-4.9)), bvec2(false, false))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(40354)), _GLF_FUZZED(2.6)), bvec2(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), true)))), false)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(350.447) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)), (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), false, false)))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.7, -283.217), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true) ? vec2(5.7, _GLF_IDENTITY(-283.217, max(_GLF_IDENTITY(-283.217, float(mat3x4(-283.217, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(-283.217, min(-283.217, -283.217))))) : _GLF_FUZZED((vec2(98.21, -7.8) * 6.4)))))), clamp((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.7, -283.217), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true) ? vec2(5.7, _GLF_IDENTITY(-283.217, max(_GLF_IDENTITY(-283.217, float(mat3x4(-283.217, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(-283.217, min(-283.217, -283.217))))) : _GLF_FUZZED((vec2(98.21, -7.8) * 6.4)))))), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.7, -283.217), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true) ? vec2(5.7, _GLF_IDENTITY(-283.217, max(_GLF_IDENTITY(-283.217, float(mat3x4(-283.217, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(-283.217, min(-283.217, -283.217))))) : _GLF_FUZZED((vec2(98.21, -7.8) * 6.4)))))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.7, -283.217), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true) ? vec2(5.7, _GLF_IDENTITY(-283.217, max(_GLF_IDENTITY(-283.217, float(mat3x4(-283.217, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(-283.217, min(-283.217, -283.217))))) : _GLF_FUZZED((vec2(98.21, -7.8) * 6.4)))))), _GLF_IDENTITY(mat2(1.0) * ((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.7, -283.217), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true) ? vec2(5.7, _GLF_IDENTITY(-283.217, max(_GLF_IDENTITY(-283.217, float(mat3x4(-283.217, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(-283.217, min(-283.217, -283.217))))) : _GLF_FUZZED((vec2(98.21, -7.8) * 6.4))))))), min(mat2(1.0) * ((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.7, -283.217), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true) ? vec2(5.7, _GLF_IDENTITY(-283.217, max(_GLF_IDENTITY(-283.217, float(mat3x4(-283.217, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(-283.217, min(-283.217, -283.217))))) : _GLF_FUZZED((vec2(98.21, -7.8) * 6.4))))))), mat2(1.0) * ((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.7, -283.217), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true) ? vec2(5.7, _GLF_IDENTITY(-283.217, max(_GLF_IDENTITY(-283.217, float(mat3x4(-283.217, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(-283.217, min(-283.217, -283.217))))) : _GLF_FUZZED((vec2(98.21, -7.8) * 6.4)))))))))))), ((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.7, -283.217), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && true) ? vec2(5.7, -283.217) : _GLF_FUZZED((vec2(98.21, -7.8) * 6.4))))))) - log(vec2(1.0, 1.0))))), vec2(1.0, 1.0) * (max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.7, -283.217), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(5.7, -283.217) : _GLF_FUZZED((vec2(98.21, -7.8) * 6.4))))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.7, -283.217), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(5.7, -283.217) : _GLF_FUZZED((vec2(98.21, -7.8) * 6.4)))))))) * mat2(1.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), ~ (~ (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2)))) | (uint(2)))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(997.172)))) - determinant(mat3(0.0, 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)))))), injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))), injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))), injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)))))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))))) - vec2(0.0, 0.0)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(_GLF_FUZZED(6412.0971)), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(true))), 1.0))))), injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) + 0.0), 1.0))))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))))), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))), injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.8) : 1.0)), clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) + 0.0), 1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0))), injectionSwitch)))).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) + 0))), 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), tan(0.0), cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x3(float(mat4(injectionSwitch.x, 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), tan(0.0), cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.2)), bool(false)))), float(_GLF_FUZZED(6.5)), bool(false))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), true, false))), _GLF_IDENTITY(true, false || (true)), false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) && true)))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), bool(bvec2(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), true)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), bool(bvec2(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), true))))) && true), _GLF_IDENTITY(false, (false) || false)))), true, false, false)), true, false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(pow(injectionSwitch, vec2(-0.9, -46.45))) : injectionSwitch)).y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))) && true)) || (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (true ? injectionSwitch.x : _GLF_FUZZED(-20.63))) < injectionSwitch.y))), true, true, true))))))), true, false))), true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false)), true, false))), true, false, false)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true, false, false)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (true)))), (bool(bool(_GLF_IDENTITY(true, false || (true))))) && true)), false))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), true, false, false))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))), true, false, false)), true, false, _GLF_IDENTITY(false, true && (false))))), false))))), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), true, false, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), true, false, false))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), true, false, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bool(bvec2(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), true, false, false))), false)), true)))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), true, false, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), true, false, false))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), true, false, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bool(bvec2(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), true, false, false))), false)), true)))) && true))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, _GLF_IDENTITY(false, (false) || false), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y)), true, false))), true, false, false)), true, false, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0), transpose(transpose(mat2x3(injectionSwitch.y, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0)))))))), true, false))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), true, false, false))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), true, false, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), bool(bvec2(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, false)), true, false, false))), false)), true)))) && true))))))))))) && true) || false)) || false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true, true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, false))))))))), true)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false))))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false)))) || false)) || false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)), clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)), (false ? _GLF_FUZZED(-2080.5465) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)))))) + (-2255.9602 * -2.2))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.3)), clamp(float(_GLF_FUZZED(2.3)), float(_GLF_FUZZED(2.3)), float(_GLF_FUZZED(2.3)))), float(min(_GLF_IDENTITY(-2255.9602 * -2.2, 1.0 * (-2255.9602 * -2.2)), _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), (float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0)))), mix(float(_GLF_FUZZED(3.1)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), (float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0))))), bool(true))) + (-2255.9602 * -2.2)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-2255.9602 * -2.2, min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2))))), ((_GLF_IDENTITY(-2255.9602 * -2.2, min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2)))))) * sqrt(1.0))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, max(-2255.9602 * -2.2, -2255.9602 * -2.2)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2))))))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(27.92) : 0.0), ((false ? _GLF_FUZZED(27.92) : 0.0)) / 1.0)) + (-2255.9602 * -2.2), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2)), bool(true))))))))), ((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2)))))))) + 0.0), 0.0, 0.0), (vec3(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602, (-2255.9602) / abs(sqrt(1.0))), max(-2255.9602, -2255.9602)) * -2.2))))))), _GLF_IDENTITY(((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * _GLF_IDENTITY(-2.2, min(-2.2, -2.2)), 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2)))))))), (((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602, min(-2255.9602, -2255.9602)) * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(27.92) : 0.0), max((false ? _GLF_FUZZED(27.92) : 0.0), (false ? _GLF_FUZZED(27.92) : 0.0)))) + (-2255.9602 * -2.2))))))))) / 1.0) + 0.0), 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(-2255.9602 * -2.2, min(-2255.9602 * -2.2, _GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602 * -2.2, (false ? _GLF_FUZZED(-1.3) : -2255.9602 * -2.2)))), float(mat2x3(_GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602 * -2.2, (false ? _GLF_FUZZED(-1.3) : -2255.9602 * -2.2)))), abs(0.0), 1.0, 0.0, 1.0, 0.0)))))))))))) && true)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(((-154.277 / -9.1)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), max(float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), float(mat3x4(float(_GLF_FUZZED(-2.8)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(false))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true) || false), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED((_GLF_IDENTITY((-154.277 / -9.1), max((-154.277 / -9.1), (-154.277 / -9.1)))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), max(float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), float(mat3x4(float(_GLF_FUZZED(-2.8)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(false))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), max(float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), float(mat3x4(float(_GLF_FUZZED(-2.8)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(false))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-933.895)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(900.380)), float(0.0), bool(true)))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), false || ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, false || (true))) || false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.3)), clamp(float(_GLF_FUZZED(2.3)), float(_GLF_FUZZED(2.3)), float(_GLF_FUZZED(2.3)))), float(min(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, 1.0 * (-2255.9602 * -2.2)), min(_GLF_IDENTITY(-2255.9602 * -2.2, 1.0 * (-2255.9602 * -2.2)), _GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, 1.0 * (-2255.9602 * -2.2)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(-2255.9602 * -2.2, 1.0 * (-2255.9602 * -2.2)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0))), (false ? _GLF_FUZZED(-9180.5120) : float(mat4x2(_GLF_IDENTITY(-2255.9602 * -2.2, 1.0 * (-2255.9602 * -2.2)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)))))))), _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), (float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0)))) + (-2255.9602 * -2.2)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.0) : injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-2255.9602 * -2.2, min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0), (true ? mat3x4(0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3x4(-7.8, 8.4, -34.06, -556.600, -390.941, -102.048, -1715.4325, 48.56, -0.1, 2.4, 370.860, -30.08)))))), (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2))))), ((_GLF_IDENTITY(-2255.9602 * -2.2, min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2)))))) * sqrt(1.0))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2)))), (_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2))))) / 1.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602, 0.0 + (-2255.9602)) * -2.2, float(_GLF_IDENTITY(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)), (vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0))) / exp(vec4(0.0, 0.0, 0.0, 0.0))))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2)), bool(true))))))))), ((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2)))))))) + 0.0), 0.0, 0.0), (vec3(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602, max(-2255.9602, -2255.9602)) * -2.2)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602, max(-2255.9602, -2255.9602)) * -2.2)))), 0.0, 1.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602, max(-2255.9602, -2255.9602)) * -2.2)))), 0.0, 1.0, 1.0))[0], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602, max(-2255.9602, -2255.9602)) * -2.2)))), 0.0, 1.0, 1.0))[1], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602, max(-2255.9602, -2255.9602)) * -2.2)))), 0.0, 1.0, 1.0))[2], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602, max(-2255.9602, -2255.9602)) * -2.2)))), 0.0, 1.0, 1.0))[3]), vec4(_GLF_FUZZED(-240.715), _GLF_FUZZED(501.640), _GLF_FUZZED(-8.7), _GLF_FUZZED(-1241.9786)), bvec4(false, false, false, false)))), float(vec3(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602, max(-2255.9602, -2255.9602)) * -2.2)))), 0.0, 1.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602, max(-2255.9602, -2255.9602)) * -2.2)))), 0.0, 1.0, 1.0))[0], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602, max(-2255.9602, -2255.9602)) * -2.2)))), 0.0, 1.0, 1.0))[1], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602, max(-2255.9602, -2255.9602)) * -2.2)))), 0.0, 1.0, 1.0))[2], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602, max(-2255.9602, -2255.9602)) * -2.2)))), 0.0, 1.0, 1.0))[3]), vec4(_GLF_FUZZED(-240.715), _GLF_FUZZED(501.640), _GLF_FUZZED(-8.7), _GLF_FUZZED(-1241.9786)), bvec4(false, false, false, false)))), 0.0, 0.0))))))), _GLF_IDENTITY(((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + _GLF_IDENTITY((-2255.9602 * -2.2), ((-2255.9602 * -2.2)) - length(vec4(0.0, 0.0, 0.0, 0.0)))))))))), (((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2))))))))) / 1.0) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(-5.8)))), 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(-2255.9602 * -2.2, min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)) ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602 * -2.2, (false ? _GLF_FUZZED(-1.3) : -2255.9602 * -2.2))))))))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(((-154.277 / -9.1)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(((-154.277 / -9.1)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) + 0.0) + 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), max(float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), float(mat3x4(float(_GLF_FUZZED(-2.8)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(false))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) + 0.0) + 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), max(float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), float(mat3x4(float(_GLF_FUZZED(-2.8)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(false))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) + 0.0) + 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), max(float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), float(mat3x4(float(_GLF_FUZZED(-2.8)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(false))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, false, false)), true && (bool(bvec4(! (((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) + 0.0) + 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), max(float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), float(mat3x4(float(_GLF_FUZZED(-2.8)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(false))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, false, false))))))) && true) || false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.3)), clamp(float(_GLF_FUZZED(2.3)), float(_GLF_FUZZED(2.3)), float(_GLF_FUZZED(2.3)))), float(min(_GLF_IDENTITY(-2255.9602 * -2.2, 1.0 * (-2255.9602 * -2.2)), _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.0)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y))), (float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0)))) + (-2255.9602 * -2.2)))), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, true))), (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-2255.9602 * -2.2, min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2))))), ((_GLF_IDENTITY(-2255.9602 * -2.2, min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2)))))) * sqrt(1.0))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2))))))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.8)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(mat4x3(tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat2(0.0, abs(1.0), 0.0, sin(0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(float(mat4x3(tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat2(0.0, abs(1.0), 0.0, sin(0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-1.6)), bool(false))))))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2)), bool(true))))))))), ((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2)))))))) + 0.0), 0.0, 0.0), (vec3(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602, max(-2255.9602, -2255.9602)) * -2.2))))))), _GLF_IDENTITY(((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(-2255.9602 * -2.2, float(_GLF_IDENTITY(vec3(-2255.9602 * -2.2, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(-2255.9602 * -2.2, 0.0, 1.0))))), abs(1.0), 1.0, 1.0, 0.0, 1.0)), (float(mat3x2(_GLF_IDENTITY(-2255.9602 * -2.2, float(_GLF_IDENTITY(vec3(-2255.9602 * -2.2, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(-2255.9602 * -2.2, 0.0, 1.0))))), abs(1.0), 1.0, 1.0, 0.0, 1.0))) - 0.0)), float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2)))))))), (((true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-2255.9602 * -2.2, float(vec4(-2255.9602 * -2.2, 0.0, 1.0, tan(0.0)))), min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(27.92) : 0.0)) + (-2255.9602 * -2.2))))))))) / 1.0) + 0.0), 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((_GLF_IDENTITY(-2255.9602 * -2.2, min(-2255.9602 * -2.2, _GLF_IDENTITY(-2255.9602 * -2.2, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(27.92) : 0.0)) + (_GLF_IDENTITY(-2255.9602 * -2.2, (false ? _GLF_FUZZED(-1.3) : -2255.9602 * -2.2))))))))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(((-154.277 / -9.1)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), max(float(_GLF_FUZZED(-2.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.8)), float(mat3x4(float(_GLF_FUZZED(-2.8)), 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(false))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0))), 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! _GLF_IDENTITY((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true) || false)))), true, false, false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))) && true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))), true, true, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))), true, true, true)))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))) && true)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, determinant(mat2(0.0, 0.0, length(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0)), 1.0)))))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, determinant(mat2(0.0, 0.0, length(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0)), 1.0))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4612.3581)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -8.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.3)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(exp(abs(7767.3805))))))) || (true)), _GLF_IDENTITY(false, ! (! (false))))))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -8.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.3)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false)))))).x) - 0.0), float(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(+ -8.7, (+ -8.7) + 0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.3)), bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false))).x, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -8.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.3)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false)))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -8.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.3)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || (true)), false)))))).x) - 0.0), float(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(+ -8.7, (+ -8.7) + 0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(1.3), clamp(_GLF_FUZZED(1.3), _GLF_FUZZED(1.3), _GLF_FUZZED(1.3)))), bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false))).x, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))))))) || false))))), (bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))))))) || false)))))) && true), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))))))) || false))))), (bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))))))) || false)))))) && true), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, abs(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-80.88), _GLF_FUZZED(-53.94)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true, true))), true, false, true))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
