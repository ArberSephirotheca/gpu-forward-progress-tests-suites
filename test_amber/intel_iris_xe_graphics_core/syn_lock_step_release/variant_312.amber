#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uvec2 GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y = subgroup_local_id;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, sqrt(1.0), 0.0, 1.0)))) * 1.0)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.0)), bool(false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true))))))))), ((injectionSwitch.x > injectionSwitch.y)) && true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(num_workgroup)))))).y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(num_workgroup)))))).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(num_workgroup)))))).y)))) || (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true)))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), (bool(bvec4(false, false, true, true))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u)) ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base) >> 0u);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, uint(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y)), 1u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))))) + subgroup_id * subgroup_size + GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y, _GLF_IDENTITY(0u, (0u) << 0u) | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + subgroup_id * subgroup_size + GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y));
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, clamp(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, 0u + (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / 1u), 1u, 0u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))) / uvec4(1u, 1u, 1u, 1u), ((_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), clamp(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), ~ (_GLF_IDENTITY(~ (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), min(~ (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), ~ (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))))), uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))))))), (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), min(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec2(174799u, 74453u).yyxx & uvec4(0u, 0u, 0u, 0u)) | (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u))), uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u))))))) | (1u)), 0u, 1u)))) / uvec4(1u, 1u, 1u, 1u), ((_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), ~ (_GLF_IDENTITY(~ (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), min(~ (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), ~ (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))))), (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), ~ (_GLF_IDENTITY(~ (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), min(~ (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), ~ (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u))))))) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))))))), (true ? _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))))))), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))))) | ((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))))))))) : _GLF_FUZZED(uvec4(68752u, 6692u, 40900u, 72078u)))) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))))) / uvec4(1u, 1u, 1u, 1u))))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))))))) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | 0u), 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u)), 1u, 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u, _GLF_IDENTITY(1u, max(1u, 1u))), (uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))) | (_GLF_IDENTITY(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u, _GLF_IDENTITY(1u, max(1u, 1u))), (uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))) ^ uvec4(0u, 0u, 0u, 0u))))) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))))))) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))))))) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | 0u), 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u)), 1u, 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u, _GLF_IDENTITY(1u, max(1u, 1u))), (uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))) | (_GLF_IDENTITY(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u, _GLF_IDENTITY(1u, max(1u, 1u))), (uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))) ^ uvec4(0u, 0u, 0u, 0u))))) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))))))) ^ 0u))))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) * 1u) * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) / 1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) - (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))))))), 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u))))) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, min(1u, 1u)))) / uvec4(1u, 1u, 1u, 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u)))), 0u, 1u)), min((uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u)))), 0u, 1u)), (uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u)))), 0u, 1u)))) / uvec4(1u, 1u, 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED((workgroup_base % uvec4(44890u, 138698u, 126131u, 30254u))) : uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u)))) ^ ((uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))), (uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, min(1u, 1u)))) / uvec4(1u, 1u, 1u, 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u)))), 0u, 1u)), min((uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u)))), 0u, 1u)), (uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u)))), 0u, 1u)))) / uvec4(1u, 1u, 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED((workgroup_base % uvec4(44890u, 138698u, 126131u, 30254u))) : uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u)))) ^ ((uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))))))) >> uvec4(0u, 0u, 0u, 0u)))))) ^ 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED(subgroup_id))), 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u), 1u)), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) ^ 0u))) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 1u)))))), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u), 1u)), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) ^ 0u))) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 1u)))))), (uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u), 1u)), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) ^ 0u))) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 1u))))))) << uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u), 1u)), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) ^ 0u))) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 1u)))))), (true ? uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u), 1u)), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) ^ 0u))) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 1u)))))) : _GLF_FUZZED(uvec4(61003u, 105158u, 114126u, 64113u)))))))))) ^ 0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))))))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), clamp((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), (true ? (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) : _GLF_FUZZED(uvec4(195083u, 40410u, 131950u, 154749u)))), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))))))))) ^ 0u, max(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))))))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), clamp((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), (true ? (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) : _GLF_FUZZED(uvec4(195083u, 40410u, 131950u, 154749u)))), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))))))))) ^ 0u, ((uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))))))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), clamp((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), (true ? (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) : _GLF_FUZZED(uvec4(195083u, 40410u, 131950u, 154749u)))), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))))))))) ^ 0u) >> 0u), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))))))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), clamp((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), (true ? (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) : _GLF_FUZZED(uvec4(195083u, 40410u, 131950u, 154749u)))), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))))))))) ^ 0u)))))), 1u)), (true ? uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED(subgroup_id))), 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u), 1u)), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) ^ 0u))) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 1u)))))))))) ^ 0u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED(subgroup_id))), 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u), 1u)), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) ^ 0u))) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 1u)))))))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED(subgroup_id))), 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u), 1u)), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) ^ 0u))) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 1u)))))))))) ^ 0u), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED(subgroup_id))), 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u), 1u)), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (1u) ^ 0u))) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 1u)))))))))) ^ 0u))))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))), (uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))))))) ^ uvec4(0u, 0u, 0u, 0u))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), clamp((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), (true ? (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) : _GLF_FUZZED(uvec4(195083u, 40410u, 131950u, 154749u)))), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), clamp((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), (true ? (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) : _GLF_FUZZED(uvec4(195083u, 40410u, 131950u, 154749u)))), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))), (uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), clamp((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), (true ? (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) : _GLF_FUZZED(uvec4(195083u, 40410u, 131950u, 154749u)))), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))))))) | (uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), clamp((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)), (true ? (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) : _GLF_FUZZED(uvec4(195083u, 40410u, 131950u, 154749u)))), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)))) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u), ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) ^ ((uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))))) : _GLF_FUZZED(uvec4(92929u, 43458u, 159174u, 137828u)))))))))) ^ 0u)))), 1u)) : _GLF_FUZZED(workgroup_base)))))) + ((GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 | (0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 | (5))) << (0 | 0)))))), max((1 | (0 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY((1 | (0 << _GLF_IDENTITY(int(5), int(5)))), ~ (~ ((1 | (0 << _GLF_IDENTITY(int(5), int(5)))))))))); _injected_loop_counter ++)
  {
   do
    {
     GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x = next_virtual_gid;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x] = 1;
 for(int _injected_loop_counter = ((_GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58583) : 1)))), _GLF_IDENTITY(~ (~ ((~ (1)))), (0 << _GLF_IDENTITY(int(4), int(4))) | (~ (~ ((~ (1)))))))) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) * 1)) / 1)))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5))))), _GLF_IDENTITY(int(ivec3(((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) * 1)) / 1)))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5))))), (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1), 0)), 0 ^ (_GLF_IDENTITY(int(ivec3(((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) * 1)) / 1)))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5))))), (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1), 0)), 1 * (int(ivec3(((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) * 1)) / 1)))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5))))), (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1), 0)))))))), (false ? _GLF_FUZZED(-59088) : _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58583) : 1)))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))) | (~ (~ ((~ (1))))), max((0 << _GLF_IDENTITY(int(4), int(4))) | (~ (~ ((~ (1))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (~ (~ ((~ (1)))))))))) / _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, _GLF_IDENTITY((5), (_GLF_IDENTITY((5), _GLF_IDENTITY(int(_GLF_IDENTITY(int((5)), (int((5))) ^ 0)), (int(_GLF_IDENTITY(int((5)), (int((5))) ^ 0))) ^ 0))) | (_GLF_IDENTITY((5), 0 ^ ((5))))) * 1)) / 1)))), clamp((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, _GLF_IDENTITY((5), (_GLF_IDENTITY((5), _GLF_IDENTITY(int(_GLF_IDENTITY(int((5)), (int((5))) ^ 0)), (int(_GLF_IDENTITY(int((5)), (int((5))) ^ 0))) ^ 0))) | (_GLF_IDENTITY((5), 0 ^ ((5))))) * 1)) / 1)))), (1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, _GLF_IDENTITY((5), (_GLF_IDENTITY((5), _GLF_IDENTITY(int(_GLF_IDENTITY(int((5)), (int((5))) ^ 0)), (int(_GLF_IDENTITY(int((5)), (int((5))) ^ 0))) ^ 0))) | (_GLF_IDENTITY((5), 0 ^ ((5))))) * 1)) / 1)))), (1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, _GLF_IDENTITY((5), (_GLF_IDENTITY((5), _GLF_IDENTITY(int(_GLF_IDENTITY(int((5)), (int((5))) ^ 0)), (int(_GLF_IDENTITY(int((5)), (int((5))) ^ 0))) ^ 0))) | (_GLF_IDENTITY((5), 0 ^ ((5))))) * 1)) / 1)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(5)), (~ (int(5))) | 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(32460))), (5) | (5))))), _GLF_IDENTITY(int(ivec3(((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) * 1)) / 1)))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5))))), (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1), 0)), 0 ^ (_GLF_IDENTITY(int(ivec3(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) * 1)) / 1))), ~ (~ (1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) * 1)) / 1))))))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5))))), (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1), 0)), 1 * (int(ivec3(((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY((_GLF_IDENTITY(5, (5) * 1)) / 1, int(ivec2((_GLF_IDENTITY(5, (5) * 1)) / 1, 1))))))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5))))), (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1), 0))))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) >> 0), int(0))), (_GLF_IDENTITY(int(0), max(int(0), int(0)))) << (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0))))) | (_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (_GLF_IDENTITY(int(0), int(ivec4(int(0), 0, 1, 0))))), max(int(0), int(0))))), ((_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0))))) | (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0)))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat4(log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), mix(float(_GLF_FUZZED(-12.07)), float(0.0), _GLF_IDENTITY(bool(true), (bool(true)) && true))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) + (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) + 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), int(5))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) ^ 0)), min(int(_GLF_IDENTITY(5, (5) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) ^ 0)), ~ (~ (int(_GLF_IDENTITY(5, (5) ^ 0))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(log(-5.3)) : clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((- -264.642)), _GLF_FUZZED(-5589.1007)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)) ? _GLF_IDENTITY(_GLF_FUZZED(-38.43), (_GLF_IDENTITY(_GLF_FUZZED(-38.43), (_GLF_FUZZED(-38.43)) * 1.0)) / 1.0) : injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(0, int(ivec3(0, 0, (0 >> _GLF_IDENTITY(int(2), int(2)))))) | (_GLF_IDENTITY(int(8), (int(8)) / 1))), _GLF_IDENTITY(int(8), max(int(_GLF_IDENTITY(8, ~ (~ (8)))), _GLF_IDENTITY(int(8), (int(8)) | (int(8)))))))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) && true)))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) >> 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), (_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) && true)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (false) && true) || (false))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false)))))) || false))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true))), false)), true, false)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), int(7))), int(7)))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(0, ~ (~ (0))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) | 0, (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) | 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) >> 0)) + 0))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec2(bvec2(false, true))))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.7) : 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(643.278)), clamp(float(_GLF_FUZZED(643.278)), float(_GLF_FUZZED(643.278)), float(_GLF_FUZZED(643.278)))), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (false)))))))))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       atomicStore(buf[GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x], uint(2), 4, 64, 4);
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-890.285)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1810.2847)), bool(false)))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
          barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
