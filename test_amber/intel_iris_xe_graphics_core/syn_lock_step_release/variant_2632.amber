#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (1.0) + 0.0))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0), mat3x2(mat4x2(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), _GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0), clamp(((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0), mat2(1.0) * (((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0))) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0), clamp(((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0), ((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0), (_GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0), max(((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0), ((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0)))) - vec2(0.0, 0.0)))), (((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0)) - vec2(0.0, 0.0)))))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.4, 857.177)))).x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat2x3(injectionSwitch[1], 1.0, 0.0, 1.0, 0.0, tan(0.0)), _GLF_IDENTITY((mat2x3(injectionSwitch[1], 1.0, 0.0, 1.0, 0.0, tan(0.0))) * mat2(1.0), ((mat2x3(injectionSwitch[1], 1.0, 0.0, 1.0, 0.0, tan(0.0))) * mat2(1.0)) * mat2(1.0))))))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true)))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ! (! ((! (true))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ! (! ((! (true))))), true && (! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))) && true), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ! (! ((! (true))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ! (! ((! (true))))), true && (! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))) && true))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, abs(0.0), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-949.639)))), min(sqrt(0.0), sqrt(0.0))), 0.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat3(exp(0.0), 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sqrt(_GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((true ? (false ? 6160.0223 : -2.1) : -8.4)), _GLF_FUZZED(45.59)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3((injectionSwitch)[0], cos(0.0), 1.0))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.5))), injectionSwitch.y)))))), mix(vec2(_GLF_FUZZED(-6480.0107), (mix(vec2(_GLF_FUZZED((true ? (false ? 6160.0223 : -2.1) : -8.4)), _GLF_FUZZED(45.59)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3((injectionSwitch)[0], cos(0.0), 1.0))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.5))), injectionSwitch.y)))))))[1]), vec2((mix(vec2(_GLF_FUZZED((true ? (false ? 6160.0223 : -2.1) : -8.4)), _GLF_FUZZED(45.59)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3((injectionSwitch)[0], cos(0.0), 1.0))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.5))), injectionSwitch.y)))))))[0], _GLF_FUZZED(-695.361)), bvec2(true, false)))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) && true, true && (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sign(477.019)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))))) > injectionSwitch.y)) && true)))) || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-48.32) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))), max(float(_GLF_IDENTITY(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.y, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))))))))))).y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))), ((! ((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), (_GLF_IDENTITY(true, (true) && true)) || false)))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(mix(-4243.6753, 316.880, 38.53)) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-13.75))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))) || false), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false, true))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), _GLF_IDENTITY((mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY((mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY((mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-1.8, -99.99, 951.480, -3.3)) : (mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) - mat2(0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(injectionSwitch, injectionSwitch)), 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) * mat2(1.0), min((vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) * mat2(1.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), mix(vec2(_GLF_FUZZED(float(52244)), _GLF_FUZZED(9.6)), vec2(((vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))))[0], ((vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) * mat2(1.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) / 1.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-2896.4479) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && (true)) && (_GLF_IDENTITY(true, (true) && true))) ? _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0)), 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-596.334)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true)))) - length(vec2(0.0, 0.0)))), float(_GLF_FUZZED(-5.8)), bool(false)))) - 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0))), max(determinant(mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), min(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), min(0.0, 0.0))))), _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), min(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))), float(_GLF_FUZZED(_GLF_IDENTITY((1.0 * -84.08), ((1.0 * -84.08)) - 0.0))), _GLF_IDENTITY(bool(false), (bool(false)) || false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.9)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 0.0 + (0.0))))) + 0.0)) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(127.561)), float(1.0), bool(true)))), 0.0)), determinant(mat4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? 0.0 : _GLF_FUZZED(332.094))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(332.094)))) - length(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.8)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(31.04) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.1)), float(0.0), bool(true))), clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.1)), float(0.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.1)), float(0.0), bool(true))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.1)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.1)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.1)), float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.3) : 0.0))))), bool(true))))))))))), determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.3)), float(0.0), bool(true))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), 0.0, 1.0, 1.0, 1.0))), 1.0, 1.0))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0))), 0.0)), 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(vec4(2366.9096, -0.0, -5.4, -92.86).q)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))), 0.0, 0.0, 0.0))))))) : _GLF_FUZZED(float(subgroup_id))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))) && (true)) ? _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0), injectionSwitch[1])))).y, 1.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(66.95)), bool(false))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / 1.0, (0.0) / 1.0, (0.0) / 1.0)), mix(float((0.0) / 1.0), float(_GLF_FUZZED(-0.7)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.8) : 1.0)), 0.0, 0.0, 0.0, 0.0)), max(determinant(mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), min(min(0.0, 0.0), min(0.0, 0.0))))))), float(_GLF_FUZZED((1.0 * -84.08))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.1)), float(0.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec4(71.80, -86.31, -449.487, -5.6)[2]))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))))) * 1.0), 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(31.04) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_FUZZED(4.1)), float(0.0), bool(true))))))))), determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(2366.9096, -0.0, _GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, mix(float(_GLF_FUZZED(-3106.0198)), float(-5.4), bool(true)))) / 1.0), -92.86).q)), bool(false))), 0.0, 0.0, 0.0))))))) : _GLF_FUZZED(float(subgroup_id)))) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(tan(3.4))))) - tan(0.0))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))) > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 1u, 1u)))) ^ 0u), (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 1u, 1u)))) ^ 0u)) | (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 1u, 1u)))) ^ 0u))) * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) >> (0u ^ 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY(clamp(7u, 7u, 7u), min(clamp(7u, 7u, 7u), clamp(7u, 7u, 7u))))), uint(7u)), (0u | 0u) ^ (_GLF_IDENTITY(uint(7u), uint(7u))))), (true ? _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u + (uint(7u))), uint(7u)), (0u | 0u) ^ (_GLF_IDENTITY(uint(7u), uint(7u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), max(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(_GLF_IDENTITY(7u, (7u) | (7u)))))) | (uint(_GLF_IDENTITY(7u, (7u) | (7u))))), uint(_GLF_IDENTITY(7u, (7u) | (7u)))))), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) * 1u) ^ (_GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (0u | 0u) ^ (_GLF_IDENTITY(uint(7u), uint(7u))))))) : _GLF_FUZZED(workgroup_id))) ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) ^ 0u), 0u | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((workgroup_size --)) : workgroup_base + subgroup_id * subgroup_size))), min(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))) + subgroup_id * subgroup_size), (true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) / 1u))))))))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) - 0u, max((workgroup_base + subgroup_id * subgroup_size) - 0u, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)))) - 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (0.0) * round(length(normalize(1.0)))), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0), 0.0, 0.0, log(1.0), 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0), 0.0, 0.0, log(1.0), 0.0)))))), 1.0), clamp(vec4(0.0, 1.0, 1.0, 1.0), vec4(0.0, 1.0, 1.0, 1.0), vec4(0.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(faceforward(1.9, 8173.4723, (- -5.6))) : 0.0)), exp(0.0), 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(vec3(-4571.1114, -1611.0551, -42.95))))) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false))))), (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false)))))) && true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), true, false, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false))))), (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false)))))) && true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), true, false, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false))))), (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false)))))) && true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), true, false, false)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false))))), (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false)))))) && true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), true, false, false))))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false))))), (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false)))))) && true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), true, false, false)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false))))), (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, false)))))) && true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), true, false, false))))) || false), false, false)))))))))))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1])).y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 1.0, 0.0, 1.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x)))))).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.5)), bool(false))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.5)), bool(false))))))))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_FUZZED(727.538)), bool(false))) > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(true, (true) || false))))))))))
        return;
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(_GLF_IDENTITY(bvec2(! (! ((false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! ((false))), true), bvec2(bvec3(bvec2(! (! ((false))), true), true))), false, true)))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(_GLF_IDENTITY(bvec2(! (! ((false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! ((false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (! ((false))), true), true), bvec3(bvec4(bvec3(bvec2(! (! ((false))), true), true), true))))), false, true)))))))))), true))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u + (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size))), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u)))) ^ 0u), 0u + (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size)))) ^ (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))))), subgroup_size)), 0u + (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size)), _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base))) ^ 0u))), (workgroup_base) | (workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u + (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)))))) + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1))))) - 0)) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))) | 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-25.63) : injectionSwitch.x, max(false ? _GLF_FUZZED(-25.63) : injectionSwitch.x, false ? _GLF_FUZZED(-25.63) : injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (buf[virtual_gid] = 1))) << 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true, true)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true, true)))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true, true)))), false))), false, _GLF_IDENTITY(true, (true) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((8.0 + -0.6)), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(1853.4690, -0.5, -3.1).y)), bvec2(true, false))) * mat2(1.0)), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-18.12), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-587.914)), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), min(max(next_virtual_gid, next_virtual_gid), max(next_virtual_gid, next_virtual_gid))))], uint(_GLF_IDENTITY(2, (2) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(98387) : _GLF_IDENTITY(4, 0 + (4))))) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) * 1), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
