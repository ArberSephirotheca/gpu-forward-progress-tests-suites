#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_17 {
 uint num_workgroup;
 mat4x2 _f0;
} ;

struct _GLF_struct_16 {
 vec2 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 float _f3;
} ;

struct _GLF_struct_15 {
 mat3 _f0;
 mat3x4 _f1;
 mat3x2 _f2;
 ivec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 float _f1;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_10 {
 int _f0;
 mat3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 uvec4 _f1;
 mat4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 uvec2 _f3;
 _GLF_struct_12 _f4;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_5 {
 int _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 mat3x2 _f2;
 _GLF_struct_7 _f3;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 bool _f1;
 vec3 _f2;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat3 _f1;
 mat3x4 _f2;
 vec3 _f3;
 mat3x4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 vec3 _f3;
 int _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_19 {
 _GLF_struct_4 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_18 _f3;
 mat3x2 _f4;
 uvec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
  }
 _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id, _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id), 0u | ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id))) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_4(_GLF_struct_0(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true))), bool(bvec3(! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true))), false, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true))), bool(bvec3(! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true))), false, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), mat3(1.0), mat3x4(1.0), vec3(1.0), mat3x4(1.0), ivec3(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) + 0), 0, 1, 0))))), _GLF_struct_1(uvec3(1u), true, vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(30.11) : 1.0)), _GLF_IDENTITY(float(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, sqrt(0.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, sqrt(0.0)), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0)), max(float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0)), float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0))))), 1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0) + (_GLF_IDENTITY(transpose(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, sqrt(0.0))), mat3(mat3(transpose(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, sqrt(0.0))))))))))), float(mat3x2(float(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(mat4x3(cos(0.0), 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 1.0, abs(0.0), 0.0, sqrt(0.0), 0.0)), mix(float(float(mat4x3(cos(0.0), 0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(678.000)), vec2(_GLF_FUZZED(-8246.0585), (injectionSwitch)[1]), bvec2(false, true))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(678.000)), vec2(_GLF_FUZZED(-8246.0585), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(678.000)), vec2(_GLF_FUZZED(-8246.0585), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(678.000)), vec2(_GLF_FUZZED(-8246.0585), (injectionSwitch)[1]), bvec2(false, true))).x, float(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(678.000)), vec2(_GLF_FUZZED(-8246.0585), (injectionSwitch)[1]), bvec2(false, true))).x))))))), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-955.857))), injectionSwitch.x)), transpose(transpose(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((+ 436.481)) : 0.0)), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).x)))))), mat4x3(mat4(mat4x3(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(_GLF_IDENTITY(transpose(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), mat3(mat4x3(transpose(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))))))), transpose(transpose(mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED((mat3(91.30, -5.4, 6.6, 7447.6245, -1364.7188, 5.4, 53.76, -7167.1214, 417.115) / -798.324)) : _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))))), mat4x3(mat4(mat4x3(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0, 1.0, 0.0, 1.0))))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(35.70)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))))), transpose(transpose(mat3(0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))))))))), 0.0, 1.0, 1.0, abs(0.0), 0.0, sqrt(0.0), 0.0))), float(_GLF_FUZZED(-11.18)), bool(false)))), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0)))) / 1.0)))), _GLF_struct_2(_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)))), vec3(1.0), 1, _GLF_struct_3(ivec4(1), uvec2(1u))), _GLF_struct_8(_GLF_struct_5(1), _GLF_struct_6(mat3x4(1.0), mat2x4(1.0)), mat3x2(1.0), _GLF_struct_7(vec2(1.0), vec3(1.0))), _GLF_struct_13(_GLF_struct_9(mat3x2(1.0), uvec4(1u), mat4(1.0), bvec4(true)), _GLF_struct_10(1, mat3(1.0), mat3x2(1.0)), _GLF_struct_11(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2(1.0)), uvec2(1u), _GLF_struct_12(mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_struct_18(_GLF_struct_14(mat4x3(1.0)), _GLF_struct_15(mat3(1.0), mat3x4(1.0), mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) ^ (ivec3(1))), (ivec3(1)) | (_GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(ivec3(-4833, 31332, 48662)) : ivec3(1))))), uvec3(1u)), _GLF_struct_16(vec2(1.0), mat4x2(1.0), mat3x4(1.0), 1.0), _GLF_struct_17(gl_NumWorkGroups.x, mat4x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(false, (false) || false) || (bool(_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! (true))))), true, false, true)))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), false)))))) && true))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || ((_GLF_IDENTITY(true, ! (! (true))))))))) && true)))) || false))), mat3x2(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9513.6583) : 1.0)), 1.0, 0.0, abs(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), exp(length(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), uvec4(1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(3.0, -30.19, 6038.0936, 9.5)) : mat2(injectionSwitch, 1.0, 0.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y = workgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y = workgroup_size) + uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y * _GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)) ? _GLF_IDENTITY(workgroup_id, (0u & 175948u) | (workgroup_id)) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, sin(0.0))), (float(mat2(injectionSwitch.y, 1.0, 0.0, sin(0.0)))) - 0.0))), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))) || false), false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + _GLF_IDENTITY(267.680, mix(float(_GLF_FUZZED(7.5)), float(_GLF_IDENTITY(267.680, clamp(267.680, 267.680, 267.680))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))), bool(bool(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))), true, true, false)))))))) || false), false))) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), _GLF_IDENTITY(bool(false), (bool(false)) && true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)))), true, false)))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), _GLF_IDENTITY(bool(false), (bool(false)) && true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)))), true, false)))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), _GLF_IDENTITY(bool(false), (bool(false)) && true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)))), true, false)))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), _GLF_IDENTITY(bool(false), (bool(false)) && true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680)), (_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(_GLF_IDENTITY(-61.07 + 267.680, 0.0 + (-61.07 + 267.680)), -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680))) * 1.0)))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))), true, true, false))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-61.07 + _GLF_IDENTITY(267.680, mix(float(267.680), float(_GLF_FUZZED(0.1)), bool(false)))))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) * 1.0))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-61.07, sin(0.0) + (-61.07)) + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))) && true)), false || (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))) && true))))), ! (! (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))) && true)), false || (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))) && true))))))))))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.7)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(cosh(2.0))))) * 1.0))) < injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680)), max(_GLF_IDENTITY(_GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680)), (true ? _GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680)) : _GLF_FUZZED(7136.0744))), _GLF_IDENTITY(-61.07 + 267.680, clamp(_GLF_IDENTITY(-61.07 + 267.680, min(-61.07 + 267.680, -61.07 + 267.680)), -61.07 + 267.680, -61.07 + 267.680))))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))), true, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))), true, false, false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))), true, false, false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))) || false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), bool(_GLF_IDENTITY(false, false || (false)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-61.07 + 267.680))), _GLF_IDENTITY(bool(false), (bool(false)) || false)))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)))), true, false))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (_GLF_IDENTITY(! (! (! ((_GLF_IDENTITY(false, bool(bool(false))))))), (! (! (! ((_GLF_IDENTITY(false, bool(bool(false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! ((_GLF_IDENTITY(false, bool(bool(false)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_id * subgroup_size + GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1) % subgroup_size)) * 1u);
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.2) : injectionSwitch.x)), float(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), clamp(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch)))).x, 1.0, 1.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-74.31)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
