#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))) && true, ((_GLF_IDENTITY(! (false), ! (! (! (false))))) && true) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))) && true, ((_GLF_IDENTITY(! (false), ! (! (! (false))))) && true) && true))))))))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((false)), false || (((false)))), true, false, false)), bool(bool(bool(bvec4(((false)), true, false, false))))))))), ! (! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), false || (! ((false)))), ! (! (! _GLF_IDENTITY(((false)), true && (_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), true && (((false))))))))))))), false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true && (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true && (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true && (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), true && (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec2(! ((false)), false), bvec2(bvec3(bvec2(! ((false)), false), true))))), ! (! (! ((false)))))), false, _GLF_IDENTITY(false, ! (! (false))))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), bool(bvec3((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), false, false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), bool(bvec3((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), false, false))))))))))), ! (! ((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))) && true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, true))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, true))) && true)))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, true))) && true))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false), true && (! (_GLF_IDENTITY(false, (false) && true))))))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) && true, ((false) && true) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false) && true, ((false) && true) && true), true)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true))), ! (! (! ((_GLF_IDENTITY(false, (false) && true)))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false, true))) && true))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true))))))))))))))))))), bool(bvec2(! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), ! (! (false)))))))))) && true)))))))))), false || (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false)))), ! (! (_GLF_IDENTITY(false, (false) && true))))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))))), false || (((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true))))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))))), false || (((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true))))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))))), false || (((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true))))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((false))))))) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))))))) && true))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && true))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && true))))))) || false)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))), false, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true))))) || false))), bool(bvec2(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))))))) && true)))))), false || (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, true && ((false) && true))) || false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))))) && true)))))), bool(bool(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4((false) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4((false) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))))) && true))))))))))), true)))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && true))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! _GLF_IDENTITY((! ((false))), ! (! ((! ((false))))))))), ((_GLF_IDENTITY(! ((false)), ! (! _GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))))))) || _GLF_IDENTITY(false, false || (false)))) && true)))) || false)))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(true, false || (true))), false))))), (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), false)))))) && true)))))), false, true)))))))), bool(bvec2(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(false, (false) && true))))), bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), ! (! (bool(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(false, (false) && true)))))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(false, (false) && true))))), bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), ! (! (bool(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(false, (false) && true)))))))))))), bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(false, (false) && true))))), bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), ! (! (bool(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(false, (false) && true)))))))))))), bool(bvec3((! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(false, (false) && true))))), bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), ! (! (bool(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), true && (_GLF_IDENTITY(false, (false) && true)))))))))))), true, false))), false)))) && true))) && true)))))), _GLF_IDENTITY(true, (true) && true))))) || false))))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, (gl_NumWorkGroups.x) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(92615u) : _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (false))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), true)))) || (false))))))))), true, true)), bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, false || (false)))))))))))))) || false)))), true, true)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false))))))), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)) || (false || (false))))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ((! (true))) && true), ! (! (! (! (true)))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true)))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))) + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))));
 buf[virtual_gid] = 1;
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-37577) : 4)), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(step(284.807, 1373.8901)))), sqrt(1.0))), max(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), (true ? float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) + 0.0), sqrt(1.0))) : _GLF_FUZZED(-2.2))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), (false ? _GLF_FUZZED(-0.5) : float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))), max(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY((0.0), sqrt(0.0) + ((0.0))) + 0.0), _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-1.2)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) + length(0.0)), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch[0]), bool(true))), 1.0, 1.0, 0.0, 0.0, length(0.0), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sin(0.0), abs(1.0), cos(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false)))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * abs(1.0), ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.1))), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * abs(1.0)) / _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(step(284.807, 1373.8901)))), sqrt(1.0))), max(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), (true ? float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) + 0.0), sqrt(1.0))) : _GLF_FUZZED(-2.2))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), (false ? _GLF_FUZZED(-0.5) : float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))), max(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY((0.0), sqrt(0.0) + ((0.0))) + 0.0), _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-1.2)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) + length(0.0)), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch[0]), bool(true))), 1.0, 1.0, 0.0, 0.0, length(0.0), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sin(0.0), abs(1.0), cos(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false)))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * abs(1.0), ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.1))), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * abs(1.0)) / _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(float(127921u))), bool(false))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(injectionSwitch[0]))), 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(step(284.807, 1373.8901)))), sqrt(1.0))), max(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), (_GLF_IDENTITY(true ? float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) + 0.0), sqrt(1.0))) : _GLF_FUZZED(-2.2), mix(float(true ? float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) + 0.0), sqrt(1.0))) : _GLF_FUZZED(-2.2)), float(_GLF_FUZZED(-8.8)), bool(false))))), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4490.7337) : 1.0)), 1.0, 1.0)), 1.0))), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), max(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (0.0) + 0.0), _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-1.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) + length(0.0)), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0)))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * abs(1.0), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0)))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * abs(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x)), float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0)))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * abs(1.0))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(9.1), (false ? _GLF_FUZZED(871.559) : _GLF_FUZZED(9.1))))), 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0)), (false ? _GLF_FUZZED(-279.252) : ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(9.1), (false ? _GLF_FUZZED(871.559) : _GLF_FUZZED(9.1))))), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y))) > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(step(284.807, 1373.8901)))), sqrt(1.0))), max(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), (true ? float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) + 0.0), sqrt(1.0))) : _GLF_FUZZED(-2.2))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-0.5, min(_GLF_IDENTITY(-0.5, min(-0.5, -0.5)), -0.5))) : float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))), max(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY((0.0), sqrt(0.0) + ((0.0))) + 0.0), _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-1.2)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) + length(0.0)), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(9.9)), _GLF_IDENTITY(float(injectionSwitch[0]), (_GLF_IDENTITY(float(injectionSwitch[0]), min(float(injectionSwitch[0]), float(injectionSwitch[0])))) / determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), bool(true))), 1.0, 1.0, 0.0, 0.0, length(0.0), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sin(0.0), abs(1.0), cos(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false)))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * abs(1.0), ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.1))), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * abs(1.0)) / _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(step(284.807, 1373.8901)))), sqrt(1.0))), max(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), float(mat2x4(sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(1.0)))))))))), (true ? float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) + 0.0), sqrt(1.0))) : _GLF_FUZZED(-2.2))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), (false ? _GLF_FUZZED(-0.5) : float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))), max(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY((0.0), sqrt(0.0) + ((0.0))) + 0.0), _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-1.2)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) + length(0.0)), 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch[0]), bool(true))), 1.0, 1.0, 0.0, 0.0, length(0.0), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sin(0.0), abs(1.0), cos(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false)))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * abs(1.0), ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.1))), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * abs(1.0)) / _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(float(127921u))), bool(false))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(injectionSwitch[0]))), 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(uintBitsToFloat(virtual_gid)))), log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, mix(float((0.0) + 0.0), float(_GLF_FUZZED(-9.4)), bool(false)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(step(284.807, 1373.8901))), float(mat3x2((true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(step(284.807, 1373.8901))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0)), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0)))), sqrt(1.0))), max(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), (_GLF_IDENTITY(true ? float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) + 0.0), sqrt(1.0))) : _GLF_FUZZED(-2.2), mix(float(true ? float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) + 0.0), sqrt(1.0))) : _GLF_FUZZED(-2.2)), float(_GLF_FUZZED(-8.8)), _GLF_IDENTITY(bool(false), (bool(false)) && true))))), _GLF_IDENTITY(float(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-42.78)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, _GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4490.7337) : 1.0)), 1.0, 1.0)), 1.0))), (log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4490.7337) : 1.0)), 1.0, 1.0)), 1.0)))) + 0.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), max(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-192.181) : 0.0))) + 0.0), _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-1.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) + length(0.0)), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), mix(float(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) + length(0.0)), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), min(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) + length(0.0)), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))), float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) + length(0.0)), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0)))))), float(_GLF_FUZZED(-59.38)), bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0)))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * abs(1.0), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0 + (_GLF_IDENTITY(0.0, (0.0) + 0.0))), sqrt(1.0))), float(_GLF_IDENTITY(mat2x3(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0 + (_GLF_IDENTITY(0.0, (0.0) + 0.0))), sqrt(1.0))), 0.0, 1.0, 0.0, 1.0, abs(1.0)), (true ? mat2x3(float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0 + (_GLF_IDENTITY(0.0, (0.0) + 0.0))), sqrt(1.0))), 0.0, 1.0, 0.0, 1.0, abs(1.0)) : _GLF_FUZZED(mat2x3(-302.788, -51.27, 7732.0987, 1.5, 61.81, 80.21)))))))) * abs(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x), clamp(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), (true ? float(float(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))) : _GLF_FUZZED(-97.31)))))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x)), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0)), vec2(0.0, 0.0) + (mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0)))))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0)), (mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 0.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0)), vec2(0.0, 0.0) + (mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0)))))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * abs(1.0))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(9.1), (false ? _GLF_FUZZED(871.559) : _GLF_FUZZED(9.1))))), 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0)), (false ? _GLF_FUZZED(-279.252) : ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(9.1), (false ? _GLF_FUZZED(871.559) : _GLF_FUZZED(9.1))))), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0))))) * _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y))) > injectionSwitch.y)))))) && true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(false, ! (! (false))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-5.7))))), 0.0) + (vec2(injectionSwitch)))))), (true ? vec2(_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-5.7))))), 0.0) + (vec2(injectionSwitch)))))) : _GLF_FUZZED(vec2(-6.5, 2574.4445))))).y, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) / 1.0), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(421.612)), vec2(_GLF_FUZZED(-7.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[1]), bvec2(false, true)))))).y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(421.612)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-7.3, 1.0 * (-7.3))), (injectionSwitch)[1]), bvec2(false, true))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(421.612)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-7.3, 1.0 * (-7.3))), (injectionSwitch)[1]), bvec2(false, true))))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(421.612)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-7.3, 1.0 * (-7.3))), (injectionSwitch)[1]), bvec2(false, true))))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(421.612)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-7.3, 1.0 * (-7.3))), (injectionSwitch)[1]), bvec2(false, true)))))))).y))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(421.612)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-7.3), min(_GLF_IDENTITY(_GLF_FUZZED(-7.3), float(_GLF_IDENTITY(float(_GLF_FUZZED(-7.3)), (float(_GLF_FUZZED(_GLF_IDENTITY(-7.3, max(-7.3, -7.3))))) - 0.0))), _GLF_FUZZED(_GLF_IDENTITY(-7.3, (false ? _GLF_FUZZED(9193.6602) : _GLF_IDENTITY(-7.3, mix(float(_GLF_IDENTITY(-7.3, clamp(-7.3, -7.3, -7.3))), float(_GLF_FUZZED(3.6)), bool(false)))))))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(8.4)), vec2(_GLF_FUZZED(-29.21), _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), bvec2(false, true)))[1]), bvec2(false, true)))))).y))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(37.85)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0)))), bool(true)))))) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), sin(0.0), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), sin(0.0), 0.0, 0.0, 0.0))))), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), sin(0.0), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), sin(0.0), 0.0, 0.0, 0.0))))), vec2(mat3(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), sin(0.0), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), sin(0.0), 0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(vec2(vec4(-89.80, 240.261, -69.21, 2073.7104)))))).x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false))), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5253.0558)))) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(1.0), 0.0, exp(length(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), min(vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(1.0), 0.0, exp(length(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(1.0), 0.0, exp(length(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), vec2(mat4x3(vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch)), sqrt(1.0), 0.0, exp(length(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false))), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false))), true, true)))), true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(17.21) : injectionSwitch.x))) * exp(0.0)) > injectionSwitch.y), _GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))) && true), true && (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))) && true))))), false, false, false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true)))))))))), true, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-76.47)), vec2(_GLF_IDENTITY(_GLF_FUZZED(141.118), float(float(_GLF_FUZZED(141.118)))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true)), false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true)), false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))).y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))), false, false, false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))).y))))), false, false, false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), (! (false)) && true))))))))))), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false), true, true)))))) && true), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), false, false, false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true), false)))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false)))))) || _GLF_IDENTITY(false, (false) || false))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
