#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))))) && true, _GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)))))))) || false))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)))))))) || false))))) && true), ! (! (((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)))))))) || false))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)))))))) || false))))) && true), ! (! (((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true))), true)))))))) || false))))) && true))))), true, false, true))))) || false))), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (1.0) - log(1.0))) : _GLF_FUZZED(178.758)))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(85.78)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), bool(true))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))))))))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))), ! (! (_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false, true)))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))) || false))), false, true, true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) && true)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) && true)) || false), false, false)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(24.78))))), max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(24.78))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(24.78))))))))) > injectionSwitch.y)), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true)))) && true)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, ! (! (true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (! (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5691.5186, -3.8)) : injectionSwitch)), 1.0, 0.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)))) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), true, true), true)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), true, true), true))))))), true)), (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), true, true), true)))), true))) && true)))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, true && (true)))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 1u * (gl_WorkGroupID.x)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 1u))) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))).x, 1u, 1u), (false ? _GLF_FUZZED(uvec3(36435u, 195760u, 164890u)) : uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))).x, 1u, 1u))))) : _GLF_FUZZED(subgroup_id)) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)))))) - (0u | 0u), ((_GLF_IDENTITY(gl_WorkGroupID.x, (true ? _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 1u))) : _GLF_FUZZED(subgroup_id)))) - _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, 0u ^ (_GLF_IDENTITY(0u | 0u, 0u + (0u | 0u))))), max((_GLF_IDENTITY(0u | 0u, 0u ^ (_GLF_IDENTITY(0u | 0u, 0u + (0u | 0u))))), (_GLF_IDENTITY(0u | 0u, 0u ^ (_GLF_IDENTITY(0u | 0u, 0u + (0u | 0u)))))))) / 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), true, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true))), (! (bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true)))) && true)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u))), 0u, (1u | 1u), 0u))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u + (workgroup_base)) + subgroup_id * subgroup_size)))) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, _GLF_IDENTITY(true, (true) && true), false)))))) ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (subgroup_local_id)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) << 0u), 1u, 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))), (uvec4(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(uvec4(161388u, _GLF_IDENTITY(146434u, 0u | (146434u)), 104593u, 132980u)))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), max(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) * 1u)) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))))))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(0.0, 0.0)))).y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(365.436) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.3)), float(injectionSwitch.y), bool(true))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-260.431)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) && true), true))))), false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-260.431)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) && true), true))))), false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-260.431)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) && true), true))))), false, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-260.431)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) && true), true))))), false, false))))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false, false, false))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(-7212.3539, -3001.9112, 2159.8218, -7.6) * mat2x4(-9160.7115, 6.2, 8.0, -181.827, 80.29, -22.22, 4857.3106, -0.9))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, (injectionSwitch.x > injectionSwitch.y) && true), true))))), false, false)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true), true))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true), true))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true), true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.x > injectionSwitch.y) && true))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) && true), true))))), false, false)))))))))))), false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) && true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), ! (! (bool(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (2), 0 | (~ (2))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, (2) / 1)), 0 | (~ (2)))) >> 0)))) | (2))), ~ (_GLF_IDENTITY(~ (uint(2)), min(~ (uint(2)), ~ (uint(2)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), _GLF_IDENTITY(0 | (~ (2)), (true ? _GLF_IDENTITY(0 | (~ (2)), min(_GLF_IDENTITY(0 | (~ (2)), (0 | (~ (2))) << 0), _GLF_IDENTITY(0 | (~ (2)), (0 | (~ (2))) - 0))) : _GLF_FUZZED(26659))))))) | (2), int(ivec3((_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), _GLF_IDENTITY(0 | (~ (2)), (_GLF_IDENTITY(true ? 0 | (~ (2)) : _GLF_FUZZED(26659), (_GLF_IDENTITY(true ? 0 | (~ (2)) : _GLF_FUZZED(26659), int(ivec2(true ? 0 | (~ (2)) : _GLF_FUZZED(26659), 1)))) | 0))))))) | (2), 0, 0))))), max(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), _GLF_IDENTITY(0 | (~ (2)), (true ? 0 | (~ (2)) : _GLF_FUZZED(26659))))))) | (2))), uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), _GLF_IDENTITY(0 | (~ (2)), (true ? _GLF_IDENTITY(0, (0) + 0) | (~ (2)) : _GLF_FUZZED(26659))))))) | (2))))), ~ (~ (uint(2)))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(64, max(64, 64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_IDENTITY(_GLF_FUZZED(-52978), (_GLF_FUZZED(-52978)) ^ 0))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), (true ? ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) + 0)), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))) : _GLF_FUZZED(findLSB(-88771))))) >> 0), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), _GLF_IDENTITY((max(64, 64)) >> 0, (true ? _GLF_IDENTITY((max(64, 64)) >> 0, max(_GLF_IDENTITY((max(64, 64)) >> 0, ((max(64, 64)) >> 0) | ((max(64, 64)) >> 0)), (max(64, 64)) >> 0)) : _GLF_FUZZED(bitfieldExtract(bitCount(66353), 4922, -47031))))))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)), 64), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, 0 | (64)), 64)))), _GLF_IDENTITY(64, (64) | (64)), 64)) ^ _GLF_IDENTITY(0, (0) * 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(64, max(64, 64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), (~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0)))))) >> 0), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)), 64), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, (64) | (64)), 64)) ^ 0)), (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(64, max(64, 64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), (~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0)))))) >> 0), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)), 64), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, (64) | (64)), 64)) ^ 0))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(64, max(64, 64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), (~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0)))))) >> 0), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)), 64), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, (64) | (64)), 64)) ^ 0))))) * 1, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(64, max(64, 64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), (~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0)))))) >> 0), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)), 64), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, (64) | (64)), 64)) ^ 0)), (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(64, max(64, 64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), (~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0)))))) >> 0), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)), 64), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, (64) | (64)), 64)) ^ 0))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(64, max(64, 64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), (~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0)))))) >> 0), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)), 64), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, (64) | (64)), 64)) ^ 0))))) * 1, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(64, max(64, 64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), (~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), _GLF_IDENTITY((_GLF_IDENTITY(max(64, 64), (max(64, 64)) - 0)), ((_GLF_IDENTITY(max(64, 64), (max(64, 64)) - 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(max(64, 64), (max(64, 64)) - 0)), clamp((_GLF_IDENTITY(max(64, 64), (max(64, 64)) - 0)), (_GLF_IDENTITY(max(64, 64), (max(64, 64)) - 0)), (_GLF_IDENTITY(max(64, 64), (max(64, 64)) - 0)))))) >> 0)))))) >> 0), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(_GLF_IDENTITY(-52978, (-52978) >> 0)))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)), 64), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (64)))), 64)))), _GLF_IDENTITY(64, (64) | (64)), 64)) ^ 0)), (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(64, max(64, 64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (false ? _GLF_FUZZED(84061) : (0 >> _GLF_IDENTITY(int(1), int(1))))), (0 >> _GLF_IDENTITY(int(1), int(1))))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978), min(_GLF_IDENTITY(true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978)) ^ 0), true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> _GLF_IDENTITY(0, 0 ^ (0))))))), (~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(ivec4(_GLF_IDENTITY(int(1), int(1)), 0, 0, 0)))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0)))))) >> 0), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))), max((_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), 0, 1, 0)), clamp(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))), max((_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), 0, 1, 0)), (int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))), max((_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), 0, 1, 0))) / 1), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))), max((_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), 0, 1, 0)), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))), max((_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), 0, 1, 0))))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)), 64), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, (64) | (64)), 64)) ^ 0))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 0 | (max(64, 64)))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))), int(1))) | (_GLF_IDENTITY(64, max(64, 64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0))))), (~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> 0)))))) >> 0), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? (0 >> _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(-52978))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> _GLF_IDENTITY(0, (0) | 0)))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)), 64), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, (64) | (64)), 64)) ^ 0))))) * 1 : _GLF_FUZZED(-83927)))) * 1)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
